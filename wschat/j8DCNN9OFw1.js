if (self.CavalryLogger) {
    CavalryLogger.start_js(["nO2VH"]);
}

__d("MercuryAPIArgsSource", [], (function (a, b, c, d, e, f) {
    e.exports = {
        CHAT: "chat",
        JEWEL: "jewel",
        MERCURY: "mercury",
        MERCURYSYNC: "mercury_sync",
        WEBMESSENGER: "web_messenger",
        MESSENGER: "messenger"
    }
}), null);
__d("MercuryAudioType", [], (function (a, b, c, d, e, f) {
    e.exports = {
        FileAttachment: "file_attachment",
        AudioClip: "fb_voice_message",
        VoiceMessageWithTranscript: "fb_voice_message_with_transcript"
    }
}), null);
__d("MessageLiveLocationClientSyncProtocolStopReason", [], (function (a, b, c, d, e, f) {
    e.exports = {EXPIRED: 1, CANCELED: 2, ARRIVED: 3}
}), null);
__d("MessengerDesktopAppLinks", [], (function (a, b, c, d, e, f) {
    e.exports = {
        macOSX: "https://apps.apple.com/app/messenger/id1480068668",
        windows: "https://www.microsoft.com/p/messenger/9wzdncrf0083"
    }
}), null);
__d("PageCommItemStatus", [], (function (a, b, c, d, e, f) {
    e.exports = {FOLLOW_UP: "FOLLOW_UP", DONE: "DONE", TODO: "TODO", SPAM: "SPAM", DELETED: "DELETED"}
}), null);
__d("XCometCreateAdControllerRouteBuilder", ["jsRouteBuilder"], (function (a, b, c, d, e, f) {
    a = b("jsRouteBuilder")("/ads/create/", Object.freeze({}), void 0);
    c = a;
    e.exports = c
}), null);
__d("XCometPrivacyCheckupControllerRouteBuilder", ["jsRouteBuilder"], (function (a, b, c, d, e, f) {
    a = b("jsRouteBuilder")("/privacy/checkup/", Object.freeze({source: "unknown"}), void 0);
    c = a;
    e.exports = c
}), null);
__d("XLogoutControllerRouteBuilder", ["jsRouteBuilder"], (function (a, b, c, d, e, f) {
    a = b("jsRouteBuilder")("/logout.php", Object.freeze({}), void 0);
    c = a;
    e.exports = c
}), null);
__d("MercurySyncHolesTypedLogger", ["Banzai", "GeneratedLoggerUtils", "nullthrows"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a() {
            this.$1 = {}
        }

        var c = a.prototype;
        c.log = function (a) {
            b("GeneratedLoggerUtils").log("logger:MercurySyncHolesLoggerConfig", this.$1, b("Banzai").BASIC, a)
        };
        c.logVital = function (a) {
            b("GeneratedLoggerUtils").log("logger:MercurySyncHolesLoggerConfig", this.$1, b("Banzai").VITAL, a)
        };
        c.logImmediately = function (a) {
            b("GeneratedLoggerUtils").log("logger:MercurySyncHolesLoggerConfig", this.$1, {signal: !0}, a)
        };
        c.clear = function () {
            this.$1 = {};
            return this
        };
        c.getData = function () {
            return babelHelpers["extends"]({}, this.$1)
        };
        c.updateData = function (a) {
            this.$1 = babelHelpers["extends"]({}, this.$1, a);
            return this
        };
        c.setDifference = function (a) {
            this.$1.difference = a;
            return this
        };
        c.setSeqID = function (a) {
            this.$1.seq_id = a;
            return this
        };
        c.setTopicType = function (a) {
            this.$1.topic_type = a;
            return this
        };
        return a
    }();
    c = {difference: !0, seq_id: !0, topic_type: !0};
    e.exports = a
}), null);
__d("P2PReliabilityTypedLogger", ["Banzai", "GeneratedLoggerUtils", "nullthrows"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a() {
            this.$1 = {}
        }

        var c = a.prototype;
        c.log = function (a) {
            b("GeneratedLoggerUtils").log("logger:P2PReliabilityLoggerConfig", this.$1, b("Banzai").BASIC, a)
        };
        c.logVital = function (a) {
            b("GeneratedLoggerUtils").log("logger:P2PReliabilityLoggerConfig", this.$1, b("Banzai").VITAL, a)
        };
        c.logImmediately = function (a) {
            b("GeneratedLoggerUtils").log("logger:P2PReliabilityLoggerConfig", this.$1, {signal: !0}, a)
        };
        c.clear = function () {
            this.$1 = {};
            return this
        };
        c.getData = function () {
            return babelHelpers["extends"]({}, this.$1)
        };
        c.updateData = function (a) {
            this.$1 = babelHelpers["extends"]({}, this.$1, a);
            return this
        };
        c.setAppBuildNumber = function (a) {
            this.$1.app_build_number = a;
            return this
        };
        c.setAppID = function (a) {
            this.$1.app_id = a;
            return this
        };
        c.setAppVersion = function (a) {
            this.$1.app_version = a;
            return this
        };
        c.setCallID = function (a) {
            this.$1.call_id = a;
            return this
        };
        c.setClientStackInfo = function (a) {
            this.$1.client_stack_info = a;
            return this
        };
        c.setDeviceID = function (a) {
            this.$1.device_id = a;
            return this
        };
        c.setEventName = function (a) {
            this.$1.event_name = a;
            return this
        };
        c.setExtra = function (a) {
            this.$1.extra = a;
            return this
        };
        c.setMsgID = function (a) {
            this.$1.msg_id = a;
            return this
        };
        c.setMsgType = function (a) {
            this.$1.msg_type = a;
            return this
        };
        c.setProcessingTimeSinceRecvOnWww = function (a) {
            this.$1.processing_time_since_recv_on_www = a;
            return this
        };
        c.setRawTime = function (a) {
            this.$1.raw_time = a;
            return this
        };
        c.setReceiverID = function (a) {
            this.$1.receiver_id = a;
            return this
        };
        c.setResultCode = function (a) {
            this.$1.result_code = a;
            return this
        };
        c.setSenderID = function (a) {
            this.$1.sender_id = a;
            return this
        };
        c.setServiceName = function (a) {
            this.$1.service_name = a;
            return this
        };
        c.setUserCountry = function (a) {
            this.$1.user_country = a;
            return this
        };
        return a
    }();
    c = {
        app_build_number: !0,
        app_id: !0,
        app_version: !0,
        call_id: !0,
        client_stack_info: !0,
        device_id: !0,
        event_name: !0,
        extra: !0,
        msg_id: !0,
        msg_type: !0,
        processing_time_since_recv_on_www: !0,
        raw_time: !0,
        receiver_id: !0,
        result_code: !0,
        sender_id: !0,
        service_name: !0,
        user_country: !0
    };
    e.exports = a
}), null);
__d("AppLastUsedTimestampsFetcherQuery.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{defaultValue: null, kind: "LocalArgument", name: "bookmarkIDs"}],
            b = [{kind: "Variable", name: "bookmark_ids", variableName: "bookmarkIDs"}, {
                kind: "Literal",
                name: "environment",
                value: "COMET"
            }, {kind: "Literal", name: "folder_id", value: "PRODUCT"}, {
                kind: "Literal",
                name: "sections",
                value: ["FACEBOOK_APP"]
            }], c = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null},
            d = {alias: null, args: null, kind: "ScalarField", name: "last_used_timestamp", storageKey: null};
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "AppLastUsedTimestampsFetcherQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: b,
                        concreteType: "BookmarksConnection",
                        kind: "LinkedField",
                        name: "bookmarks",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "BookmarksEdge",
                            kind: "LinkedField",
                            name: "edges",
                            plural: !0,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "Bookmark",
                                kind: "LinkedField",
                                name: "node",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "bookmarked_node",
                                    plural: !1,
                                    selections: [c],
                                    storageKey: null
                                }, d],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "AppLastUsedTimestampsFetcherQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: b,
                        concreteType: "BookmarksConnection",
                        kind: "LinkedField",
                        name: "bookmarks",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "BookmarksEdge",
                            kind: "LinkedField",
                            name: "edges",
                            plural: !0,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "Bookmark",
                                kind: "LinkedField",
                                name: "node",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "bookmarked_node",
                                    plural: !1,
                                    selections: [{
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "__typename",
                                        storageKey: null
                                    }, c],
                                    storageKey: null
                                }, d, c],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "4663858110298582",
                metadata: {},
                name: "AppLastUsedTimestampsFetcherQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CometLogoutHandlerQuery.graphql", ["relay-runtime"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {alias: null, args: null, kind: "ScalarField", name: "logout_whitelist", storageKey: null},
            b = {alias: null, args: null, kind: "ScalarField", name: "logout_hash", storageKey: null},
            c = {alias: null, args: null, kind: "ScalarField", name: "has_confirmed_contactpoints", storageKey: null},
            d = {alias: null, args: null, kind: "ScalarField", name: "__typename", storageKey: null}, e = [d],
            f = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null};
        return {
            fragment: {
                argumentDefinitions: [],
                kind: "Fragment",
                metadata: null,
                name: "CometLogoutHandlerQuery",
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [b, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "account_user",
                        plural: !1,
                        selections: [c, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "pending_contactpoints",
                            plural: !0,
                            selections: [{
                                kind: "InlineFragment",
                                selections: e,
                                type: "PendingEmail",
                                abstractKey: null
                            }, {kind: "InlineFragment", selections: e, type: "PhoneNumber", abstractKey: null}],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [],
                kind: "Operation",
                name: "CometLogoutHandlerQuery",
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [b, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "account_user",
                        plural: !1,
                        selections: [c, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "pending_contactpoints",
                            plural: !0,
                            selections: [d, {
                                kind: "InlineFragment",
                                selections: [f],
                                type: "Node",
                                abstractKey: "__isNode"
                            }],
                            storageKey: null
                        }, f],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "3683275191691115",
                metadata: {},
                name: "CometLogoutHandlerQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    a.params.id != null && b("relay-runtime").PreloadableQueryRegistry.set(a.params.id, a);
    e.exports = a
}), null);
__d("CometLoggedInAccountSwitcherPopoverMenuQuery$Parameters", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        kind: "PreloadableConcreteRequest",
        params: {
            id: "2641526332535377",
            metadata: {},
            name: "CometLoggedInAccountSwitcherPopoverMenuQuery",
            operationKind: "query",
            text: null
        }
    };
    e.exports = a
}), null);
__d("CometLoggedInAccountSwitcher_query.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometLoggedInAccountSwitcher_query",
        selections: [{
            alias: null,
            args: null,
            concreteType: "Viewer",
            kind: "LinkedField",
            name: "viewer",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "logout_hash",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "account_user",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "short_name", storageKey: null}],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "LoggedInAccountSwitcherAccount",
                kind: "LinkedField",
                name: "device_switchable_accounts",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "User",
                    kind: "LinkedField",
                    name: "user",
                    plural: !1,
                    selections: [{alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}],
                    storageKey: null
                }, {args: null, kind: "FragmentSpread", name: "CometLoggedInAccountSwitcherRow_account"}, {
                    args: null,
                    kind: "FragmentSpread",
                    name: "CometLoggedInAccountSwitcherRowWithUpdateText_account"
                }],
                storageKey: null
            }],
            storageKey: null
        }, {args: null, kind: "FragmentSpread", name: "useCometLoggedInAccountSwitcherSubmitForm_query"}, {
            args: null,
            kind: "FragmentSpread",
            name: "CometLoggedInAccountSwitcherRow_query"
        }, {args: null, kind: "FragmentSpread", name: "CometLoggedInAccountSwitcherRowWithUpdateText_query"}],
        type: "Query",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometProfileSwitcherPagePublishingAuthorizationCard_query.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometProfileSwitcherPagePublishingAuthorizationCard_query",
        selections: [{
            alias: null,
            args: null,
            concreteType: "Viewer",
            kind: "LinkedField",
            name: "viewer",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "actor",
                plural: !1,
                selections: [{
                    kind: "InlineFragment",
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "id",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "page_publishing_authorization_hub_action_url",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "TextWithEntities",
                        kind: "LinkedField",
                        name: "page_publishing_authorization_admin_notice",
                        plural: !1,
                        selections: [{
                            args: null,
                            kind: "FragmentSpread",
                            name: "CometTextWithEntitiesRelay_textWithEntities"
                        }],
                        storageKey: null
                    }],
                    type: "User",
                    abstractKey: null
                }],
                storageKey: null
            }],
            storageKey: null
        }],
        type: "Query",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometProfileSwitcher_query.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null},
            b = {alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null}, c = {
                alias: null,
                args: [{kind: "Literal", name: "height", value: 40}, {
                    kind: "Variable",
                    name: "scale",
                    variableName: "scale"
                }, {kind: "Literal", name: "width", value: 40}],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "width",
                    storageKey: null
                }, {alias: null, args: null, kind: "ScalarField", name: "height", storageKey: null}, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "scale",
                    storageKey: null
                }],
                storageKey: null
            }, d = {alias: null, args: null, kind: "ScalarField", name: "unseen_update_count", storageKey: null};
        return {
            argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
            kind: "Fragment",
            metadata: null,
            name: "CometProfileSwitcher_query",
            selections: [{
                alias: null,
                args: null,
                concreteType: "Viewer",
                kind: "LinkedField",
                name: "viewer",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "actor",
                    plural: !1,
                    selections: [{
                        kind: "InlineFragment", selections: [{
                            alias: null,
                            args: null,
                            concreteType: "UserProfileSwitcherEligibleProfilesConnection",
                            kind: "LinkedField",
                            name: "profile_switcher_eligible_profiles",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "ProfileSwitcherEligibleProfile",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "should_open_express_onboarding",
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "User",
                                    kind: "LinkedField",
                                    name: "profile",
                                    plural: !1,
                                    selections: [a, b, c, d, {
                                        alias: null,
                                        args: [{
                                            kind: "Literal",
                                            name: "context_item_types",
                                            value: "FOLLOWER_COUNT"
                                        }, {kind: "Literal", name: "render_location", value: "PROFILE_PLUS_PREVIEW"}],
                                        concreteType: "TimelineContextListItemsConnection",
                                        kind: "LinkedField",
                                        name: "timeline_context_items",
                                        plural: !1,
                                        selections: [{
                                            alias: null,
                                            args: null,
                                            concreteType: "TimelineContextListItem",
                                            kind: "LinkedField",
                                            name: "nodes",
                                            plural: !0,
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                concreteType: "TextWithEntities",
                                                kind: "LinkedField",
                                                name: "title",
                                                plural: !1,
                                                selections: [{
                                                    alias: null,
                                                    args: null,
                                                    kind: "ScalarField",
                                                    name: "text",
                                                    storageKey: null
                                                }],
                                                storageKey: null
                                            }],
                                            storageKey: null
                                        }],
                                        storageKey: 'timeline_context_items(context_item_types:"FOLLOWER_COUNT",render_location:"PROFILE_PLUS_PREVIEW")'
                                    }],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }, a, b, c, d, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "is_failing_page_publishing_authorization",
                            storageKey: null
                        }], type: "User", abstractKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }, {args: null, kind: "FragmentSpread", name: "useProfileCometSwitcherCleanUpOnSwap_query"}, {
                args: null,
                kind: "FragmentSpread",
                name: "CometProfileSwitcherPagePublishingAuthorizationCard_query"
            }],
            type: "Query",
            abstractKey: null
        }
    }();
    e.exports = a
}), null);
__d("CometSettingsDropdownHeader_viewer.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
        kind: "Fragment",
        metadata: null,
        name: "CometSettingsDropdownHeader_viewer",
        selections: [{
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "actor",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "name",
                storageKey: null
            }, {
                alias: "settings_dropdown_profile_picture",
                args: [{kind: "Literal", name: "height", value: 60}, {
                    kind: "Variable",
                    name: "scale",
                    variableName: "scale"
                }, {kind: "Literal", name: "width", value: 60}],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}],
                storageKey: null
            }, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "should_use_page_rename",
                    storageKey: null
                }, {
                    alias: "profileSwitcherEligibleProfiles",
                    args: null,
                    concreteType: "UserProfileSwitcherEligibleProfilesConnection",
                    kind: "LinkedField",
                    name: "profile_switcher_eligible_profiles",
                    plural: !1,
                    selections: [{alias: null, args: null, kind: "ScalarField", name: "count", storageKey: null}],
                    storageKey: null
                }],
                type: "User",
                abstractKey: null
            }],
            storageKey: null
        }],
        type: "Viewer",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometSettingsDropdownListQuery.graphql", ["relay-runtime"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {defaultValue: null, kind: "LocalArgument", name: "inProfileSwitcherEntry"},
            b = {defaultValue: null, kind: "LocalArgument", name: "scale"},
            c = {alias: null, args: null, kind: "ScalarField", name: "count", storageKey: null}, d = {
                alias: "profileSwitcherEligibleProfiles",
                args: null,
                concreteType: "UserProfileSwitcherEligibleProfilesConnection",
                kind: "LinkedField",
                name: "profile_switcher_eligible_profiles",
                plural: !1,
                selections: [c],
                storageKey: null
            }, e = {alias: null, args: null, kind: "ScalarField", name: "logout_whitelist", storageKey: null},
            f = {alias: null, args: null, kind: "ScalarField", name: "__typename", storageKey: null},
            g = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null},
            h = {alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null},
            i = {kind: "Variable", name: "scale", variableName: "scale"},
            j = [{kind: "Literal", name: "height", value: 60}, i, {kind: "Literal", name: "width", value: 60}],
            k = {alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null},
            l = [{kind: "Literal", name: "height", value: 36}, i, {kind: "Literal", name: "width", value: 36}],
            m = {alias: null, args: null, kind: "ScalarField", name: "width", storageKey: null},
            n = {alias: null, args: null, kind: "ScalarField", name: "height", storageKey: null},
            o = {alias: null, args: null, kind: "ScalarField", name: "scale", storageKey: null}, p = [k, m, n, o], q = {
                alias: null,
                args: l,
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: p,
                storageKey: null
            }, r = {alias: null, args: null, kind: "ScalarField", name: "unseen_update_count", storageKey: null},
            s = [{kind: "Literal", name: "height", value: 40}, i, {kind: "Literal", name: "width", value: 40}], t = {
                alias: null,
                args: s,
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: p,
                storageKey: null
            }, u = {alias: null, args: null, kind: "ScalarField", name: "text", storageKey: null}, v = {
                alias: null,
                args: [{kind: "Literal", name: "context_item_types", value: "FOLLOWER_COUNT"}, {
                    kind: "Literal",
                    name: "render_location",
                    value: "PROFILE_PLUS_PREVIEW"
                }],
                concreteType: "TimelineContextListItemsConnection",
                kind: "LinkedField",
                name: "timeline_context_items",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "TimelineContextListItem",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "TextWithEntities",
                        kind: "LinkedField",
                        name: "title",
                        plural: !1,
                        selections: [u],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: 'timeline_context_items(context_item_types:"FOLLOWER_COUNT",render_location:"PROFILE_PLUS_PREVIEW")'
            }, w = {alias: null, args: null, kind: "ScalarField", name: "should_open_express_onboarding", storageKey: null},
            x = {alias: null, args: null, kind: "ScalarField", name: "length", storageKey: null},
            y = {alias: null, args: null, kind: "ScalarField", name: "offset", storageKey: null},
            z = [{kind: "Literal", name: "delight_surface", value: "COMMENT"}],
            A = {alias: null, args: null, kind: "ScalarField", name: "value", storageKey: null},
            B = {kind: "InlineFragment", selections: [g], type: "Node", abstractKey: "__isNode"}, C = {
                alias: null,
                args: null,
                concreteType: "WorkForeignEntityInfo",
                kind: "LinkedField",
                name: "work_foreign_entity_info",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "type", storageKey: null}],
                storageKey: null
            }, D = {alias: null, args: null, kind: "ScalarField", name: "unread_notification_count", storageKey: null},
            E = {alias: null, args: null, kind: "ScalarField", name: "short_name", storageKey: null}, F = {
                alias: null,
                args: null,
                concreteType: "LoggedInAccountSwitcherAccountForm",
                kind: "LinkedField",
                name: "form",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "action", storageKey: null}, {
                    alias: null,
                    args: null,
                    concreteType: "LoggedInAccountSwitcherAccountFormField",
                    kind: "LinkedField",
                    name: "inputs",
                    plural: !0,
                    selections: [h, A],
                    storageKey: null
                }],
                storageKey: null
            }, G = [{kind: "Literal", name: "first", value: 1}];
        return {
            fragment: {
                argumentDefinitions: [a, b],
                kind: "Fragment",
                metadata: null,
                name: "CometSettingsDropdownListQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "actor",
                        plural: !1,
                        selections: [{kind: "InlineFragment", selections: [d], type: "User", abstractKey: null}],
                        storageKey: null
                    }, {args: null, kind: "FragmentSpread", name: "CometSettingsDropdownHeader_viewer"}, {
                        args: null,
                        kind: "FragmentSpread",
                        name: "CometSettingsDropdownSettingsAndPrivacy_viewer"
                    }, {args: null, kind: "FragmentSpread", name: "CometSettingsDropdownInternationalization_viewer"}],
                    storageKey: null
                }, e, {
                    args: null,
                    kind: "FragmentSpread",
                    name: "useCometCombinedProfileAccountSwitcherListCell_query"
                }, {
                    condition: "inProfileSwitcherEntry",
                    kind: "Condition",
                    passingValue: !0,
                    selections: [{
                        args: null,
                        kind: "FragmentSpread",
                        name: "useCometSettingsDropdownAdditionalProfileListCell_query"
                    }]
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [b, a], kind: "Operation", name: "CometSettingsDropdownListQuery", selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "actor",
                        plural: !1,
                        selections: [f, g, h, {
                            alias: "settings_dropdown_profile_picture",
                            args: j,
                            concreteType: "Image",
                            kind: "LinkedField",
                            name: "profile_picture",
                            plural: !1,
                            selections: [k],
                            storageKey: null
                        }, {
                            kind: "InlineFragment",
                            selections: [d, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "should_use_page_rename",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "username",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                concreteType: "PolyglotUserProgress",
                                kind: "LinkedField",
                                name: "polyglot_user_progress",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "inline_mode",
                                    storageKey: null
                                }, g],
                                storageKey: null
                            }, {
                                alias: "first_profiles",
                                args: [{kind: "Literal", name: "first", value: 2}],
                                concreteType: "UserProfileSwitcherEligibleProfilesConnection",
                                kind: "LinkedField",
                                name: "profile_switcher_eligible_profiles",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "ProfileSwitcherEligibleProfile",
                                    kind: "LinkedField",
                                    name: "nodes",
                                    plural: !0,
                                    selections: [{
                                        alias: null,
                                        args: null,
                                        concreteType: "User",
                                        kind: "LinkedField",
                                        name: "profile",
                                        plural: !1,
                                        selections: [q, g],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }],
                                storageKey: "profile_switcher_eligible_profiles(first:2)"
                            }, {
                                alias: null,
                                args: null,
                                concreteType: "UserProfileSwitcherEligibleProfilesConnection",
                                kind: "LinkedField",
                                name: "profile_switcher_eligible_profiles",
                                plural: !1,
                                selections: [c, {
                                    alias: null,
                                    args: null,
                                    concreteType: "ProfileSwitcherEligibleProfile",
                                    kind: "LinkedField",
                                    name: "nodes",
                                    plural: !0,
                                    selections: [{
                                        alias: null,
                                        args: null,
                                        concreteType: "User",
                                        kind: "LinkedField",
                                        name: "profile",
                                        plural: !1,
                                        selections: [r, g, h, t, v],
                                        storageKey: null
                                    }, w],
                                    storageKey: null
                                }],
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "page_publishing_authorization_hub_action_url",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                concreteType: "TextWithEntities",
                                kind: "LinkedField",
                                name: "page_publishing_authorization_admin_notice",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "DelightAtRange",
                                    kind: "LinkedField",
                                    name: "delight_ranges",
                                    plural: !0,
                                    selections: [x, y, {
                                        alias: null,
                                        args: null,
                                        concreteType: "TextDelightCampaign",
                                        kind: "LinkedField",
                                        name: "campaign",
                                        plural: !1,
                                        selections: [f, {
                                            alias: null,
                                            args: z,
                                            concreteType: "TextDelightStylePair",
                                            kind: "LinkedField",
                                            name: "delight_styles",
                                            plural: !0,
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "style",
                                                storageKey: null
                                            }, A],
                                            storageKey: 'delight_styles(delight_surface:"COMMENT")'
                                        }, {
                                            alias: null,
                                            args: z,
                                            concreteType: "DelightsAnimation",
                                            kind: "LinkedField",
                                            name: "delight_asset",
                                            plural: !1,
                                            selections: [g, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "animation_uri",
                                                storageKey: null
                                            }],
                                            storageKey: 'delight_asset(delight_surface:"COMMENT")'
                                        }, g],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "ImageAtRange",
                                    kind: "LinkedField",
                                    name: "image_ranges",
                                    plural: !0,
                                    selections: [x, y, {
                                        alias: null,
                                        args: null,
                                        concreteType: null,
                                        kind: "LinkedField",
                                        name: "entity_with_image",
                                        plural: !1,
                                        selections: [f, {
                                            alias: null,
                                            args: [i],
                                            concreteType: "Image",
                                            kind: "LinkedField",
                                            name: "image",
                                            plural: !1,
                                            selections: [n, o, k, m],
                                            storageKey: null
                                        }, B],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "InlineStyleAtRange",
                                    kind: "LinkedField",
                                    name: "inline_style_ranges",
                                    plural: !0,
                                    selections: [x, y, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "inline_style",
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "AggregatedEntitiesAtRange",
                                    kind: "LinkedField",
                                    name: "aggregated_ranges",
                                    plural: !0,
                                    selections: [x, y, c, {
                                        alias: null,
                                        args: null,
                                        concreteType: null,
                                        kind: "LinkedField",
                                        name: "sample_entities",
                                        plural: !0,
                                        selections: [f, {
                                            kind: "InlineFragment",
                                            selections: [g, h],
                                            type: "User",
                                            abstractKey: null
                                        }, B],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "EntityAtRange",
                                    kind: "LinkedField",
                                    name: "ranges",
                                    plural: !0,
                                    selections: [{
                                        alias: null,
                                        args: null,
                                        concreteType: null,
                                        kind: "LinkedField",
                                        name: "entity",
                                        plural: !1,
                                        selections: [f, {
                                            kind: "TypeDiscriminator",
                                            abstractKey: "__isEntity"
                                        }, {
                                            alias: null,
                                            args: [{kind: "Literal", name: "site", value: "comet"}],
                                            kind: "ScalarField",
                                            name: "url",
                                            storageKey: 'url(site:"comet")'
                                        }, {
                                            alias: "mobileUrl",
                                            args: [{kind: "Literal", name: "site", value: "mobile"}],
                                            kind: "ScalarField",
                                            name: "url",
                                            storageKey: 'url(site:"mobile")'
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [g, {
                                                kind: "InlineFragment",
                                                selections: [{
                                                    alias: "profile_url",
                                                    args: null,
                                                    kind: "ScalarField",
                                                    name: "url",
                                                    storageKey: null
                                                }],
                                                type: "Entity",
                                                abstractKey: "__isEntity"
                                            }],
                                            type: "Actor",
                                            abstractKey: "__isActor"
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                documentName: "CometTextWithEntitiesRelay_textWithEntities",
                                                fragmentName: "GroupsCometHashtagsStoryMessageHashtagLink_hashtag",
                                                fragmentPropName: "hashtag",
                                                kind: "ModuleImport"
                                            }],
                                            type: "GroupHashtag",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "category_type",
                                                storageKey: null
                                            }, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "verification_status",
                                                storageKey: null
                                            }, g, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "is_verified",
                                                storageKey: null
                                            }, {
                                                documentName: "CometTextWithEntitiesRelay_textWithEntities",
                                                fragmentName: "PagesCometPageLink_page",
                                                fragmentPropName: "page",
                                                kind: "ModuleImport"
                                            }],
                                            type: "Page",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "external_url",
                                                storageKey: null
                                            }],
                                            type: "ExternalUrl",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "time_index",
                                                storageKey: null
                                            }],
                                            type: "VideoTimeIndex",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                concreteType: null,
                                                kind: "LinkedField",
                                                name: "web_link",
                                                plural: !1,
                                                selections: [f, {
                                                    alias: null,
                                                    args: null,
                                                    kind: "ScalarField",
                                                    name: "url",
                                                    storageKey: null
                                                }, {
                                                    kind: "InlineFragment",
                                                    selections: [{
                                                        alias: null,
                                                        args: null,
                                                        kind: "ScalarField",
                                                        name: "fbclid",
                                                        storageKey: null
                                                    }, {
                                                        alias: null,
                                                        args: null,
                                                        kind: "ScalarField",
                                                        name: "lynx_mode",
                                                        storageKey: null
                                                    }],
                                                    type: "ExternalWebLink",
                                                    abstractKey: null
                                                }],
                                                storageKey: null
                                            }],
                                            type: "WebLinkable",
                                            abstractKey: "__isWebLinkable"
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [C, {
                                                alias: null,
                                                args: null,
                                                concreteType: "WorkUserInfo",
                                                kind: "LinkedField",
                                                name: "work_info",
                                                plural: !1,
                                                selections: [{
                                                    alias: null,
                                                    args: null,
                                                    kind: "ScalarField",
                                                    name: "is_active_account",
                                                    storageKey: null
                                                }],
                                                storageKey: null
                                            }],
                                            type: "User",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [C, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "work_official_status",
                                                storageKey: null
                                            }],
                                            type: "Group",
                                            abstractKey: null
                                        }, B],
                                        storageKey: null
                                    }, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "entity_is_weak_reference",
                                        storageKey: null
                                    }, x, y],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "ColorAtRange",
                                    kind: "LinkedField",
                                    name: "color_ranges",
                                    plural: !0,
                                    selections: [x, y, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "hex_rgb_color_with_pound_key",
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, u],
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "is_failing_page_publishing_authorization",
                                storageKey: null
                            }, t, r],
                            type: "User",
                            abstractKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_eligible_for_account_level_settings",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "LoggedInAccountSwitcherAccount",
                        kind: "LinkedField",
                        name: "device_switchable_accounts",
                        plural: !0,
                        selections: [D, {
                            alias: null,
                            args: null,
                            concreteType: "User",
                            kind: "LinkedField",
                            name: "user",
                            plural: !1,
                            selections: [g, E, h, {
                                alias: null,
                                args: j,
                                concreteType: "Image",
                                kind: "LinkedField",
                                name: "profile_picture",
                                plural: !1,
                                selections: p,
                                storageKey: null
                            }, {
                                alias: "switcher_profile_picture",
                                args: s,
                                concreteType: "Image",
                                kind: "LinkedField",
                                name: "profile_picture",
                                plural: !1,
                                selections: p,
                                storageKey: null
                            }],
                            storageKey: null
                        }, {alias: null, args: null, kind: "ScalarField", name: "nonce", storageKey: null}, F],
                        storageKey: null
                    }, {
                        alias: "first_account",
                        args: G,
                        concreteType: "LoggedInAccountSwitcherAccount",
                        kind: "LinkedField",
                        name: "device_switchable_accounts",
                        plural: !0,
                        selections: [D, {
                            alias: null,
                            args: null,
                            concreteType: "User",
                            kind: "LinkedField",
                            name: "user",
                            plural: !1,
                            selections: [g, h, {
                                alias: null,
                                args: l,
                                concreteType: "Image",
                                kind: "LinkedField",
                                name: "profile_picture",
                                plural: !1,
                                selections: [o, n, m, k],
                                storageKey: null
                            }],
                            storageKey: null
                        }, F],
                        storageKey: "device_switchable_accounts(first:1)"
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "logout_hash",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "account_user",
                        plural: !1,
                        selections: [E, g],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "device_switchable_account_has_notification",
                        storageKey: null
                    }],
                    storageKey: null
                }, e, {
                    condition: "inProfileSwitcherEntry",
                    kind: "Condition",
                    passingValue: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "Viewer",
                        kind: "LinkedField",
                        name: "viewer",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "actor",
                            plural: !1,
                            selections: [{
                                kind: "InlineFragment",
                                selections: [{
                                    alias: "first_profile",
                                    args: G,
                                    concreteType: "UserProfileSwitcherEligibleProfilesConnection",
                                    kind: "LinkedField",
                                    name: "profile_switcher_eligible_profiles",
                                    plural: !1,
                                    selections: [{
                                        alias: null,
                                        args: null,
                                        concreteType: "ProfileSwitcherEligibleProfile",
                                        kind: "LinkedField",
                                        name: "nodes",
                                        plural: !0,
                                        selections: [w, {
                                            alias: null,
                                            args: null,
                                            concreteType: "User",
                                            kind: "LinkedField",
                                            name: "profile",
                                            plural: !1,
                                            selections: [g, h, q, r, v],
                                            storageKey: null
                                        }],
                                        storageKey: null
                                    }],
                                    storageKey: "profile_switcher_eligible_profiles(first:1)"
                                }],
                                type: "User",
                                abstractKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }]
                }]
            },
            params: {
                id: "3114557815333936",
                metadata: {},
                name: "CometSettingsDropdownListQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    a.params.id != null && b("relay-runtime").PreloadableQueryRegistry.set(a.params.id, a);
    e.exports = a
}), null);
__d("CometSettingsDropdownQuickHelpQuery.graphql", ["relay-runtime"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{
            alias: null,
            args: null,
            concreteType: "Viewer",
            kind: "LinkedField",
            name: "viewer",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "account_user",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}],
                storageKey: null
            }],
            storageKey: null
        }];
        return {
            fragment: {
                argumentDefinitions: [],
                kind: "Fragment",
                metadata: null,
                name: "CometSettingsDropdownQuickHelpQuery",
                selections: a,
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [],
                kind: "Operation",
                name: "CometSettingsDropdownQuickHelpQuery",
                selections: a
            },
            params: {
                id: "2775132975915116",
                metadata: {},
                name: "CometSettingsDropdownQuickHelpQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    a.params.id != null && b("relay-runtime").PreloadableQueryRegistry.set(a.params.id, a);
    e.exports = a
}), null);
__d("CometSettingsDropdownSettingsAndPrivacy_viewer.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometSettingsDropdownSettingsAndPrivacy_viewer",
        selections: [{
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "actor",
            plural: !1,
            selections: [{
                kind: "InlineFragment",
                selections: [{alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "username",
                    storageKey: null
                }],
                type: "User",
                abstractKey: null
            }],
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "is_eligible_for_account_level_settings",
            storageKey: null
        }],
        type: "Viewer",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometLoggedInAccountSwitcherAccountForm_form.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometLoggedInAccountSwitcherAccountForm_form",
        selections: [{alias: null, args: null, kind: "ScalarField", name: "action", storageKey: null}, {
            alias: null,
            args: null,
            concreteType: "LoggedInAccountSwitcherAccountFormField",
            kind: "LinkedField",
            name: "inputs",
            plural: !0,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null}, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "value",
                storageKey: null
            }],
            storageKey: null
        }],
        type: "LoggedInAccountSwitcherAccountForm",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometLoggedInAccountSwitcherRemoveAccountMutation.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{defaultValue: null, kind: "LocalArgument", name: "id"}, {
            defaultValue: null,
            kind: "LocalArgument",
            name: "nonce"
        }], b = [{
            alias: null,
            args: [{kind: "Variable", name: "account_id", variableName: "id"}, {
                kind: "Variable",
                name: "nonce",
                variableName: "nonce"
            }],
            concreteType: "RemoveAccountFromLoggedInAccountSwitcherResponsePayload",
            kind: "LinkedField",
            name: "remove_account_from_logged_in_account_switcher",
            plural: !1,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "__typename", storageKey: null}],
            storageKey: null
        }];
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "CometLoggedInAccountSwitcherRemoveAccountMutation",
                selections: b,
                type: "Mutation",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "CometLoggedInAccountSwitcherRemoveAccountMutation",
                selections: b
            },
            params: {
                id: "2760827663935516",
                metadata: {},
                name: "CometLoggedInAccountSwitcherRemoveAccountMutation",
                operationKind: "mutation",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CometLoggedInAccountSwitcherRow_account.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
        kind: "Fragment",
        metadata: null,
        name: "CometLoggedInAccountSwitcherRow_account",
        selections: [{
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "unread_notification_count",
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "LoggedInAccountSwitcherAccountForm",
            kind: "LinkedField",
            name: "form",
            plural: !1,
            selections: [{args: null, kind: "FragmentSpread", name: "CometLoggedInAccountSwitcherAccountForm_form"}],
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "User",
            kind: "LinkedField",
            name: "user",
            plural: !1,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null}, {
                alias: null,
                args: [{kind: "Literal", name: "height", value: 60}, {
                    kind: "Variable",
                    name: "scale",
                    variableName: "scale"
                }, {kind: "Literal", name: "width", value: 60}],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "uri",
                    storageKey: null
                }, {alias: null, args: null, kind: "ScalarField", name: "width", storageKey: null}, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "height",
                    storageKey: null
                }, {alias: null, args: null, kind: "ScalarField", name: "scale", storageKey: null}],
                storageKey: null
            }],
            storageKey: null
        }, {args: null, kind: "FragmentSpread", name: "useCometLoggedInAccountSwitcherRemoveAccount_account"}],
        type: "LoggedInAccountSwitcherAccount",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometLoggedInAccountSwitcherRow_query.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometLoggedInAccountSwitcherRow_query",
        selections: [{args: null, kind: "FragmentSpread", name: "useCometLoggedInAccountSwitcherSubmitForm_query"}],
        type: "Query",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("useCometLoggedInAccountSwitcherListCell_query.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {alias: null, args: null, kind: "ScalarField", name: "unread_notification_count", storageKey: null};
        return {
            argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
            kind: "Fragment",
            metadata: null,
            name: "useCometLoggedInAccountSwitcherListCell_query",
            selections: [{
                alias: null,
                args: null,
                concreteType: "Viewer",
                kind: "LinkedField",
                name: "viewer",
                plural: !1,
                selections: [{
                    alias: "first_account",
                    args: [{kind: "Literal", name: "first", value: 1}],
                    concreteType: "LoggedInAccountSwitcherAccount",
                    kind: "LinkedField",
                    name: "device_switchable_accounts",
                    plural: !0,
                    selections: [a, {
                        alias: null,
                        args: null,
                        concreteType: "LoggedInAccountSwitcherAccountForm",
                        kind: "LinkedField",
                        name: "form",
                        plural: !1,
                        selections: [{
                            args: null,
                            kind: "FragmentSpread",
                            name: "CometLoggedInAccountSwitcherAccountForm_form"
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "user",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "name",
                            storageKey: null
                        }, {
                            alias: null,
                            args: [{kind: "Literal", name: "height", value: 36}, {
                                kind: "Variable",
                                name: "scale",
                                variableName: "scale"
                            }, {kind: "Literal", name: "width", value: 36}],
                            concreteType: "Image",
                            kind: "LinkedField",
                            name: "profile_picture",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "scale",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "height",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "width",
                                storageKey: null
                            }, {alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: "device_switchable_accounts(first:1)"
                }, {
                    alias: null,
                    args: null,
                    concreteType: "LoggedInAccountSwitcherAccount",
                    kind: "LinkedField",
                    name: "device_switchable_accounts",
                    plural: !0,
                    selections: [a],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "device_switchable_account_has_notification",
                    storageKey: null
                }],
                storageKey: null
            }, {
                args: null,
                kind: "FragmentSpread",
                name: "useCometLoggedInAccountSwitcherSubmitForm_query"
            }, {args: null, kind: "FragmentSpread", name: "CometLoggedInAccountSwitcher_query"}],
            type: "Query",
            abstractKey: null
        }
    }();
    e.exports = a
}), null);
__d("useCometLoggedInAccountSwitcherRemoveAccount_account.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "useCometLoggedInAccountSwitcherRemoveAccount_account",
        selections: [{
            alias: null,
            args: null,
            concreteType: "User",
            kind: "LinkedField",
            name: "user",
            plural: !1,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "short_name",
                storageKey: null
            }],
            storageKey: null
        }, {alias: null, args: null, kind: "ScalarField", name: "nonce", storageKey: null}],
        type: "LoggedInAccountSwitcherAccount",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("useCometLoggedInAccountSwitcherSubmitForm_query.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "useCometLoggedInAccountSwitcherSubmitForm_query",
        selections: [{alias: null, args: null, kind: "ScalarField", name: "logout_whitelist", storageKey: null}],
        type: "Query",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometLoggedInAccountSwitcherRowWithUpdateText_account.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
        kind: "Fragment",
        metadata: null,
        name: "CometLoggedInAccountSwitcherRowWithUpdateText_account",
        selections: [{
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "unread_notification_count",
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "LoggedInAccountSwitcherAccountForm",
            kind: "LinkedField",
            name: "form",
            plural: !1,
            selections: [{args: null, kind: "FragmentSpread", name: "CometLoggedInAccountSwitcherAccountForm_form"}],
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "User",
            kind: "LinkedField",
            name: "user",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "name",
                storageKey: null
            }, {
                alias: "switcher_profile_picture",
                args: [{kind: "Literal", name: "height", value: 40}, {
                    kind: "Variable",
                    name: "scale",
                    variableName: "scale"
                }, {kind: "Literal", name: "width", value: 40}],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "uri",
                    storageKey: null
                }, {alias: null, args: null, kind: "ScalarField", name: "width", storageKey: null}, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "height",
                    storageKey: null
                }, {alias: null, args: null, kind: "ScalarField", name: "scale", storageKey: null}],
                storageKey: null
            }],
            storageKey: null
        }, {args: null, kind: "FragmentSpread", name: "useCometLoggedInAccountSwitcherRemoveAccount_account"}],
        type: "LoggedInAccountSwitcherAccount",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometLoggedInAccountSwitcherRowWithUpdateText_query.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometLoggedInAccountSwitcherRowWithUpdateText_query",
        selections: [{args: null, kind: "FragmentSpread", name: "useCometLoggedInAccountSwitcherSubmitForm_query"}],
        type: "Query",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometProfileAndAccountSwitcher_query.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null},
            b = {alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null},
            c = {args: null, kind: "FragmentSpread", name: "CometProfileSwitcherListCell_profile"},
            d = {alias: null, args: null, kind: "ScalarField", name: "unread_notification_count", storageKey: null};
        return {
            argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
            kind: "Fragment",
            metadata: null,
            name: "CometProfileAndAccountSwitcher_query",
            selections: [{
                alias: null,
                args: null,
                concreteType: "Viewer",
                kind: "LinkedField",
                name: "viewer",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "actor",
                    plural: !1,
                    selections: [{
                        kind: "InlineFragment", selections: [{
                            alias: null,
                            args: null,
                            concreteType: "UserProfileSwitcherEligibleProfilesConnection",
                            kind: "LinkedField",
                            name: "profile_switcher_eligible_profiles",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "ProfileSwitcherEligibleProfile",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "should_open_express_onboarding",
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "User",
                                    kind: "LinkedField",
                                    name: "profile",
                                    plural: !1,
                                    selections: [a, b, {
                                        alias: null,
                                        args: [{
                                            kind: "Literal",
                                            name: "context_item_types",
                                            value: "FOLLOWER_COUNT"
                                        }, {kind: "Literal", name: "render_location", value: "PROFILE_PLUS_PREVIEW"}],
                                        concreteType: "TimelineContextListItemsConnection",
                                        kind: "LinkedField",
                                        name: "timeline_context_items",
                                        plural: !1,
                                        selections: [{
                                            alias: null,
                                            args: null,
                                            concreteType: "TimelineContextListItem",
                                            kind: "LinkedField",
                                            name: "nodes",
                                            plural: !0,
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                concreteType: "TextWithEntities",
                                                kind: "LinkedField",
                                                name: "title",
                                                plural: !1,
                                                selections: [{
                                                    alias: null,
                                                    args: null,
                                                    kind: "ScalarField",
                                                    name: "text",
                                                    storageKey: null
                                                }],
                                                storageKey: null
                                            }],
                                            storageKey: null
                                        }],
                                        storageKey: 'timeline_context_items(context_item_types:"FOLLOWER_COUNT",render_location:"PROFILE_PLUS_PREVIEW")'
                                    }, c],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }, a, b, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "is_failing_page_publishing_authorization",
                            storageKey: null
                        }, c], type: "User", abstractKey: null
                    }],
                    storageKey: null
                }, {
                    alias: "first_account",
                    args: [{kind: "Literal", name: "first", value: 1}],
                    concreteType: "LoggedInAccountSwitcherAccount",
                    kind: "LinkedField",
                    name: "device_switchable_accounts",
                    plural: !0,
                    selections: [d, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "user",
                        plural: !1,
                        selections: [a, b, {
                            alias: null,
                            args: [{kind: "Literal", name: "height", value: 36}, {
                                kind: "Variable",
                                name: "scale",
                                variableName: "scale"
                            }, {kind: "Literal", name: "width", value: 36}],
                            concreteType: "Image",
                            kind: "LinkedField",
                            name: "profile_picture",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "scale",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "height",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "width",
                                storageKey: null
                            }, {alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: "device_switchable_accounts(first:1)"
                }, {
                    alias: null,
                    args: null,
                    concreteType: "LoggedInAccountSwitcherAccount",
                    kind: "LinkedField",
                    name: "device_switchable_accounts",
                    plural: !0,
                    selections: [d],
                    storageKey: null
                }],
                storageKey: null
            }, {args: null, kind: "FragmentSpread", name: "useProfileCometSwitcherCleanUpOnSwap_query"}, {
                args: null,
                kind: "FragmentSpread",
                name: "CometProfileSwitcherPagePublishingAuthorizationCard_query"
            }, {args: null, kind: "FragmentSpread", name: "CometLoggedInAccountSwitcher_query"}],
            type: "Query",
            abstractKey: null
        }
    }();
    e.exports = a
}), null);
__d("CometProfileSwitcherListCell_profile.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
        kind: "Fragment",
        metadata: null,
        name: "CometProfileSwitcherListCell_profile",
        selections: [{alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "name",
            storageKey: null
        }, {
            alias: null,
            args: [{kind: "Literal", name: "height", value: 40}, {
                kind: "Variable",
                name: "scale",
                variableName: "scale"
            }, {kind: "Literal", name: "width", value: 40}],
            concreteType: "Image",
            kind: "LinkedField",
            name: "profile_picture",
            plural: !1,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "width",
                storageKey: null
            }, {alias: null, args: null, kind: "ScalarField", name: "height", storageKey: null}, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "scale",
                storageKey: null
            }],
            storageKey: null
        }, {alias: null, args: null, kind: "ScalarField", name: "unseen_update_count", storageKey: null}],
        type: "User",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("useCometCombinedProfileAccountSwitcherListCell_query.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
        kind: "Fragment",
        metadata: null,
        name: "useCometCombinedProfileAccountSwitcherListCell_query",
        selections: [{
            alias: null,
            args: null,
            concreteType: "Viewer",
            kind: "LinkedField",
            name: "viewer",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "actor",
                plural: !1,
                selections: [{
                    kind: "InlineFragment", selections: [{
                        alias: "first_profiles",
                        args: [{kind: "Literal", name: "first", value: 2}],
                        concreteType: "UserProfileSwitcherEligibleProfilesConnection",
                        kind: "LinkedField",
                        name: "profile_switcher_eligible_profiles",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "ProfileSwitcherEligibleProfile",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "User",
                                kind: "LinkedField",
                                name: "profile",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: [{kind: "Literal", name: "height", value: 36}, {
                                        kind: "Variable",
                                        name: "scale",
                                        variableName: "scale"
                                    }, {kind: "Literal", name: "width", value: 36}],
                                    concreteType: "Image",
                                    kind: "LinkedField",
                                    name: "profile_picture",
                                    plural: !1,
                                    selections: [{
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "uri",
                                        storageKey: null
                                    }, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "width",
                                        storageKey: null
                                    }, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "height",
                                        storageKey: null
                                    }, {alias: null, args: null, kind: "ScalarField", name: "scale", storageKey: null}],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: "profile_switcher_eligible_profiles(first:2)"
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "UserProfileSwitcherEligibleProfilesConnection",
                        kind: "LinkedField",
                        name: "profile_switcher_eligible_profiles",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "count",
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            concreteType: "ProfileSwitcherEligibleProfile",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "User",
                                kind: "LinkedField",
                                name: "profile",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "unseen_update_count",
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }], type: "User", abstractKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "LoggedInAccountSwitcherAccount",
                kind: "LinkedField",
                name: "device_switchable_accounts",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "unread_notification_count",
                    storageKey: null
                }],
                storageKey: null
            }],
            storageKey: null
        }, {args: null, kind: "FragmentSpread", name: "CometProfileAndAccountSwitcher_query"}, {
            args: null,
            kind: "FragmentSpread",
            name: "CometProfileSwitcher_query"
        }, {args: null, kind: "FragmentSpread", name: "useCometLoggedInAccountSwitcherListCell_query"}],
        type: "Query",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometRecordProductUsageMutationMutation.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{defaultValue: null, kind: "LocalArgument", name: "productID"}],
            b = [{kind: "Literal", name: "app_id", value: 2220391788200892}, {
                kind: "Variable",
                name: "product_id",
                variableName: "productID"
            }], c = {alias: null, args: null, kind: "ScalarField", name: "product_id", storageKey: null},
            d = {alias: null, args: null, kind: "ScalarField", name: "last_used_time", storageKey: null};
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "CometRecordProductUsageMutationMutation",
                selections: [{
                    alias: null,
                    args: b,
                    concreteType: "ProductUsageRecord",
                    kind: "LinkedField",
                    name: "update_last_used_time_for_product",
                    plural: !1,
                    selections: [c, d],
                    storageKey: null
                }],
                type: "Mutation",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "CometRecordProductUsageMutationMutation",
                selections: [{
                    alias: null,
                    args: b,
                    concreteType: "ProductUsageRecord",
                    kind: "LinkedField",
                    name: "update_last_used_time_for_product",
                    plural: !1,
                    selections: [c, d, {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}],
                    storageKey: null
                }]
            },
            params: {
                id: "3470690602991665",
                metadata: {},
                name: "CometRecordProductUsageMutationMutation",
                operationKind: "mutation",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CometHomeCreateMenuQuery.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {alias: null, args: null, kind: "ScalarField", name: "should_use_page_rename", storageKey: null}, b = {
            alias: null,
            args: null,
            concreteType: "JobSearchSettings",
            kind: "LinkedField",
            name: "job_search_settings",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "can_viewer_create_any_job",
                storageKey: null
            }],
            storageKey: null
        }, c = {alias: null, args: null, kind: "ScalarField", name: "can_create_page", storageKey: null}, d = {
            alias: null,
            args: null,
            concreteType: "LWIAPI",
            kind: "LinkedField",
            name: "lwi",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "should_direct_to_lwi",
                storageKey: null
            }],
            storageKey: null
        };
        return {
            fragment: {
                argumentDefinitions: [],
                kind: "Fragment",
                metadata: null,
                name: "CometHomeCreateMenuQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "account_user",
                        plural: !1,
                        selections: [a],
                        storageKey: null
                    }, b, c],
                    storageKey: null
                }, d],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [],
                kind: "Operation",
                name: "CometHomeCreateMenuQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "account_user",
                        plural: !1,
                        selections: [a, {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}],
                        storageKey: null
                    }, b, c],
                    storageKey: null
                }, d]
            },
            params: {
                id: "3104045929705490",
                metadata: {},
                name: "CometHomeCreateMenuQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CometMessagingJewelDropdownQPBannerContainerQuery.graphql", ["relay-runtime"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{kind: "Literal", name: "surface_nux_id", value: 8439}, {
            kind: "Literal",
            name: "trigger",
            value: "MESSAGING_JEWEL_OPEN"
        }], b = [{
            kind: "Literal",
            name: "supported",
            value: ["CometQuickPromotionMessengerDesktopDownloadBannerRendererStrategy"]
        }], c = {
            kind: "InlineFragment",
            selections: [{
                documentName: "CometMessagingJewelDropdownQPBannerContainerQuery",
                fragmentName: "CometQuickPromotionMessengerDesktopDownloadBannerRendererStrategy_quickPromotionRef",
                fragmentPropName: "quickPromotionRef",
                kind: "ModuleImport"
            }],
            type: "CometQuickPromotionMessengerDesktopDownloadBannerRendererStrategy",
            abstractKey: null
        };
        return {
            fragment: {
                argumentDefinitions: [],
                kind: "Fragment",
                metadata: null,
                name: "CometMessagingJewelDropdownQPBannerContainerQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: a,
                        concreteType: "ViewerEligibleQuickPromotionsConnection",
                        kind: "LinkedField",
                        name: "eligible_promotions",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "QuickPromotion",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "CometQuickPromotionSections",
                                kind: "LinkedField",
                                name: "comet_qp_sections",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: b,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "renderer_strategy",
                                    plural: !1,
                                    selections: [c],
                                    storageKey: 'renderer_strategy(supported:["CometQuickPromotionMessengerDesktopDownloadBannerRendererStrategy"])'
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: 'eligible_promotions(surface_nux_id:8439,trigger:"MESSAGING_JEWEL_OPEN")'
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [],
                kind: "Operation",
                name: "CometMessagingJewelDropdownQPBannerContainerQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: a,
                        concreteType: "ViewerEligibleQuickPromotionsConnection",
                        kind: "LinkedField",
                        name: "eligible_promotions",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "QuickPromotion",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "CometQuickPromotionSections",
                                kind: "LinkedField",
                                name: "comet_qp_sections",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: b,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "renderer_strategy",
                                    plural: !1,
                                    selections: [{
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "__typename",
                                        storageKey: null
                                    }, c],
                                    storageKey: 'renderer_strategy(supported:["CometQuickPromotionMessengerDesktopDownloadBannerRendererStrategy"])'
                                }],
                                storageKey: null
                            }, {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}],
                            storageKey: null
                        }],
                        storageKey: 'eligible_promotions(surface_nux_id:8439,trigger:"MESSAGING_JEWEL_OPEN")'
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "3184047498370995",
                metadata: {},
                name: "CometMessagingJewelDropdownQPBannerContainerQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    a.params.id != null && b("relay-runtime").PreloadableQueryRegistry.set(a.params.id, a);
    e.exports = a
}), null);
__d("CometNotificationsReceiveSubscription.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {defaultValue: null, kind: "LocalArgument", name: "count"},
            b = {defaultValue: null, kind: "LocalArgument", name: "environment"},
            c = {defaultValue: null, kind: "LocalArgument", name: "input"},
            d = {defaultValue: null, kind: "LocalArgument", name: "notif_cache_ids"},
            e = {defaultValue: null, kind: "LocalArgument", name: "refresh_num"},
            f = {defaultValue: null, kind: "LocalArgument", name: "scale"},
            g = [{kind: "Variable", name: "data", variableName: "input"}], h = {
                alias: null,
                args: [{kind: "Variable", name: "environment", variableName: "environment"}],
                kind: "ScalarField",
                name: "notifications_unseen_count",
                storageKey: null
            }, i = {alias: null, args: null, kind: "ScalarField", name: "last_update_timestamp", storageKey: null},
            j = {kind: "Variable", name: "notif_cache_ids", variableName: "notif_cache_ids"},
            k = {alias: null, args: null, kind: "ScalarField", name: "seen_state", storageKey: null},
            l = {alias: null, args: null, kind: "ScalarField", name: "__typename", storageKey: null}, m = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "renderer_data",
                plural: !1,
                selections: [l, {
                    kind: "InlineFragment",
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "video_id",
                        storageKey: null
                    }, {alias: null, args: null, kind: "ScalarField", name: "bucket_data", storageKey: null}],
                    type: "LiveVideoNotificationRendererData",
                    abstractKey: null
                }],
                storageKey: null
            }, n = {
                alias: null,
                args: [{kind: "Literal", name: "site", value: "comet"}],
                kind: "ScalarField",
                name: "url",
                storageKey: 'url(site:"comet")'
            }, o = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}, p = [o],
            q = [{kind: "Variable", name: "environment_alias_override", variableName: "environment"}, {
                kind: "Variable",
                name: "first",
                variableName: "count"
            }, j, {kind: "Literal", name: "notif_query_flags", value: ["IS_COMET"]}, {
                kind: "Literal",
                name: "source",
                value: "unknown"
            }], r = {alias: null, args: null, kind: "ScalarField", name: "tracking", storageKey: null},
            s = {alias: null, args: null, kind: "ScalarField", name: "text", storageKey: null},
            t = {alias: null, args: null, kind: "ScalarField", name: "url", storageKey: null}, u = [s],
            v = {alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null},
            w = {kind: "Variable", name: "scale", variableName: "scale"},
            x = {alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}, y = [x],
            z = {alias: null, args: null, kind: "ScalarField", name: "notif_id", storageKey: null},
            A = {alias: null, args: null, kind: "ScalarField", name: "notif_cache_id", storageKey: null}, B = {
                alias: "creation_time",
                args: null,
                concreteType: "CreationTimeWithRelativeText",
                kind: "LinkedField",
                name: "creation_time_with_relative_text",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "timestamp", storageKey: null}],
                storageKey: null
            }, C = {alias: null, args: null, kind: "ScalarField", name: "notif_type", storageKey: null}, D = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "notif_option_set_context",
                    value: {
                        client_action_types: ["HIDE", "UNSUB", "TOGGLE_ACTIVE", "OPEN_IN_INSPECTOR", "REPORT_BUG", "OPEN_PCU_REMINDERS_DIALOG"],
                        environment: "MAIN_SURFACE",
                        is_comet: !0,
                        supported_display_styles: [{
                            option_display_styles: ["CHEVRON_MENU_OPTION"],
                            option_set_display_style: "CHEVRON_MENU"
                        }]
                    }
                }],
                concreteType: "NotificationOptionSetsConnection",
                kind: "LinkedField",
                name: "notif_option_sets",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "NotificationOptionSetsEdge",
                    kind: "LinkedField",
                    name: "edges",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "NotifOptionSet",
                        kind: "LinkedField",
                        name: "node",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "NotifOptionSetOptionsConnection",
                            kind: "LinkedField",
                            name: "notif_options",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "NotifOptionSetOptionsEdge",
                                kind: "LinkedField",
                                name: "edges",
                                plural: !0,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "NotifOption",
                                    kind: "LinkedField",
                                    name: "node",
                                    plural: !1,
                                    selections: [o, {
                                        alias: null,
                                        args: null,
                                        concreteType: null,
                                        kind: "LinkedField",
                                        name: "notif_option_renderer",
                                        plural: !1,
                                        selections: [l, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                documentName: "CometNotificationsDropdownMenu_notification",
                                                fragmentName: "CometNotificationsDropdownHideMenuItem_notifOptionRenderer",
                                                fragmentPropName: "notifOptionRenderer",
                                                kind: "ModuleImport"
                                            }],
                                            type: "NotifOptionHideRenderer",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                documentName: "CometNotificationsDropdownMenu_notification",
                                                fragmentName: "CometNotificationsDropdownDefaultMenuItem_notifOptionRenderer",
                                                fragmentPropName: "notifOptionRenderer",
                                                kind: "ModuleImport"
                                            }],
                                            type: "NotifOptionDefaultRenderer",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                documentName: "CometNotificationsDropdownMenu_notification",
                                                fragmentName: "CometNotificationsDropdownDialogMenuItem_notifOptionRenderer",
                                                fragmentPropName: "notifOptionRenderer",
                                                kind: "ModuleImport"
                                            }],
                                            type: "NotifOptionDialogRenderer",
                                            abstractKey: null
                                        }],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }, o],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: 'notif_option_sets(notif_option_set_context:{"client_action_types":["HIDE","UNSUB","TOGGLE_ACTIVE","OPEN_IN_INSPECTOR","REPORT_BUG","OPEN_PCU_REMINDERS_DIALOG"],"environment":"MAIN_SURFACE","is_comet":true,"supported_display_styles":[{"option_display_styles":["CHEVRON_MENU_OPTION"],"option_set_display_style":"CHEVRON_MENU"}]})'
            }, E = {
                kind: "InlineFragment",
                selections: [{
                    documentName: "CometNotificationsListItemAttachment_notification",
                    fragmentName: "CometNotificationsListItemFriendRequestAttachment_notifAttachments",
                    fragmentPropName: "notifAttachments",
                    kind: "ModuleImport"
                }],
                type: "FriendRequestNotifAttachment",
                abstractKey: null
            }, F = {
                kind: "InlineFragment",
                selections: [{
                    documentName: "CometNotificationsListItemAttachment_notification",
                    fragmentName: "CometNotificationsListItemPageInviteAttachment_notifAttachments",
                    fragmentPropName: "notifAttachments",
                    kind: "ModuleImport"
                }],
                type: "PageInviteNotifAttachment",
                abstractKey: null
            }, G = {
                kind: "InlineFragment",
                selections: [{
                    documentName: "CometNotificationsListItemAttachment_notification",
                    fragmentName: "CometNotificationsListItemQuickPromotionAttachment_notifAttachments",
                    fragmentPropName: "notifAttachments",
                    kind: "ModuleImport"
                }],
                type: "QuickPromotionNotifAttachment",
                abstractKey: null
            }, H = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "notif_attachments",
                plural: !0,
                selections: [l, E, F, G],
                storageKey: null
            }, I = {alias: null, args: null, kind: "ScalarField", name: "length", storageKey: null},
            J = {alias: null, args: null, kind: "ScalarField", name: "offset", storageKey: null},
            K = [{kind: "Literal", name: "delight_surface", value: "COMMENT"}],
            L = {kind: "InlineFragment", selections: p, type: "Node", abstractKey: "__isNode"}, M = [o, v], N = {
                alias: null,
                args: null,
                concreteType: "WorkForeignEntityInfo",
                kind: "LinkedField",
                name: "work_foreign_entity_info",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "type", storageKey: null}],
                storageKey: null
            };
        K = {
            alias: null,
            args: null,
            concreteType: "TextWithEntities",
            kind: "LinkedField",
            name: "body",
            plural: !1,
            selections: [s, {
                alias: null,
                args: null,
                concreteType: "DelightAtRange",
                kind: "LinkedField",
                name: "delight_ranges",
                plural: !0,
                selections: [I, J, {
                    alias: null,
                    args: null,
                    concreteType: "TextDelightCampaign",
                    kind: "LinkedField",
                    name: "campaign",
                    plural: !1,
                    selections: [l, {
                        alias: null,
                        args: K,
                        concreteType: "TextDelightStylePair",
                        kind: "LinkedField",
                        name: "delight_styles",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "style",
                            storageKey: null
                        }, {alias: null, args: null, kind: "ScalarField", name: "value", storageKey: null}],
                        storageKey: 'delight_styles(delight_surface:"COMMENT")'
                    }, {
                        alias: null,
                        args: K,
                        concreteType: "DelightsAnimation",
                        kind: "LinkedField",
                        name: "delight_asset",
                        plural: !1,
                        selections: [o, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "animation_uri",
                            storageKey: null
                        }],
                        storageKey: 'delight_asset(delight_surface:"COMMENT")'
                    }, o],
                    storageKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "ImageAtRange",
                kind: "LinkedField",
                name: "image_ranges",
                plural: !0,
                selections: [I, J, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "entity_with_image",
                    plural: !1,
                    selections: [l, {
                        alias: null,
                        args: [w],
                        concreteType: "Image",
                        kind: "LinkedField",
                        name: "image",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "height",
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "scale",
                            storageKey: null
                        }, x, {alias: null, args: null, kind: "ScalarField", name: "width", storageKey: null}],
                        storageKey: null
                    }, L],
                    storageKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "InlineStyleAtRange",
                kind: "LinkedField",
                name: "inline_style_ranges",
                plural: !0,
                selections: [I, J, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "inline_style",
                    storageKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "AggregatedEntitiesAtRange",
                kind: "LinkedField",
                name: "aggregated_ranges",
                plural: !0,
                selections: [I, J, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "count",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "sample_entities",
                    plural: !0,
                    selections: [l, {kind: "InlineFragment", selections: M, type: "User", abstractKey: null}, L],
                    storageKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "EntityAtRange",
                kind: "LinkedField",
                name: "ranges",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "entity",
                    plural: !1,
                    selections: [l, {kind: "TypeDiscriminator", abstractKey: "__isEntity"}, n, {
                        alias: "mobileUrl",
                        args: [{kind: "Literal", name: "site", value: "mobile"}],
                        kind: "ScalarField",
                        name: "url",
                        storageKey: 'url(site:"mobile")'
                    }, {
                        kind: "InlineFragment",
                        selections: [o, {
                            kind: "InlineFragment",
                            selections: [{
                                alias: "profile_url",
                                args: null,
                                kind: "ScalarField",
                                name: "url",
                                storageKey: null
                            }],
                            type: "Entity",
                            abstractKey: "__isEntity"
                        }],
                        type: "Actor",
                        abstractKey: "__isActor"
                    }, {
                        kind: "InlineFragment",
                        selections: [{
                            documentName: "CometTextWithEntitiesRelay_textWithEntities",
                            fragmentName: "GroupsCometHashtagsStoryMessageHashtagLink_hashtag",
                            fragmentPropName: "hashtag",
                            kind: "ModuleImport"
                        }],
                        type: "GroupHashtag",
                        abstractKey: null
                    }, {
                        kind: "InlineFragment",
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "category_type",
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "verification_status",
                            storageKey: null
                        }, o, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "is_verified",
                            storageKey: null
                        }, {
                            documentName: "CometTextWithEntitiesRelay_textWithEntities",
                            fragmentName: "PagesCometPageLink_page",
                            fragmentPropName: "page",
                            kind: "ModuleImport"
                        }],
                        type: "Page",
                        abstractKey: null
                    }, {
                        kind: "InlineFragment",
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "external_url",
                            storageKey: null
                        }],
                        type: "ExternalUrl",
                        abstractKey: null
                    }, {
                        kind: "InlineFragment",
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "time_index",
                            storageKey: null
                        }],
                        type: "VideoTimeIndex",
                        abstractKey: null
                    }, {
                        kind: "InlineFragment",
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "web_link",
                            plural: !1,
                            selections: [l, t, {
                                kind: "InlineFragment",
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "fbclid",
                                    storageKey: null
                                }, {alias: null, args: null, kind: "ScalarField", name: "lynx_mode", storageKey: null}],
                                type: "ExternalWebLink",
                                abstractKey: null
                            }],
                            storageKey: null
                        }],
                        type: "WebLinkable",
                        abstractKey: "__isWebLinkable"
                    }, {
                        kind: "InlineFragment",
                        selections: [N, {
                            alias: null,
                            args: null,
                            concreteType: "WorkUserInfo",
                            kind: "LinkedField",
                            name: "work_info",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "is_active_account",
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        type: "User",
                        abstractKey: null
                    }, {
                        kind: "InlineFragment",
                        selections: [N, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "work_official_status",
                            storageKey: null
                        }],
                        type: "Group",
                        abstractKey: null
                    }, L],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "entity_is_weak_reference",
                    storageKey: null
                }, I, J],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "ColorAtRange",
                kind: "LinkedField",
                name: "color_ranges",
                plural: !0,
                selections: [I, J, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "hex_rgb_color_with_pound_key",
                    storageKey: null
                }],
                storageKey: null
            }],
            storageKey: null
        };
        x = {
            alias: null,
            args: [{kind: "Literal", name: "height", value: 56}, w, {kind: "Literal", name: "width", value: 56}],
            concreteType: "Image",
            kind: "LinkedField",
            name: "notif_image",
            plural: !1,
            selections: y,
            storageKey: null
        };
        N = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "www_url_should_open_in_blank_target",
            storageKey: null
        };
        L = {
            alias: null,
            args: null,
            concreteType: "GlyphIconData",
            kind: "LinkedField",
            name: "icon_data",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reaction_type",
                storageKey: null
            }, {alias: null, args: null, kind: "ScalarField", name: "glyph_name", storageKey: null}],
            storageKey: null
        };
        I = {
            alias: null,
            args: null,
            concreteType: "NotifNavigationEndpoint",
            kind: "LinkedField",
            name: "navigation_endpoint",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "target_viewer",
                plural: !1,
                selections: M,
                storageKey: null
            }, {alias: null, args: null, kind: "ScalarField", name: "target_viewer_type", storageKey: null}],
            storageKey: null
        };
        J = {
            kind: "ClientExtension",
            selections: [{alias: null, args: null, kind: "ScalarField", name: "is_hidden", storageKey: null}]
        };
        return {
            fragment: {
                argumentDefinitions: [a, b, c, d, e, f],
                kind: "Fragment",
                metadata: null,
                name: "CometNotificationsReceiveSubscription",
                selections: [{
                    alias: null,
                    args: g,
                    concreteType: "CometNotificationReceiveSubscribeResponsePayload",
                    kind: "LinkedField",
                    name: "comet_notification_receive_subscribe",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "Viewer",
                        kind: "LinkedField",
                        name: "viewer",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "actor",
                            plural: !1,
                            selections: [{args: null, kind: "FragmentSpread", name: "CometToastNotification_actor"}],
                            storageKey: null
                        }, h, i, {
                            args: null,
                            kind: "FragmentSpread",
                            name: "CometRightSideHeaderCards_viewerSideFeed"
                        }, {
                            args: [{kind: "Variable", name: "count", variableName: "count"}, j],
                            kind: "FragmentSpread",
                            name: "CometNotificationsList_viewerConnection"
                        }, {args: null, kind: "FragmentSpread", name: "CometNotificationsList_viewerData"}],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "Notification",
                        kind: "LinkedField",
                        name: "notification",
                        plural: !1,
                        selections: [k, m, {
                            args: [{kind: "Literal", name: "isToast", value: !0}],
                            kind: "FragmentSpread",
                            name: "CometNotificationsListItem_notification"
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "Notification",
                        kind: "LinkedField",
                        name: "aggregated_notification",
                        plural: !1,
                        selections: [n, k, {
                            args: null,
                            kind: "FragmentSpread",
                            name: "CometNotificationsListItem_notification"
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Subscription",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [b, c, f, d, a, e],
                kind: "Operation",
                name: "CometNotificationsReceiveSubscription",
                selections: [{
                    alias: null,
                    args: g,
                    concreteType: "CometNotificationReceiveSubscribeResponsePayload",
                    kind: "LinkedField",
                    name: "comet_notification_receive_subscribe",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "Viewer",
                        kind: "LinkedField",
                        name: "viewer",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: [{kind: "Literal", name: "environment", value: "COMET"}, {
                                kind: "Literal",
                                name: "query_ego_units",
                                value: !1
                            }, {kind: "Variable", name: "refresh_num", variableName: "refresh_num"}],
                            concreteType: "SideFeedConnection",
                            kind: "LinkedField",
                            name: "side_feed",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [l, {
                                    kind: "InlineFragment",
                                    selections: [{
                                        documentName: "CometRightSideHeaderCards_viewerSideFeed",
                                        fragmentName: "PagesCometHomeAdminContainer_pagesPanel",
                                        fragmentPropName: "pagesPanel",
                                        kind: "ModuleImport"
                                    }],
                                    type: "PagesSideFeedUnit",
                                    abstractKey: null
                                }, {
                                    kind: "InlineFragment",
                                    selections: [{
                                        documentName: "CometRightSideHeaderCards_viewerSideFeed",
                                        fragmentName: "FriendingCometHomeInlineRHCContainer_friendsPanel",
                                        fragmentPropName: "friendsPanel",
                                        kind: "ModuleImport"
                                    }],
                                    type: "FriendingRequestsSideFeedUnit",
                                    abstractKey: null
                                }, {
                                    kind: "InlineFragment",
                                    selections: [{
                                        documentName: "CometRightSideHeaderCards_viewerSideFeed",
                                        fragmentName: "CometHomeRemindersContainer_reminderPanel",
                                        fragmentPropName: "reminderPanel",
                                        kind: "ModuleImport"
                                    }],
                                    type: "RemindersSideFeedUnit",
                                    abstractKey: null
                                }, {
                                    kind: "InlineFragment",
                                    selections: [{
                                        documentName: "CometRightSideHeaderCards_viewerSideFeed",
                                        fragmentName: "CometHomeRightSideWidgetContainer_widgetContainer",
                                        fragmentPropName: "widgetContainer",
                                        kind: "ModuleImport"
                                    }],
                                    type: "CometHomeSideFeedWidgetContainer",
                                    abstractKey: null
                                }, {
                                    kind: "InlineFragment",
                                    selections: p,
                                    type: "AdsSideFeedUnitItem",
                                    abstractKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "actor",
                            plural: !1,
                            selections: [l, {
                                kind: "TypeDiscriminator",
                                abstractKey: "__isActor"
                            }, o, {
                                kind: "InlineFragment",
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "profile_plus_primary_platform_tool",
                                    storageKey: null
                                }],
                                type: "User",
                                abstractKey: null
                            }],
                            storageKey: null
                        }, h, {
                            alias: null,
                            args: q,
                            concreteType: "ViewerNotificationsPageConnection",
                            kind: "LinkedField",
                            name: "notifications_page",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "ViewerNotificationsPageEdge",
                                kind: "LinkedField",
                                name: "edges",
                                plural: !0,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "node",
                                    plural: !1,
                                    selections: [l, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "row_type",
                                        storageKey: null
                                    }, r, {
                                        kind: "InlineFragment",
                                        selections: [{
                                            alias: null,
                                            args: null,
                                            kind: "ScalarField",
                                            name: "bucket_type",
                                            storageKey: null
                                        }, {
                                            alias: null,
                                            args: null,
                                            concreteType: "NotifPageBucketHeaderLink",
                                            kind: "LinkedField",
                                            name: "header_link",
                                            plural: !1,
                                            selections: [s, t],
                                            storageKey: null
                                        }, {
                                            alias: null,
                                            args: null,
                                            concreteType: "TextWithEntities",
                                            kind: "LinkedField",
                                            name: "title",
                                            plural: !1,
                                            selections: u,
                                            storageKey: null
                                        }],
                                        type: "NotifPageBucketHeaderRow",
                                        abstractKey: null
                                    }, {
                                        kind: "InlineFragment",
                                        selections: [{
                                            alias: null,
                                            args: null,
                                            kind: "ScalarField",
                                            name: "pymk_tracking_signature",
                                            storageKey: null
                                        }, {
                                            alias: null,
                                            args: null,
                                            concreteType: "User",
                                            kind: "LinkedField",
                                            name: "person_you_may_know",
                                            plural: !1,
                                            selections: [o, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "friendship_status",
                                                storageKey: null
                                            }, v, t, {
                                                alias: null,
                                                args: [{
                                                    kind: "Literal",
                                                    name: "height",
                                                    value: 60
                                                }, w, {kind: "Literal", name: "width", value: 60}],
                                                concreteType: "Image",
                                                kind: "LinkedField",
                                                name: "profile_picture",
                                                plural: !1,
                                                selections: y,
                                                storageKey: null
                                            }, {
                                                kind: "InlineFragment",
                                                selections: [{
                                                    kind: "InlineFragment",
                                                    selections: [{
                                                        alias: null,
                                                        args: null,
                                                        concreteType: "TextWithEntities",
                                                        kind: "LinkedField",
                                                        name: "social_context",
                                                        plural: !1,
                                                        selections: u,
                                                        storageKey: null
                                                    }, {
                                                        alias: null,
                                                        args: null,
                                                        concreteType: "User",
                                                        kind: "LinkedField",
                                                        name: "social_context_top_mutual_friends",
                                                        plural: !0,
                                                        selections: [o, v, n, {
                                                            alias: null,
                                                            args: [{
                                                                kind: "Literal",
                                                                name: "height",
                                                                value: 20
                                                            }, w, {kind: "Literal", name: "width", value: 20}],
                                                            concreteType: "Image",
                                                            kind: "LinkedField",
                                                            name: "profile_picture",
                                                            plural: !1,
                                                            selections: y,
                                                            storageKey: null
                                                        }],
                                                        storageKey: null
                                                    }],
                                                    type: "User",
                                                    abstractKey: null
                                                }],
                                                type: "FriendNode",
                                                abstractKey: "__isFriendNode"
                                            }],
                                            storageKey: null
                                        }],
                                        type: "NotifPagePYMKRow",
                                        abstractKey: null
                                    }, {
                                        kind: "InlineFragment",
                                        selections: [{
                                            alias: null,
                                            args: null,
                                            concreteType: "Notification",
                                            kind: "LinkedField",
                                            name: "notif",
                                            plural: !1,
                                            selections: [z, o, A, k, B, r],
                                            storageKey: null
                                        }],
                                        type: "NotifPageCachedNotificationRow",
                                        abstractKey: null
                                    }, {
                                        kind: "InlineFragment",
                                        selections: [{
                                            alias: null,
                                            args: null,
                                            concreteType: "Notification",
                                            kind: "LinkedField",
                                            name: "notif",
                                            plural: !1,
                                            selections: [z, k, o, A, r, C, D, H, K, x, n, N, B, L, I, J],
                                            storageKey: null
                                        }],
                                        type: "NotifPageNotificationRow",
                                        abstractKey: null
                                    }, {
                                        kind: "InlineFragment",
                                        selections: [{
                                            alias: null,
                                            args: null,
                                            kind: "ScalarField",
                                            name: "invalidation_reason",
                                            storageKey: null
                                        }, {
                                            alias: null,
                                            args: null,
                                            concreteType: "Notification",
                                            kind: "LinkedField",
                                            name: "notif",
                                            plural: !1,
                                            selections: [z, C, o],
                                            storageKey: null
                                        }],
                                        type: "NotifPageDebugInvalidationRow",
                                        abstractKey: null
                                    }],
                                    storageKey: null
                                }, {alias: null, args: null, kind: "ScalarField", name: "cursor", storageKey: null}],
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                concreteType: "PageInfo",
                                kind: "LinkedField",
                                name: "page_info",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "end_cursor",
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "has_next_page",
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }, {
                            alias: null,
                            args: q,
                            filters: [],
                            handle: "comet_notifications_thin_client",
                            key: "CometNotificationsList_notifications_page",
                            kind: "LinkedHandle",
                            name: "notifications_page"
                        }, i],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "Notification",
                        kind: "LinkedField",
                        name: "notification",
                        plural: !1,
                        selections: [k, o, z, C, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "notif_attachments",
                            plural: !0,
                            selections: [l, E, {
                                kind: "InlineFragment",
                                selections: [{
                                    documentName: "CometNotificationsListItemAttachment_notification",
                                    fragmentName: "CometNotificationsListItemLiveVideoAttachment_attachment",
                                    fragmentPropName: "attachment",
                                    kind: "ModuleImport"
                                }],
                                type: "LiveVideoNotificationAttachment",
                                abstractKey: null
                            }, F, G],
                            storageKey: null
                        }, K, x, n, N, B, L, r, I, m, J],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "Notification",
                        kind: "LinkedField",
                        name: "aggregated_notification",
                        plural: !1,
                        selections: [n, k, o, z, C, D, H, K, x, n, N, B, L, r, I, J],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "3551025678270179",
                metadata: {subscriptionName: "comet_notification_receive_subscribe"},
                name: "CometNotificationsReceiveSubscription",
                operationKind: "subscription",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CometSetupNotificationStoreSubscriptionNewNotificationQuery.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{defaultValue: null, kind: "LocalArgument", name: "scale"}],
            b = {alias: null, args: null, kind: "ScalarField", name: "__typename", storageKey: null},
            c = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null},
            d = {alias: null, args: null, kind: "ScalarField", name: "length", storageKey: null},
            e = {alias: null, args: null, kind: "ScalarField", name: "offset", storageKey: null},
            f = [{kind: "Literal", name: "delight_surface", value: "COMMENT"}],
            g = {kind: "Variable", name: "scale", variableName: "scale"},
            h = {alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null},
            i = {kind: "InlineFragment", selections: [c], type: "Node", abstractKey: "__isNode"},
            j = [c, {alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null}], k = {
                alias: null,
                args: [{kind: "Literal", name: "site", value: "comet"}],
                kind: "ScalarField",
                name: "url",
                storageKey: 'url(site:"comet")'
            }, l = {
                alias: null,
                args: null,
                concreteType: "WorkForeignEntityInfo",
                kind: "LinkedField",
                name: "work_foreign_entity_info",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "type", storageKey: null}],
                storageKey: null
            };
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "CometSetupNotificationStoreSubscriptionNewNotificationQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        args: null,
                        kind: "FragmentSpread",
                        name: "CometSetupNotificationStoreSubscriptionNewNotification_data"
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "CometSetupNotificationStoreSubscriptionNewNotificationQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "actor",
                        plural: !1,
                        selections: [b, c, {
                            kind: "TypeDiscriminator",
                            abstractKey: "__isActor"
                        }, {
                            kind: "InlineFragment",
                            selections: [{
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "profile_plus_primary_platform_tool",
                                storageKey: null
                            }],
                            type: "User",
                            abstractKey: null
                        }],
                        storageKey: null
                    }, {
                        kind: "ClientExtension", selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Notification",
                            kind: "LinkedField",
                            name: "new_notification",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "notif_id",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "notif_type",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "seen_state",
                                storageKey: null
                            }, c, {
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "notif_attachments",
                                plural: !0,
                                selections: [b, {
                                    kind: "InlineFragment",
                                    selections: [{
                                        documentName: "CometNotificationsListItemAttachment_notification",
                                        fragmentName: "CometNotificationsListItemFriendRequestAttachment_notifAttachments",
                                        fragmentPropName: "notifAttachments",
                                        kind: "ModuleImport"
                                    }],
                                    type: "FriendRequestNotifAttachment",
                                    abstractKey: null
                                }, {
                                    kind: "InlineFragment",
                                    selections: [{
                                        documentName: "CometNotificationsListItemAttachment_notification",
                                        fragmentName: "CometNotificationsListItemLiveVideoAttachment_attachment",
                                        fragmentPropName: "attachment",
                                        kind: "ModuleImport"
                                    }],
                                    type: "LiveVideoNotificationAttachment",
                                    abstractKey: null
                                }, {
                                    kind: "InlineFragment",
                                    selections: [{
                                        documentName: "CometNotificationsListItemAttachment_notification",
                                        fragmentName: "CometNotificationsListItemPageInviteAttachment_notifAttachments",
                                        fragmentPropName: "notifAttachments",
                                        kind: "ModuleImport"
                                    }],
                                    type: "PageInviteNotifAttachment",
                                    abstractKey: null
                                }, {
                                    kind: "InlineFragment",
                                    selections: [{
                                        documentName: "CometNotificationsListItemAttachment_notification",
                                        fragmentName: "CometNotificationsListItemQuickPromotionAttachment_notifAttachments",
                                        fragmentPropName: "notifAttachments",
                                        kind: "ModuleImport"
                                    }],
                                    type: "QuickPromotionNotifAttachment",
                                    abstractKey: null
                                }],
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                concreteType: "TextWithEntities",
                                kind: "LinkedField",
                                name: "body",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "text",
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "DelightAtRange",
                                    kind: "LinkedField",
                                    name: "delight_ranges",
                                    plural: !0,
                                    selections: [d, e, {
                                        alias: null,
                                        args: null,
                                        concreteType: "TextDelightCampaign",
                                        kind: "LinkedField",
                                        name: "campaign",
                                        plural: !1,
                                        selections: [b, {
                                            alias: null,
                                            args: f,
                                            concreteType: "TextDelightStylePair",
                                            kind: "LinkedField",
                                            name: "delight_styles",
                                            plural: !0,
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "style",
                                                storageKey: null
                                            }, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "value",
                                                storageKey: null
                                            }],
                                            storageKey: 'delight_styles(delight_surface:"COMMENT")'
                                        }, {
                                            alias: null,
                                            args: f,
                                            concreteType: "DelightsAnimation",
                                            kind: "LinkedField",
                                            name: "delight_asset",
                                            plural: !1,
                                            selections: [c, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "animation_uri",
                                                storageKey: null
                                            }],
                                            storageKey: 'delight_asset(delight_surface:"COMMENT")'
                                        }, c],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "ImageAtRange",
                                    kind: "LinkedField",
                                    name: "image_ranges",
                                    plural: !0,
                                    selections: [d, e, {
                                        alias: null,
                                        args: null,
                                        concreteType: null,
                                        kind: "LinkedField",
                                        name: "entity_with_image",
                                        plural: !1,
                                        selections: [b, {
                                            alias: null,
                                            args: [g],
                                            concreteType: "Image",
                                            kind: "LinkedField",
                                            name: "image",
                                            plural: !1,
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "height",
                                                storageKey: null
                                            }, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "scale",
                                                storageKey: null
                                            }, h, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "width",
                                                storageKey: null
                                            }],
                                            storageKey: null
                                        }, i],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "InlineStyleAtRange",
                                    kind: "LinkedField",
                                    name: "inline_style_ranges",
                                    plural: !0,
                                    selections: [d, e, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "inline_style",
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "AggregatedEntitiesAtRange",
                                    kind: "LinkedField",
                                    name: "aggregated_ranges",
                                    plural: !0,
                                    selections: [d, e, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "count",
                                        storageKey: null
                                    }, {
                                        alias: null,
                                        args: null,
                                        concreteType: null,
                                        kind: "LinkedField",
                                        name: "sample_entities",
                                        plural: !0,
                                        selections: [b, {
                                            kind: "InlineFragment",
                                            selections: j,
                                            type: "User",
                                            abstractKey: null
                                        }, i],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "EntityAtRange",
                                    kind: "LinkedField",
                                    name: "ranges",
                                    plural: !0,
                                    selections: [{
                                        alias: null,
                                        args: null,
                                        concreteType: null,
                                        kind: "LinkedField",
                                        name: "entity",
                                        plural: !1,
                                        selections: [b, {
                                            kind: "TypeDiscriminator",
                                            abstractKey: "__isEntity"
                                        }, k, {
                                            alias: "mobileUrl",
                                            args: [{kind: "Literal", name: "site", value: "mobile"}],
                                            kind: "ScalarField",
                                            name: "url",
                                            storageKey: 'url(site:"mobile")'
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [c, {
                                                kind: "InlineFragment",
                                                selections: [{
                                                    alias: "profile_url",
                                                    args: null,
                                                    kind: "ScalarField",
                                                    name: "url",
                                                    storageKey: null
                                                }],
                                                type: "Entity",
                                                abstractKey: "__isEntity"
                                            }],
                                            type: "Actor",
                                            abstractKey: "__isActor"
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                documentName: "CometTextWithEntitiesRelay_textWithEntities",
                                                fragmentName: "GroupsCometHashtagsStoryMessageHashtagLink_hashtag",
                                                fragmentPropName: "hashtag",
                                                kind: "ModuleImport"
                                            }],
                                            type: "GroupHashtag",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "category_type",
                                                storageKey: null
                                            }, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "verification_status",
                                                storageKey: null
                                            }, c, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "is_verified",
                                                storageKey: null
                                            }, {
                                                documentName: "CometTextWithEntitiesRelay_textWithEntities",
                                                fragmentName: "PagesCometPageLink_page",
                                                fragmentPropName: "page",
                                                kind: "ModuleImport"
                                            }],
                                            type: "Page",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "external_url",
                                                storageKey: null
                                            }],
                                            type: "ExternalUrl",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "time_index",
                                                storageKey: null
                                            }],
                                            type: "VideoTimeIndex",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                concreteType: null,
                                                kind: "LinkedField",
                                                name: "web_link",
                                                plural: !1,
                                                selections: [b, {
                                                    alias: null,
                                                    args: null,
                                                    kind: "ScalarField",
                                                    name: "url",
                                                    storageKey: null
                                                }, {
                                                    kind: "InlineFragment",
                                                    selections: [{
                                                        alias: null,
                                                        args: null,
                                                        kind: "ScalarField",
                                                        name: "fbclid",
                                                        storageKey: null
                                                    }, {
                                                        alias: null,
                                                        args: null,
                                                        kind: "ScalarField",
                                                        name: "lynx_mode",
                                                        storageKey: null
                                                    }],
                                                    type: "ExternalWebLink",
                                                    abstractKey: null
                                                }],
                                                storageKey: null
                                            }],
                                            type: "WebLinkable",
                                            abstractKey: "__isWebLinkable"
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [l, {
                                                alias: null,
                                                args: null,
                                                concreteType: "WorkUserInfo",
                                                kind: "LinkedField",
                                                name: "work_info",
                                                plural: !1,
                                                selections: [{
                                                    alias: null,
                                                    args: null,
                                                    kind: "ScalarField",
                                                    name: "is_active_account",
                                                    storageKey: null
                                                }],
                                                storageKey: null
                                            }],
                                            type: "User",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [l, {
                                                alias: null,
                                                args: null,
                                                kind: "ScalarField",
                                                name: "work_official_status",
                                                storageKey: null
                                            }],
                                            type: "Group",
                                            abstractKey: null
                                        }, i],
                                        storageKey: null
                                    }, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "entity_is_weak_reference",
                                        storageKey: null
                                    }, d, e],
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    concreteType: "ColorAtRange",
                                    kind: "LinkedField",
                                    name: "color_ranges",
                                    plural: !0,
                                    selections: [d, e, {
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "hex_rgb_color_with_pound_key",
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }],
                                storageKey: null
                            }, {
                                alias: null,
                                args: [{kind: "Literal", name: "height", value: 56}, g, {
                                    kind: "Literal",
                                    name: "width",
                                    value: 56
                                }],
                                concreteType: "Image",
                                kind: "LinkedField",
                                name: "notif_image",
                                plural: !1,
                                selections: [h],
                                storageKey: null
                            }, k, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "www_url_should_open_in_blank_target",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "is_hidden",
                                storageKey: null
                            }, {
                                alias: "creation_time",
                                args: null,
                                concreteType: "CreationTimeWithRelativeText",
                                kind: "LinkedField",
                                name: "creation_time_with_relative_text",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "timestamp",
                                    storageKey: null
                                }],
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                concreteType: "GlyphIconData",
                                kind: "LinkedField",
                                name: "icon_data",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "reaction_type",
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "glyph_name",
                                    storageKey: null
                                }],
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "tracking",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                concreteType: "NotifNavigationEndpoint",
                                kind: "LinkedField",
                                name: "navigation_endpoint",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "User",
                                    kind: "LinkedField",
                                    name: "target_viewer",
                                    plural: !1,
                                    selections: j,
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "target_viewer_type",
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }]
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "3536932203062602",
                metadata: {},
                name: "CometSetupNotificationStoreSubscriptionNewNotificationQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CometSetupNotificationStoreSubscriptionNewNotification_data.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometSetupNotificationStoreSubscriptionNewNotification_data",
        selections: [{
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "actor",
            plural: !1,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}, {
                args: null,
                kind: "FragmentSpread",
                name: "CometToastNotification_actor"
            }],
            storageKey: null
        }, {
            kind: "ClientExtension",
            selections: [{
                alias: null,
                args: null,
                concreteType: "Notification",
                kind: "LinkedField",
                name: "new_notification",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "notif_id",
                    storageKey: null
                }, {alias: null, args: null, kind: "ScalarField", name: "notif_type", storageKey: null}, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "seen_state",
                    storageKey: null
                }, {args: null, kind: "FragmentSpread", name: "CometToastNotification_notification"}],
                storageKey: null
            }]
        }],
        type: "Viewer",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometProfilePlusExpressOnboardingDialogQuery$Parameters", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        kind: "PreloadableConcreteRequest",
        params: {
            id: "3016398475095537",
            metadata: {},
            name: "CometProfilePlusExpressOnboardingDialogQuery",
            operationKind: "query",
            text: null
        }
    };
    e.exports = a
}), null);
__d("MWChatUpdateMuteSettingMutation.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{defaultValue: null, kind: "LocalArgument", name: "input"}], b = [{
            alias: null,
            args: [{kind: "Variable", name: "data", variableName: "input"}],
            concreteType: "MessengerUpdateMuteSettingResponsePayload",
            kind: "LinkedField",
            name: "messenger_update_mute_setting",
            plural: !1,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "muted_until", storageKey: null}],
            storageKey: null
        }];
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "MWChatUpdateMuteSettingMutation",
                selections: b,
                type: "Mutation",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "MWChatUpdateMuteSettingMutation",
                selections: b
            },
            params: {
                id: "2376670165755701",
                metadata: {},
                name: "MWChatUpdateMuteSettingMutation",
                operationKind: "mutation",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("PresenceStatusProviderSubscriptionComponentQuery.graphql", ["relay-runtime"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{defaultValue: null, kind: "LocalArgument", name: "scale"}],
            b = {alias: null, args: null, kind: "ScalarField", name: "status", storageKey: null},
            c = {alias: null, args: null, kind: "ScalarField", name: "buddy_id", storageKey: null},
            d = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null};
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "PresenceStatusProviderSubscriptionComponentQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "ChatSidebarRankedContact",
                        kind: "LinkedField",
                        name: "chat_sidebar_contact_rankings",
                        plural: !0,
                        selections: [{
                            kind: "InlineDataFragmentSpread",
                            name: "PresenceStatusProviderSubscription_rankings",
                            selections: [b, c, {
                                alias: null,
                                args: null,
                                concreteType: "User",
                                kind: "LinkedField",
                                name: "user",
                                plural: !1,
                                selections: [d, {args: null, kind: "FragmentSpread", name: "MWChatContact_profile"}],
                                storageKey: null
                            }]
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "PresenceStatusProviderSubscriptionComponentQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "ChatSidebarRankedContact",
                        kind: "LinkedField",
                        name: "chat_sidebar_contact_rankings",
                        plural: !0,
                        selections: [b, c, {
                            alias: null,
                            args: null,
                            concreteType: "User",
                            kind: "LinkedField",
                            name: "user",
                            plural: !1,
                            selections: [d, {
                                kind: "InlineFragment",
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "name",
                                    storageKey: null
                                }, {
                                    alias: null,
                                    args: [{kind: "Literal", name: "height", value: 36}, {
                                        kind: "Variable",
                                        name: "scale",
                                        variableName: "scale"
                                    }, {kind: "Literal", name: "width", value: 36}],
                                    concreteType: "Image",
                                    kind: "LinkedField",
                                    name: "profile_picture",
                                    plural: !1,
                                    selections: [{
                                        alias: null,
                                        args: null,
                                        kind: "ScalarField",
                                        name: "uri",
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }, {
                                    kind: "InlineFragment",
                                    selections: [{
                                        kind: "ClientExtension",
                                        selections: [{
                                            alias: null,
                                            args: null,
                                            kind: "ScalarField",
                                            name: "availability",
                                            storageKey: null
                                        }, {
                                            alias: null,
                                            args: null,
                                            kind: "ScalarField",
                                            name: "last_active_time",
                                            storageKey: null
                                        }]
                                    }],
                                    type: "User",
                                    abstractKey: null
                                }],
                                type: "Profile",
                                abstractKey: "__isProfile"
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "3061548450534867",
                metadata: {},
                name: "PresenceStatusProviderSubscriptionComponentQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    a.params.id != null && b("relay-runtime").PreloadableQueryRegistry.set(a.params.id, a);
    e.exports = a
}), null);
__d("PresenceStatusProviderSubscription_ContactProfilesQuery.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{defaultValue: null, kind: "LocalArgument", name: "ids"}, {
                defaultValue: null,
                kind: "LocalArgument",
                name: "scale"
            }], b = [{kind: "Variable", name: "ids", variableName: "ids"}],
            c = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null},
            d = {alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null}, e = {
                alias: null,
                args: [{kind: "Literal", name: "height", value: 36}, {
                    kind: "Variable",
                    name: "scale",
                    variableName: "scale"
                }, {kind: "Literal", name: "width", value: 36}],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}],
                storageKey: null
            };
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "PresenceStatusProviderSubscription_ContactProfilesQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: b,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "chat_sidebar_contact_nodes",
                        plural: !0,
                        selections: [c, d, e],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "PresenceStatusProviderSubscription_ContactProfilesQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: b,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "chat_sidebar_contact_nodes",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "__typename",
                            storageKey: null
                        }, c, {kind: "TypeDiscriminator", abstractKey: "__isProfile"}, d, e],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "4537685766302958",
                metadata: {},
                name: "PresenceStatusProviderSubscription_ContactProfilesQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("PresenceStatusProviderSubscription_PresenceStatusChatVisibilityQuery.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {alias: null, args: null, kind: "ScalarField", name: "chat_visibility", storageKey: null}, b = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "has_converted_to_view_side_settings",
            storageKey: null
        };
        return {
            fragment: {
                argumentDefinitions: [],
                kind: "Fragment",
                metadata: null,
                name: "PresenceStatusProviderSubscription_PresenceStatusChatVisibilityQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [a, {
                        alias: null,
                        args: null,
                        concreteType: "PresenceViewerBasedSettings",
                        kind: "LinkedField",
                        name: "presence_view_side_settings",
                        plural: !1,
                        selections: [b],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [],
                kind: "Operation",
                name: "PresenceStatusProviderSubscription_PresenceStatusChatVisibilityQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [a, {
                        alias: null,
                        args: null,
                        concreteType: "PresenceViewerBasedSettings",
                        kind: "LinkedField",
                        name: "presence_view_side_settings",
                        plural: !1,
                        selections: [b, {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "2607318959337318",
                metadata: {},
                name: "PresenceStatusProviderSubscription_PresenceStatusChatVisibilityQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("PresenceStatusProviderSubscription_rankings.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {kind: "InlineDataFragment", name: "PresenceStatusProviderSubscription_rankings"};
    e.exports = a
}), null);
__d("MWChatFriendsDataSourceQuery.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {defaultValue: null, kind: "LocalArgument", name: "limit"},
            b = {defaultValue: null, kind: "LocalArgument", name: "order_by"},
            c = {defaultValue: null, kind: "LocalArgument", name: "scale"},
            d = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null}, e = [d],
            f = [{kind: "Variable", name: "first", variableName: "limit"}, {
                kind: "Variable",
                name: "orderby",
                variableName: "order_by"
            }, {kind: "Literal", name: "without_memorialized", value: !0}],
            g = {alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null}, h = {
                alias: null,
                args: [{kind: "Literal", name: "height", value: 36}, {
                    kind: "Variable",
                    name: "scale",
                    variableName: "scale"
                }, {kind: "Literal", name: "width", value: 36}],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}],
                storageKey: null
            }, i = [{alias: null, args: null, kind: "ScalarField", name: "__typename", storageKey: null}, d];
        return {
            fragment: {
                argumentDefinitions: [a, b, c],
                kind: "Fragment",
                metadata: null,
                name: "MWChatFriendsDataSourceQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "actor",
                        plural: !1,
                        selections: e,
                        storageKey: null
                    }, {
                        alias: null,
                        args: f,
                        concreteType: "MessengerContactsConnection",
                        kind: "LinkedField",
                        name: "messenger_contacts",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Contact",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "messaging_profile",
                                plural: !1,
                                selections: e,
                                storageKey: null
                            }, g, h],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [a, c, b],
                kind: "Operation",
                name: "MWChatFriendsDataSourceQuery",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "Viewer",
                    kind: "LinkedField",
                    name: "viewer",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "actor",
                        plural: !1,
                        selections: i,
                        storageKey: null
                    }, {
                        alias: null,
                        args: f,
                        concreteType: "MessengerContactsConnection",
                        kind: "LinkedField",
                        name: "messenger_contacts",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Contact",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "messaging_profile",
                                plural: !1,
                                selections: i,
                                storageKey: null
                            }, g, h, d],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "2893423234087979",
                metadata: {},
                name: "MWChatFriendsDataSourceQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("MWChatKeywordDataSourceQuery.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {defaultValue: null, kind: "LocalArgument", name: "query"},
            b = {defaultValue: null, kind: "LocalArgument", name: "scale"},
            c = {defaultValue: null, kind: "LocalArgument", name: "supportedTypes"},
            d = [{kind: "Variable", name: "query", variableName: "query"}],
            e = [{kind: "Variable", name: "supported_types", variableName: "supportedTypes"}],
            f = {alias: null, args: null, kind: "ScalarField", name: "display_name", storageKey: null},
            g = {alias: null, args: null, kind: "ScalarField", name: "subtext", storageKey: null},
            h = {alias: null, args: null, kind: "ScalarField", name: "__typename", storageKey: null},
            i = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null},
            j = {kind: "Literal", name: "height", value: 36}, k = {kind: "Literal", name: "width", value: 36},
            l = [j, {kind: "Variable", name: "scale", variableName: "scale"}, k],
            m = [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}], n = {
                alias: null,
                args: l,
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: m,
                storageKey: null
            }, o = {alias: null, args: null, kind: "ScalarField", name: "is_on_viewer_contact_list", storageKey: null},
            p = [i, n, {
                alias: null,
                args: null,
                concreteType: "Contact",
                kind: "LinkedField",
                name: "messenger_contact",
                plural: !1,
                selections: [o],
                storageKey: null
            }], q = {
                alias: null,
                args: null,
                concreteType: "MessageThreadKey",
                kind: "LinkedField",
                name: "thread_key",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "thread_fbid", storageKey: null}],
                storageKey: null
            }, r = {alias: null, args: null, kind: "ScalarField", name: "thread_name", storageKey: null};
        j = {
            alias: null,
            args: [j, k],
            concreteType: "Image",
            kind: "LinkedField",
            name: "image",
            plural: !1,
            selections: m,
            storageKey: "image(height:36,width:36)"
        };
        k = [{kind: "Literal", name: "first", value: 10}];
        var s = {alias: null, args: null, kind: "ScalarField", name: "count", storageKey: null}, t = {
            kind: "InlineFragment",
            selections: [{alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null}],
            type: "User",
            abstractKey: null
        };
        l = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "verification_status",
                storageKey: null
            }, {
                alias: "page_id",
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
            }, {
                alias: "page_profile_picture",
                args: l,
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: m,
                storageKey: null
            }],
            type: "Page",
            abstractKey: null
        };
        m = [n, {
            alias: null,
            args: null,
            concreteType: "Contact",
            kind: "LinkedField",
            name: "messenger_contact",
            plural: !1,
            selections: [o, i],
            storageKey: null
        }];
        return {
            fragment: {
                argumentDefinitions: [a, b, c],
                kind: "Fragment",
                metadata: null,
                name: "MWChatKeywordDataSourceQuery",
                selections: [{
                    alias: null,
                    args: d,
                    concreteType: "MessengerSearchRootQuery",
                    kind: "LinkedField",
                    name: "messenger_search",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "MessengerSearchRootQueryResultModulesConnection",
                        kind: "LinkedField",
                        name: "result_modules",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [{
                                alias: null,
                                args: e,
                                concreteType: "MessengerSearchResultsConnection",
                                kind: "LinkedField",
                                name: "search_results",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "MessengerSearchResultsEdge",
                                    kind: "LinkedField",
                                    name: "edges",
                                    plural: !0,
                                    selections: [f, g, {
                                        alias: null,
                                        args: null,
                                        concreteType: null,
                                        kind: "LinkedField",
                                        name: "node",
                                        plural: !1,
                                        selections: [h, {
                                            kind: "InlineFragment",
                                            selections: p,
                                            type: "User",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [q, r, j, {
                                                alias: null,
                                                args: k,
                                                concreteType: "MessagingParticipantsOfThreadConnection",
                                                kind: "LinkedField",
                                                name: "other_participants",
                                                plural: !1,
                                                selections: [s, {
                                                    alias: null,
                                                    args: null,
                                                    concreteType: "MessagingParticipant",
                                                    kind: "LinkedField",
                                                    name: "nodes",
                                                    plural: !0,
                                                    selections: [{
                                                        alias: null,
                                                        args: null,
                                                        concreteType: null,
                                                        kind: "LinkedField",
                                                        name: "messaging_actor",
                                                        plural: !1,
                                                        selections: [i, n, t],
                                                        storageKey: null
                                                    }],
                                                    storageKey: null
                                                }],
                                                storageKey: "other_participants(first:10)"
                                            }],
                                            type: "MessengerViewerGroupThread",
                                            abstractKey: null
                                        }, l, {
                                            kind: "InlineFragment",
                                            selections: p,
                                            type: "InstagramMessagingUser",
                                            abstractKey: null
                                        }],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [a, c, b], kind: "Operation", name: "MWChatKeywordDataSourceQuery", selections: [{
                    alias: null,
                    args: d,
                    concreteType: "MessengerSearchRootQuery",
                    kind: "LinkedField",
                    name: "messenger_search",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "MessengerSearchRootQueryResultModulesConnection",
                        kind: "LinkedField",
                        name: "result_modules",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [h, {
                                alias: null,
                                args: e,
                                concreteType: "MessengerSearchResultsConnection",
                                kind: "LinkedField",
                                name: "search_results",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "MessengerSearchResultsEdge",
                                    kind: "LinkedField",
                                    name: "edges",
                                    plural: !0,
                                    selections: [f, g, {
                                        alias: null,
                                        args: null,
                                        concreteType: null,
                                        kind: "LinkedField",
                                        name: "node",
                                        plural: !1,
                                        selections: [h, i, {
                                            kind: "InlineFragment",
                                            selections: m,
                                            type: "User",
                                            abstractKey: null
                                        }, {
                                            kind: "InlineFragment",
                                            selections: [q, r, j, {
                                                alias: null,
                                                args: k,
                                                concreteType: "MessagingParticipantsOfThreadConnection",
                                                kind: "LinkedField",
                                                name: "other_participants",
                                                plural: !1,
                                                selections: [s, {
                                                    alias: null,
                                                    args: null,
                                                    concreteType: "MessagingParticipant",
                                                    kind: "LinkedField",
                                                    name: "nodes",
                                                    plural: !0,
                                                    selections: [{
                                                        alias: null,
                                                        args: null,
                                                        concreteType: null,
                                                        kind: "LinkedField",
                                                        name: "messaging_actor",
                                                        plural: !1,
                                                        selections: [h, i, n, t],
                                                        storageKey: null
                                                    }, i],
                                                    storageKey: null
                                                }],
                                                storageKey: "other_participants(first:10)"
                                            }],
                                            type: "MessengerViewerGroupThread",
                                            abstractKey: null
                                        }, l, {
                                            kind: "InlineFragment",
                                            selections: m,
                                            type: "InstagramMessagingUser",
                                            abstractKey: null
                                        }],
                                        storageKey: null
                                    }],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "2659472977484986",
                metadata: {},
                name: "MWChatKeywordDataSourceQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("MWChatKeywordDataSourceQuery_thread.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {kind: "Literal", name: "height", value: 36}, b = {kind: "Literal", name: "width", value: 36},
            c = [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}];
        return {
            argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
            kind: "Fragment",
            metadata: null,
            name: "MWChatKeywordDataSourceQuery_thread",
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessageThreadKey",
                kind: "LinkedField",
                name: "thread_key",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "thread_fbid", storageKey: null}],
                storageKey: null
            }, {alias: null, args: null, kind: "ScalarField", name: "thread_name", storageKey: null}, {
                alias: null,
                args: [a, b],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: c,
                storageKey: "image(height:36,width:36)"
            }, {
                alias: null,
                args: [{kind: "Literal", name: "first", value: 10}],
                concreteType: "MessagingParticipantsOfThreadConnection",
                kind: "LinkedField",
                name: "other_participants",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "count",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "MessagingParticipant",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "messaging_actor",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "id",
                            storageKey: null
                        }, {
                            alias: null,
                            args: [a, {kind: "Variable", name: "scale", variableName: "scale"}, b],
                            concreteType: "Image",
                            kind: "LinkedField",
                            name: "profile_picture",
                            plural: !1,
                            selections: c,
                            storageKey: null
                        }, {
                            kind: "InlineFragment",
                            selections: [{
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "name",
                                storageKey: null
                            }],
                            type: "User",
                            abstractKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: "other_participants(first:10)"
            }],
            type: "MessengerViewerGroupThread",
            abstractKey: null
        }
    }();
    e.exports = a
}), null);
__d("RTWebCallBlockSettingHooksQuery.graphql", ["relay-runtime"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{
            alias: null,
            args: null,
            concreteType: "Viewer",
            kind: "LinkedField",
            name: "viewer",
            plural: !1,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "call_blocked_until", storageKey: null}],
            storageKey: null
        }];
        return {
            fragment: {
                argumentDefinitions: [],
                kind: "Fragment",
                metadata: null,
                name: "RTWebCallBlockSettingHooksQuery",
                selections: a,
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [],
                kind: "Operation",
                name: "RTWebCallBlockSettingHooksQuery",
                selections: a
            },
            params: {
                id: "2591667614255718",
                metadata: {},
                name: "RTWebCallBlockSettingHooksQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    a.params.id != null && b("relay-runtime").PreloadableQueryRegistry.set(a.params.id, a);
    e.exports = a
}), null);
__d("RTWebCometRoomIncomingCallDialog_DisclaimerQuery$Parameters", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        kind: "PreloadableConcreteRequest",
        params: {
            id: "3161478997284719",
            metadata: {},
            name: "RTWebCometRoomIncomingCallDialog_DisclaimerQuery",
            operationKind: "query",
            text: null
        }
    };
    e.exports = a
}), null);
__d("RTWebCallBlockedSettingSubscription_CallBlockSettingSubscription.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{defaultValue: null, kind: "LocalArgument", name: "input"}], b = [{
            alias: null,
            args: [{kind: "Variable", name: "data", variableName: "input"}],
            concreteType: "RtwebCallBlockedSettingSubscribeResponsePayload",
            kind: "LinkedField",
            name: "rtweb_call_blocked_setting_subscribe",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "call_blocked_until",
                storageKey: null
            }, {alias: null, args: null, kind: "ScalarField", name: "client_subscription_id", storageKey: null}],
            storageKey: null
        }];
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "RTWebCallBlockedSettingSubscription_CallBlockSettingSubscription",
                selections: b,
                type: "Subscription",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "RTWebCallBlockedSettingSubscription_CallBlockSettingSubscription",
                selections: b
            },
            params: {
                id: "2773853799337749",
                metadata: {subscriptionName: "rtweb_call_blocked_setting_subscribe"},
                name: "RTWebCallBlockedSettingSubscription_CallBlockSettingSubscription",
                operationKind: "subscription",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CometJSSemPixelsContainerQuery.graphql", ["relay-runtime"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{
            alias: null,
            args: null,
            concreteType: "SEMUniversalPixel",
            kind: "LinkedField",
            name: "sem_universal_pixels",
            plural: !0,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "url", storageKey: null}, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "name",
                storageKey: null
            }],
            storageKey: null
        }];
        return {
            fragment: {
                argumentDefinitions: [],
                kind: "Fragment",
                metadata: null,
                name: "CometJSSemPixelsContainerQuery",
                selections: a,
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [],
                kind: "Operation",
                name: "CometJSSemPixelsContainerQuery",
                selections: a
            },
            params: {
                id: "2199948706781337",
                metadata: {},
                name: "CometJSSemPixelsContainerQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    a.params.id != null && b("relay-runtime").PreloadableQueryRegistry.set(a.params.id, a);
    e.exports = a
}), null);
__d("CometWatchAndScrollChainingQuery.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = [{defaultValue: null, kind: "LocalArgument", name: "caller"}, {
                defaultValue: null,
                kind: "LocalArgument",
                name: "chainingCursor"
            }, {defaultValue: null, kind: "LocalArgument", name: "channelEntryPoint"}, {
                defaultValue: null,
                kind: "LocalArgument",
                name: "count"
            }, {defaultValue: null, kind: "LocalArgument", name: "scale"}, {
                defaultValue: null,
                kind: "LocalArgument",
                name: "seedVideoID"
            }], b = [{kind: "Variable", name: "id", variableName: "seedVideoID"}],
            c = [{kind: "Variable", name: "entry_point", variableName: "channelEntryPoint"}],
            d = [{kind: "Variable", name: "after", variableName: "chainingCursor"}, {
                kind: "Variable",
                name: "caller",
                variableName: "caller"
            }, {kind: "Variable", name: "exclude_video", variableName: "seedVideoID"}, {
                kind: "Variable",
                name: "first",
                variableName: "count"
            }], e = {alias: null, args: null, kind: "ScalarField", name: "cursor", storageKey: null},
            f = {alias: null, args: null, kind: "ScalarField", name: "__typename", storageKey: null},
            g = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null},
            h = [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}], i = {
                alias: null,
                args: [{kind: "Literal", name: "height", value: 202}, {
                    kind: "Literal",
                    name: "sizing",
                    value: "cover-fill-cropped"
                }, {kind: "Literal", name: "width", value: 360}],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: h,
                storageKey: 'image(height:202,sizing:"cover-fill-cropped",width:360)'
            }, j = {alias: null, args: null, kind: "ScalarField", name: "click_tracking_linkshim_cb", storageKey: null},
            k = {alias: null, args: null, kind: "ScalarField", name: "encrypted_click_tracking", storageKey: null},
            l = {alias: null, args: null, kind: "ScalarField", name: "encrypted_tracking", storageKey: null},
            m = {alias: null, args: null, kind: "ScalarField", name: "viewability_config", storageKey: null}, n = {
                alias: null,
                args: null,
                concreteType: "CometClientViewConfig",
                kind: "LinkedField",
                name: "client_view_config",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "can_delay_log_impression",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "use_banzai_signal_imp",
                    storageKey: null
                }, {alias: null, args: null, kind: "ScalarField", name: "use_banzai_vital_imp", storageKey: null}],
                storageKey: null
            }, o = [{kind: "Literal", name: "site", value: "www"}], p = [g],
            q = {kind: "InlineFragment", selections: p, type: "Node", abstractKey: "__isNode"};
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "CometWatchAndScrollChainingQuery",
                selections: [{
                    alias: null,
                    args: b,
                    concreteType: "Video",
                    kind: "LinkedField",
                    name: "video",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: c,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "video_channel",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: d,
                            concreteType: "VideoChannelFeedConnection",
                            kind: "LinkedField",
                            name: "video_channel_feed",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "VideoChannelFeedEdge",
                                kind: "LinkedField",
                                name: "edges",
                                plural: !0,
                                selections: [e, {
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "node",
                                    plural: !1,
                                    selections: [{
                                        kind: "InlineFragment",
                                        selections: [{
                                            alias: null,
                                            args: null,
                                            concreteType: "StoryAttachment",
                                            kind: "LinkedField",
                                            name: "attachments",
                                            plural: !0,
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                concreteType: null,
                                                kind: "LinkedField",
                                                name: "media",
                                                plural: !1,
                                                selections: [f, {
                                                    kind: "InlineFragment",
                                                    selections: [g, i, {
                                                        args: null,
                                                        kind: "FragmentSpread",
                                                        name: "CometWatchAndScrollContextSection_video"
                                                    }],
                                                    type: "Video",
                                                    abstractKey: null
                                                }],
                                                storageKey: null
                                            }],
                                            storageKey: null
                                        }, j, k, l, m, n],
                                        type: "Story",
                                        abstractKey: null
                                    }],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }, {args: null, kind: "FragmentSpread", name: "CometWatchAndScrollFallbackCTAScreen_video"}],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a, kind: "Operation", name: "CometWatchAndScrollChainingQuery", selections: [{
                    alias: null,
                    args: b,
                    concreteType: "Video",
                    kind: "LinkedField",
                    name: "video",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: c,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "video_channel",
                        plural: !1,
                        selections: [f, {
                            alias: null,
                            args: d,
                            concreteType: "VideoChannelFeedConnection",
                            kind: "LinkedField",
                            name: "video_channel_feed",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "VideoChannelFeedEdge",
                                kind: "LinkedField",
                                name: "edges",
                                plural: !0,
                                selections: [e, {
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "node",
                                    plural: !1,
                                    selections: [f, {
                                        kind: "InlineFragment", selections: [{
                                            alias: null,
                                            args: null,
                                            concreteType: "StoryAttachment",
                                            kind: "LinkedField",
                                            name: "attachments",
                                            plural: !0,
                                            selections: [{
                                                alias: null,
                                                args: null,
                                                concreteType: null,
                                                kind: "LinkedField",
                                                name: "media",
                                                plural: !1,
                                                selections: [f, {
                                                    kind: "InlineFragment",
                                                    selections: [{
                                                        alias: null,
                                                        args: null,
                                                        kind: "ScalarField",
                                                        name: "title_with_fallback",
                                                        storageKey: null
                                                    }, {
                                                        alias: null,
                                                        args: null,
                                                        concreteType: null,
                                                        kind: "LinkedField",
                                                        name: "owner",
                                                        plural: !1,
                                                        selections: [f, {
                                                            kind: "TypeDiscriminator",
                                                            abstractKey: "__isActor"
                                                        }, {
                                                            alias: null,
                                                            args: null,
                                                            kind: "ScalarField",
                                                            name: "name",
                                                            storageKey: null
                                                        }, g, {
                                                            alias: null,
                                                            args: [{
                                                                kind: "Literal",
                                                                name: "height",
                                                                value: 32
                                                            }, {
                                                                kind: "Variable",
                                                                name: "scale",
                                                                variableName: "scale"
                                                            }, {kind: "Literal", name: "width", value: 32}],
                                                            concreteType: "Image",
                                                            kind: "LinkedField",
                                                            name: "profile_picture",
                                                            plural: !1,
                                                            selections: h,
                                                            storageKey: null
                                                        }, {
                                                            kind: "InlineFragment",
                                                            selections: [{
                                                                alias: null,
                                                                args: null,
                                                                kind: "ScalarField",
                                                                name: "has_professional_features_for_watch",
                                                                storageKey: null
                                                            }],
                                                            type: "VideoOwner",
                                                            abstractKey: "__isVideoOwner"
                                                        }, {
                                                            kind: "InlineFragment",
                                                            selections: [{
                                                                alias: null,
                                                                args: o,
                                                                kind: "ScalarField",
                                                                name: "url",
                                                                storageKey: 'url(site:"www")'
                                                            }],
                                                            type: "User",
                                                            abstractKey: null
                                                        }],
                                                        storageKey: null
                                                    }, g, i],
                                                    type: "Video",
                                                    abstractKey: null
                                                }, q, {
                                                    kind: "InlineFragment",
                                                    selections: p,
                                                    type: "ComposerMediaTemplatePreview",
                                                    abstractKey: null
                                                }, {
                                                    kind: "InlineFragment",
                                                    selections: p,
                                                    type: "GenericAttachmentMedia",
                                                    abstractKey: null
                                                }, {
                                                    kind: "InlineFragment",
                                                    selections: p,
                                                    type: "MontageImage",
                                                    abstractKey: null
                                                }, {
                                                    kind: "InlineFragment",
                                                    selections: p,
                                                    type: "MontageVideo",
                                                    abstractKey: null
                                                }],
                                                storageKey: null
                                            }],
                                            storageKey: null
                                        }, j, k, l, m, n], type: "Story", abstractKey: null
                                    }, q, {
                                        kind: "InlineFragment",
                                        selections: p,
                                        type: "CommunityChatFeedObject",
                                        abstractKey: null
                                    }, {
                                        kind: "InlineFragment",
                                        selections: p,
                                        type: "CommunityTabTrendingPOGFeedUnit",
                                        abstractKey: null
                                    }],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }, g],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "can_viewer_share",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "Story",
                        kind: "LinkedField",
                        name: "creation_story",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "shareable",
                            plural: !1,
                            selections: [f, {
                                alias: "wwwUrl",
                                args: o,
                                kind: "ScalarField",
                                name: "url",
                                storageKey: 'url(site:"www")'
                            }, q],
                            storageKey: null
                        }, g],
                        storageKey: null
                    }, g],
                    storageKey: null
                }]
            },
            params: {
                id: "3416534148453806",
                metadata: {},
                name: "CometWatchAndScrollChainingQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CometWatchAndScrollCloseButton_video.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometWatchAndScrollCloseButton_video",
        selections: [{
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "owner",
            plural: !1,
            selections: [{
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "has_professional_features_for_watch",
                    storageKey: null
                }],
                type: "VideoOwner",
                abstractKey: "__isVideoOwner"
            }],
            storageKey: null
        }],
        type: "Video",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometWatchAndScrollContainer_video.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometWatchAndScrollContainer_video",
        selections: [{args: null, kind: "FragmentSpread", name: "useVideoOriginalDimensionsRelay_video"}],
        type: "Video",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometWatchAndScrollContextSection_video.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [{kind: "RootArgument", name: "scale"}],
        kind: "Fragment",
        metadata: null,
        name: "CometWatchAndScrollContextSection_video",
        selections: [{
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "title_with_fallback",
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "owner",
            plural: !1,
            selections: [{alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null}, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
            }, {
                alias: null,
                args: [{kind: "Literal", name: "height", value: 32}, {
                    kind: "Variable",
                    name: "scale",
                    variableName: "scale"
                }, {kind: "Literal", name: "width", value: 32}],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}],
                storageKey: null
            }, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "has_professional_features_for_watch",
                    storageKey: null
                }],
                type: "VideoOwner",
                abstractKey: "__isVideoOwner"
            }, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: [{kind: "Literal", name: "site", value: "www"}],
                    kind: "ScalarField",
                    name: "url",
                    storageKey: 'url(site:"www")'
                }],
                type: "User",
                abstractKey: null
            }],
            storageKey: null
        }],
        type: "Video",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometWatchAndScrollFallbackCTAScreen_video.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        argumentDefinitions: [],
        kind: "Fragment",
        metadata: null,
        name: "CometWatchAndScrollFallbackCTAScreen_video",
        selections: [{args: null, kind: "FragmentSpread", name: "VideoPlayerReshareButton_video"}],
        type: "Video",
        abstractKey: null
    };
    e.exports = a
}), null);
__d("CometWatchAndScrollVideoQuery.graphql", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = {defaultValue: null, kind: "LocalArgument", name: "scale"},
            b = {defaultValue: null, kind: "LocalArgument", name: "videoID"},
            c = [{kind: "Variable", name: "id", variableName: "videoID"}],
            d = {alias: null, args: null, kind: "ScalarField", name: "url", storageKey: null}, e = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_professional_features_for_watch",
                storageKey: null
            }, f = {alias: null, args: null, kind: "ScalarField", name: "__typename", storageKey: null},
            g = {alias: null, args: null, kind: "ScalarField", name: "id", storageKey: null},
            h = {alias: null, args: null, kind: "ScalarField", name: "name", storageKey: null},
            i = [{alias: null, args: null, kind: "ScalarField", name: "uri", storageKey: null}],
            j = [d, {alias: null, args: null, kind: "ScalarField", name: "start", storageKey: null}, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "end",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "representation_id",
                storageKey: null
            }, {alias: null, args: null, kind: "ScalarField", name: "mime_codec", storageKey: null}, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "segment_type",
                storageKey: null
            }], k = [g];
        return {
            fragment: {
                argumentDefinitions: [a, b],
                kind: "Fragment",
                metadata: null,
                name: "CometWatchAndScrollVideoQuery",
                selections: [{
                    alias: null,
                    args: c,
                    concreteType: "Video",
                    kind: "LinkedField",
                    name: "video",
                    plural: !1,
                    selections: [d, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "owner",
                        plural: !1,
                        selections: [{
                            kind: "InlineFragment",
                            selections: [e],
                            type: "VideoOwner",
                            abstractKey: "__isVideoOwner"
                        }],
                        storageKey: null
                    }, {args: null, kind: "FragmentSpread", name: "CometWatchAndScrollContainer_video"}, {
                        args: null,
                        kind: "FragmentSpread",
                        name: "VideoPlayerRelay_video"
                    }, {
                        args: null,
                        kind: "FragmentSpread",
                        name: "VideoPlayerWithLiveVideoIndicator_video"
                    }, {args: null, kind: "FragmentSpread", name: "CometWatchAndScrollTopBar_video"}, {
                        args: null,
                        kind: "FragmentSpread",
                        name: "CometWatchAndScrollCloseButton_video"
                    }, {args: null, kind: "FragmentSpread", name: "VideoPlayerWithWatchAndScrollWarningScreen_video"}],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [b, a], kind: "Operation", name: "CometWatchAndScrollVideoQuery", selections: [{
                    alias: null,
                    args: c,
                    concreteType: "Video",
                    kind: "LinkedField",
                    name: "video",
                    plural: !1,
                    selections: [d, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "owner",
                        plural: !1,
                        selections: [f, g, {kind: "TypeDiscriminator", abstractKey: "__isActor"}, h, {
                            alias: null,
                            args: [{kind: "Literal", name: "height", value: 32}, {
                                kind: "Variable",
                                name: "scale",
                                variableName: "scale"
                            }, {kind: "Literal", name: "width", value: 32}],
                            concreteType: "Image",
                            kind: "LinkedField",
                            name: "profile_picture",
                            plural: !1,
                            selections: i,
                            storageKey: null
                        }, {
                            kind: "InlineFragment",
                            selections: [e, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "uri_token",
                                storageKey: null
                            }, {
                                kind: "InlineFragment",
                                selections: [{
                                    alias: null,
                                    args: [{kind: "Literal", name: "site", value: "www"}],
                                    kind: "ScalarField",
                                    name: "url",
                                    storageKey: 'url(site:"www")'
                                }],
                                type: "User",
                                abstractKey: null
                            }],
                            type: "VideoOwner",
                            abstractKey: "__isVideoOwner"
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "original_width",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "original_height",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "original_rotation",
                        storageKey: null
                    }, g, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "broadcaster_origin",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "broadcast_id",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "broadcast_status",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_live_streaming",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_live_trace_enabled",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_looping",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_video_broadcast",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "loop_count",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_spherical",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MusicVideoMetadata",
                        kind: "LinkedField",
                        name: "pmv_metadata",
                        plural: !1,
                        selections: [f, g],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "permalink_url",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "captions_url",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "dash_prefetch_experimental",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "VideoCaptionLocale",
                        kind: "LinkedField",
                        name: "video_available_captions_locales",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "localized_creation_method",
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "VideoPrefetchResources",
                        kind: "LinkedField",
                        name: "dash_prefetch_resources",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "VideoPrefetchResource",
                            kind: "LinkedField",
                            name: "audio",
                            plural: !0,
                            selections: j,
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            concreteType: "VideoPrefetchResource",
                            kind: "LinkedField",
                            name: "video",
                            plural: !0,
                            selections: j,
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: [{kind: "Literal", name: "context", value: "DEFAULT"}, {
                            kind: "Literal",
                            name: "supported",
                            value: ["CometVideoPlayerOzImplementation", "CometVideoPlayerShakaImplementation", "CometVideoPlayerProgressiveImplementation"]
                        }],
                        concreteType: null,
                        kind: "LinkedField",
                        name: "comet_video_player_implementations",
                        plural: !0,
                        selections: [f, {
                            kind: "InlineFragment",
                            selections: [{
                                documentName: "useRelay3DVideoImplementations_video",
                                fragmentName: "useRelay3DOzImplementation_implementation",
                                fragmentPropName: "implementation",
                                kind: "ModuleImport"
                            }],
                            type: "CometVideoPlayerOzImplementation",
                            abstractKey: null
                        }, {
                            kind: "InlineFragment",
                            selections: [{
                                documentName: "useRelay3DVideoImplementations_video",
                                fragmentName: "useRelay3DShakaImplementation_implementation",
                                fragmentPropName: "implementation",
                                kind: "ModuleImport"
                            }],
                            type: "CometVideoPlayerShakaImplementation",
                            abstractKey: null
                        }, {
                            kind: "InlineFragment",
                            selections: [{
                                documentName: "useRelay3DVideoImplementations_video",
                                fragmentName: "useRelay3DProgressiveImplementation_implementation",
                                fragmentPropName: "implementation",
                                kind: "ModuleImport"
                            }],
                            type: "CometVideoPlayerProgressiveImplementation",
                            abstractKey: null
                        }],
                        storageKey: 'comet_video_player_implementations(context:"DEFAULT",supported:["CometVideoPlayerOzImplementation","CometVideoPlayerShakaImplementation","CometVideoPlayerProgressiveImplementation"])'
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "can_use_oz",
                        storageKey: null
                    }, {
                        alias: "playable_url_dash",
                        args: [{kind: "Literal", name: "scrubbing_preference", value: "MPEG_DASH"}],
                        kind: "ScalarField",
                        name: "playable_url",
                        storageKey: 'playable_url(scrubbing_preference:"MPEG_DASH")'
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "dash_manifest",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "min_quality_preference",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "VideoPlayerShakaLiveP2PInit",
                        kind: "LinkedField",
                        name: "video_player_shaka_live_p2p_init",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "json_encoded_video_data",
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "playable_url",
                        storageKey: null
                    }, {
                        alias: "playable_url_quality_hd",
                        args: [{kind: "Literal", name: "quality", value: "HD"}],
                        kind: "ScalarField",
                        name: "playable_url",
                        storageKey: 'playable_url(quality:"HD")'
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "SphericalVideoFallbackUrls",
                        kind: "LinkedField",
                        name: "spherical_video_fallback_urls",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "hd",
                            storageKey: null
                        }, {alias: null, args: null, kind: "ScalarField", name: "sd", storageKey: null}],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "comet_video_player_static_config",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "comet_video_player_context_sensitive_config",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "VideoPlayerShakaPerformanceLoggerInit",
                        kind: "LinkedField",
                        name: "video_player_shaka_performance_logger_init",
                        plural: !1,
                        selections: [{
                            documentName: "useVideoPlayerShakaPerformanceLoggerRelay_video",
                            fragmentName: "useVideoPlayerShakaPerformanceLoggerRelay_init",
                            fragmentPropName: "init",
                            kind: "ModuleImport"
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "autoplay_gating_result",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "viewer_autoplay_setting",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "can_autoplay",
                        storageKey: null
                    }, {alias: null, args: null, kind: "ScalarField", name: "drm_info", storageKey: null}, {
                        alias: null,
                        args: null,
                        concreteType: "VideoP2PSettings",
                        kind: "LinkedField",
                        name: "p2p_settings",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "ticket",
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            concreteType: "VideoP2PSettingsConfig",
                            kind: "LinkedField",
                            name: "config",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "delay_p2p_until_play",
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "disable_hivejava_for_livevc",
                                storageKey: null
                            }],
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            concreteType: "VideoHiveInitializationOptions",
                            kind: "LinkedField",
                            name: "hive_initialization_options",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "VideoHiveInitializationOptionHiveJava",
                                kind: "LinkedField",
                                name: "hive_java",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "min_version",
                                    storageKey: null
                                }],
                                storageKey: null
                            }, {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "hive_tech_order",
                                storageKey: null
                            }, {alias: null, args: null, kind: "ScalarField", name: "debug_level", storageKey: null}],
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "AudioSettings",
                        kind: "LinkedField",
                        name: "audio_settings",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "video_volume_setting",
                            storageKey: null
                        }, g],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "CaptionsSettings",
                        kind: "LinkedField",
                        name: "captions_settings",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "always_show_captions",
                            storageKey: null
                        }, g],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "VideoBroadcastLowLatencyConfig",
                        kind: "LinkedField",
                        name: "broadcast_low_latency_config",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "ll_desired_latency_ms",
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "ll_latency_tolerance_ms",
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "audio_availability",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "VideoMutedSegment",
                        kind: "LinkedField",
                        name: "muted_segments",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "mute_start_time_in_sec",
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "mute_end_time_in_sec",
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "SphericalVideoRenderer",
                        kind: "LinkedField",
                        name: "spherical_video_renderer",
                        plural: !1,
                        selections: [{
                            documentName: "VideoPlayerRelay_video_spherical_video_renderer",
                            fragmentName: "VideoPlayerSphericalRelay_sphericalVideoRenderer",
                            fragmentPropName: "sphericalVideoRenderer",
                            kind: "ModuleImport"
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "InstreamVideoAdBreaks",
                        kind: "LinkedField",
                        name: "instream_video_ad_breaks_comet",
                        plural: !1,
                        selections: [{
                            documentName: "VideoPlayerRelay_video_instream_video_ad_breaks_comet",
                            fragmentName: "InstreamVideoAdBreaksPlayer_adBreaks",
                            fragmentPropName: "adBreaks",
                            kind: "ModuleImport"
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_premium_music_video",
                        storageKey: null
                    }, {
                        alias: "breakingStatus",
                        args: null,
                        kind: "ScalarField",
                        name: "breaking_status",
                        storageKey: null
                    }, {
                        alias: "videoId",
                        args: null,
                        kind: "ScalarField",
                        name: "id",
                        storageKey: null
                    }, {
                        alias: "isPremiere",
                        args: null,
                        kind: "ScalarField",
                        name: "is_premiere",
                        storageKey: null
                    }, {
                        alias: "liveViewerCount",
                        args: null,
                        kind: "ScalarField",
                        name: "live_viewer_count_read_only",
                        storageKey: null
                    }, {
                        alias: "rehearsalInfo",
                        args: null,
                        concreteType: "LiveVideoRehearsalInfo",
                        kind: "LinkedField",
                        name: "rehearsal_info",
                        plural: !1,
                        selections: [{
                            alias: "typeName",
                            args: null,
                            kind: "ScalarField",
                            name: "__typename",
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_gaming_video",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "publish_time",
                        storageKey: null
                    }, h, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "title_with_fallback",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "Story",
                        kind: "LinkedField",
                        name: "creation_story",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "identifier_token",
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "debug_info",
                            storageKey: null
                        }, {alias: null, args: null, kind: "ScalarField", name: "tracking", storageKey: null}, g],
                        storageKey: null
                    }, {
                        alias: null,
                        args: [{kind: "Literal", name: "framework", value: "WARNING_SCREENS"}, {
                            kind: "Literal",
                            name: "location",
                            value: "video_channel"
                        }],
                        concreteType: "CIXScreen",
                        kind: "LinkedField",
                        name: "cix_screen",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "view_model",
                            plural: !1,
                            selections: [f, {
                                kind: "InlineFragment",
                                selections: [{
                                    documentName: "VideoPlayerWithWatchAndScrollWarningScreen_video",
                                    fragmentName: "CometWarningScreenOverlay_data",
                                    fragmentPropName: "data",
                                    kind: "ModuleImport"
                                }],
                                type: "OverlayWarningScreenViewModel",
                                abstractKey: null
                            }, {kind: "InlineFragment", selections: k, type: "Node", abstractKey: "__isNode"}],
                            storageKey: null
                        }],
                        storageKey: 'cix_screen(framework:"WARNING_SCREENS",location:"video_channel")'
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "Story",
                        kind: "LinkedField",
                        name: "container_story",
                        plural: !1,
                        selections: k,
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "VideoThumbnail",
                        kind: "LinkedField",
                        name: "preferred_thumbnail",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Image",
                            kind: "LinkedField",
                            name: "image",
                            plural: !1,
                            selections: i,
                            storageKey: null
                        }, g],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: "2919955068104737",
                metadata: {},
                name: "CometWatchAndScrollVideoQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("PresenceUtil", ["CurrentUser", "randomInt"], (function (a, b, c, d, e, f) {
    f.getSessionID = a;
    f.hasUserCookie = c;
    var g = b("randomInt")(0, 4294967295) + 1;

    function a() {
        return g
    }

    function c() {
        return b("CurrentUser").isLoggedInNow()
    }
}), null);
__d("PresencePrivacy", ["Arbiter", "ArbiterMixin", "AsyncRequest", "Bootloader", "ChannelConstants", "CurrentUser", "PresencePrivacyInitialData", "PresenceUtil", "mixin"], (function (a, b, c, d, e, f) {
    var g = "/ajax/chat/privacy/settings.php", h = "/ajax/chat/privacy/online_policy.php",
        i = "/ajax/chat/privacy/visibility.php", j = "friend_visibility", k = "visibility", l = "online_policy",
        m = babelHelpers["extends"]({}, (c = b("PresencePrivacyInitialData")).privacyData), n = c.visibility,
        o = babelHelpers["extends"]({}, c.privacyData), p = n, q = c.onlinePolicy, r = q, s = [], t = !1;
    d = function (a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            var b, c;
            for (var d = arguments.length, e = new Array(d), f = 0; f < d; f++) e[f] = arguments[f];
            return (b = c = a.call.apply(a, [this].concat(e)) || this, c.WHITELISTED = 1, c.BLACKLISTED = -1, c.UNLISTED = 0, c.ONLINE = 1, c.OFFLINE = 0, c.ONLINE_TO_WHITELIST = 0, c.ONLINE_TO_BLACKLIST = 1, b) || babelHelpers.assertThisInitialized(c)
        }

        var c = b.prototype;
        c.init = function (a, b, c) {
        };
        c.setVisibility = function (a) {
            p = n;
            y(a);
            var b = {visibility: a}, c = {type: k, visibility: a};
            b = G(i, b, c);
            B(b, c);
            return a
        };
        c.getVisibility = function () {
            return n
        };
        c.setOnlinePolicy = function (a) {
            r = q;
            z(a);
            var b = {online_policy: a}, c = {type: l, online_policy: a};
            b = G(h, b, c);
            B(b, c);
            return a
        };
        c.getOnlinePolicy = function () {
            return q
        };
        c.getFriendVisibility = function (a) {
            return m[a] || u.UNLISTED
        };
        c.getFriendsVisibility = function () {
            return m
        };
        c.isUserOffline = function () {
            return this.getVisibility() === u.OFFLINE
        };
        c.allows = function (a) {
            return this.isUserOffline() ? !1 : this.allowsIfViewerIsOnline(a)
        };
        c.allowsIfViewerIsOnline = function (a) {
            var b = this.getOnlinePolicy();
            return b === u.ONLINE_TO_WHITELIST ? m[a] == u.WHITELISTED : m[a] != u.BLACKLISTED
        };
        c.getOnlinePolicyStr = function () {
            if (this.isUserOffline()) return "offline";
            var a = this.getOnlinePolicy();
            if (a === u.ONLINE_TO_WHITELIST) return "online_to_whitelist";
            return a === u.ONLINE_TO_BLACKLIST ? "online_to_blacklist" : "unknown"
        };
        c.setFriendsVisibility = function (a, b) {
            if (a.length > 0) {
                var c = {};
                for (var d = 0; d < a.length; d++) {
                    var e = a[d];
                    o[e] = m[e];
                    c[e] = b
                }
                v(c);
                e = b;
                e == u.UNLISTED && (e = o[a[0]]);
                d = {users: a, setting: b, setting_type: e};
                a = {type: j, settings: c};
                e = G(g, d, a);
                B(e, a)
            }
            return b
        };
        c.setFriendVisibilityMap = function (a, b) {
            for (var c in a) o[c] = m[c];
            v(a);
            a = {type: j, settings: a};
            B(F(b, a), a)
        };
        c.allow = function (a) {
            if (this.allows(a)) throw new Error("allow() should only be called for users that are not already allowed");
            if (this.getVisibility() === u.OFFLINE) throw new Error("allow() should only be called when the user is already online");
            var b = this.getOnlinePolicy() === u.ONLINE_TO_WHITELIST ? u.WHITELISTED : u.UNLISTED;
            return this.setFriendsVisibility([a], b)
        };
        c.disallow = function (a) {
            if (!this.allows(a)) throw new Error("disallow() should only be called for users that are not already disallowed");
            if (this.getVisibility() === u.OFFLINE) throw new Error("disallow() should only be called when the user is already online");
            var b = this.getOnlinePolicy() === u.ONLINE_TO_BLACKLIST ? u.BLACKLISTED : u.UNLISTED;
            return this.setFriendsVisibility([a], b)
        };
        c.getBlacklist = function () {
            var a = [];
            for (var b in m) m[b] === u.BLACKLISTED && a.push(b);
            return a
        };
        c.getWhitelist = function () {
            var a = [];
            for (var b in m) m[b] === u.WHITELISTED && a.push(b);
            return a
        };
        c.getMapForTest = function () {
            return m
        };
        c.setMapForTest = function (a) {
            m = a
        };
        return b
    }(b("mixin")(b("ArbiterMixin")));
    var u = new d();

    function v(a) {
        var c;
        for (c in a) {
            var d = a[c];
            if (c == b("CurrentUser").getID()) throw new Error("Invalid to set current user's visibility");
            switch (d) {
                case u.WHITELISTED:
                case u.BLACKLISTED:
                case u.UNLISTED:
                    break;
                default:
                    throw new Error("Invalid state: " + d)
            }
        }
        for (c in a) m[c] = a[c];
        u.inform("privacy-changed")
    }

    function w(a, b) {
        var c = {};
        c[a] = b;
        v(c)
    }

    function x(a) {
        b("Bootloader").loadModules(["MessengerMQTTPresenceReporting"], function (b) {
            b.reportChatVisibility(!!a)
        }, "PresencePrivacy")
    }

    function y(a) {
        switch (a) {
            case u.ONLINE:
            case u.OFFLINE:
                break;
            default:
                throw new Error("Invalid visibility: " + a)
        }
        n = a;
        x(a);
        u.inform("privacy-changed");
        u.inform("privacy-user-presence-changed")
    }

    function z(a) {
        switch (a) {
            case u.ONLINE_TO_WHITELIST:
            case u.ONLINE_TO_BLACKLIST:
                break;
            default:
                throw new Error("Invalid default online policy: " + a)
        }
        q = a;
        u.inform("privacy-user-presence-changed");
        u.inform("privacy-changed")
    }

    function A(a, b) {
        t = !0, a.send()
    }

    function B(a, b) {
        s.push({request: a, data: b});
        if (!t) {
            a = s.shift();
            A(a.request, a.data)
        }
    }

    function C(a, b) {
        b = a.type;
        if (b === j) {
            u.inform("privacy-availability-changed");
            for (var c in a.settings) o[c] = a.settings[c]
        } else b === k ? p = a.visibility : b === l && (r = a.online_policy), u.inform("privacy-user-presence-response")
    }

    function D(a, b) {
        n !== p && y(p), q !== r && z(r), Object.assign(m, o), u.inform("privacy-changed"), s = []
    }

    function E(a) {
        t = !1;
        if (s.length > 0) {
            a = s.shift();
            A(a.request, a.data)
        }
    }

    function F(a, c) {
        if (b("PresenceUtil") != null) {
            var d = a.getData();
            d.window_id = b("PresenceUtil").getSessionID();
            a.setData(d)
        }
        a.setHandler(C.bind(this, c)).setErrorHandler(D.bind(this, c)).setTransportErrorHandler(D.bind(this, c)).setFinallyHandler(E.bind(this)).setAllowCrossPageTransition(!0);
        return a
    }

    function G(a, c, d) {
        return F(new (b("AsyncRequest"))(a).setData(c), d)
    }

    function a(a, c) {
        a = c.obj;
        if (a.viewer_id != b("CurrentUser").getID()) throw new Error("Viewer got from the channel is not the real viewer");
        if (a.window_id === b("PresenceUtil").getSessionID()) return;
        var d = a.data;
        if (a.event == "access_control_entry") d.target_ids.forEach(function (a) {
            w(a, d.setting), o[a] = d.setting
        }); else {
            if (a.event == "visibility_update") {
                c = d.visibility ? u.ONLINE : u.OFFLINE;
                y(c);
                p = c
            } else a.event == "online_policy_update" && (z(d.online_policy), r = d.online_policy);
            u.inform("privacy-user-presence-response")
        }
    }

    u.inform("privacy-changed");
    u.inform("privacy-user-presence-changed", "state");
    b("Arbiter").subscribe(b("ChannelConstants").getArbiterType("privacy_changed"), a.bind(this));
    b("Arbiter").subscribe(b("ChannelConstants").ON_CONFIG, function (a, b) {
        a = b.getConfig("visibility", null);
        if (a !== null && typeof a !== "undefined") {
            b = a ? u.ONLINE : u.OFFLINE;
            y(b)
        }
    }.bind(this));
    f = u;
    e.exports = f
}), null);
__d("ChatVisibility", ["Arbiter", "PresencePrivacy"], (function (a, b, c, d, e, f) {
    var g = {
        isOnline: function () {
            return b("PresencePrivacy").getVisibility() === b("PresencePrivacy").ONLINE
        }, hasBlackbirdEnabled: function () {
            return this.isVisibleToMostFriends() || this.isVisibleToSomeFriends()
        }, isVisibleToMostFriends: function () {
            return b("PresencePrivacy").getOnlinePolicy() === b("PresencePrivacy").ONLINE_TO_BLACKLIST && b("PresencePrivacy").getBlacklist().length > 0
        }, isVisibleToSomeFriends: function () {
            return b("PresencePrivacy").getOnlinePolicy() === b("PresencePrivacy").ONLINE_TO_WHITELIST && b("PresencePrivacy").getWhitelist().length > 0
        }, goOnline: function (a) {
            b("PresencePrivacy").getVisibility() === b("PresencePrivacy").OFFLINE && (b("PresencePrivacy").setVisibility(b("PresencePrivacy").ONLINE), b("Arbiter").inform("chat-visibility/go-online")), a && a()
        }, goOffline: function (a) {
            b("PresencePrivacy").getVisibility() === b("PresencePrivacy").ONLINE && (b("PresencePrivacy").setVisibility(b("PresencePrivacy").OFFLINE), b("Arbiter").inform("chat-visibility/go-offline")), a && a()
        }, toggleVisibility: function () {
            g.isOnline() ? g.goOffline() : g.goOnline()
        }
    };
    e.exports = g
}), null);
__d("LastActiveTimes", ["fbt", "ServerTime"], (function (a, b, c, d, e, f, g) {
    f.update = a;
    f.getShortDisplay = c;
    f.get = d;
    f.getDebugData = e;
    var h = {};

    function i(a) {
        if (!a || a < 0) return null;
        a = b("ServerTime").get() / 1e3 - a;
        a = Math.floor(a / 60);
        var c = Math.floor(a / 60), d = Math.floor(c / 24);
        if (a <= 1) return g._({"*": "{count}\u5206\u949f"}, [g._param("count", 1, [0])]); else if (a < 60) return g._({"*": "{count}\u5206\u949f"}, [g._param("count", a, [0])]); else if (c < 24) return g._({"*": "{count}\u5c0f\u65f6"}, [g._param("count", c, [0])]); else if (d < 3) return g._({"*": "{count}\u5929"}, [g._param("count", d, [0])]); else return null
    }

    function j(a, b) {
        (!(a in h) || h[a] < b) && (h[a] = b)
    }

    function k(a) {
        if (a in h) return h[a]; else return 0
    }

    function a(a) {
        for (var b in a) j(b, a[b])
    }

    function c(a) {
        return i(k(a))
    }

    function d(a) {
        return k(a)
    }

    function e() {
        return h
    }
}), null);
__d("PresenceStatus", ["ArbiterMixin", "AvailableListConstants", "AvailableListInitialData", "BanzaiODS", "Bootloader", "ChatVisibility", "CurrentUser", "FBIDCheck", "FBLogger", "LastActiveTimes", "PresenceConfig", "PresencePrivacy", "ServerTime", "createObjectFrom", "debounceAcrossTransitions", "gkx"], (function (a, b, c, d, e, f) {
    b("BanzaiODS").setEntitySample("presence", 1e-4);
    var g = {}, h = {}, i = {}, j = {}, k = Object.assign({}, b("ArbiterMixin")),
        l = b("debounceAcrossTransitions")(function () {
            return k.inform("change")
        }, 0);

    function m(a) {
        var c, d = parseInt(a.topic.match(/\d+$/), 10);
        a = parseInt(JSON.parse(a.payload).lat, 10);
        var e = Date.now() - a * 1e3;
        e = b("PresenceConfig").get("active_cutoff") * 1e3 - e;
        b("LastActiveTimes").update((c = {}, c[d] = a, c));
        k.checkPresence(d);
        k.get(d) === b("AvailableListConstants").ACTIVE && (window.clearTimeout(j[d].timeout), j[d].timeout = window.setTimeout(function () {
            k.checkPresence(d)
        }, e))
    }

    function n(a) {
        return /^\d+$/.test(a)
    }

    Object.assign(k, {
        resetPresenceData: function () {
            g = {}, h = {}
        }, reset: function () {
            k.resetPresenceData(), i = {}
        }, get: function (a) {
            !n(a) && b("PresenceConfig").get("presence_throw_for_malformed_id") && b("FBLogger")("presence").warn("received malformed id '%s'", a);
            if (a == b("CurrentUser").getID()) return b("ChatVisibility").isOnline() ? b("AvailableListConstants").ACTIVE : b("AvailableListConstants").OFFLINE;
            n(a) && !b("FBIDCheck").isUser_deprecated(a) && !j[a] && (b("BanzaiODS").bumpEntityKey(3303, "presence", "page_subscribe"), j[a] = {}, b("PresenceConfig").get("presence_page_green_dot_sub") && b("Bootloader").loadModules(["SkywalkerManager"], function (b) {
                return b.subscribe("presence_push/fb/" + a, m)
            }, "PresenceStatus"));
            var c = b("AvailableListConstants").OFFLINE;
            a in g && (c = g[a]);
            b("PresencePrivacy").allows(a) || (c = b("AvailableListConstants").OFFLINE);
            return c
        }, getCapabilities: function (a) {
            a = h[a];
            return a ? a : 0
        }, isPlayingCanvasGameUser: function (a) {
            return !!i[a]
        }, getGroup: function (a) {
            return a.some(function (a) {
                return a == b("CurrentUser").getID() ? !1 : k.get(a) === b("AvailableListConstants").ACTIVE
            }) ? b("AvailableListConstants").ACTIVE : b("AvailableListConstants").OFFLINE
        }, set: function (a, c, d, e, f, i) {
            if (a == b("CurrentUser").getID()) return !1;
            var j;
            if (c !== null && c !== void 0) {
                c = c == b("AvailableListConstants").ACTIVE ? b("AvailableListConstants").ACTIVE : b("AvailableListConstants").OFFLINE;
                d = k.get(a);
                j = d != c;
                if ((j || c == b("AvailableListConstants").ACTIVE) && b("FBIDCheck").isUser_deprecated(a)) {
                    b("LastActiveTimes").update((e = {}, e[a] = b("ServerTime").get() / 1e3, e))
                }
                g[a] = c
            }
            d = !1;
            f !== void 0 && f !== null && (d = k.getCapabilities(a) != f, h[a] = f);
            e = j || d;
            e && !i && l();
            return e
        }, setPlayingCanvasGameFriends: function (a) {
            if (!b("gkx")("678262")) return;
            i = b("createObjectFrom")(a)
        }, getOnlineIDs: function () {
            var a, c = [];
            for (a in g) k.get(a) === b("AvailableListConstants").ACTIVE && c.push(a);
            return c
        }, getAllIDs: function () {
            return Object.keys(g)
        }, getOnlineCount: function () {
            return k.getOnlineIDs().length
        }, getPresenceStats: function () {
            var a = 0, c = 0, d = 0;
            for (var e in g) {
                a += 1;
                switch (k.get(e)) {
                    case b("AvailableListConstants").OFFLINE:
                        c += 1;
                        break;
                    case b("AvailableListConstants").ACTIVE:
                        d += 1;
                        break;
                    default:
                        break
                }
            }
            return {total: a, offline: c, active: d}
        }, getAllDebugInfo: function () {
            var a = {};
            for (var b in g) a[b] = {p: g[b], vc: h[b]};
            return a
        }, setMultiFromMQTT: function (a) {
            var c = {};
            Array.isArray(a) && a.forEach(function (a) {
                a.l && (c[a.u] = a.l), k.set(a.u, a.p, !1, "mqtt", a.c, !0)
            });
            b("LastActiveTimes").update(c);
            l()
        }, setMultiChatproxy: function (a) {
            var c = {};
            for (var d in a) {
                a[d].lat && (c[d] = a[d].lat);
                var e = a[d].p;
                k.set(d, e, !1, "chatproxy", a[d].vc, !0)
            }
            b("LastActiveTimes").update(c);
            l()
        }, setMultiActive: function (a, c) {
            var d = !1;
            a.forEach(function (a) {
                k.set(a, b("AvailableListConstants").ACTIVE, !1, c, null, !0) && (d = !0)
            });
            d && l()
        }, checkPresence: function (a) {
            var c = !1, d = Math.ceil(Date.now() / 1e3) - b("LastActiveTimes").get(a);
            k.set(a, d < b("PresenceConfig").get("active_cutoff") ? b("AvailableListConstants").ACTIVE : b("AvailableListConstants").OFFLINE, !1, "pylon", null, !0) && (c = !0);
            c && l()
        }
    });
    b("AvailableListInitialData").activeList && b("AvailableListInitialData").activeList.length > 0 && k.setMultiActive(b("AvailableListInitialData").activeList, "available_list_active");
    b("AvailableListInitialData").playingNow && b("AvailableListInitialData").playingNow.length > 0 && k.setPlayingCanvasGameFriends(b("AvailableListInitialData").playingNow);
    b("AvailableListInitialData").lastActiveTimes && Object.keys(b("AvailableListInitialData").lastActiveTimes).length > 0 && b("LastActiveTimes").update(b("AvailableListInitialData").lastActiveTimes);
    a = k;
    e.exports = a
}), null);
__d("AppLastUsedTimestampsFetcher", ["CometRelay", "AppLastUsedTimestampsFetcherQuery.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    var g;

    function a(a, c, d) {
        return b("CometRelay").fetchQuery(a, g !== void 0 ? g : g = b("AppLastUsedTimestampsFetcherQuery.graphql"), {bookmarkIDs: c}).subscribe({
            next: function (a) {
                a = a.viewer.bookmarks.edges.reduce(function (a, b) {
                    b = b.node;
                    var c = b.bookmarked_node;
                    b = b.last_used_timestamp;
                    if (c == null) return a;
                    c = c.id;
                    if (c == null || b == null) return a;
                    a[c] = b;
                    return a
                }, {});
                d(a)
            }
        })
    }

    c = {fetch: a};
    d = c;
    e.exports = d
}), null);
__d("useCometLogoutWithPendingContactpointConfirmationDialog.react", ["fbt", "React", "useCometConfirmationDialog"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function a(a, c) {
        var d = b("useCometConfirmationDialog")(), e = d[0];
        d = h.useCallback(function () {
            var b = g._("\u9000\u51fa Facebook\uff1f"),
                d = a === "PhoneNumber" ? g._("\u786e\u5b9a\u4e0d\u9a8c\u8bc1\u624b\u673a\u53f7\u5c31\u9000\u51fa Facebook \u5417\uff1f\u9a8c\u8bc1\u5e10\u6237\u624b\u673a\u53f7\u624d\u80fd\u786e\u4fdd\u4f60\u80fd\u591f\u518d\u6b21\u767b\u5f55\u54e6\u3002") : g._("\u786e\u5b9a\u4e0d\u9a8c\u8bc1\u90ae\u7bb1\u5c31\u9000\u51fa Facebook \u5417\uff1f\u9a8c\u8bc1\u5e10\u6237\u90ae\u7bb1\u624d\u80fd\u786e\u4fdd\u4f60\u80fd\u591f\u518d\u6b21\u767b\u5f55\u54e6\u3002"),
                f = g._("\u9a8c\u8bc1\u5e10\u6237"), h = g._("\u9000\u51fa");
            e({body: d, cancel: f, confirm: h, title: b}, c)
        }, [a, c, e]);
        return a === "PendingEmail" || a === "PhoneNumber" ? d : null
    }
}), null);
__d("CometLogoutHandler.react", ["Banzai", "CometRelay", "React", "ServiceWorkerLoginAndLogout", "WebStorageMonster", "XLogoutControllerRouteBuilder", "recoverableViolation", "useCometLogoutWithPendingContactpointConfirmationDialog.react", "CometLogoutHandlerQuery.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = b("React");
    a = h.forwardRef(function (a, c) {
        var d, e, f = a.shouldInitiateLogout, i = h.useRef(!1);
        a = b("CometRelay").useLazyLoadQuery(g !== void 0 ? g : g = b("CometLogoutHandlerQuery.graphql"), {});
        var j = a.logout_whitelist;
        a = a.viewer;
        var k = h.useRef(), l = h.useCallback(function () {
            if (i.current) return;
            i.current = !0;
            var a = k.current;
            if (a == null) {
                b("recoverableViolation")("Unable to get logout form ref to submit", "comet_ui");
                return
            }
            b("WebStorageMonster").cleanOnLogout([].concat(j));
            b("ServiceWorkerLoginAndLogout").logout();
            b("Banzai").flush();
            a.submit()
        }, [k, j]);
        d = a == null ? void 0 : (d = a.account_user) == null ? void 0 : d.has_confirmed_contactpoints;
        e = a == null ? void 0 : (e = a.account_user) == null ? void 0 : (e = e.pending_contactpoints) == null ? void 0 : (e = e[0]) == null ? void 0 : e.__typename;
        var m = b("useCometLogoutWithPendingContactpointConfirmationDialog.react")(d !== !0 ? e : null, l),
            n = h.useCallback(function () {
                m ? m() : l()
            }, [l, m]);
        h.useImperativeHandle(c, function () {
            return {logout: n}
        });
        h.useEffect(function () {
            k.current == null ? b("recoverableViolation")("Expected logout form ref to be valid", "comet_ui") : f === !0 && n()
        }, [n, f]);
        d = b("XLogoutControllerRouteBuilder").buildURL({button_location: "settings", button_name: "logout"});
        return h.jsxs("form", {
            action: d,
            method: "POST",
            ref: k,
            children: [h.jsx("input", {
                name: "h",
                type: "hidden",
                value: a == null ? void 0 : a.logout_hash
            }), h.jsx("input", {name: "ref", type: "hidden", value: "mb"})]
        })
    });
    c = a;
    e.exports = c
}), null);
__d("CometLoggedInAccountSwitcherAccountForm.react", ["CometRelay", "React", "CometLoggedInAccountSwitcherAccountForm_form.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h = b("React");

    function a(a) {
        var c = b("CometRelay").useFragment(g !== void 0 ? g : g = b("CometLoggedInAccountSwitcherAccountForm_form.graphql"), a.form),
            d = c.action;
        c = c.inputs;
        return h.jsx("form", {
            action: d, method: "POST", ref: a.formRef, children: c.map(function (a) {
                var b = a.name;
                a = a.value;
                return h.jsx("input", {name: b, type: "hidden", value: a}, b)
            })
        })
    }
}), null);
__d("useCometLoggedInAccountSwitcherRemoveAccount", ["fbt", "CometRelay", "React", "promiseDone", "recoverableViolation", "requireDeferred", "useCometConfirmationDialog", "useCometLoggedInAccountSwitcherRemoveAccount_account.graphql"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h, i = b("React"), j = b("requireDeferred")("CometLoggedInAccountSwitcherRemoveAccountMutation");

    function a(a) {
        var c = b("CometRelay").useRelayEnvironment(), d = b("useCometConfirmationDialog")(), e = d[0];
        d = b("CometRelay").useFragment(h !== void 0 ? h : h = b("useCometLoggedInAccountSwitcherRemoveAccount_account.graphql"), a);
        var f = d.nonce, k = d.user;
        return i.useCallback(function () {
            var a = k == null ? void 0 : k.short_name;
            e({
                body: a != null ? g._("{name}\u4e0b\u6b21\u767b\u5f55\u65f6\u9700\u8981\u8f93\u5165\u90ae\u7bb1\u6216\u624b\u673a\u53f7\u4ee5\u53ca\u5bc6\u7801\u3002", [g._param("name", a)]) : g._("TA \u4e0b\u6b21\u767b\u5f55\u65f6\u9700\u8981\u8f93\u5165\u90ae\u7bb1\u6216\u624b\u673a\u53f7\u4ee5\u53ca\u5bc6\u7801\u3002"),
                confirm: g._("\u79fb\u9664\u5e10\u6237"),
                title: g._("\u79fb\u9664\u5e10\u6237")
            }, function () {
                var a = k == null ? void 0 : k.id;
                if (a == null) {
                    b("recoverableViolation")("Cannot remove user from logged in account switcher that has no id", "comet_ui");
                    return
                }
                b("promiseDone")(j.load().then(function (b) {
                    b = b.commit;
                    b(c, {id: a, nonce: f})
                }))
            })
        }, [c, f, e, k])
    }
}), null);
__d("useCometLoggedInAccountSwitcherSubmitForm", ["Banzai", "CometRelay", "React", "ServiceWorkerLoginAndLogout", "WebStorageMonster", "recoverableViolation", "useCometLoggedInAccountSwitcherSubmitForm_query.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h = b("React");

    function a(a, c) {
        a = b("CometRelay").useFragment(g !== void 0 ? g : g = b("useCometLoggedInAccountSwitcherSubmitForm_query.graphql"), a);
        var d = a.logout_whitelist;
        return h.useCallback(function () {
            var a = c.current;
            if (a == null) {
                b("recoverableViolation")("Unable to get form ref to submit", "comet_infra");
                return
            }
            b("WebStorageMonster").cleanOnLogout(d);
            b("ServiceWorkerLoginAndLogout").logout();
            b("Banzai").flush();
            a.submit()
        }, [c, d])
    }
}), null);
__d("CometLoggedInAccountSwitcherRow.react", ["ix", "fbt", "CometLoggedInAccountSwitcherAccountForm.react", "CometRelay", "React", "TetraListCell.react", "WebPixelRatio", "fbicon", "recoverableViolation", "useCometLoggedInAccountSwitcherRemoveAccount", "useCometLoggedInAccountSwitcherSubmitForm", "useProfileEngagementClickCallback", "CometLoggedInAccountSwitcherRow_query.graphql", "CometLoggedInAccountSwitcherRow_account.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j, k = b("React");

    function a(a) {
        var c = b("CometRelay").useFragment(i !== void 0 ? i : i = b("CometLoggedInAccountSwitcherRow_query.graphql"), a.query);
        a = b("CometRelay").useFragment(j !== void 0 ? j : j = b("CometLoggedInAccountSwitcherRow_account.graphql"), a.account);
        var d = a.form, e = a.unread_notification_count, f = a.user, l = k.useRef(null),
            m = b("useCometLoggedInAccountSwitcherSubmitForm")(c, l),
            n = b("useCometLoggedInAccountSwitcherRemoveAccount")(a);
        c = {product_bucket: "account_switcher", subsurface: "switch_account_menu", surface: "navigation"};
        var o = b("useProfileEngagementClickCallback")(babelHelpers["extends"]({}, c, {item_type: "account"})),
            p = b("useProfileEngagementClickCallback")(babelHelpers["extends"]({}, c, {item_type: "remove"}));
        if (f == null) {
            b("recoverableViolation")("A user is required to render a CometLoggedInAccountSwitcherRow", "comet_ui");
            return null
        }
        if (d == null) {
            b("recoverableViolation")("A form is required to render a CometLoggedInAccountSwitcherRow", "comet_ui");
            return null
        }
        e == null && b("recoverableViolation")("We should have an unread_notification_count but we don't", "comet_ui");
        return k.jsx(b("TetraListCell.react"), {
            addOnPrimary: {
                addOnTopEnd: ((a = e) != null ? a : 0) > 0 ? {
                    number: (c = e) != null ? c : 0,
                    type: "notificationBadge"
                } : void 0,
                shape: "circle",
                size: 60,
                source: {
                    height: (e = f == null ? void 0 : (a = f.profile_picture) == null ? void 0 : a.height) != null ? e : 60,
                    scale: (a = f == null ? void 0 : (c = f.profile_picture) == null ? void 0 : c.scale) != null ? a : b("WebPixelRatio").get(),
                    uri: (c = f == null ? void 0 : (e = f.profile_picture) == null ? void 0 : e.uri) != null ? c : "",
                    width: (e = f == null ? void 0 : (a = f.profile_picture) == null ? void 0 : a.width) != null ? e : 60
                },
                type: "profile-photo"
            },
            addOnSecondary: {
                "aria-label": h._("\u79fb\u9664\u5e10\u6237"),
                color: "secondary",
                icon: b("fbicon")._(g("478234"), 24),
                onPress: function () {
                    p(), n()
                },
                type: "icon"
            },
            headline: k.jsxs(k.Fragment, {
                children: [f == null ? void 0 : f.name, k.jsx(b("CometLoggedInAccountSwitcherAccountForm.react"), {
                    form: d,
                    formRef: l
                })]
            }),
            onPress: function () {
                o(), m()
            }
        })
    }
}), null);
__d("useProfileSwitcherEngagementClickCallback", ["React", "recoverableViolation", "requireDeferred"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React"), h = b("requireDeferred")("ProfileEngagementTypedLoggerLite"), i = "2220391788200892";

    function a(a, c) {
        var d = g.useMemo(function () {
            return babelHelpers["extends"]({appid: i, engagement_type: "click"}, a)
        }, [a]);
        d.product_bucket == null && (b("recoverableViolation")("product_bucket is a required field for profile engagement logging", "profile_comet"), d = babelHelpers["extends"]({}, d, {product_bucket: "unknown"}));
        var e = g.useCallback(function (a) {
            h.onReady(function (a) {
                a = a.log;
                a(d)
            }), c && c(a)
        }, [c, d]);
        return e
    }
}), null);
__d("CometLoggedInAccountSwitcherRowWithUpdateText.react", ["ix", "fbt", "CometBadge.react", "CometLoggedInAccountSwitcherAccountForm.react", "CometRelay", "React", "TetraListCell.react", "WebPixelRatio", "fbicon", "recoverableViolation", "useCometLoggedInAccountSwitcherRemoveAccount", "useCometLoggedInAccountSwitcherSubmitForm", "useProfileSwitcherEngagementClickCallback", "CometLoggedInAccountSwitcherRowWithUpdateText_query.graphql", "CometLoggedInAccountSwitcherRowWithUpdateText_account.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j, k = b("React");

    function a(a) {
        var c = b("CometRelay").useFragment(i !== void 0 ? i : i = b("CometLoggedInAccountSwitcherRowWithUpdateText_query.graphql"), a.query);
        a = b("CometRelay").useFragment(j !== void 0 ? j : j = b("CometLoggedInAccountSwitcherRowWithUpdateText_account.graphql"), a.account);
        var d = a.form, e = a.unread_notification_count, f = a.user, l = k.useRef(null),
            m = b("useCometLoggedInAccountSwitcherSubmitForm")(c, l),
            n = b("useCometLoggedInAccountSwitcherRemoveAccount")(a);
        c = {product_bucket: "profile_account_switcher", subsurface: "switch_account_menu", surface: "navigation"};
        var o = b("useProfileSwitcherEngagementClickCallback")(babelHelpers["extends"]({}, c, {item_type: "account"})),
            p = b("useProfileSwitcherEngagementClickCallback")(babelHelpers["extends"]({}, c, {item_type: "remove"}));
        if (f == null) {
            b("recoverableViolation")("A user is required to render a CometLoggedInAccountSwitcherRowWithUpdateText", "comet_ui");
            return null
        }
        if (d == null) {
            b("recoverableViolation")("A form is required to render a CometLoggedInAccountSwitcherRowWithUpdateText", "comet_ui");
            return null
        }
        e == null && b("recoverableViolation")("We should have an unread_notification_count but we don't", "comet_ui");
        return k.jsx(b("TetraListCell.react"), {
            addOnPrimary: {
                shape: "circle",
                size: 40,
                source: {
                    height: (c = f == null ? void 0 : (a = f.switcher_profile_picture) == null ? void 0 : a.height) != null ? c : 40,
                    scale: (c = f == null ? void 0 : (a = f.switcher_profile_picture) == null ? void 0 : a.scale) != null ? c : b("WebPixelRatio").get(),
                    uri: (c = f == null ? void 0 : (a = f.switcher_profile_picture) == null ? void 0 : a.uri) != null ? c : "",
                    width: (c = f == null ? void 0 : (a = f.switcher_profile_picture) == null ? void 0 : a.width) != null ? c : 40
                },
                type: "profile-photo"
            },
            addOnSecondary: {
                "aria-label": h._("\u79fb\u9664\u5e10\u6237"),
                color: "secondary",
                icon: b("fbicon")._(g("478234"), 24),
                onPress: function () {
                    p(), n()
                },
                type: "icon"
            },
            body: e !== null && e !== 0 ? k.jsxs(k.Fragment, {
                children: [k.jsx(b("CometBadge.react"), {}), h._({
                    "*": "{number}\u6761\u66f4\u65b0",
                    "_1": "1 \u6761\u66f4\u65b0"
                }, [h._plural(e || 0, "number")])]
            }) : null,
            headline: k.jsxs(k.Fragment, {
                children: [f == null ? void 0 : f.name, k.jsx(b("CometLoggedInAccountSwitcherAccountForm.react"), {
                    form: d,
                    formRef: l
                })]
            }),
            level: 4,
            onPress: function () {
                o(), m()
            }
        })
    }
}), null);
__d("XLogoutController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/logout.php", {
        h: {type: "String"},
        next: {type: "String"},
        button_name: {type: "String"},
        button_location: {type: "String"},
        source: {type: "String"},
        ref: {type: "String"}
    })
}), null);
__d("CometLoggedInAccountSwitcher.react", ["ix", "fbt", "CometListItemSeparator.react", "CometLoggedInAccountSwitcherRow.react", "CometLoggedInAccountSwitcherRowWithUpdateText.react", "Locale", "React", "RelayHooks", "TetraIcon.react", "TetraList.react", "TetraListCell.react", "TetraText.react", "XLoginController", "XLogoutController", "fbicon", "gkx", "stylex", "useCometLoggedInAccountSwitcherSubmitForm", "useProfileSwitcherEngagementClickCallback", "CometLoggedInAccountSwitcher_query.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"), k = b("Locale").isRTL();

    function l(a) {
        if (b("gkx")("1475594")) return h._("\u4f60\u4f1a\u5148\u9000\u51fa\u5e10\u6237\uff0c\u7136\u540e\u5176\u4ed6\u7528\u6237\u624d\u80fd\u767b\u5f55\u6216\u6dfb\u52a0\u81ea\u5df1\u7684\u5e10\u6237");
        return a == null ? h._("\u8f7b\u677e\u767b\u5f55\u53e6\u4e00\u5e10\u6237\u3002\u4f60\u5c06\u9000\u51fa\u3002") : h._("\u8f7b\u677e\u767b\u5f55\u53e6\u4e00\u5e10\u6237\u3002{name}\u5c06\u9000\u51fa\u3002", [h._param("name", a)])
    }

    function a(a) {
        var c = a.onReturn;
        a = a.query;
        var d = b("RelayHooks").useFragment(i !== void 0 ? i : i = b("CometLoggedInAccountSwitcher_query.graphql"), a);
        a = j.useRef(null);
        var e = b("useCometLoggedInAccountSwitcherSubmitForm")(d, a),
            f = b("XLoginController").getURIBuilder().setString("ref", "www_account_switcher").getURI().toString(),
            m = b("XLogoutController").getURIBuilder().setString("next", f.toString()).setString("button_name", "switch_accounts").setString("button_location", "settings").getURI().toString(),
            n = b("gkx")("1475594"), o = {
                product_bucket: b("gkx")("1475594") ? "profile_account_switcher" : "account_switcher",
                subsurface: "switch_account_menu",
                surface: "navigation"
            }, p = b("useProfileSwitcherEngagementClickCallback")(babelHelpers["extends"]({}, o, {item_type: "back"})),
            q = b("useProfileSwitcherEngagementClickCallback")(babelHelpers["extends"]({}, o, {item_type: "add"}));
        return j.jsxs("div", {
            className: "cbu4d94t j83agx80",
            children: [j.jsxs("div", {
                className: "dati1w0a sj5x9vvc hv4rvrfc discj3wi btwxx1t3 j83agx80",
                children: [j.jsx("div", {
                    className: "scb9dxdr sj5x9vvc dflh9lhu cxgpxx05",
                    children: j.jsx(b("TetraIcon.react"), {
                        "aria-label": h._("\u8fd4\u56de"),
                        icon: k ? b("fbicon")._(g("514454"), 20) : b("fbicon")._(g("512647"), 20),
                        onPress: function () {
                            p(), c()
                        }
                    })
                }), j.jsx("div", {
                    className: "h4z51re5 j83agx80 bp9cbjyn",
                    children: j.jsx(b("TetraText.react"), {
                        type: "headlineEmphasized1",
                        children: n ? h._("\u5207\u6362\u5e10\u6237") : h._("\u5207\u6362\u5e10\u6237")
                    })
                })]
            }), j.jsxs("div", {
                className: "a8nywdso jbae33se rz4wbd8a cxgpxx05",
                children: [j.jsxs(b("TetraList.react"), {
                    children: [j.jsx(b("TetraListCell.react"), {
                        body: l(d == null ? void 0 : (o = d.viewer) == null ? void 0 : (o = o.account_user) == null ? void 0 : o.short_name),
                        bodyColor: "secondary"
                    }), ((o = d == null ? void 0 : (o = d.viewer) == null ? void 0 : o.device_switchable_accounts) != null ? o : []).map(function (a) {
                        var c;
                        return n ? j.jsx(b("CometLoggedInAccountSwitcherRowWithUpdateText.react"), {
                            account: a,
                            query: d
                        }, (c = a == null ? void 0 : (c = a.user) == null ? void 0 : c.id) != null ? c : void 0) : j.jsx(b("CometLoggedInAccountSwitcherRow.react"), {
                            account: a,
                            query: d
                        }, (a = a == null ? void 0 : (c = a.user) == null ? void 0 : c.id) != null ? a : void 0)
                    }), j.jsx(b("CometListItemSeparator.react"), {}), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: {
                            icon: b("fbicon")._(g("487087"), 20),
                            size: 36,
                            type: "contained-icon"
                        }, headline: h._("\u767b\u5f55\u53e6\u4e00\u5e10\u6237"), level: 4, onPress: function () {
                            q(), e()
                        }
                    })]
                }), j.jsxs("form", {
                    action: m,
                    method: "POST",
                    ref: a,
                    children: [j.jsx("input", {
                        name: "h",
                        type: "hidden",
                        value: d == null ? void 0 : (o = d.viewer) == null ? void 0 : o.logout_hash
                    }), j.jsx("input", {name: "ref", type: "hidden", value: "mb"}), j.jsx("input", {
                        name: "next",
                        type: "hidden",
                        value: f
                    })]
                })]
            })]
        })
    }
}), null);
__d("CometProfilePlusExpressOnboardingDialog.entrypoint", ["JSResourceForInteraction", "CometProfilePlusExpressOnboardingDialogQuery$Parameters"], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        getPreloadProps: function () {
            return {
                queries: {
                    cometProfilePlusExpressOnboardingQueryReference: {
                        parameters: b("CometProfilePlusExpressOnboardingDialogQuery$Parameters"),
                        variables: {}
                    }
                }
            }
        },
        root: b("JSResourceForInteraction")("CometProfilePlusExpressOnboardingDialog.react").__setRef("CometProfilePlusExpressOnboardingDialog.entrypoint")
    };
    e.exports = a
}), null);
__d("CometProfileSwitcherPagePublishingAuthorizationCard.react", ["ix", "fbt", "CometImage.react", "CometTextWithEntitiesRelay.react", "PagesIntegrityEventTypedLoggerLite", "React", "RelayHooks", "TetraButton.react", "TetraText.react", "asset", "stylex", "CometProfileSwitcherPagePublishingAuthorizationCard_query.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"), k = b("PagesIntegrityEventTypedLoggerLite").log;

    function a(a) {
        var c, d;
        a = a.query;
        a = b("RelayHooks").useFragment(i !== void 0 ? i : i = b("CometProfileSwitcherPagePublishingAuthorizationCard_query.graphql"), a);
        c = a == null ? void 0 : (c = a.viewer) == null ? void 0 : (c = c.actor) == null ? void 0 : c.id;
        var e = a == null ? void 0 : (d = a.viewer) == null ? void 0 : (d = d.actor) == null ? void 0 : d.page_publishing_authorization_admin_notice;
        d = a == null ? void 0 : (d = a.viewer) == null ? void 0 : (a = d.actor) == null ? void 0 : a.page_publishing_authorization_hub_action_url;
        j.useEffect(function () {
            e != null && k({
                event: "view",
                event_callsite: "profile_plus_switcher",
                event_target: "profile_plus_switcher_banner",
                extra_data: {is_comet_render: "true"}
            })
        }, [e]);
        return c == null || e == null || d == null ? null : j.jsx("div", {
            className: "dati1w0a hv4rvrfc sj5x9vvc",
            children: j.jsxs("div", {
                className: "dati1w0a hv4rvrfc sj5x9vvc qsy8amke",
                children: [j.jsxs("div", {
                    className: "discj3wi scb9dxdr dflh9lhu sj5x9vvc btwxx1t3 j83agx80",
                    children: [j.jsx("div", {children: j.jsx(b("CometImage.react"), {src: g("489662")})}), j.jsx("div", {
                        className: "tw6a2znq lrazzd5p jq4qci2q j83agx80 bp9cbjyn",
                        children: j.jsx(b("TetraText.react"), {
                            type: "headlineEmphasized4",
                            children: j.jsx(b("CometTextWithEntitiesRelay.react"), {textWithEntities: e})
                        })
                    })]
                }), j.jsx("div", {
                    className: "discj3wi dati1w0a hv4rvrfc ihqw7lf3 bp9cbjyn",
                    children: j.jsx(b("TetraButton.react"), {
                        label: h._("\u8be6\u7ec6\u4e86\u89e3"),
                        linkProps: {target: "_blank", url: d},
                        onPress: function () {
                            return k({
                                event: "click",
                                event_callsite: "profile_plus_switcher",
                                event_target: "get_started_button",
                                extra_data: {is_comet_render: "true"}
                            })
                        },
                        padding: "wide"
                    })
                })]
            })
        })
    }
}), null);
__d("CometProfileSwitcher.react", ["ix", "fbt", "CometBadge.react", "CometProfilePlusExpressOnboardingDialog.entrypoint", "CometProfileSwitcherPagePublishingAuthorizationCard.react", "Locale", "ProfilePlusAdminActivitiesFalcoEvent", "React", "RelayHooks", "TetraIcon.react", "TetraList.react", "TetraListCell.react", "TetraText.react", "WebPixelRatio", "fbicon", "goForceFullPageRedirectTo", "promiseDone", "stylex", "JSResource", "useCometEntryPointDialog", "useProfileSwitcherEngagementClickCallback", "CometRelay", "useCodedErrorDialog", "useIsMountedRef", "useProfileCometSwitcherCleanUpOnSwap", "CometProfileSwitcher_query.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"), k = b("Locale").isRTL(),
        l = b("JSResource")("CometProfileSwitchMutation").__setRef("CometProfileSwitcher.react");

    function a(a) {
        var c, d, e, f = a.onClose, m = a.onReturn;
        a = a.query;
        a = b("RelayHooks").useFragment(i !== void 0 ? i : i = b("CometProfileSwitcher_query.graphql"), a);
        c = {
            profile: a == null ? void 0 : (c = a.viewer) == null ? void 0 : c.actor,
            should_open_express_onboarding: !1
        } || {};
        d = (d = a == null ? void 0 : (d = a.viewer) == null ? void 0 : (d = d.actor) == null ? void 0 : (d = d.profile_switcher_eligible_profiles) == null ? void 0 : d.nodes) != null ? d : [];
        e = j.useState(a == null ? void 0 : (e = a.viewer) == null ? void 0 : (e = e.actor) == null ? void 0 : e.id);
        var n = e[0], o = e[1],
            p = (e = a == null ? void 0 : (e = a.viewer) == null ? void 0 : (e = e.actor) == null ? void 0 : e.is_failing_page_publishing_authorization) != null ? e : !1,
            q = b("useProfileSwitcherEngagementClickCallback")({
                item_type: "profile",
                product_bucket: "profile_account_switcher",
                subsurface: "switch_profile_menu",
                surface: "navigation"
            }), r = b("useProfileCometSwitcherCleanUpOnSwap")(a), s = b("CometRelay").useRelayEnvironment(),
            t = b("useIsMountedRef")();
        e = b("useCodedErrorDialog")(h._("\u4e2a\u4eba\u4e3b\u9875\u5207\u6362\u5931\u8d25"));
        var u = e[0], v = function (a) {
            b("promiseDone")(l.load().then(function (c) {
                c = c.switchProfile;
                c(s, {profileId: a}, {
                    onCompleted: function () {
                        t.current && f(), r(), b("goForceFullPageRedirectTo")("/")
                    }, onError: function (a) {
                        f(), u(a)
                    }
                })
            }))
        };
        e = b("useCometEntryPointDialog")(b("CometProfilePlusExpressOnboardingDialog.entrypoint"), {});
        var w = e[0];
        return j.jsxs("div", {
            className: "cbu4d94t j83agx80",
            children: [j.jsxs("div", {
                className: "discj3wi dati1w0a hv4rvrfc sj5x9vvc btwxx1t3 j83agx80",
                children: [j.jsx("div", {
                    className: "scb9dxdr sj5x9vvc dflh9lhu cxgpxx05",
                    children: j.jsx(b("TetraIcon.react"), {
                        "aria-label": h._("\u8fd4\u56de"),
                        icon: k ? b("fbicon")._(g("514454"), 20) : b("fbicon")._(g("512647"), 20),
                        onPress: m
                    })
                }), j.jsx("div", {
                    className: "tw6a2znq j83agx80 bp9cbjyn",
                    children: j.jsx(b("TetraText.react"), {
                        type: "headlineEmphasized1",
                        children: h._("\u9009\u62e9\u4e2a\u4eba\u4e3b\u9875")
                    })
                })]
            }), j.jsx(b("CometProfileSwitcherPagePublishingAuthorizationCard.react"), {query: a}), j.jsx("div", {
                className: "cxgpxx05 jbae33se", children: j.jsx(b("TetraList.react"), {
                    children: [c].concat(d).map(function (a) {
                        var c = a.profile, d = a.should_open_express_onboarding;
                        return c != null ? j.jsx(b("TetraListCell.react"), {
                            addOnPrimary: {
                                shape: "circle",
                                size: 40,
                                source: {
                                    height: (a = c == null ? void 0 : (a = c.profile_picture) == null ? void 0 : a.height) != null ? a : 40,
                                    scale: (a = c == null ? void 0 : (a = c.profile_picture) == null ? void 0 : a.scale) != null ? a : b("WebPixelRatio").get(),
                                    uri: (a = c == null ? void 0 : (a = c.profile_picture) == null ? void 0 : a.uri) != null ? a : "",
                                    width: (a = c == null ? void 0 : (a = c.profile_picture) == null ? void 0 : a.width) != null ? a : 40
                                },
                                type: "profile-photo"
                            },
                            addOnSecondary: {on: n === c.id, type: "radio"},
                            addOnSecondaryVerticalAlign: "center",
                            body: p && n !== c.id ? j.jsxs(j.Fragment, {children: [j.jsx(b("CometBadge.react"), {color: "red"}), h._("\u6682\u65f6\u53d7\u9650")]}) : c.unseen_update_count !== null && c.unseen_update_count !== 0 ? j.jsxs(j.Fragment, {
                                children: [j.jsx(b("CometBadge.react"), {}), h._({
                                    "*": "{number}\u6761\u66f4\u65b0",
                                    "_1": "1 \u6761\u66f4\u65b0"
                                }, [h._plural(c.unseen_update_count || 0, "number")])]
                            }) : null,
                            disabled: p && n !== c.id,
                            headline: c.name,
                            level: 4,
                            onPress: function () {
                                o(c.id);
                                q();
                                var a = c.id;
                                a != null && b("ProfilePlusAdminActivitiesFalcoEvent").log(function () {
                                    return {
                                        additional_profile_id: a,
                                        event: "click",
                                        event_target: "global_voice_switcher_menu_item",
                                        surface: "global_voice_switcher"
                                    }
                                });
                                if (d === !0) {
                                    var e;
                                    f();
                                    w({
                                        followerString: c.timeline_context_items && ((e = c.timeline_context_items) == null ? void 0 : (e = e.nodes[0]) == null ? void 0 : (e = e.title) == null ? void 0 : e.text),
                                        profileID: c.id,
                                        profileName: c.name
                                    })
                                } else v(c.id)
                            },
                            testid: void 0
                        }, c.id) : null
                    })
                })
            })]
        })
    }
}), null);
__d("CometAccessibilitySettingsFalcoEvent", ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("getFalcoLogPolicy_DO_NOT_USE")("1808128");
    c = b("FalcoLoggerInternal").create("comet_accessibility_settings", a);
    e.exports = c
}), null);
__d("CometSettingsDropdownKeyboard.react", ["ix", "fbt", "CometAccessibilitySettingsFalcoEvent", "CometKeyCommandSettingsContext", "JSResourceForInteraction", "Locale", "React", "TetraIcon.react", "TetraList.react", "TetraListCell.react", "TetraText.react", "fbicon", "stylex", "useCometLazyDialog"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"),
        k = b("JSResourceForInteraction")("CometKeyShortcutDialog.react").__setRef("CometSettingsDropdownKeyboard.react"),
        l = b("Locale").isRTL(), m = {
            header: {
                display: "j83agx80",
                flexDirection: "btwxx1t3",
                paddingTop: "discj3wi",
                paddingEnd: "hv4rvrfc",
                paddingBottom: "sj5x9vvc",
                paddingStart: "dati1w0a"
            },
            icon: {paddingTop: "cxgpxx05", paddingEnd: "dflh9lhu", paddingBottom: "sj5x9vvc", paddingStart: "scb9dxdr"},
            list: {paddingTop: "cxgpxx05", paddingEnd: "rz4wbd8a", paddingBottom: "jbae33se", paddingStart: "a8nywdso"},
            root: {display: "j83agx80", flexDirection: "cbu4d94t"},
            spacer: {width: "thwo4zme"},
            title: {alignItems: "bp9cbjyn", display: "j83agx80", paddingStart: "h4z51re5"}
        }, n = {
            component: j.jsx("div", {className: (i || (i = b("stylex")))(m.spacer)}),
            type: "group_member_profile_primary_addon"
        };

    function o(a) {
        b("CometAccessibilitySettingsFalcoEvent").log(function () {
            return a
        })
    }

    function a(a) {
        a = a.onReturn;
        var c = j.useContext(b("CometKeyCommandSettingsContext")), d = c.getAreSingleKeysDisabled,
            e = c.setAreSingleKeysDisabled;
        c = j.useState(d() === !1);
        d = c[0];
        var f = c[1];
        c = b("useCometLazyDialog")(k);
        var p = c[0], q = j.useCallback(function (a) {
            e(!a), f(a)
        }, [e]);
        return j.jsxs("div", {
            className: (i || (i = b("stylex")))(m.root),
            children: [j.jsxs("div", {
                className: i(m.header),
                children: [j.jsx("div", {
                    className: i(m.icon),
                    children: j.jsx(b("TetraIcon.react"), {
                        "aria-label": h._("\u8fd4\u56de"),
                        icon: l ? b("fbicon")._(g("514454"), 20) : b("fbicon")._(g("512647"), 20),
                        onPress: a
                    })
                }), j.jsx("div", {
                    className: i(m.title),
                    children: j.jsx(b("TetraText.react"), {
                        isSemanticHeading: !0,
                        type: "headlineEmphasized1",
                        children: h._("Keyboard")
                    })
                })]
            }), j.jsx("div", {
                className: i(m.list),
                children: j.jsxs(b("TetraList.react"), {
                    children: [j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: {
                            icon: b("fbicon")._(g("577844"), 20),
                            size: 36,
                            type: "contained-icon"
                        }, emphasized: !0, headline: h._("See All Keyboard Shortcuts"), onPress: function () {
                            p({}, function () {
                            }), o({event_type: "click", target_item: "see_keyboard_shortcuts"})
                        }
                    }), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: {
                            icon: b("fbicon")._(g("657879"), 20),
                            size: 36,
                            type: "contained-icon"
                        },
                        body: h._("Use single-character shortcuts to perform common actions."),
                        emphasized: !0,
                        headline: h._("Use Single-Character Keyboard Shortcuts")
                    }), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: n,
                        addOnSecondary: {on: !d, type: "radio"},
                        headline: h._("\u5173"),
                        level: 4,
                        onPress: d ? function () {
                            q(!1), o({event_type: "click", target_item: "single_keys_off"})
                        } : void 0
                    }), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: n,
                        addOnSecondary: {on: d, type: "radio"},
                        headline: h._("\u5f00"),
                        level: 4,
                        onPress: d ? void 0 : function () {
                            q(!0), o({event_type: "click", target_item: "single_keys_on"})
                        }
                    })]
                })
            })]
        })
    }
}), null);
__d("CometSettingsDropdownAppearance.react", ["ix", "fbt", "CometAccessibilitySettingsFalcoEvent", "CometDarkModeContext", "CometDensityModeContext", "CometSettingsDropdownKeyboard.react", "Locale", "React", "TetraIcon.react", "TetraList.react", "TetraListCell.react", "TetraText.react", "fbicon", "gkx", "stylex", "useTopNavigationLogging"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    var i, j = b("React"), k = b("Locale").isRTL(), l = {
        header: {
            display: "j83agx80",
            flexDirection: "btwxx1t3",
            paddingTop: "discj3wi",
            paddingEnd: "hv4rvrfc",
            paddingBottom: "sj5x9vvc",
            paddingStart: "dati1w0a"
        },
        icon: {paddingTop: "cxgpxx05", paddingEnd: "dflh9lhu", paddingBottom: "sj5x9vvc", paddingStart: "scb9dxdr"},
        list: {paddingTop: "cxgpxx05", paddingEnd: "rz4wbd8a", paddingBottom: "jbae33se", paddingStart: "a8nywdso"},
        root: {display: "j83agx80", flexDirection: "cbu4d94t"},
        spacer: {width: "thwo4zme"},
        title: {alignItems: "bp9cbjyn", display: "j83agx80", paddingStart: "h4z51re5"}
    }, m = b("gkx")("1279132"), n = {
        component: j.jsx("div", {className: (i || (i = b("stylex")))(l.spacer)}),
        type: "group_member_profile_primary_addon"
    };

    function o(a) {
        b("CometAccessibilitySettingsFalcoEvent").log(function () {
            return a
        })
    }

    function a(a) {
        var c = a.onReturn, d = a.pushPage;
        a = j.useContext(b("CometDarkModeContext"));
        var e = a.isDarkModeEnabled, f = a.setDarkModePreference;
        a = j.useContext(b("CometDensityModeContext"));
        var p = a[0], q = a[1];
        a = b("useTopNavigationLogging").useSettingsItemLoggingCallbacks("dark-mode", 1, e);
        var r = a[0];
        a = a[1];
        var s = b("useTopNavigationLogging").useSettingsItemLoggingCallbacks("compact-mode", 2, p), t = s[0];
        s = s[1];
        var u = m ? h._("Display & Accessibility") : h._("\u663e\u793a\u504f\u597d\u8bbe\u7f6e");
        return j.jsxs("div", {
            className: (i || (i = b("stylex")))(l.root),
            children: [j.jsxs("div", {
                className: i(l.header),
                children: [j.jsx("div", {
                    className: i(l.icon),
                    children: j.jsx(b("TetraIcon.react"), {
                        "aria-label": h._("\u8fd4\u56de"),
                        icon: k ? b("fbicon")._(g("514454"), 20) : b("fbicon")._(g("512647"), 20),
                        onPress: c
                    })
                }), j.jsx("div", {
                    className: i(l.title),
                    children: j.jsx(b("TetraText.react"), {
                        isSemanticHeading: !0,
                        type: "headlineEmphasized1",
                        children: u
                    })
                })]
            }), j.jsx("div", {
                className: i(l.list), children: j.jsxs(b("TetraList.react"), {
                    children: [j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: {
                            icon: b("fbicon")._(g("832941"), 20),
                            size: 36,
                            type: "contained-icon"
                        },
                        body: h._("Adjust the appearance of Facebook to reduce glare and give your eyes a break."),
                        emphasized: !0,
                        headline: h._("\u591c\u95f4\u6a21\u5f0f")
                    }), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: n,
                        addOnSecondary: {on: !e, type: "radio"},
                        headline: h._("\u5173"),
                        level: 4,
                        onPress: e ? function () {
                            r(), f(!1)
                        } : void 0,
                        ref: e ? a : void 0
                    }), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: n,
                        addOnSecondary: {on: e, type: "radio"},
                        headline: h._("\u5f00"),
                        level: 4,
                        onPress: e ? void 0 : function () {
                            r(), f(!0)
                        },
                        ref: e ? void 0 : a
                    }), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: {
                            icon: b("fbicon")._(g("1252034"), 20),
                            size: 36,
                            type: "contained-icon"
                        },
                        body: h._("Make your font size smaller so more content can fit on the screen."),
                        emphasized: !0,
                        headline: h._("\u7cbe\u7b80\u6a21\u5f0f")
                    }), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: n,
                        addOnSecondary: {on: !p, type: "radio"},
                        headline: h._("\u5173"),
                        level: 4,
                        onPress: p ? function () {
                            t(), q(!1)
                        } : void 0,
                        ref: p ? s : void 0
                    }), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: n,
                        addOnSecondary: {on: p, type: "radio"},
                        headline: h._("\u5f00"),
                        level: 4,
                        onPress: p ? void 0 : function () {
                            t(), q(!0)
                        },
                        ref: p ? void 0 : s
                    }), m ? j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: {
                            icon: b("fbicon")._(g("577844"), 20),
                            size: 36,
                            type: "contained-icon"
                        },
                        addOnSecondary: {
                            color: "secondary",
                            icon: k ? b("fbicon")._(g("492491"), 24) : b("fbicon")._(g("492539"), 24),
                            type: "icon"
                        },
                        emphasized: !0,
                        headline: h._("Keyboard"),
                        onPress: function () {
                            d(function (a) {
                                return j.jsx(b("CometSettingsDropdownKeyboard.react"), {onReturn: a.onReturn})
                            }), o({event_type: "click", target_item: "keyboard"})
                        }
                    }) : null]
                })
            })]
        })
    }

    c = a;
    e.exports = c
}), null);
__d("CometSettingsDropdownHeader.react", ["fbt", "CometRelay", "React", "TetraListCell.react", "XCometMeControllerRouteBuilder", "gkx", "useTopNavigationLogging", "CometSettingsDropdownHeader_viewer.graphql"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h, i = b("React"), j = b("XCometMeControllerRouteBuilder").buildURL({});

    function a(a) {
        var c, d, e, f = a.onClick, k = a.selected;
        a = a.viewer;
        a = b("CometRelay").useFragment(h !== void 0 ? h : h = b("CometSettingsDropdownHeader_viewer.graphql"), a);
        c = a == null ? void 0 : (c = a.actor) == null ? void 0 : c.name;
        d = a == null ? void 0 : (d = a.actor) == null ? void 0 : (d = d.settings_dropdown_profile_picture) == null ? void 0 : d.uri;
        var l = b("useTopNavigationLogging").useSettingsItemLoggingCallbacks("profile", 0, !1), m = l[0];
        l = l[1];
        e = ((a == null ? void 0 : (e = a.actor) == null ? void 0 : (e = e.profileSwitcherEligibleProfiles) == null ? void 0 : e.count) || 0) > 0;
        e = b("gkx")("1663500") && e;
        var n = e ? 36 : 60;
        return c == null ? null : i.jsx(b("TetraListCell.react"), {
            addOnPrimary: d == null ? void 0 : {
                shape: "circle",
                size: n,
                source: {height: n, uri: d, width: n},
                type: "profile-photo"
            },
            addOnPrimaryVerticalAlign: "center",
            addOnSecondary: k != null && e ? {on: k, type: "radio"} : null,
            addOnSecondaryVerticalAlign: "center",
            body: (a == null ? void 0 : (d = a.actor) == null ? void 0 : d.should_use_page_rename) === !0 ? g._("\u67e5\u770b\u4f60\u7684\u516c\u5171\u4e3b\u9875") : g._("\u67e5\u770b\u4f60\u7684\u4e2a\u4eba\u4e3b\u9875"),
            emphasized: !0,
            headline: c,
            level: e ? 4 : 3,
            linkProps: {routeTarget: "self", url: j},
            onPress: function (a) {
                f && f(a), m()
            },
            ref: l
        })
    }
}), null);
__d("CometSettingsDropdownListItem.react", ["React", "TetraListCell.react", "useTopNavigationLogging"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var c = a.cellProps, d = a.itemKey, e = a.position;
        a = a.selected;
        var f = c.onPress;
        d = b("useTopNavigationLogging").useSettingsItemLoggingCallbacks(d, e, a);
        var h = d[0];
        e = d[1];
        a = g.useCallback(function (a) {
            h(), f && f(a)
        }, [h, f]);
        return g.jsx(b("TetraListCell.react"), babelHelpers["extends"]({}, c, {onPress: a, ref: e}))
    }
}), null);
__d("CometSettingsDropdownQuickHelp.react", ["ix", "fbt", "CometFRX.entrypoint", "CometRelay", "Locale", "React", "TetraIcon.react", "TetraList.react", "TetraListCell.react", "TetraText.react", "XCometPrivacyCheckupControllerRouteBuilder", "fbicon", "gkx", "stylex", "useCometEntryPointDialog", "useCometReportBug", "useNullthrowsViolation", "useShouldRenderFullTopNav", "CometSettingsDropdownQuickHelpQuery.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"), k = b("Locale").isRTL();

    function a(a) {
        var c = a.onClose;
        a = a.onReturn;
        var d = b("CometRelay").useLazyLoadQuery(i !== void 0 ? i : i = b("CometSettingsDropdownQuickHelpQuery.graphql"), {});
        d = b("useNullthrowsViolation")((d = d.viewer) == null ? void 0 : (d = d.account_user) == null ? void 0 : d.id);
        var e = b("useCometReportBug")(), f = e[0];
        e = b("useCometEntryPointDialog")(b("CometFRX.entrypoint"), {
            entryPoint: "STRUCTURED_REPORT_BUTTON",
            id: d,
            location: "help_and_support"
        });
        var l = e[0];
        d = b("useShouldRenderFullTopNav")();
        e = [{
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("496951"), 20), size: 36, type: "contained-icon"},
                headline: h._("\u5e2e\u52a9\u4e2d\u5fc3"),
                level: 4,
                linkProps: {target: "_blank", url: "https://www.facebook.com/help/"},
                onPress: c
            }, render: !0
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("497245"), 20), size: 36, type: "contained-icon"},
                headline: h._("\u9690\u79c1\u8bbe\u7f6e\u68c0\u67e5"),
                level: 4,
                linkProps: {url: b("XCometPrivacyCheckupControllerRouteBuilder").buildURL({source: "quick_help"})},
                onPress: c
            }, render: !1
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("497567"), 20), size: 36, type: "contained-icon"},
                headline: h._("\u5feb\u6377\u9690\u79c1\u8bbe\u7f6e"),
                level: 4,
                linkProps: {url: "/privacy/"},
                onPress: c
            }, render: !1
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("508554"), 20), size: 36, type: "contained-icon"},
                headline: h._("\u5e2e\u52a9\u8bba\u575b"),
                level: 4,
                linkProps: {target: "_blank", url: "https://www.facebook.com/help/community/"},
                onPress: c
            }, render: !0
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("495079"), 20), size: 36, type: "contained-icon"},
                headline: h._("\u4e3e\u62a5\u5e72\u6270\u4eba\u53e3\u666e\u67e5\u6216\u9009\u6c11\u7684\u884c\u4e3a"),
                level: 4,
                onPress: function () {
                    l({}), c()
                }
            }, render: b("gkx")("1300497")
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("495079"), 20), size: 36, type: "contained-icon"},
                headline: h._("\u5e2e\u52a9\u4e2d\u5fc3\u4fe1\u7bb1"),
                level: 4,
                linkProps: {url: "/support?ref=contextual"},
                onPress: c
            }, render: d
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("490580"), 20), size: 36, type: "contained-icon"},
                headline: h._("\u62a5\u544a\u95ee\u9898"),
                level: 4,
                onPress: function () {
                    f(), c()
                }
            }, render: !0
        }].filter(function (a) {
            return a.render
        });
        return j.jsxs("div", {
            className: "cbu4d94t j83agx80",
            children: [j.jsxs("div", {
                className: "dati1w0a sj5x9vvc hv4rvrfc discj3wi btwxx1t3 j83agx80",
                children: [j.jsx("div", {
                    className: "scb9dxdr sj5x9vvc dflh9lhu cxgpxx05",
                    children: j.jsx(b("TetraIcon.react"), {
                        "aria-label": h._("\u8fd4\u56de"),
                        icon: k ? b("fbicon")._(g("514454"), 20) : b("fbicon")._(g("512647"), 20),
                        onPress: a
                    })
                }), j.jsx("div", {
                    className: "h4z51re5 j83agx80 bp9cbjyn",
                    children: j.jsx(b("TetraText.react"), {
                        isSemanticHeading: !0,
                        type: "headlineEmphasized1",
                        children: h._("\u5e2e\u52a9\u4e0e\u652f\u6301")
                    })
                })]
            }), j.jsx("div", {
                className: "a8nywdso jbae33se rz4wbd8a cxgpxx05",
                children: j.jsx(b("TetraList.react"), {
                    items: e, children: function (a) {
                        var c = a.item.cellProps;
                        a = a.props;
                        return j.createElement(b("TetraListCell.react"), babelHelpers["extends"]({}, c, {key: a.key}))
                    }
                })
            })]
        })
    }
}), null);
__d("CometSettingsDropdownSettingsAndPrivacy.react", ["ix", "fbt", "CometRelay", "CometSettingsDropdownListItem.react", "Locale", "React", "TetraIcon.react", "TetraList.react", "TetraText.react", "XCometActivityLogControllerRouteBuilder", "XCometPrivacyCheckupControllerRouteBuilder", "fbicon", "gkx", "recoverableViolation", "requireCond", "stylex", "useCometFeedPreferencesDialog", "useCometInteractionTracing", "useShouldRenderFullTopNav", "cr:1571188", "CometSettingsDropdownSettingsAndPrivacy_viewer.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"), k = (c = b("cr:1571188")) != null ? c : function () {
        return null
    }, l = b("Locale").isRTL();

    function a(a) {
        var c, d, e = a.onClose, f = a.onReturn;
        a = a.viewer;
        a = b("CometRelay").useFragment(i !== void 0 ? i : i = b("CometSettingsDropdownSettingsAndPrivacy_viewer.graphql"), a);
        var m = k();
        c = a == null ? void 0 : (c = a.actor) == null ? void 0 : c.username;
        d = a == null ? void 0 : (d = a.actor) == null ? void 0 : d.id;
        d = c == null || c === "" ? d : c;
        c = d == null || d === "" ? null : b("XCometActivityLogControllerRouteBuilder").buildURL({vanity: d});
        c == null && b("recoverableViolation")("Was not able to get activity log uri for settings menu", "comet_ui");
        d = (a == null ? void 0 : a.is_eligible_for_account_level_settings) === !0;
        a = d && !b("gkx")("1545458");
        var n = b("useCometFeedPreferencesDialog")(), o = n[0];
        n = n[1];
        var p = b("useCometInteractionTracing")(30605385, "responsive", "INTERACTION"),
            q = b("useShouldRenderFullTopNav")();
        a = [{
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("497567"), 20), size: 36, type: "contained-icon"},
                headline: h._("\u8bbe\u7f6e"),
                level: 4,
                linkProps: {url: "/settings"},
                onPress: e,
                testid: "CometSettingsButton"
            }, itemKey: "settings-privacy", render: q
        }, d === !1 ? null : {
            cellProps: {
                addOnPrimary: {
                    icon: b("fbicon")._(g("789724"), 20),
                    size: 36,
                    type: "contained-icon"
                },
                headline: h._("\u9690\u79c1\u8bbe\u7f6e\u68c0\u67e5"),
                level: 4,
                linkProps: {url: b("XCometPrivacyCheckupControllerRouteBuilder").buildURL({source: "settings_and_privacy"})},
                onPress: e,
                testid: "CometSettingsDropdownPrivacyCheckup"
            }, itemKey: "privacy-checkup", render: q
        }, a === !1 ? null : {
            cellProps: {
                addOnPrimary: {
                    icon: b("fbicon")._(g("497245"), 20),
                    size: 36,
                    type: "contained-icon"
                },
                headline: h._("\u5feb\u6377\u9690\u79c1\u8bbe\u7f6e"),
                level: 4,
                linkProps: {url: "/privacy/"},
                onPress: e,
                testid: "CometPrivacyShortcutsButton"
            }, itemKey: "privacy", render: q
        }, c == null ? null : {
            cellProps: {
                addOnPrimary: {
                    icon: b("fbicon")._(g("486354"), 20),
                    size: 36,
                    type: "contained-icon"
                }, headline: h._("\u52a8\u6001\u8bb0\u5f55"), level: 4, linkProps: {url: c}, onPress: e
            }, itemKey: "activity-log", render: q
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("607148"), 20), size: 36, type: "contained-icon"},
                headline: h._("\u52a8\u6001\u6d88\u606f\u504f\u597d\u8bbe\u7f6e"),
                level: 4,
                onPress: function () {
                    p(function (a) {
                        a.addMetadata("SurfaceType", "Comet"), o()
                    }), e()
                },
                onPressIn: n,
                testid: "CometNewsFeedPreferencesButton"
            }, itemKey: "news-feed-preferences", render: q
        }, d === !1 ? null : {
            cellProps: {
                addOnPrimary: {
                    icon: b("fbicon")._(g("487622"), 20),
                    size: 36,
                    type: "contained-icon"
                },
                headline: h._("\u8bed\u8a00"),
                level: 4,
                linkProps: {url: "/settings?tab=language"},
                onPress: e,
                testid: "CometSettingsButton"
            }, itemKey: "language", render: q
        }, m].filter(Boolean).filter(function (a) {
            return a.render
        });
        return j.jsxs("div", {
            className: "cbu4d94t j83agx80",
            children: [j.jsxs("div", {
                className: "dati1w0a sj5x9vvc hv4rvrfc discj3wi btwxx1t3 j83agx80",
                children: [j.jsx("div", {
                    className: "scb9dxdr sj5x9vvc dflh9lhu cxgpxx05",
                    children: j.jsx(b("TetraIcon.react"), {
                        "aria-label": h._("\u8fd4\u56de"),
                        icon: l ? b("fbicon")._(g("514454"), 20) : b("fbicon")._(g("512647"), 20),
                        onPress: f
                    })
                }), j.jsx("div", {
                    className: "h4z51re5 j83agx80 bp9cbjyn",
                    children: j.jsx(b("TetraText.react"), {
                        isSemanticHeading: !0,
                        type: "headlineEmphasized1",
                        children: h._("\u8bbe\u7f6e\u4e0e\u9690\u79c1")
                    })
                })]
            }), j.jsx("div", {
                className: "a8nywdso jbae33se rz4wbd8a cxgpxx05",
                children: j.jsx(b("TetraList.react"), {
                    items: a, children: function (a) {
                        var c, d = a.item, e = d.cellProps;
                        d = d.itemKey;
                        a = a.props;
                        var f = e.addOnSecondary;
                        c = (c = a.key) != null ? c : -1;
                        f = f != null && f.value != null ? f.value : !1;
                        return j.jsx(b("CometSettingsDropdownListItem.react"), {
                            cellProps: e,
                            itemKey: d,
                            position: c,
                            selected: f
                        }, a.key)
                    }
                })
            })]
        })
    }
}), null);
__d("getProfileSwitcherListCellProps", ["fbt", "CometBadge.react", "React", "TetraListCell.react", "WebPixelRatio"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function a(a) {
        var c, d = a.isFailingPagePublishingAuthorization;
        d = d === void 0 ? !1 : d;
        var e = a.onPress;
        e = e === void 0 ? function () {
        } : e;
        var f = a.user, i = a.selected;
        i = i === void 0 ? !1 : i;
        var j = a.size;
        j = j === void 0 ? 40 : j;
        a = a.testid;
        return {
            addOnPrimary: {
                shape: "circle",
                size: j,
                source: {
                    height: (c = f == null ? void 0 : (c = f.profile_picture) == null ? void 0 : c.height) != null ? c : j,
                    scale: (c = f == null ? void 0 : (c = f.profile_picture) == null ? void 0 : c.scale) != null ? c : b("WebPixelRatio").get(),
                    uri: (c = f == null ? void 0 : (c = f.profile_picture) == null ? void 0 : c.uri) != null ? c : "",
                    width: (c = f == null ? void 0 : (c = f.profile_picture) == null ? void 0 : c.width) != null ? c : j
                },
                type: "profile-photo"
            },
            addOnSecondary: {on: i, type: "radio"},
            addOnSecondaryVerticalAlign: "center",
            body: d && !i ? h.jsxs(h.Fragment, {children: [h.jsx(b("CometBadge.react"), {color: "red"}), g._("\u6682\u65f6\u53d7\u9650")]}) : (f == null ? void 0 : f.unseen_update_count) !== null && (f == null ? void 0 : f.unseen_update_count) !== 0 ? h.jsxs(h.Fragment, {
                children: [h.jsx(b("CometBadge.react"), {}), g._({
                    "*": "{number}\u6761\u66f4\u65b0",
                    "_1": "1 \u6761\u66f4\u65b0"
                }, [g._plural((f == null ? void 0 : f.unseen_update_count) || 0, "number")])]
            }) : null,
            disabled: d && !i,
            headline: f == null ? void 0 : f.name,
            level: 4,
            onPress: e,
            testid: a
        }
    }
}), null);
__d("CometProfileSwitcherListCell.react", ["CometRelay", "React", "TetraListCell.react", "getProfileSwitcherListCellProps", "useProfileSwitcherEngagementClickCallback", "CometProfileSwitcherListCell_profile.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h = b("React");

    function a(a) {
        var c, d = a.isFailingPagePublishingAuthorization;
        d = d === void 0 ? !1 : d;
        var e = a.loggerData, f = a.onClick, i = a.profile;
        a = a.selected;
        a = a === void 0 ? !1 : a;
        i = b("CometRelay").useFragment(g !== void 0 ? g : g = b("CometProfileSwitcherListCell_profile.graphql"), i);
        var j = b("useProfileSwitcherEngagementClickCallback")((c = e) != null ? c : {});
        d = b("getProfileSwitcherListCellProps")({
            isFailingPagePublishingAuthorization: d,
            onPress: function () {
                e != null && j(), f && f()
            },
            selected: a,
            size: 40,
            user: {
                id: i == null ? void 0 : i.id,
                name: i == null ? void 0 : i.name,
                profile_picture: {
                    height: i == null ? void 0 : (c = i.profile_picture) == null ? void 0 : c.height,
                    scale: i == null ? void 0 : (d = i.profile_picture) == null ? void 0 : d.scale,
                    uri: i == null ? void 0 : (a = i.profile_picture) == null ? void 0 : a.uri,
                    width: i == null ? void 0 : (c = i.profile_picture) == null ? void 0 : c.width
                },
                unseen_update_count: i == null ? void 0 : i.unseen_update_count
            }
        });
        return h.jsx(b("TetraListCell.react"), babelHelpers["extends"]({}, d))
    }
}), null);
__d("CometProfileAndAccountSwitcher.react", ["ix", "fbt", "CometBadge.react", "CometListItemSeparator.react", "CometLoggedInAccountSwitcher.react", "CometProfilePlusExpressOnboardingDialog.entrypoint", "CometProfileSwitcherListCell.react", "CometProfileSwitcherPagePublishingAuthorizationCard.react", "Locale", "React", "RelayHooks", "TetraIcon.react", "TetraList.react", "TetraListCell.react", "TetraText.react", "WebPixelRatio", "fbicon", "goForceFullPageRedirectTo", "orEmptyArray", "promiseDone", "stylex", "JSResource", "CometRelay", "useCodedErrorDialog", "useCometEntryPointDialog", "useIsMountedRef", "useProfileCometSwitcherCleanUpOnSwap", "useProfileSwitcherEngagementClickCallback", "CometProfileAndAccountSwitcher_query.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"), k = b("Locale").isRTL(),
        l = b("JSResource")("CometProfileSwitchMutation").__setRef("CometProfileAndAccountSwitcher.react"), m = 40;

    function a(a) {
        var c, d, e, f = a.onClose, n = a.onReturn, o = a.pushPage;
        a = a.query;
        var p = b("RelayHooks").useFragment(i !== void 0 ? i : i = b("CometProfileAndAccountSwitcher_query.graphql"), a);
        a = {
            profile: p == null ? void 0 : (a = p.viewer) == null ? void 0 : a.actor,
            should_open_express_onboarding: !1
        } || {};
        c = (c = p == null ? void 0 : (c = p.viewer) == null ? void 0 : (c = c.actor) == null ? void 0 : (c = c.profile_switcher_eligible_profiles) == null ? void 0 : c.nodes) != null ? c : [];
        var q = (d = p == null ? void 0 : (d = p.viewer) == null ? void 0 : (d = d.actor) == null ? void 0 : d.is_failing_page_publishing_authorization) != null ? d : !1;
        d = j.useState(p == null ? void 0 : (d = p.viewer) == null ? void 0 : (d = d.actor) == null ? void 0 : d.id);
        var r = d[0], s = d[1],
            t = {product_bucket: "profile_account_switcher", subsurface: "switch_profile_menu", surface: "navigation"},
            u = b("useProfileSwitcherEngagementClickCallback")(babelHelpers["extends"]({}, t, {item_type: "more"})),
            v = b("useProfileSwitcherEngagementClickCallback")(babelHelpers["extends"]({}, t, {item_type: "back"})),
            w = b("useProfileCometSwitcherCleanUpOnSwap")(p), x = b("CometRelay").useRelayEnvironment(),
            y = b("useIsMountedRef")();
        d = b("useCodedErrorDialog")(h._("\u4e2a\u4eba\u4e3b\u9875\u5207\u6362\u5931\u8d25"));
        var z = d[0], A = function (a) {
            b("promiseDone")(l.load().then(function (c) {
                c = c.switchProfile;
                c(x, {profileId: a}, {
                    onCompleted: function () {
                        y.current && f(), w(), b("goForceFullPageRedirectTo")("/")
                    }, onError: function (a) {
                        f(), z(a)
                    }
                })
            }))
        };
        d = p == null ? void 0 : (d = p.viewer) == null ? void 0 : d.first_account[0];
        e = b("orEmptyArray")(p == null ? void 0 : (e = p.viewer) == null ? void 0 : e.device_switchable_accounts);
        var B = 0;
        e.forEach(function (a) {
            B += a.unread_notification_count || 0
        });
        e = b("useCometEntryPointDialog")(b("CometProfilePlusExpressOnboardingDialog.entrypoint"), {});
        var C = e[0];
        return j.jsxs("div", {
            className: "cbu4d94t j83agx80",
            children: [j.jsxs("div", {
                className: "discj3wi dati1w0a hv4rvrfc sj5x9vvc btwxx1t3 j83agx80",
                children: [j.jsx("div", {
                    className: "scb9dxdr sj5x9vvc dflh9lhu cxgpxx05",
                    children: j.jsx(b("TetraIcon.react"), {
                        "aria-label": h._("\u8fd4\u56de"),
                        icon: k ? b("fbicon")._(g("514454"), 20) : b("fbicon")._(g("512647"), 20),
                        onPress: function () {
                            v(), n()
                        }
                    })
                }), j.jsx("div", {
                    className: "tw6a2znq j83agx80 bp9cbjyn",
                    children: j.jsx(b("TetraText.react"), {
                        type: "headlineEmphasized1",
                        children: h._("\u5207\u6362\u4e2a\u4eba\u4e3b\u9875")
                    })
                })]
            }), j.jsx(b("CometProfileSwitcherPagePublishingAuthorizationCard.react"), {query: p}), j.jsx("div", {
                className: "cxgpxx05 jbae33se", children: j.jsxs(b("TetraList.react"), {
                    children: [[a].concat(c).map(function (a) {
                        var c = a.profile, d = a.should_open_express_onboarding;
                        return j.jsx(b("CometProfileSwitcherListCell.react"), {
                            isFailingPagePublishingAuthorization: q,
                            loggerData: babelHelpers["extends"]({}, t, {
                                item_type: "profile",
                                profile_id_dummy: c == null ? void 0 : c.id
                            }),
                            onClick: function () {
                                s(c == null ? void 0 : c.id);
                                if (d === !0) {
                                    var a;
                                    f();
                                    C({
                                        followerString: (c == null ? void 0 : c.timeline_context_items) && ((a = c.timeline_context_items) == null ? void 0 : (a = a.nodes[0]) == null ? void 0 : (a = a.title) == null ? void 0 : a.text),
                                        profileID: c == null ? void 0 : c.id,
                                        profileName: c == null ? void 0 : c.name
                                    })
                                } else A(c == null ? void 0 : c.id)
                            },
                            profile: c,
                            selected: r === (c == null ? void 0 : c.id)
                        }, c == null ? void 0 : c.id)
                    }), j.jsx(b("CometListItemSeparator.react"), {}), j.jsx(b("TetraListCell.react"), {
                        addOnPrimary: {
                            shape: "circle",
                            size: m,
                            source: {
                                height: (c = d == null ? void 0 : (e = d.user) == null ? void 0 : (a = e.profile_picture) == null ? void 0 : a.height) != null ? c : m,
                                scale: (c = d == null ? void 0 : (e = d.user) == null ? void 0 : (a = e.profile_picture) == null ? void 0 : a.scale) != null ? c : b("WebPixelRatio").get(),
                                uri: (c = d == null ? void 0 : (e = d.user) == null ? void 0 : (a = e.profile_picture) == null ? void 0 : a.uri) != null ? c : "",
                                width: (c = d == null ? void 0 : (e = d.user) == null ? void 0 : (a = e.profile_picture) == null ? void 0 : a.width) != null ? c : m
                            },
                            type: "profile-photo"
                        },
                        addOnSecondary: {color: "secondary", icon: b("fbicon")._(g("492539"), 24), type: "icon"},
                        body: B > 0 ? j.jsxs(j.Fragment, {
                            children: [j.jsx(b("CometBadge.react"), {}), h._({
                                "*": "{number}\u6761\u66f4\u65b0",
                                "_1": "1 \u6761\u66f4\u65b0"
                            }, [h._plural(B || 0, "number")])]
                        }) : null,
                        headline: h._("\u5207\u6362\u5e10\u6237"),
                        level: 4,
                        onPress: function () {
                            return o(function (a) {
                                a = a.onReturn;
                                u();
                                return j.jsx(b("CometLoggedInAccountSwitcher.react"), {
                                    onClose: f,
                                    onReturn: a,
                                    query: p
                                })
                            })
                        }
                    }, d == null ? void 0 : (e = d.user) == null ? void 0 : e.id)]
                })
            })]
        })
    }
}), null);
__d("CometLoggedInAccountSwitcherPopoverMenu.entrypoint", ["CometLoggedInAccountSwitcherPopoverMenuQuery$Parameters", "JSResource"], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        getPreloadProps: function () {
            return {
                queries: {
                    root: {
                        parameters: b("CometLoggedInAccountSwitcherPopoverMenuQuery$Parameters"),
                        variables: {}
                    }
                }
            }
        },
        root: b("JSResource")("CometLoggedInAccountSwitcherPopoverMenu.react").__setRef("CometLoggedInAccountSwitcherPopoverMenu.entrypoint")
    };
    e.exports = a
}), null);
__d("useCometLoggedInAccountSwitcherListCell", ["ix", "fbt", "CometBadge.react", "CometEntryPointPopoverTrigger.react", "CometLoggedInAccountSwitcher.react", "CometLoggedInAccountSwitcherAccountForm.react", "CometPopoverLoadingState.react", "CometRelay", "React", "TetraIcon.react", "WebPixelRatio", "fbicon", "gkx", "orEmptyArray", "stylex", "useCometLoggedInAccountSwitcherSubmitForm", "useProfileSwitcherEngagementClickCallback", "useCometLoggedInAccountSwitcherListCell_query.graphql", "CometLoggedInAccountSwitcherPopoverMenu.entrypoint"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"), k = 36, l = 20;
    (l - k) / 2;

    function a(a, c, d) {
        var e, f,
            m = b("CometRelay").useFragment(i !== void 0 ? i : i = b("useCometLoggedInAccountSwitcherListCell_query.graphql"), a);
        a = j.useRef(null);
        var n = b("useCometLoggedInAccountSwitcherSubmitForm")(m, a);
        e = b("orEmptyArray")(m == null ? void 0 : (e = m.viewer) == null ? void 0 : e.device_switchable_accounts);
        var o = 0;
        e.forEach(function (a) {
            o += a.unread_notification_count || 0
        });
        e = {
            product_bucket: b("gkx")("1475594") ? "profile_account_switcher" : "account_switcher",
            subsurface: "settings_menu",
            surface: "navigation"
        };
        var p = b("useProfileSwitcherEngagementClickCallback")(babelHelpers["extends"]({}, e, {item_type: "account"})),
            q = b("useProfileSwitcherEngagementClickCallback")(babelHelpers["extends"]({}, e, {item_type: "more"}));
        e = m == null ? void 0 : (e = m.viewer) == null ? void 0 : (e = e.first_account) == null ? void 0 : e[0];
        var r = e == null ? void 0 : e.user;
        if ((m == null ? void 0 : (f = m.viewer) == null ? void 0 : (f = f.device_switchable_accounts) == null ? void 0 : f.length) === 1 && e != null) {
            f = e.form;
            e = e.unread_notification_count;
            if (f != null) {
                var s;
                return {
                    cellProps: {
                        addOnPrimary: {
                            addOnTopEnd: ((s = e) != null ? s : 0) > 0 ? {
                                number: (s = e) != null ? s : 0,
                                type: "notificationBadge"
                            } : void 0,
                            shape: "circle",
                            size: 36,
                            source: {
                                height: (s = r == null ? void 0 : (e = r.profile_picture) == null ? void 0 : e.height) != null ? s : 36,
                                scale: (s = r == null ? void 0 : (e = r.profile_picture) == null ? void 0 : e.scale) != null ? s : b("WebPixelRatio").get(),
                                uri: (s = r == null ? void 0 : (e = r.profile_picture) == null ? void 0 : e.uri) != null ? s : "",
                                width: (s = r == null ? void 0 : (e = r.profile_picture) == null ? void 0 : e.width) != null ? s : 36
                            },
                            type: "profile-photo"
                        },
                        addOnSecondary: {
                            addOn: j.jsx(b("CometEntryPointPopoverTrigger.react"), {
                                align: "end",
                                autoAlign: !0,
                                entryPointParams: {},
                                fallback: j.jsx(b("CometPopoverLoadingState.react"), {}),
                                otherProps: {},
                                popoverEntryPoint: b("CometLoggedInAccountSwitcherPopoverMenu.entrypoint"),
                                popoverType: "menu",
                                children: function (a, c) {
                                    return j.jsx(b("TetraIcon.react"), {
                                        "aria-label": h._("\u83dc\u5355"),
                                        color: "secondary",
                                        icon: b("fbicon")._(g("484388"), 24),
                                        onPress: c,
                                        ref: a
                                    })
                                }
                            }), type: "body"
                        },
                        body: j.jsxs(j.Fragment, {
                            children: [h._("\u4ee5{name}\u7684\u8eab\u4efd\u767b\u5f55", [h._param("name", r == null ? void 0 : r.name)]), j.jsx(b("CometLoggedInAccountSwitcherAccountForm.react"), {
                                form: f,
                                formRef: a
                            })]
                        }),
                        headline: h._("\u5207\u6362\u5e10\u6237"),
                        level: 4,
                        onPress: function () {
                            p(), n()
                        }
                    }, itemKey: "account-switcher", render: !0
                }
            }
        }
        e = {
            addOnTopEnd: o > 0 ? {number: o, type: "notificationBadge"} : void 0,
            shape: "circle",
            size: 36,
            source: {
                height: (s = r == null ? void 0 : (e = r.profile_picture) == null ? void 0 : e.height) != null ? s : 36,
                scale: (a = r == null ? void 0 : (f = r.profile_picture) == null ? void 0 : f.scale) != null ? a : b("WebPixelRatio").get(),
                uri: (s = r == null ? void 0 : (e = r.profile_picture) == null ? void 0 : e.uri) != null ? s : "",
                width: (a = r == null ? void 0 : (f = r.profile_picture) == null ? void 0 : f.width) != null ? a : 36
            },
            type: "profile-photo"
        };
        return {
            cellProps: {
                addOnPrimary: b("gkx")("1475594") ? e : {
                    icon: function () {
                        var a;
                        return j.jsxs("div", {
                            className: "l9j0dhe7",
                            children: [(m == null ? void 0 : (a = m.viewer) == null ? void 0 : a.device_switchable_account_has_notification) ? j.jsx("div", {
                                className: "tkr6xdv7 nezaghv5 pmk7jnqg e712q9ov pq6dq46d",
                                children: j.jsx(b("CometBadge.react"), {color: "red", isProfileBadge: !0, size: 10})
                            }) : null, j.jsx(b("TetraIcon.react"), {
                                color: "secondary",
                                icon: b("fbicon")._(g("622241"), 20),
                                size: l
                            })]
                        })
                    }, size: k, type: "contained-icon"
                },
                addOnSecondary: {color: "secondary", icon: b("fbicon")._(g("492539"), 24), type: "icon"},
                headline: h._("\u5207\u6362\u5e10\u6237"),
                level: 4,
                onPress: function () {
                    c(function (a) {
                        a = a.onReturn;
                        if (b("CometLoggedInAccountSwitcher.react") == null) return;
                        q();
                        return j.jsx(b("CometLoggedInAccountSwitcher.react"), {onClose: d, onReturn: a, query: m})
                    })
                }
            },
            itemKey: "account-switcher",
            render: ((f = m == null ? void 0 : (s = m.viewer) == null ? void 0 : (r = s.device_switchable_accounts) == null ? void 0 : r.length) != null ? f : 0) > 0
        }
    }
}), null);
__d("useCometCombinedProfileAccountSwitcherListCell.react", ["ix", "fbt", "CometProfileAndAccountSwitcher.react", "CometProfileSwitcher.react", "CometRelay", "React", "WebPixelRatio", "fbicon", "gkx", "orEmptyArray", "useCometLoggedInAccountSwitcherListCell", "useProfileSwitcherEngagementClickCallback", "useCometCombinedProfileAccountSwitcherListCell_query.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React");

    function a(a, c, d) {
        var e, f, k,
            l = b("CometRelay").useFragment(i !== void 0 ? i : i = b("useCometCombinedProfileAccountSwitcherListCell_query.graphql"), a);
        a = b("useCometLoggedInAccountSwitcherListCell")(l, c, d);
        e = (l == null ? void 0 : (e = l.viewer) == null ? void 0 : (e = e.actor) == null ? void 0 : (e = e.profile_switcher_eligible_profiles) == null ? void 0 : e.nodes) || [];
        f = b("orEmptyArray")(l == null ? void 0 : (f = l.viewer) == null ? void 0 : f.device_switchable_accounts);
        var m = b("useProfileSwitcherEngagementClickCallback")({
            item_type: "more",
            product_bucket: "profile_account_switcher",
            subsurface: "settings_menu",
            surface: "navigation"
        });
        k = (l == null ? void 0 : (k = l.viewer) == null ? void 0 : (k = k.actor) == null ? void 0 : (k = k.profile_switcher_eligible_profiles) == null ? void 0 : k.count) || 0;
        var n = f.length || 0, o = 0;
        e.forEach(function (a) {
            o += a.unseen_update_count || 0
        });
        f.forEach(function (a) {
            o += a.unread_notification_count || 0
        });
        e = b("gkx")("1663500") && ((l == null ? void 0 : (e = l.viewer) == null ? void 0 : (f = e.actor) == null ? void 0 : (e = f.first_profiles) == null ? void 0 : (f = e.nodes) == null ? void 0 : f.length) || 0) > 1;
        f = (l == null ? void 0 : (f = l.viewer) == null ? void 0 : (f = f.actor) == null ? void 0 : (f = f.first_profiles) == null ? void 0 : f.nodes.length) ? l == null ? void 0 : (f = l.viewer) == null ? void 0 : (f = f.actor) == null ? void 0 : (f = f.first_profiles) == null ? void 0 : f.nodes[e ? 1 : 0].profile : null;
        var p = (f == null ? void 0 : f.profile_picture) || {}, q = p.height, r = p.scale, s = p.uri;
        p = p.width;
        if (k !== 0) {
            return {
                cellProps: {
                    addOnPrimary: f ? {
                        addOnTopEnd: o > 0 ? {number: o, type: "notificationBadge"} : void 0,
                        shape: "circle",
                        size: 36,
                        source: {
                            height: (k = q) != null ? k : 36,
                            scale: (f = r) != null ? f : b("WebPixelRatio").get(),
                            uri: (q = s) != null ? q : "",
                            width: (k = p) != null ? k : 36
                        },
                        type: "profile-photo"
                    } : null,
                    addOnSecondary: {color: "secondary", icon: b("fbicon")._(g("492539"), 24), type: "icon"},
                    headline: n > 0 ? e ? h._("\u6240\u6709\u4e2a\u4eba\u4e3b\u9875\u548c\u5e10\u6237") : h._("\u5207\u6362\u4e2a\u4eba\u4e3b\u9875\u6216\u5e10\u6237") : e ? h._("\u6240\u6709\u4e2a\u4eba\u4e3b\u9875") : h._("\u5207\u6362\u4e2a\u4eba\u4e3b\u9875"),
                    level: 4,
                    onPress: function () {
                        n > 0 ? c(function (a) {
                            a = a.onReturn;
                            if (b("CometProfileAndAccountSwitcher.react") == null) return;
                            m();
                            return j.jsx(b("CometProfileAndAccountSwitcher.react"), {
                                onClose: d,
                                onReturn: a,
                                pushPage: c,
                                query: l
                            })
                        }) : c(function (a) {
                            a = a.onReturn;
                            if (b("CometProfileSwitcher.react") == null) return;
                            m();
                            return j.jsx(b("CometProfileSwitcher.react"), {onClose: d, onReturn: a, query: l})
                        })
                    },
                    testid: "CometSettingsCombinedProfileAccountSwitcher"
                }, itemKey: "profile-account-switcher", render: !0
            }
        }
        return a
    }
}), null);
__d("CometSettingsDropdownList.react", ["ix", "fbt", "CometLegalFooter.react", "CometMenuSeparator.react", "CometOptOutStrings", "CometRelay", "CometSettingsDropdownAppearance.react", "CometSettingsDropdownHeader.react", "CometSettingsDropdownListItem.react", "CometSettingsDropdownQuickHelp.react", "CometSettingsDropdownSettingsAndPrivacy.react", "CometTrialProgramGating", "Locale", "React", "TetraList.react", "TetraListCell.react", "WebPixelRatio", "fbicon", "gkx", "requireCond", "stylex", "useCometCombinedProfileAccountSwitcherListCell.react", "useCometLogout", "useCometReportBug", "useCometTriggerOptOut", "useShouldRenderFullTopNav", "cr:1205224", "cr:1673052", "CometSettingsDropdownListQuery.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"), k = b("Locale").isRTL(), l = b("gkx")("1663500"),
        m = (c = b("cr:1673052")) != null ? c : function () {
            for (var a = arguments.length, b = new Array(a), c = 0; c < a; c++) b[c] = arguments[c];
            return {args: b, cellProps: {}, itemKey: "profile-account-switcher", render: !1}
        };

    function a(a) {
        var c = a.onClose, d = a.pushPage;
        a = b("useCometReportBug")();
        var e = a[0];
        a = b("useShouldRenderFullTopNav")();
        var f = b("CometRelay").useLazyLoadQuery(i !== void 0 ? i : i = b("CometSettingsDropdownListQuery.graphql"), {
            inProfileSwitcherEntry: l,
            scale: b("WebPixelRatio").get()
        }), n = b("useCometLogout").useCometLogout(), o = j.useState(!1), p = o[0], q = o[1];
        o = j.useCallback(function (a) {
            return q(!0)
        }, [q]);
        o = m(f, c, o, p);
        var r = b("useCometCombinedProfileAccountSwitcherListCell.react")(f, d, c), s = f.viewer,
            t = b("useCometTriggerOptOut")("SETTINGS_MENU");
        f = (s == null ? void 0 : (f = s.actor) == null ? void 0 : (f = f.profileSwitcherEligibleProfiles) == null ? void 0 : f.count) || 0;
        var u = [l ? null : r, {
            cellProps: {
                addOnPrimary: {
                    icon: b("fbicon")._(g("497567"), 20),
                    size: 36,
                    type: "contained-icon"
                },
                addOnSecondary: {
                    color: "secondary",
                    icon: k ? b("fbicon")._(g("492491"), 24) : b("fbicon")._(g("492539"), 24),
                    type: "icon"
                },
                headline: h._("\u8bbe\u7f6e\u4e0e\u9690\u79c1"),
                level: 4,
                onPress: function () {
                    d(function (a) {
                        a = a.onReturn;
                        return j.jsx(b("CometSettingsDropdownSettingsAndPrivacy.react"), {
                            onClose: c,
                            onReturn: a,
                            viewer: s
                        })
                    })
                },
                testid: "CometSettingsDropdownSettingsAndPrivacy"
            }, itemKey: "settings-privacy-folder", render: a
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("832941"), 20), size: 36, type: "contained-icon"},
                addOnSecondary: {
                    color: "secondary",
                    icon: k ? b("fbicon")._(g("492491"), 24) : b("fbicon")._(g("492539"), 24),
                    type: "icon"
                },
                headline: h._("Display & Accessibility"),
                level: 4,
                onPress: function () {
                    d(function (a) {
                        a = a.onReturn;
                        return j.jsx(b("CometSettingsDropdownAppearance.react"), {onReturn: a, pushPage: d})
                    })
                }
            }, itemKey: "display-and-accessibility", render: a && b("gkx")("1279132")
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("496951"), 20), size: 36, type: "contained-icon"},
                addOnSecondary: {
                    color: "secondary",
                    icon: k ? b("fbicon")._(g("492491"), 24) : b("fbicon")._(g("492539"), 24),
                    type: "icon"
                },
                headline: h._("\u5e2e\u52a9\u4e0e\u652f\u6301"),
                level: 4,
                onPress: function () {
                    d(function (a) {
                        a = a.onReturn;
                        return j.jsx(b("CometSettingsDropdownQuickHelp.react"), {onClose: c, onReturn: a})
                    })
                }
            }, itemKey: "help-support", render: a
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("832941"), 20), size: 36, type: "contained-icon"},
                addOnSecondary: {
                    color: "secondary",
                    icon: k ? b("fbicon")._(g("492491"), 24) : b("fbicon")._(g("492539"), 24),
                    type: "icon"
                },
                headline: h._("\u663e\u793a\u504f\u597d\u8bbe\u7f6e"),
                level: 4,
                onPress: function () {
                    d(function (a) {
                        a = a.onReturn;
                        return j.jsx(b("CometSettingsDropdownAppearance.react"), {onReturn: a, pushPage: d})
                    })
                }
            }, itemKey: "dark-mode", render: a && !b("gkx")("1721831") && !b("gkx")("1279132")
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("641698"), 20), size: 36, type: "contained-icon"},
                headline: b("CometOptOutStrings").getOptOutSettingsMenuItemHeader(),
                level: 4,
                onPress: function () {
                    t(), c()
                }
            },
            itemKey: "switch-to-classic-facebook",
            render: a && b("CometTrialProgramGating").canOptOutFromSettingsMenu
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("1107405"), 20), size: 36, type: "contained-icon"},
                addOnSecondary: {
                    color: "secondary",
                    icon: k ? b("fbicon")._(g("492491"), 24) : b("fbicon")._(g("492539"), 24),
                    type: "icon"
                },
                headline: h._("\u7ffb\u8bd1"),
                level: 4,
                onPress: function () {
                    d(function (a) {
                        a = a.onReturn;
                        return j.jsx(b("cr:1205224"), {onClose: c, onReturn: a, viewer: s})
                    })
                }
            }, itemKey: "internationalization", render: a && b("cr:1205224") != null
        }, {
            cellProps: {
                addOnPrimary: {icon: b("fbicon")._(g("951888"), 20), size: 36, type: "contained-icon"},
                dataAttributes: {nocookies: "true"},
                headline: h._("\u9000\u51fa"),
                level: 4,
                onPress: function () {
                    n(), c()
                },
                testid: "CometLogoutButton"
            }, itemKey: "log-out", render: !0
        }].filter(function (a) {
            return a == null ? void 0 : a.render
        }).filter(Boolean);
        return j.jsxs("div", {
            className: "aov4n071",
            children: [a ? j.jsxs(j.Fragment, {
                children: [j.jsx(b("CometSettingsDropdownHeader.react"), {
                    onClick: c,
                    selected: !p && f > 0,
                    viewer: s
                }), l && f > 1 ? j.jsx(b("CometSettingsDropdownListItem.react"), {
                    cellProps: o.cellProps,
                    itemKey: o.itemKey,
                    position: 0,
                    selected: p
                }) : null, l && f > 0 ? j.jsx(b("CometSettingsDropdownListItem.react"), {
                    cellProps: r.cellProps,
                    itemKey: r.itemKey,
                    position: f > 1 ? 1 : 0,
                    selected: !1
                }) : null, j.jsx(b("CometMenuSeparator.react"), {}), j.jsx(b("CometSettingsDropdownListItem.react"), {
                    cellProps: {
                        addOnPrimary: {
                            icon: b("gkx")("678680") ? b("fbicon")._(g("530509"), 20) : b("fbicon")._(g("693172"), 20),
                            shape: "circle",
                            size: 36,
                            type: "contained-icon"
                        },
                        body: h._("\u5e2e\u52a9\u6211\u4eec\u6539\u8fdb\u65b0\u7248 Facebook\u3002"),
                        headline: b("gkx")("678680") ? h._("\u62a5\u544a\u95ee\u9898") : h._("\u63d0\u4f9b\u53cd\u9988"),
                        level: 4,
                        onPress: function () {
                            c(), e()
                        }
                    }, itemKey: "give-feedback", position: l ? f > 1 ? 2 : 1 : 0, selected: !1
                }), j.jsx(b("CometMenuSeparator.react"), {})]
            }) : null, j.jsx("div", {
                className: "a8nywdso sj5x9vvc rz4wbd8a ecm0bbzt",
                children: j.jsx(b("TetraList.react"), {
                    items: u, children: function (a) {
                        var c, d = a.item, e = d.cellProps;
                        d = d.itemKey;
                        a = a.props;
                        var f = e.addOnSecondary;
                        c = (c = a.key) != null ? c : -1;
                        f = f != null && f.value != null ? f.value : !1;
                        return j.jsx(b("CometSettingsDropdownListItem.react"), {
                            cellProps: e,
                            itemKey: d,
                            position: c,
                            selected: f
                        }, a.key)
                    }
                })
            }), j.jsx("div", {
                className: "dati1w0a ihqw7lf3 hv4rvrfc discj3wi",
                children: j.jsx(b("CometLegalFooter.react"), {})
            })]
        })
    }
}), null);
__d("CometSettingsDropdown.react", ["fbt", "BaseMultiStepContainer.react", "CometPopover.react", "CometScrollableArea.react", "CometSettingsDropdownList.react", "React", "stylex"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h, i = b("React"),
        j = {card: {maxHeight: "t1wsaese", maxWidth: "h77mwsce", width: "o36gj0jk"}, root: {marginTop: "knvmm38d"}};

    function a(a) {
        var c = a.onClose;
        return i.jsx("div", {
            className: (h || (h = b("stylex")))(j.root),
            children: i.jsx(b("CometPopover.react"), {
                label: g._("\u5e10\u6237"),
                children: i.jsx(b("CometScrollableArea.react"), {
                    xstyle: j.card,
                    children: i.jsx("div", {
                        children: i.jsx(b("BaseMultiStepContainer.react"), {
                            children: function (a) {
                                return i.jsx(b("CometSettingsDropdownList.react"), {onClose: c, pushPage: a})
                            }
                        })
                    })
                })
            })
        })
    }
}), null);
__d("CometLoggedInAccountSwitcherRemoveAccountMutation", ["CometRelay", "CometLoggedInAccountSwitcherRemoveAccountMutation.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    f.commit = a;
    var g;

    function a(a, c) {
        var d = c.id;
        c = c.nonce;

        function e(a) {
            a = a.getRoot().getLinkedRecord("viewer");
            if (a == null) return;
            var b = a.getLinkedRecords("device_switchable_accounts");
            if (b == null) return;
            b = b.filter(function (a) {
                if (a == null) return a;
                var b = a.getLinkedRecord("user");
                return b == null ? a : b.getValue("id") !== d
            });
            a.setLinkedRecords(b, "device_switchable_accounts");
            b = b.find(function (a) {
                if (a == null) return !1;
                a = a.getValue("unread_notification_count");
                return typeof a !== "number" ? !1 : a > 0
            });
            a.setValue(Boolean(b), "device_switchable_account_has_notification")
        }

        return b("CometRelay").commitMutation(a, {
            mutation: g !== void 0 ? g : g = b("CometLoggedInAccountSwitcherRemoveAccountMutation.graphql"),
            optimisticUpdater: e,
            updater: e,
            variables: {id: d, nonce: c}
        })
    }
}), null);
__d("MessengerDesktopUpsellLinks", ["CurrentUser", "MessengerDesktopAppLinks", "UserAgent", "qex"], (function (a, b, c, d, e, f) {
    "use strict";
    f.getDesktopUpsellLinkForPlatform = g;
    f.getDesktopUpsellLinkIfEnabledForCalls = a;

    function g() {
        if (b("UserAgent").isPlatform("Mac OS X")) return b("MessengerDesktopAppLinks").macOSX; else if (b("UserAgent").isPlatform("Windows")) return b("MessengerDesktopAppLinks").windows;
        return null
    }

    function a() {
        var a = g(), c = a != null && !b("CurrentUser").isWorkUser() && !!b("qex")._("1431495");
        return c ? a : null
    }
}), null);
__d("BrowserPushCommands", [], (function (a, b, c, d, e, f) {
    a = "browser_push_ack";
    b = "browser_push_redirect";
    c = "browser_push_window_visible";
    d = {ACK: a, REDIRECT: b, WINDOW_VISIBLE: c};
    e.exports = d
}), null);
__d("BrowserPushMessageRedirectUtil", ["Bootloader"], (function (a, b, c, d, e, f) {
    e.exports = a;

    function a(a) {
        var c = "(messages)(.*?)(?:(tid=))([^&]*)";
        a = a.match(c);
        if (!a) return !0;
        var d = a.pop();
        b("Bootloader").loadModules(["FantaTabActions"], function (a) {
            a.openTab(d)
        }, "BrowserPushMessageRedirectUtil");
        return !1
    }
}), null);
__d("BrowserPushMessageHandler", ["BrowserPushCommands", "BrowserPushMessageRedirectUtil", "EventListener", "URI", "URISchemes", "isFacebookURI"], (function (a, b, c, d, e, f) {
    var g, h;

    function i(a) {
        if (a.data.command && a.data.command === b("BrowserPushCommands").REDIRECT) {
            if (typeof window.onbeforeunload === "function" && window.onbeforeunload() === void 0) a.ports[0].postMessage({
                command: b("BrowserPushCommands").ACK,
                success: !0
            }); else {
                a.ports[0].postMessage({command: b("BrowserPushCommands").ACK, success: !1});
                return
            }
            a = a.data.uri;
            if (/^([^.:/?#]+):/.test(a) && !(g || (g = b("URISchemes"))).isAllowed(/^([^.:/?#]+):/.exec(a)[1]) || !b("isFacebookURI")(new (h || (h = b("URI")))(a))) throw new Error("goURI: URI scheme rejected, URI: " + a);
            b("BrowserPushMessageRedirectUtil")(a) && (window.location.href = a)
        }
    }

    a = {
        registerRedirectHandler: function () {
            b("EventListener").listen(window, "message", function (a) {
                a.origin === "" && i(a)
            }), navigator.serviceWorker && navigator.serviceWorker.addEventListener && navigator.serviceWorker.addEventListener("message", function (a) {
                (navigator.serviceWorker && navigator.serviceWorker.controller && a.target && a.target.controller && a.target.controller === navigator.serviceWorker.controller || new RegExp("^" + window.location.protocol + "//" + window.location.host + "$").test(a.origin)) && i(a)
            })
        }
    };
    c = a;
    e.exports = c
}), null);
__d("BrowserPushVisibilityChanger", ["BrowserPushCommands", "ClientServiceWorkerMessage", "Visibility"], (function (a, b, c, d, e, f) {
    function g() {
        new (b("ClientServiceWorkerMessage"))(b("BrowserPushCommands").WINDOW_VISIBLE, null).sendViaController()
    }

    a = {
        listenForVisibility: function () {
            b("Visibility").isHidden() || g(), b("Visibility").addListener(b("Visibility").VISIBLE, g)
        }
    };
    c = a;
    e.exports = c
}), null);
__d("MPushPermissionUtil", ["BanzaiLogger", "gkx"], (function (a, b, c, d, e, f) {
    f.logEvent = a;

    function a(a, c) {
        c === void 0 && (c = !1);
        var d = b("gkx")("910664");
        d && b("BanzaiLogger").log("ChromePushPermissionEventsLoggerConfig", {event: a});
        if (c) {
            d = null;
            c = "step";
            a === "allow" ? (d = "allow", c = "conversion") : a === "deny" ? d = "deny" : a === "install_ignore" ? d = "ignore" : a === "turn_on_attempt" && (d = "show_browser_dialog");
            d !== null && b("BanzaiLogger").log("NUXWizardLoggerConfig", {
                event: d,
                event_type: c,
                platform: "mobile",
                step: "turn_on_notification"
            })
        }
    }
}), null);
__d("PushRegistrationUtils", [], (function (a, b, c, d, e, f) {
    "use strict";
    f.normalizeSubscriptionEndpoint = g;
    f.setupPushRegistrationData = a;

    function g(a) {
        var b = a.endpoint;
        "subscriptionId" in a && !new RegExp("/" + a.subscriptionId + "$").test(b) && (b += "/" + a.subscriptionId);
        return b
    }

    function a(a, b) {
        var c = g(a), d = null;
        a.toJSON ? d = a.toJSON().keys : a.keys && (d = a.keys);
        return {app_id: b, push_endpoint: c, subscription_keys: JSON.stringify(d)}
    }
}), null);
__d("ServiceWorkerRegistration", ["Promise", "BrowserPaymentHandlerConfig", "ClientServiceWorkerMessage", "EventListener", "Run", "promiseDone"], (function (a, b, c, d, e, f) {
    var g = !!navigator.serviceWorker, h = {}, i = {name: "Facebook Pay", method: self.location.origin + "/pay"};

    function j(a) {
        if (!b("BrowserPaymentHandlerConfig").enabled) return;
        (a = a.paymentManager) == null ? void 0 : (a = a.instruments) == null ? void 0 : a.set("Facebook", i)
    }

    function k() {
        var a = navigator.serviceWorker;
        if (!g || !a) throw new Error("serviceWorker is not supported in this browser");
        return a
    }

    var l = {
        isSupported: function () {
            return g
        }, registerWorkerIfUnregisteredAfterDD: function (a) {
            b("Run").onAfterLoad(function () {
                l.registerWorkerIfUnregistered(a)
            })
        }, registerWorkerIfUnregistered: function (a) {
            if (h[a]) return h[a];
            var c = k(), d = h[a] = new (b("Promise"))(function (d, e) {
                b("promiseDone")(l.getWorkerRegistration(a), function (f) {
                    if (!f) {
                        var g = b("EventListener").listen(window, "message", function (a) {
                            (a == null ? void 0 : (a = a.data) == null ? void 0 : a.command) === "ServiceWorkerInstallError" && e()
                        });
                        b("promiseDone")(b("Promise").resolve(c.register(a, {updateViaCache: "all"})), function () {
                            g.remove(), b("promiseDone")(b("Promise").resolve(c.ready), d)
                        })
                    } else d(f)
                })
            });
            b("promiseDone")(d, function (b) {
                h[a] = null, j(b)
            });
            return d
        }, unregisterControllingWorker: function () {
            return new (b("Promise"))(function (a, c) {
                c = new (b("ClientServiceWorkerMessage"))("unregister", {}, function () {
                    a(!0)
                });
                c.sendViaController()
            })
        }, getWorkerRegistration: function (a) {
            var b = k();
            return b.getRegistration(a)
        }, isAWorkerActivated: function () {
            return !navigator.serviceWorker || !navigator.serviceWorker.getRegistration ? b("Promise").resolve(!1) : navigator.serviceWorker.getRegistration().then(function (a) {
                return !!(a && a.active)
            })
        }
    };
    e.exports = l
}), null);
__d("XAsyncPushMuteController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/notifications/settings/push/mute/", {
        appid: {type: "Int", required: !0},
        push_endpoint: {type: "String", required: !0},
        mute_for: {type: "Enum", enumType: 0}
    })
}), null);
__d("XAsyncPushMuteStateController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/notifications/settings/push/mute/state/", {
        appid: {type: "Int", required: !0},
        push_endpoint: {type: "String", required: !0}
    })
}), null);
__d("PushRegistration", ["Promise", "BrowserPushMessageHandler", "BrowserPushPubKey", "BrowserPushVisibilityChanger", "MPushPermissionUtil", "PushRegistrationUtils", "ServiceWorkerRegistration", "XAsyncPushMuteController", "XAsyncPushMuteStateController", "emptyFunction", "gkx", "promiseDone"], (function (a, b, c, d, e, f) {
    var g = window.Notification, h = new Map();
    a = function () {
        "use strict";
        a.get = function (b, c) {
            if (h.has(c)) return h.get(c);
            b = new a(b, c);
            h.set(c, b);
            return b
        };

        function a(b, c) {
            this.$3 = b, this.appID = c, !a.$1 && !a.$2 && (a.$1 = !1, a.$2 = !1)
        }

        var c = a.prototype;
        c.getPushSubscription = function () {
            var c = this;
            return new (b("Promise"))(function (d, e) {
                a.pushPermissionIsDenied() && (b("MPushPermissionUtil").logEvent("permission_denied_or_blocked"), e(new Error("No permission or not supported"))), b("ServiceWorkerRegistration").getWorkerRegistration(c.$3).then(function (a) {
                    if (!a) {
                        d(null);
                        return
                    }
                    a.pushManager.getSubscription().then(function (a) {
                        d(a)
                    })["catch"](e)
                })["catch"](e)
            })
        };
        c.$4 = function (a, c, d) {
            a = a.getURIBuilder().getURI();
            c = new c(a);
            c.setData(b("PushRegistrationUtils").setupPushRegistrationData(d, this.appID));
            c.setMethod("post");
            c.send()
        };
        c.getMutedUntilInServer = function (a) {
            var c = this;
            return new (b("Promise"))(function (d, e) {
                c.getPushSubscription().then(function (f) {
                    if (f) {
                        f = b("PushRegistrationUtils").normalizeSubscriptionEndpoint(f);
                        f = b("XAsyncPushMuteStateController").getURIBuilder().setString("push_endpoint", f).setInt("appid", c.appID).getURI();
                        f = new a(f);
                        f.listen("done", function (a) {
                            d(a.payload.muteUntilTimestampSec)
                        });
                        f.send()
                    } else e("cannot check mute status for unsubscribed endpoint")
                })["catch"](e)
            })
        };
        c.muteNotifications = function (a, c) {
            var d = this;
            return new (b("Promise"))(function (e, f) {
                d.getPushSubscription().then(function (g) {
                    if (g) {
                        g = b("PushRegistrationUtils").normalizeSubscriptionEndpoint(g);
                        g = b("XAsyncPushMuteController").getURIBuilder().setEnum("mute_for", a).setString("push_endpoint", g).setInt("appid", d.appID).getURI();
                        g = new c(g);
                        g.setMethod("POST");
                        g.listen("done", function (b) {
                            a !== 0 && b.payload.muteUntilTimestampSec === 0 ? f("operation failed in server") : e(b.payload.muteUntilTimestampSec)
                        });
                        g.send()
                    } else f("no subscription found")
                })["catch"](f)
            })
        };
        c.getSubscription = function () {
            var a = this;
            return new (b("Promise"))(function (c, d) {
                a.getPushSubscription().then(function (a) {
                    a ? c(b("PushRegistrationUtils").normalizeSubscriptionEndpoint(a)) : c(null)
                })["catch"](d)
            })
        };
        c.maybeRegisterPushAgain = function (a, c) {
            var d = this;
            return new (b("Promise"))(function (e, f) {
                d.getPushSubscription().then(function (f) {
                    f ? (d.$4(a, c, f), e(b("PushRegistrationUtils").normalizeSubscriptionEndpoint(f))) : e(null)
                })["catch"](function () {
                    e(null)
                })
            })
        };
        c.$5 = function (c, d, e) {
            var f = this;
            return new (b("Promise"))(function (b, g) {
                if (a.$2 && !e) {
                    g(new Error("sending disable info already"));
                    return
                }
                a.$2 = !0;
                var h = c.getURIBuilder().getURI();
                h = new d(h.toString());
                h.setData({appid: f.appID, from_browser_settings: e});
                h.setMethod("post");
                h.listen ? (h.listen("finally", b), h.listen("fail", function () {
                    a.$2 = !1, g()
                })) : h.setErrorHandler && h.setHandler ? (h.setErrorHandler(function () {
                    a.$2 = !1, g()
                }), h.setHandler(b)) : b();
                h.send()
            })
        };
        c.isPushRegistered = function (c, d, e, f, g, h) {
            var i = this;
            g === void 0 && (g = !1);
            h === void 0 && (h = !1);
            b("BrowserPushMessageHandler").registerRedirectHandler();
            return new (b("Promise"))(function (j, k) {
                i.getPushSubscription().then(function (k) {
                    j(!!k || c && !a.pushPermissionIsPending()), k ? g ? i.$4(d, f, k) : b("BrowserPushVisibilityChanger").listenForVisibility() : !k && c && (a.pushPermissionIsOn() ? i.registerPush(d, f, h)["catch"](function () {
                    }) : i.$5(e, f, !1))
                })["catch"](function () {
                    c && i.$5(e, f, !1), h && b("ServiceWorkerRegistration").unregisterControllingWorker(), k()
                })
            })
        };
        c.$6 = function () {
            return new (b("Promise"))(function (a, b) {
                g.requestPermission(a)
            })
        };
        c.registerPushAndWaitForEndpoint = function (a, c, d) {
            var e = this;
            d === void 0 && (d = !1);
            return new (b("Promise"))(function (b, f) {
                e.$7(a, c, !0, null, d).then(function (a) {
                    if (typeof a !== "string") {
                        f(new Error("registerPushImpl did not return an endpoint"));
                        return
                    }
                    b(a)
                })["catch"](f)
            })
        };
        c.registerPushOnKaiOS = function (a, c, d) {
            var e = this;
            return new (b("Promise"))(function (f, g) {
                d.waitForKaiOS().done(function () {
                    d.registerPush(function (d) {
                        d = JSON.parse(d.get("push_endpoint"));
                        e.$4(a, c, d);
                        f(b("PushRegistrationUtils").normalizeSubscriptionEndpoint(d))
                    })
                })
            })
        };
        c.registerPush = function (a, c, d, e) {
            d === void 0 && (d = !1);
            e === void 0 && (e = b("emptyFunction"));
            return this.registerPushWithFinishedCallBack(a, c, e, d)
        };
        c.registerPushWithFinishedCallBack = function (a, c, d, e) {
            var f = this;
            e === void 0 && (e = !1);
            return new (b("Promise"))(function (b, g) {
                f.$7(a, c, !1, d, e).then(function (a) {
                    if (typeof a !== "boolean") {
                        g(new Error("registerPushImpl did not return a boolean"));
                        return
                    }
                    b(a)
                })["catch"](g)
            })
        };
        c.$7 = function (c, d, e, f, g) {
            var h = this;
            if (a.$1) return new (b("Promise"))(function (a, b) {
                b(new Error("registering already"))
            });
            if (!self.PushManager) return b("Promise").reject(new Error("PushManager not found."));
            a.$1 = !0;
            return new (b("Promise"))(function (i, j) {
                var k = b("ServiceWorkerRegistration").registerWorkerIfUnregistered(h.$3), l = h.$6();
                b("Promise").all([k, l]).then(function (k) {
                    var l = k[0];
                    if (!a.pushPermissionIsOn()) {
                        g && l.unregister();
                        throw new Error("Push permission was denied")
                    }
                    e || i(!0);
                    k = b("BrowserPushPubKey").appServerKey;
                    var m = b("gkx")("1511920") && k != null && k != "";
                    m = m ? {userVisibleOnly: !0, applicationServerKey: k} : {userVisibleOnly: !0};
                    l.pushManager.subscribe(m).then(function (a) {
                        e && i(b("PushRegistrationUtils").normalizeSubscriptionEndpoint(a)), h.$4(c, d, a), f && f(), b("BrowserPushVisibilityChanger").listenForVisibility()
                    })["catch"](function (b) {
                        a.$1 = !1, g && l.unregister(), j(b)
                    })
                })["catch"](function (b) {
                    a.$1 = !1, j(b)
                })
            })
        };
        c.unregisterPushAndSWOnKaiOS = function (a, c, d, e) {
            var f = this;
            return new (b("Promise"))(function (b, g) {
                f.$5(a, c, e).then(function () {
                    d.unregisterPush(), b()
                })["catch"](g)
            })
        };
        c.unregisterPushAndSW = function (a, c) {
            var d = this;
            return new (b("Promise"))(function (e, f) {
                d.$5(a, c, !0).then(function () {
                    b("promiseDone")(b("ServiceWorkerRegistration").unregisterControllingWorker(), e)
                })["catch"](f)
            })
        };
        c.unregisterPushOnly = function (a, c) {
            var d = this;
            return new (b("Promise"))(function (b, e) {
                d.getPushSubscription().then(function (f) {
                    f ? f.unsubscribe().then(d.$5(a, c, !0)).then(function () {
                        b(!0)
                    })["catch"](e) : e()
                })["catch"](e)
            })
        };
        a.pushPermissionIsPending = function () {
            return window.Notification && window.Notification.permission === "default"
        };
        a.pushPermissionIsOn = function () {
            return window.Notification && window.Notification.permission === "granted"
        };
        a.pushPermissionIsDenied = function () {
            return window.Notification && window.Notification.permission === "denied"
        };
        return a
    }();
    e.exports = a
}), null);
__d("XBrowserPushDisabledController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/notifications/client/push/disabled/", {})
}), null);
__d("XBrowserPushXOutController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/notifications/client/push/xout/", {})
}), null);
__d("XPushRegisterServiceWorkerController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/push/register/service_worker/", {})
}), null);
__d("incognito", ["regeneratorRuntime", "Promise", "UserAgent", "WebStorage", "gkx"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g;

    function a() {
        var a;
        return b("regeneratorRuntime").async(function (c) {
            while (1) switch (c.prev = c.next) {
                case 0:
                    a = window.RequestFileSystem || window.webkitRequestFileSystem;
                    if (!a) {
                        c.next = 3;
                        break
                    }
                    return c.abrupt("return", new (b("Promise"))(function (b) {
                        return a(window.TEMPORARY, 10, function () {
                            return b(!1)
                        }, function () {
                            return b(!0)
                        })
                    }));
                case 3:
                    if (!(b("UserAgent").isBrowser("IE >= 10") || b("UserAgent").isBrowser("Edge"))) {
                        c.next = 5;
                        break
                    }
                    return c.abrupt("return", !window.indexedDB);
                case 5:
                    if (!b("UserAgent").isBrowser("Firefox >= 16")) {
                        c.next = 7;
                        break
                    }
                    return c.abrupt("return", new (b("Promise"))(function (a) {
                        var b = window.indexedDB.open("__test__");
                        b.onsuccess = function () {
                            return a(!1)
                        };
                        b.onerror = function (b) {
                            b.preventDefault(), a(!0)
                        }
                    }));
                case 7:
                    if (!(b("gkx")("676917") && (b("UserAgent").isPlatform("iOS") && b("UserAgent").isBrowser("Safari >= 10.3") || b("UserAgent").isPlatform("Mac OS X") && b("UserAgent").isBrowser("Safari >= 11.1")))) {
                        c.next = 18;
                        break
                    }
                    c.prev = 8;
                    window.openDatabase("sid", "1.0", "", 0);
                    c.next = 16;
                    break;
                case 12:
                    c.prev = 12;
                    c.t0 = c["catch"](8);
                    if (!(c.t0.name === "SecurityError")) {
                        c.next = 16;
                        break
                    }
                    return c.abrupt("return", !0);
                case 16:
                    c.next = 20;
                    break;
                case 18:
                    if (!b("UserAgent").isBrowser("Safari")) {
                        c.next = 20;
                        break
                    }
                    return c.abrupt("return", !(g || (g = b("WebStorage"))).getLocalStorage());
                case 20:
                    return c.abrupt("return", !1);
                case 21:
                case"end":
                    return c.stop()
            }
        }, null, this, [[8, 12]])
    }
}), null);
__d("BrowserPushDirectPromptInstallerComet", ["Promise", "AsyncRequest", "BanzaiLogger", "PushNotificationsEventEmitter", "PushRegistration", "QE2Logger", "XBrowserPushDisabledController", "XBrowserPushXOutController", "XPushRegisterServiceWorkerController", "incognito"], (function (a, b, c, d, e, f) {
    "use strict";
    f.genEnableNotifications = l;
    f.installPush = a;
    f.setLogExtraData = c;
    f.setQEUniverseName = d;
    var g, h;

    function i(a, c, d) {
        d === void 0 && (d = "prompt");
        c = babelHelpers["extends"]({appID: c, event: a, surface: d}, g);
        b("BanzaiLogger").log("BrowserPushLoggerConfig", c)
    }

    function j() {
        g != null && g.xout_count === 0 && h && b("QE2Logger").logExposureForUser(h)
    }

    function k(a) {
        var c = b("XBrowserPushXOutController").getURIBuilder().getURI();
        new (b("AsyncRequest"))().setURI(c).setMethod("POST").send();
        i("xout", a)
    }

    function l(a, c, d, e) {
        a = b("PushRegistration").get(a, c);
        i("turn_on", c);
        return a.registerPushWithFinishedCallBack(b("XPushRegisterServiceWorkerController"), b("AsyncRequest"), function () {
        }, e).then(function () {
            b("PushNotificationsEventEmitter").emit("closeInstallPush"), i("install", c)
        })["catch"](function (a) {
            b("PushNotificationsEventEmitter").emit("closeInstallPush"), b("PushRegistration").pushPermissionIsDenied() ? (b("PushNotificationsEventEmitter").emit("openPushBlockedNotice", d), i("deny", c)) : i("install_ignore", c), k(c)
        })
    }

    function a(a, c, d, e, f, g, h, i) {
        var k = b("PushRegistration").get(a, c);
        k = k.isPushRegistered(d, b("XPushRegisterServiceWorkerController"), b("XBrowserPushDisabledController"), b("AsyncRequest"), !!f, h);
        b("Promise").all([k, b("incognito")()]).then(function (d) {
            var f = d[0];
            d = d[1];
            if (f || d) return;
            j();
            if (b("PushRegistration").pushPermissionIsPending()) {
                if (!i || e) return;
                b("PushNotificationsEventEmitter").emit("openInstallPush", {
                    appID: c,
                    browserName: g,
                    path: a,
                    workerIsForPushOnly: h
                })
            } else e || l(a, c, g, h)
        })["catch"](function () {
            b("PushRegistration").pushPermissionIsDenied() && j()
        })
    }

    function c(a) {
        g = a
    }

    function d(a) {
        h = a
    }
}), null);
__d("NotificationPermissionNoticeComet.react", ["fbt", "Locale", "React", "stylex", "useCometCallout"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h, i = b("React"), j = {
        calloutMaxWidth: {maxWidth: "nqmqzb3c"},
        root: {left: "tkt9xfrv", maxWidth: "nqmqzb3c", position: "poy2od1o", top: "kr520xx4"}
    };

    function a(a) {
        var c = a.shortText ? g._("\u70b9\u51fb\u9501\u72b6\u56fe\u6807\u6765\u5141\u8bb8{browser_name}\u5411\u4f60\u53d1\u9001\u684c\u9762\u901a\u77e5\u3002", [g._param("browser_name", a.browserName)]) : g._("\u5982\u679c\u4f60\u6539\u53d8\u4e86\u4e3b\u610f\uff0c\u4f60\u53ef\u4ee5\u70b9\u51fb\u9501\u72b6\u56fe\u6807\u6765\u5141\u8bb8{browser_name}\u5411\u4f60\u53d1\u9001\u684c\u9762\u901a\u77e5\u3002", [g._param("browser_name", a.browserName)]),
            d = b("Locale").isRTL();
        d = d ? "end" : "start";
        d = {
            align: d,
            arrowStyle: "inset",
            autoAlign: !0,
            label: c,
            onHide: a.onHide,
            position: "below",
            type: "accent",
            xstyle: j.calloutMaxWidth
        };
        c = b("useCometCallout")(d, !0);
        return i.jsx("div", {className: (h || (h = b("stylex")))(j.root), ref: c})
    }
}), null);
__d("NotificationPermissionRequestComet.react", ["fbt", "BaseAccessibleElement_DEPRECATED.react", "BaseModal.react", "CometHideLayerOnEscape.react", "CometVisualCompletion", "React"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function a(a) {
        h.useEffect(function () {
            window.addEventListener("mousedown", a.onClick);
            b("CometVisualCompletion").addAnnotation("pushRequestOverlay", 1);
            return function () {
                window.removeEventListener("mousedown", a.onClick)
            }
        }, [a.onClick]);
        return h.jsx(b("BaseModal.react"), {
            stackingBehavior: "above-everything",
            children: h.jsx(b("CometHideLayerOnEscape.react"), {
                onHide: a.onClick,
                children: h.jsx(b("BaseAccessibleElement_DEPRECATED.react"), {
                    children: h.jsxs("div", {
                        "aria-label": g._("\u63a8\u9001\u901a\u77e5\u8bf7\u6c42"),
                        "aria-modal": "true",
                        role: "alertdialog",
                        children: [g._("\u5982\u9700\u5141\u8bb8\u6216\u963b\u6b62 Facebook \u53d1\u9001\u7684\u6d4f\u89c8\u5668\u901a\u77e5\uff0c\u524d\u5f80\u6d4f\u89c8\u5668\u8bbe\u7f6e\u3002"), h.jsx("button", {
                            onClick: a.onClick,
                            children: g._("\u5173\u95ed")
                        })]
                    })
                })
            })
        })
    }
}), null);
__d("CometRecordProductUsageMutation", ["CometRelay", "CometRelayErrorHandling", "JSScheduler", "CometRecordProductUsageMutationMutation.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = g !== void 0 ? g : g = b("CometRecordProductUsageMutationMutation.graphql");

    function a(a, c) {
        b("JSScheduler").scheduleLoggingPriCallback(function () {
            b("CometRelay").commitMutation(a, {
                mutation: h, onError: function (a) {
                    b("CometRelayErrorHandling").markErrorAsHandled(a)
                }, variables: {productID: c}
            })
        })
    }

    c = {updateProductUsage: a};
    d = c;
    e.exports = d
}), null);
__d("CometHomeCreateMenu.react", ["ix", "fbt", "CometLeftRailHeader.react", "CometMenuSeparator.react", "CometRelay", "CometScrollableArea.react", "CometTopNavListDropdown.react", "FundraiserCreateUrlUtils", "React", "RoomsGating", "StoriesGating", "TetraListCell.react", "XCometCreateAdControllerRouteBuilder", "XCometEventCreateControllerRouteBuilder", "XCometGroupsTabControllerRouteBuilder", "XCometJobsComposerControllerRouteBuilder", "XCometMarketplaceComposerControllerRouteBuilder", "XCometPageCreationControllerRouteBuilder", "emptyFunction", "fbicon", "gkx", "logCometFunnelEvent", "qex", "recoverableViolation", "requireCond", "requireDeferred", "stylex", "useLifeEventsComposerDialog", "useRoomsCreateDialog", "useTopNavigationLogging", "uuid", "cr:1705275", "CometHomeCreateMenuQuery.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j, k = b("React"), l = b("requireDeferred")("CometHomeJobsLogger"),
        m = b("requireDeferred")("CometMarketplaceLogger"), n = b("requireDeferred")("RoomCreationFlowStartFalcoEvent");

    function o(a) {
        if (a !== "group") return;
        b("logCometFunnelEvent").logCometFunnelEvent("GroupsCometFeedWebFunnelDefinition", "[click][lhc][create menu][group]")
    }

    function p(a) {
        if (a !== "job") return;
        l.load().then(function (a) {
            a = new a();
            a.logCometHomeCreateMenuJobsButtonClick()
        })["catch"](b("emptyFunction"))
    }

    function q(a) {
        var c = a.item, d = a.onClose;
        a = a.position;
        a = b("useTopNavigationLogging").useCreateItemLoggingCallbacks(c.itemKey, a);
        var e = a[0];
        a = a[1];
        var f = k.useCallback(function (a) {
            d();
            if (c.type === "item") {
                var b = c.cellProps != null ? c.cellProps.onPress : null;
                b && b(a)
            }
            e();
            o(c.itemKey);
            p(c.itemKey)
        }, [c, e, d]);
        return c.type === "separator" ? k.jsx(b("CometMenuSeparator.react"), {}) : k.jsx(b("TetraListCell.react"), babelHelpers["extends"]({}, c.cellProps, {
            level: 4,
            onPress: f,
            ref: a
        }))
    }

    var r = {
        root: {
            paddingTop: "ecm0bbzt",
            paddingEnd: "rz4wbd8a",
            paddingBottom: "sj5x9vvc",
            paddingStart: "a8nywdso"
        }, scrollableArea: {maxHeight: "t1wsaese", maxWidth: "h77mwsce"}, scrollableAreaWidth: {width: "o36gj0jk"}
    };

    function a(a) {
        var c = a.onClose, d = a.showComposerDialog;
        b("logCometFunnelEvent").useLogCometFunnelImpressionEvent("GroupsCometFeedWebFunnelDefinition", "[impression][lhc][create menu][group]");
        a = b("useLifeEventsComposerDialog")("COMPOSER");
        var e = a[0];
        a = b("useRoomsCreateDialog")();
        var f = a.showDialog,
            o = b("CometRelay").useLazyLoadQuery(i !== void 0 ? i : i = b("CometHomeCreateMenuQuery.graphql"), {});
        a = k.useMemo(function () {
            var a, i, j, p;
            a = (a = o == null ? void 0 : (a = o.viewer) == null ? void 0 : a.can_create_page) != null ? a : !1;
            i = (o == null ? void 0 : (i = o.viewer) == null ? void 0 : (i = i.account_user) == null ? void 0 : i.should_use_page_rename) === !0;
            var r = b("FundraiserCreateUrlUtils").getCreateFundraiserUrl(null, "blue_bar_create_menu"), s = r != null,
                t = b("gkx")("699938"), u = b("RoomsGating").shouldShowRoomsInCreateMenu(), v = !u;
            j = Boolean(o == null ? void 0 : (j = o.viewer) == null ? void 0 : (j = j.job_search_settings) == null ? void 0 : j.can_viewer_create_any_job) && !t && !s && b("qex")._("1771801");
            var w = "";
            Boolean(j) && (w = b("XCometJobsComposerControllerRouteBuilder").buildURL({
                job_opening_create_surface: "JOBS",
                source: "comet_create_entrypoint"
            }), l.load().then(function (a) {
                a = new a();
                a.logCometHomeCreateMenuJobsButtonImpression()
            })["catch"](b("emptyFunction")));
            p = (p = o.lwi) == null ? void 0 : p.should_direct_to_lwi;
            p == null && (b("recoverableViolation")("shouldDirectToLWI is null", "pages_lwi"), p = !1);
            return [{
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("507172"), 20), size: 36, type: "contained-icon"},
                    body: h._("\u5206\u4eab\u4e00\u7bc7\u5e16\u5b50\u5230\u52a8\u6001\u6d88\u606f\u3002"),
                    headline: h._("\u5e16\u5b50"),
                    onPress: function () {
                        d()
                    }
                }, itemKey: "post", render: !0, type: "item"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("1160717"), 20), size: 36, type: "contained-icon"},
                    body: b("StoriesGating").getCreationDescription(),
                    headline: h._("\u5feb\u62cd"),
                    linkProps: {
                        passthroughProps: {
                            entryPoint: "add_to_story_homebase_shortcut",
                            sourceSurface: "home_screen_shortcut"
                        },
                        target: "_self",
                        url: b("StoriesGating").isAddToStoryEnabled() ? b("cr:1705275") == null ? void 0 : b("cr:1705275").buildURL({}) : void 0
                    }
                }, itemKey: "story", render: b("StoriesGating").isAddToStoryEnabled(), type: "item"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("1388374"), 20), size: 36, type: "contained-icon"},
                    body: h._("\u4e0e\u4efb\u4f55\u4eba\u89c6\u9891\u804a\u5929\uff0c\u65e0\u8bba\u662f\u5426\u4e3a Facebook \u7528\u6237\uff0c\u4e14\u65e0\u65f6\u95f4\u9650\u5236\u3002"),
                    headline: h._("\u89c6\u9891\u804a\u5929\u5ba4"),
                    onPress: function () {
                        n.load().then(function (a) {
                            a.log(function () {
                                return {session_ids: {funnel_session_id: b("uuid")()}, source: "comet_create_menu"}
                            })
                        })["catch"](b("emptyFunction")), f({loggingData: {source: "comet_create_menu"}})
                    }
                }, itemKey: "rooms", render: u, type: "item"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("481240"), 20), size: 36, type: "contained-icon"},
                    body: i ? h._("\u5411\u4f60\u7684\u516c\u5171\u4e3b\u9875\u6dfb\u52a0\u751f\u6d3b\u7eaa\u4e8b\u3002") : h._("\u5411\u4f60\u7684\u4e2a\u4eba\u4e3b\u9875\u6dfb\u52a0\u4e00\u9879\u751f\u6d3b\u7eaa\u4e8b\u3002"),
                    headline: h._("\u751f\u6d3b\u7eaa\u4e8b"),
                    onPress: function () {
                        e()
                    }
                }, itemKey: "life-event", render: v, type: "item"
            }, {
                itemKey: "separator",
                render: !0,
                type: "separator"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("490492"), 20), size: 36, type: "contained-icon"},
                    body: h._("\u548c\u987e\u5ba2\u3001\u7c89\u4e1d\u5efa\u7acb\u8054\u7cfb\uff0c\u5206\u4eab\u4e1a\u52a1\u65b0\u52a8\u6001\u3002"),
                    headline: h._("\u516c\u5171\u4e3b\u9875"),
                    linkProps: {
                        target: "_self",
                        url: b("XCometPageCreationControllerRouteBuilder").buildURL({ref_type: "comet_home"})
                    }
                }, itemKey: "page", render: a, type: "item"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("534262"), 20), size: 36, type: "contained-icon"},
                    body: h._("\u63a8\u5e7f\u4f60\u7684\u4e1a\u52a1\u3001\u54c1\u724c\u6216\u7ec4\u7ec7\u3002"),
                    headline: h._("\u5e7f\u544a"),
                    linkProps: {
                        rel: "noopener",
                        target: p && b("gkx")("1626296") ? "_self" : "_blank",
                        url: b("XCometCreateAdControllerRouteBuilder").buildURL({})
                    }
                }, itemKey: "ad", render: !0, type: "item"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("510947"), 20), size: 36, type: "contained-icon"},
                    body: b("gkx")("1099151") ? h._("\u4e0e\u5174\u8da3\u76f8\u6295\u7684\u7528\u6237\u5efa\u7acb\u8054\u7cfb\u3002") : h._("\u5bfb\u627e\u5174\u8da3\u76f8\u6295\u7684\u5c0f\u4f19\u4f34\u3002"),
                    headline: h._("\u5c0f\u7ec4"),
                    linkProps: {
                        preventLocalNavigation: !1,
                        target: "_self",
                        url: b("XCometGroupsTabControllerRouteBuilder").buildURL({category: "create"})
                    },
                    onPress: function (a) {
                        a.type !== "press" && a.preventDefault()
                    }
                }, itemKey: "group", render: !0, type: "item"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("640913"), 20), size: 36, type: "contained-icon"},
                    body: h._("\u53d1\u5e03\u516c\u5f00\u6216\u79c1\u4eba\u6d3b\u52a8\uff0c\u5438\u5f15\u5927\u5bb6\u53c2\u4e0e\u3002"),
                    headline: h._("\u6d3b\u52a8"),
                    linkProps: {
                        url: b("XCometEventCreateControllerRouteBuilder").buildURL({
                            acontext: JSON.stringify({
                                event_action_history: [{
                                    mechanism: "surface",
                                    surface: "home"
                                }]
                            })
                        })
                    }
                }, itemKey: "event", render: !0, type: "item"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("556467"), 20), size: 36, type: "contained-icon"},
                    body: h._("\u4e0e\u793e\u7fa4\u6210\u5458\u505a\u4e70\u5356\u3002"),
                    headline: h._("Marketplace \u4ea4\u6613\u5e16"),
                    linkProps: {url: b("XCometMarketplaceComposerControllerRouteBuilder").buildURL({listing_type: "item"})},
                    onPress: function () {
                        m.load().then(function (a) {
                            a.logClick("create_menu", null, null, {
                                composerEntrypoint: "create_menu",
                                composerMode: "create"
                            })
                        })["catch"](b("emptyFunction"))
                    }
                }, itemKey: "marketplace-listing", render: t, type: "item"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("510954"), 20), size: 36, type: "contained-icon"},
                    body: h._("\u4e3a\u4f60\u5173\u5fc3\u7684\u516c\u76ca\u4e8b\u4e1a\u7b79\u6b3e\u3002"),
                    headline: h._("\u7b79\u6b3e\u6d3b\u52a8"),
                    linkProps: {target: "_self", url: (u = r) != null ? u : ""}
                }, itemKey: "fundraiser", render: s, type: "item"
            }, {
                cellProps: {
                    addOnPrimary: {icon: b("fbicon")._(g("481905"), 20), size: 36, type: "contained-icon"},
                    body: h._("\u53d1\u5e03\u804c\u4f4d\u5e76\u514d\u8d39\u5c55\u793a\u7ed9\u9644\u8fd1\u7684\u6c42\u804c\u8005\u3002"),
                    headline: h._("\u804c\u4f4d"),
                    linkProps: {target: "_self", url: w}
                }, itemKey: "job", render: Boolean(j), type: "item"
            }].filter(function (a) {
                return a == null ? void 0 : a.render
            }).map(function (a, b) {
                return k.jsx(q, {item: a, onClose: c, position: b}, a.itemKey)
            })
        }, [o == null ? void 0 : (a = o.viewer) == null ? void 0 : a.can_create_page, o == null ? void 0 : (a = o.viewer) == null ? void 0 : (a = a.account_user) == null ? void 0 : a.should_use_page_rename, o == null ? void 0 : (a = o.viewer) == null ? void 0 : (a = a.job_search_settings) == null ? void 0 : a.can_viewer_create_any_job, (a = o.lwi) == null ? void 0 : a.should_direct_to_lwi, d, f, e, c]);
        return k.jsx(b("CometTopNavListDropdown.react"), {
            label: h._("\u521b\u5efa"),
            name: "CreateMenu",
            children: k.jsx(b("CometTopNavListDropdown.react").Card, {
                testid: void 0,
                children: k.jsxs(b("CometScrollableArea.react"), {
                    xstyle: [r.scrollableArea, r.scrollableAreaWidth],
                    children: [k.jsx(b("CometLeftRailHeader.react"), {title: h._("\u521b\u5efa")}), k.jsx("div", {
                        className: (j || (j = b("stylex")))(r.root),
                        children: a
                    })]
                })
            })
        })
    }
}), null);
__d("CometHomeJobsLogger", ["JobsActionsTypedLoggerLite", "WebSession"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("JobsActionsTypedLoggerLite").log;
    a = function () {
        function a() {
            this.$1 = b("WebSession").getId()
        }

        var c = a.prototype;
        c.log = function (a) {
            g({name: a})
        };
        c.logCometHomeCreateMenuJobsButtonImpression = function () {
            this.log("job_comet_home_create_menu_jobs_button_impression")
        };
        c.logCometHomeCreateMenuJobsButtonClick = function () {
            this.log("job_comet_home_create_menu_jobs_button_click")
        };
        return a
    }();
    e.exports = a
}), null);
__d("CometMessagingJewelDropdownQPBannerPlaceholder.react", ["BaseGlimmer.react", "CometRow.react", "CometRowItem.react", "React", "stylex"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h = b("React"), i = {
        actionButtonGlimmer: {
            borderTopStartRadius: "beltcj47",
            borderTopEndRadius: "p86d2i9g",
            borderBottomEndRadius: "aot14ch1",
            borderBottomStartRadius: "kzx2olss",
            height: "tv7at329"
        },
        logoGlimmer: {
            borderTopStartRadius: "s45kfl79",
            borderTopEndRadius: "emlxlaya",
            borderBottomEndRadius: "bkmhp75w",
            borderBottomStartRadius: "spb7xbtv",
            height: "m7zwrmfr",
            marginTop: "muag1w35",
            width: "tmrshh9y"
        },
        root: {
            alignItems: "gs1a9yip",
            borderStyle: "ow4ym5g4",
            borderWidth: "auili1gw",
            boxSizing: "rq0escxv",
            display: "j83agx80",
            flexDirection: "cbu4d94t",
            flexGrow: "buofh1pr",
            flexShrink: "g5gj957u",
            justifyContent: "i1fnvgqd",
            minHeight: "tgvbjcpo",
            minWidth: "hpfvmrgz",
            position: "l9j0dhe7",
            zIndex: "du4w35lb",
            backgroundColor: "pykisdsp",
            borderTopStartRadius: "ue3kfks5",
            borderTopEndRadius: "pw54ja7n",
            borderBottomEndRadius: "uo3d90p7",
            borderBottomStartRadius: "l82x9zwi",
            height: "dk1262ng",
            marginTop: "n1l5q3vz",
            marginEnd: "tvfksri0",
            marginBottom: "n851cfcs",
            marginStart: "ozuftl9m",
            overflowX: "ni8dbmo4",
            overflowY: "stjgntxs",
            paddingTop: "ecm0bbzt",
            paddingEnd: "ph5uu5jm",
            paddingStart: "b3onmgus",
            paddingBottom: "ihqw7lf3"
        },
        textGlimmer: {
            borderTopStartRadius: "beltcj47",
            borderTopEndRadius: "p86d2i9g",
            borderBottomEndRadius: "aot14ch1",
            borderBottomStartRadius: "kzx2olss",
            height: "jnigpg78",
            marginBottom: "qzhwtbm6",
            marginTop: "knvmm38d"
        },
        textGroup: {display: "j83agx80", flexDirection: "cbu4d94t", marginBottom: "ew0dbk1b", marginTop: "irj2b8pg"}
    };

    function a() {
        return h.jsxs("div", {
            className: (g || (g = b("stylex")))(i.root),
            children: [h.jsxs(b("CometRow.react"), {
                verticalAlign: "center",
                children: [h.jsx(b("CometRowItem.react"), {
                    verticalAlign: "start",
                    children: h.jsx(b("BaseGlimmer.react"), {className: g(i.logoGlimmer), index: 0})
                }), h.jsx(b("CometRowItem.react"), {
                    expanding: !0,
                    children: h.jsxs("div", {
                        className: g(i.textGroup),
                        children: [h.jsx(b("BaseGlimmer.react"), {
                            className: g(i.textGlimmer),
                            index: 0
                        }), h.jsx(b("BaseGlimmer.react"), {className: g(i.textGlimmer), index: 0})]
                    })
                })]
            }), h.jsxs(b("CometRow.react"), {
                align: "justify",
                direction: "forward",
                spacing: 8,
                wrap: "none",
                children: [h.jsx(b("CometRowItem.react"), {
                    expanding: !0,
                    children: h.jsx(b("BaseGlimmer.react"), {index: 1, xstyle: i.actionButtonGlimmer})
                }), h.jsx(b("CometRowItem.react"), {
                    expanding: !0,
                    children: h.jsx(b("BaseGlimmer.react"), {index: 1, xstyle: i.actionButtonGlimmer})
                })]
            })]
        })
    }
}), null);
__d("CometMessagingJewelDropdownQPBannerContainer.react", ["CometMessagingJewelDropdownQPBannerPlaceholder.react", "CometPlaceholder.react", "CometQuickPromotionLoggerContext.react", "CometRelay", "React", "useQuickPromotionFalcoEvent", "CometMessagingJewelDropdownQPBannerContainerQuery.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h = b("React"), i = g !== void 0 ? g : g = b("CometMessagingJewelDropdownQPBannerContainerQuery.graphql");

    function a(a) {
        a = a.queryRef;
        a = b("CometRelay").usePreloadedQuery(i, a);
        var c = b("useQuickPromotionFalcoEvent")({context_surface_id: 8439, context_trigger: "messaging_jewel_open"});
        a = a == null ? void 0 : (a = a.viewer) == null ? void 0 : (a = a.eligible_promotions) == null ? void 0 : (a = a.nodes[0]) == null ? void 0 : (a = a.comet_qp_sections) == null ? void 0 : a.renderer_strategy;
        return a == null ? null : h.jsx(b("CometPlaceholder.react"), {
            fallback: h.jsx(b("CometMessagingJewelDropdownQPBannerPlaceholder.react"), {}),
            children: h.jsx(b("CometQuickPromotionLoggerContext.react").Provider, {
                value: c,
                children: h.jsx(b("CometRelay").MatchContainer, {match: a})
            })
        })
    }
}), null);
__d("MWJewelDropdownHeaderSeeAllButton.react", ["ix", "fbt", "CometTooltip.react", "React", "TetraCircleButton.react", "fbicon"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React");

    function a(a) {
        var c = h._("\u5728 Messenger \u4e2d\u67e5\u770b\u6240\u6709\u5bf9\u8bdd");
        return i.jsx(b("CometTooltip.react"), {
            align: "end",
            tooltip: c,
            children: i.jsx(b("TetraCircleButton.react"), {
                color: "secondary",
                icon: b("fbicon")._(g("580260"), 20),
                label: c,
                linkProps: {url: a.url},
                onPress: a.onClose,
                size: 32,
                type: "deemphasized"
            })
        })
    }
}), null);
__d("MWJewelDropdownHeader.react", ["ix", "fbt", "CometEntryPointPopoverTrigger.react", "CometHomeChatSettings.entrypoint", "CometProgressRingIndeterminate.react", "CometTooltip.react", "CometTopNavListDropdown.react", "MeetupExperiments", "MWChatOpenNewTab.re", "MWJewelDropdownHeaderSeeAllButton.react", "React", "TetraCircleButton.react", "XCometMessengerControllerRouteBuilder", "fbicon", "stylex", "useMWChatNewVideoChat", "useMWChatTabContainerNewPreload", "useShouldShowMessagingEntrypointInCometRoot"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React");

    function j(a) {
        a = a.onOpenMessageRequests;
        var c = h._("\u9009\u9879");
        return i.jsx(b("CometEntryPointPopoverTrigger.react"), {
            align: "end",
            entryPointParams: {},
            otherProps: {onOpenMessageRequests: (a = a) != null ? a : void 0},
            popoverEntryPoint: b("CometHomeChatSettings.entrypoint"),
            position: "below",
            preloadTrigger: "button",
            children: function (a, d, e, f, h, j) {
                return i.jsx(b("CometTooltip.react"), {
                    align: "end",
                    tooltip: c,
                    children: i.jsx(b("TetraCircleButton.react"), {
                        color: "secondary",
                        icon: b("fbicon")._(g("484387"), 20),
                        label: c,
                        onHoverIn: f,
                        onHoverOut: h,
                        onPress: d,
                        onPressIn: j,
                        ref: a,
                        size: 32,
                        type: "deemphasized"
                    })
                })
            }
        })
    }

    function a(a) {
        var c = b("useShouldShowMessagingEntrypointInCometRoot")("CHAT"),
            d = b("MWChatOpenNewTab.re").useHook("jewel_new_message"), e = b("useMWChatNewVideoChat")(a.onClose),
            f = e[0];
        e = e[1];
        var k = b("XCometMessengerControllerRouteBuilder").buildURL({thread_key: "new"}), l = function () {
            c && (d(), a.onClose())
        }, m = b("useMWChatTabContainerNewPreload")(), n = m[0];
        m = m[1];
        var o = h._("\u65b0\u6d88\u606f"), p = h._("\u65b0\u5efa\u89c6\u9891\u804a\u5929\u5ba4");
        return i.jsx(b("CometTopNavListDropdown.react").Title, {
            actions: [i.jsx(j, {onOpenMessageRequests: a.onOpenMessageRequests}), i.jsx(b("MWJewelDropdownHeaderSeeAllButton.react"), {
                onClose: a.onClose,
                url: a.inboxUrl
            }), b("MeetupExperiments").supportLinkCreation() ? i.jsx(b("CometTooltip.react"), {
                align: "end",
                tooltip: p,
                children: e ? i.jsx("div", {
                    className: "k7cz35w2 j83agx80 bp9cbjyn",
                    children: i.jsx(b("CometProgressRingIndeterminate.react"), {color: "disabled", size: 20})
                }) : i.jsx(b("TetraCircleButton.react"), {
                    color: "secondary",
                    icon: b("fbicon")._(g("1388374"), 20),
                    label: p,
                    onPress: function () {
                        return f("fb_messenger_jewel")
                    },
                    size: 32,
                    type: "deemphasized"
                })
            }) : null, i.jsx(b("CometTooltip.react"), {
                align: "end",
                tooltip: o,
                children: i.jsx(b("TetraCircleButton.react"), {
                    color: "secondary",
                    icon: b("fbicon")._(g("507170"), 16),
                    label: o,
                    linkProps: {preventLocalNavigation: c, url: k},
                    onHoverIn: n,
                    onHoverOut: m,
                    onPress: l,
                    size: 32,
                    type: "deemphasized"
                })
            })].filter(Boolean), onReturn: a.onReturn, title: a.title
        })
    }
}), null);
__d("MWJewelMessageRequestsDropdownHeader.react", ["CometTopNavListDropdown.react", "MWJewelDropdownHeaderSeeAllButton.react", "React"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        return g.jsx(b("CometTopNavListDropdown.react").Title, {
            actions: [g.jsx(b("MWJewelDropdownHeaderSeeAllButton.react"), {
                onClose: a.onClose,
                url: a.url
            })], onReturn: a.onReturn, title: a.title
        })
    }
}), null);
__d("MWJewelMessengerLink.react", ["fbt", "CometLink.react", "React", "TetraText.react", "stylex"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function a(a) {
        var c = a.onClick;
        a = a.url;
        return h.jsx("div", {
            className: "pzdrnzhu ihqw7lf3 jyxxhhb5",
            children: h.jsx(b("TetraText.react"), {
                align: "center",
                color: "blueLink",
                type: "bodyLink3",
                children: h.jsx(b("CometLink.react"), {
                    href: a,
                    onClick: c,
                    children: g._("\u5728 Messenger \u4e2d\u67e5\u770b\u6240\u6709\u5bf9\u8bdd")
                })
            })
        })
    }
}), null);
__d("MWJewelMessageRequestsDropdown.react", ["fbt", "CometScrollView.react", "CometTopNavListDropdown.react", "MWJewelMessageRequestsDropdownHeader.react", "MWJewelMessengerLink.react", "React", "TetraText.react", "XCometMessengerControllerRouteBuilder", "requireCond", "stylex", "cr:1525945"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function a(a) {
        var c = a.onClose, d = a.onOpenSpamMessages;
        a = a.onReturn;
        var e = b("XCometMessengerControllerRouteBuilder").buildExtraURL("/messages/requests/", {});
        return h.jsxs(b("CometTopNavListDropdown.react").Card, {
            useMaxHeight: !0,
            children: [h.jsxs(b("CometScrollView.react"), {
                showsHorizontalScrollIndicator: !1,
                showsVerticalScrollIndicator: !0,
                children: [h.jsx(b("MWJewelMessageRequestsDropdownHeader.react"), {
                    onClose: c,
                    onReturn: a,
                    title: g._("\u964c\u751f\u6d88\u606f"),
                    url: e
                }), h.jsx("div", {
                    className: "lb8aey2d f10w8fjw oj5qckz4 pybr56ya hcukyx3x w0hvl6rk cxmmr5t8 qjjbsfad b3i9ofy5",
                    children: h.jsx(b("TetraText.react"), {
                        color: "secondary",
                        type: "body4",
                        children: g._("\u70b9\u5f00\u964c\u751f\u6d88\u606f\u80fd\u591f\u67e5\u770b\u6d88\u606f\u6765\u6e90\u3002\u9664\u975e\u4f60\u56de\u590d\u5bf9\u65b9\uff0c\u5426\u5219\u5bf9\u65b9\u4e0d\u4f1a\u770b\u5230\u6d88\u606f\u5df2\u8bfb\u3002")
                    })
                }), h.jsx(b("cr:1525945"), {folder: "pending", onClose: c, onOpenSpamMessages: d})]
            }), h.jsx(b("MWJewelMessengerLink.react"), {onClick: c, url: e})]
        })
    }
}), null);
__d("MWJewelSpamMessagesDropdown.react", ["fbt", "CometScrollView.react", "CometTopNavListDropdown.react", "MWJewelMessageRequestsDropdownHeader.react", "MWJewelMessengerLink.react", "React", "TetraText.react", "XCometMessengerControllerRouteBuilder", "requireCond", "stylex", "cr:1525945"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function a(a) {
        var c = a.onClose;
        a = a.onReturn;
        var d = b("XCometMessengerControllerRouteBuilder").buildExtraURL("/messages/filtered/", {});
        return h.jsxs(b("CometTopNavListDropdown.react").Card, {
            useMaxHeight: !0,
            children: [h.jsxs(b("CometScrollView.react"), {
                showsHorizontalScrollIndicator: !1,
                showsVerticalScrollIndicator: !0,
                children: [h.jsx(b("MWJewelMessageRequestsDropdownHeader.react"), {
                    onClose: c,
                    onReturn: a,
                    title: g._("\u5783\u573e\u4fe1\u606f"),
                    url: d
                }), h.jsx("div", {
                    className: "lb8aey2d f10w8fjw oj5qckz4 pybr56ya hcukyx3x w0hvl6rk cxmmr5t8 qjjbsfad b3i9ofy5",
                    children: h.jsx(b("TetraText.react"), {
                        color: "secondary",
                        type: "body4",
                        children: g._("\u70b9\u5f00\u964c\u751f\u6d88\u606f\u80fd\u591f\u67e5\u770b\u6d88\u606f\u6765\u6e90\u3002\u9664\u975e\u4f60\u56de\u590d\u5bf9\u65b9\uff0c\u5426\u5219\u5bf9\u65b9\u4e0d\u4f1a\u770b\u5230\u6d88\u606f\u5df2\u8bfb\u3002")
                    })
                }), h.jsx(b("cr:1525945"), {folder: "other", onClose: c})]
            }), h.jsx(b("MWJewelMessengerLink.react"), {onClick: c, url: d})]
        })
    }
}), null);
__d("MWUIJewelPreloadThreadFolder.bs", ["requireCond", "cr:1516191"], (function (a, b, c, d, e, f) {
    "use strict";

    function a() {
        if (b("cr:1516191") == null) return function (a) {
        }; else return b("cr:1516191").useHook()
    }

    f.$null$OR$MWMSJewelPreloadThreadFolder$requireCond = b("cr:1516191");
    f.useHook = a
}), null);
__d("MWUIJewelPreloadThreadFolder.re", ["MWUIJewelPreloadThreadFolder.bs"], (function (a, b, c, d, e, f) {
    a = b("MWUIJewelPreloadThreadFolder.bs").useHook;
    f.useHook = a
}), null);
__d("MWJewelSearchEmptyState.react", ["fbt", "React", "TetraText.react", "stylex", "useCometSearchTypeaheadEmptyState"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function a(a) {
        var c = b("useCometSearchTypeaheadEmptyState")();
        return c ? h.jsxs("div", {
            className: "tw6a2znq f10w8fjw d1544ag0 pybr56ya",
            children: [h.jsx(b("TetraText.react"), {
                align: "center",
                type: "body2",
                children: g._("\u627e\u4e0d\u5230\u7ed3\u679c")
            }), h.jsx("br", {}), h.jsx(b("TetraText.react"), {
                align: "center",
                color: "tertiary",
                type: "body3",
                children: g._("\u627e\u4e0d\u5230\u7b26\u5408\u201c{query}\u201d\u7684\u4efb\u4f55\u7ed3\u679c\u3002\u8bf7\u68c0\u67e5\u62fc\u5199\u6216\u9519\u522b\u5b57\uff0c\u6216\u4f7f\u7528\u5b8c\u6574\u5355\u8bcd\u3002", [g._param("query", a.queryString)])
            })]
        }) : null
    }
}), null);
__d("MWChatProfile.bs", ["React", "stylex", "bs_belt_Option", "BaseGlimmer.react"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = b("React"), i = {
        root: {position: "l9j0dhe7"},
        img: {
            width: "k4urcfbm",
            height: "datstx6m",
            borderTopStartRadius: "s45kfl79",
            borderTopEndRadius: "emlxlaya",
            borderBottomEndRadius: "bkmhp75w",
            borderBottomStartRadius: "spb7xbtv",
            verticalAlign: "pzggbiyp",
            objectFit: "bixrwtb6"
        },
        activeNow: {
            display: "mkhogb32",
            position: "pmk7jnqg",
            backgroundColor: "jllm4f4h",
            width: "c9rrlmt1",
            height: "t6na6p9t",
            borderTop: "iruzoqzv",
            borderEnd: "n8v90iwk",
            borderBottom: "qx7ju95k",
            borderStart: "m8of71z0",
            bottom: "i09qtzwb",
            end: "n7fi1qx3",
            borderTopStartRadius: "s45kfl79",
            borderTopEndRadius: "emlxlaya",
            borderBottomEndRadius: "bkmhp75w",
            borderBottomStartRadius: "spb7xbtv"
        },
        active: {display: "a8c37x1j"}
    };

    function a(a) {
        var c = a.size, d = a.src, e = a.isActiveNow, f = a.alt;
        a = a.children;
        e = e !== void 0 ? e : !1;
        f = f !== void 0 ? f : "";
        f = d !== void 0 ? h.jsx("img", {
            className: (g || (g = b("stylex")))(i.img),
            alt: f,
            src: d
        }) : h.jsx(b("BaseGlimmer.react"), {className: (g || (g = b("stylex")))(i.img), index: 1});
        return h.jsxs("div", {
            children: [f, b("bs_belt_Option").getWithDefault(a, null), h.jsx("div", {className: (g || (g = b("stylex")))(i.activeNow, e ? i.active : !1)})],
            className: g(i.root),
            style: {height: String(c) + "px", width: String(c) + "px"}
        })
    }

    c = a;
    f.styles = i;
    f.make = c
}), null);
__d("MWChatProfile.re", ["MWChatProfile.bs"], (function (a, b, c, d, e, f) {
    (function (a) {
        return null
    });
    a = b("MWChatProfile.bs").make;
    f.make = a
}), null);
__d("MWJewelSearchTypeaheadViewItem.react", ["CometMiddot.react", "CometPageVerificationIcon.react", "CometSearchTypeaheadBaseViewItem.react", "CurrentEnvironment", "MWChatFacepile.re", "MWChatProfile.re", "React", "TetraText.react", "TetraTextPairing.react", "XCometMessengerControllerRouteBuilder", "stylex"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var c = a.entry;
        a.queryString;
        a = babelHelpers.objectWithoutPropertiesLoose(a, ["entry", "queryString"]);
        var d = c.getRawData(), e = d.id, f = d.imageUrl, h = d.secondaryImageUrl, i = d.section, j = d.subtext;
        d = d.verificationStatus;
        h = h !== "" ? g.jsx(b("MWChatFacepile.re").make, {
            firstParticipantURI: f,
            secondParticipantURI: h,
            size: 36
        }) : g.jsx(b("MWChatProfile.re").make, {size: 36, src: f});
        f = b("CurrentEnvironment").facebookdotcom ? b("XCometMessengerControllerRouteBuilder").buildURL({thread_key: e}) : "/skytale/t/" + e + "/";
        return g.jsx(b("CometSearchTypeaheadBaseViewItem.react"), babelHelpers["extends"]({}, a, {
            entry: c,
            isDisabled: c.getIsInteropIneligible(),
            itemStartContent: h,
            linkProps: {preventLocalNavigation: !0, url: f},
            children: g.jsx(b("TetraTextPairing.react"), {
                body: g.jsxs(b("TetraText.react"), {
                    numberOfLines: 1,
                    type: "body3",
                    children: [c.getLabel(), d != null ? g.jsx("span", {
                        className: "scb9dxdr",
                        children: g.jsx(b("CometPageVerificationIcon.react"), {size: "small", verificationBadge: d})
                    }) : null]
                }),
                level: 3,
                meta: j && j !== "" ? g.jsxs(b("TetraText.react"), {
                    numberOfLines: 1,
                    type: "meta4",
                    children: [j, (i == null || i === "") && c.getIsInstagramAccount() ? g.jsxs(g.Fragment, {children: [g.jsx(b("CometMiddot.react"), {}), "Instagram"]}) : null]
                }) : null
            })
        }))
    }
}), null);
__d("MWJewelSearchTypeaheadViewStrategy.react", ["CometScrollView.react", "MWJewelSearchEmptyState.react", "MWJewelSearchTypeaheadViewItem.react", "React", "requireCond", "cr:1691755"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var c = a.entries;
        a.extraViewProps;
        var d = a.highlightedEntry;
        a.onAbandonTypeahead_DO_NOT_USE;
        var e = babelHelpers.objectWithoutPropertiesLoose(a, ["entries", "extraViewProps", "highlightedEntry", "onAbandonTypeahead_DO_NOT_USE"]);
        return c.length === 0 ? g.jsx(b("MWJewelSearchEmptyState.react"), {queryString: e.queryString}) : g.jsx(b("cr:1691755"), {
            entries: c,
            highlightedEntry: d,
            children: function (a, c) {
                return g.createElement(b("MWJewelSearchTypeaheadViewItem.react"), babelHelpers["extends"]({}, e, {
                    entry: a,
                    isActive: c,
                    key: a.getKey()
                }))
            }
        })
    }
}), null);
__d("MWJewelSearchTypeahead.react", ["fbt", "CometRelay", "CometSearchTypeaheadBaseBackButton.react", "CometSearchTypeaheadBaseInputRoundedStrategy.react", "CometSearchTypeaheadBaseLayoutContextualStrategy.react", "CometTypeahead.react", "MWJewelSearchTypeaheadViewStrategy.react", "React", "requireCond", "stylex", "cr:1691754", "cr:1708175"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React"), i = {
        searchInput: {
            marginTop: "aov4n071",
            marginEnd: "cxmmr5t8",
            marginBottom: "bi6gxh9e",
            marginStart: "hcukyx3x",
            paddingTop: "jb3vyjys",
            paddingEnd: "hv4rvrfc",
            paddingBottom: "qt6c0cv9",
            paddingStart: "dati1w0a"
        },
        searchView: {
            borderTopStartRadius: "ue3kfks5",
            borderTopEndRadius: "pw54ja7n",
            borderBottomEndRadius: "uo3d90p7",
            borderBottomStartRadius: "l82x9zwi",
            boxShadow: "mvk8q8v6",
            display: "j83agx80",
            minHeight: "mw5ich9q"
        }
    };

    function a(a) {
        var c = a.onBlur, d = a.onChange, e = a.onFocus, f = a.onPressEntry;
        a = babelHelpers.objectWithoutPropertiesLoose(a, ["onBlur", "onChange", "onFocus", "onPressEntry"]);
        var j = h.useState(!1), k = j[0], l = j[1], m = b("CometRelay").useRelayEnvironment();
        j = h.useMemo(function () {
            return new (b("cr:1691754"))({
                lightspeedSupportedTypes: b("cr:1708175") == null ? void 0 : b("cr:1708175").allSupportedTypes,
                limit: 20,
                relayEnvironment: m,
                source: b("cr:1708175") == null ? void 0 : b("cr:1708175").Surfaces.universal
            })
        }, [m]);
        var n = h.useCallback(function () {
            l(!1), d("")
        }, [d]), o = h.useCallback(function () {
            l(!0)
        }, []);
        return h.jsx(b("CometTypeahead.react"), {
            dataSource: j,
            inputExtraProps: {hideIconAnimation: !0, hideIconOnFocus: !0},
            inputStartContent: k ? h.jsx(b("CometSearchTypeaheadBaseBackButton.react"), {testid: void 0}) : null,
            inputStrategyRenderer: b("CometSearchTypeaheadBaseInputRoundedStrategy.react"),
            layoutStrategyRenderer: b("CometSearchTypeaheadBaseLayoutContextualStrategy.react"),
            onBlur: c,
            onChange: d,
            onClose: n,
            onFocus: e,
            onOpen: o,
            onPressEntry: f,
            placeholder: g._("\u641c\u7d22 Messenger"),
            queryString: a.queryString,
            viewStrategyRenderer: b("MWJewelSearchTypeaheadViewStrategy.react"),
            xstyles: {inputXStyle: i.searchInput, viewXStyle: i.searchView}
        })
    }
}), null);
__d("useMWJewelThreadListSearchTypeahead.react", ["MWJewelSearchTypeahead.react", "React", "useMWChatOpenTabForGroup", "useMWChatOpenTabForPage", "useMWChatOpenTabForUser"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a, c, d, e) {
        var f = b("useMWChatOpenTabForGroup")("jewel_search"), h = f[0];
        f[1];
        var i = b("useMWChatOpenTabForPage")("jewel_search");
        f = b("useMWChatOpenTabForUser")("jewel_search");
        var j = f[0];
        f[1];
        f = g.useCallback(function (a) {
            a = a.getRawData();
            var b = a.id;
            a = a.resultType;
            switch (a) {
                case"group":
                    h(b);
                    break;
                case"user":
                    j(b);
                    break;
                case"page":
                    i(b);
                    break
            }
            e()
        }, [e, h, i, j]);
        return g.jsx(b("MWJewelSearchTypeahead.react"), {
            onBlur: function () {
                return a(!1)
            }, onChange: c, onFocus: function () {
                return a(!0)
            }, onPressEntry: f, queryString: d
        })
    }
}), null);
__d("CometMessagingJewelDropdown.react", ["fbt", "BaseMultiStepContainer.react", "CometErrorBoundary.react", "CometMessagingJewelDropdownQPBannerContainer.react", "CometPlaceholder.react", "CometScrollView.react", "CometTopNavListDropdown.react", "MWJewelDropdownHeader.react", "MWJewelMessageRequestsDropdown.react", "MWJewelMessengerLink.react", "MWJewelSpamMessagesDropdown.react", "MWUIJewelPreloadThreadFolder.re", "React", "XCometMessengerControllerRouteBuilder", "recoverableViolation", "requireCond", "stylex", "useMWJewelThreadListSearchTypeahead.react", "cr:1716992", "cr:1525945"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h, i = b("React"), j = b("cr:1716992") ? b("cr:1716992").useHook : function () {
        return function () {
        }
    };

    function k(a) {
        b("recoverableViolation")("CometMessagingJewelDropdownQPBannerContainer failed to render", "messenger_web_product", {error: a})
    }

    function a(a) {
        var c = a.props.onClose, d = a.queries.qpBannerContainerQueryRef, e = j(), f = i.useCallback(function () {
            e(), c()
        }, [c, e]);
        i.useEffect(function () {
            return e
        }, [e]);
        a = i.useState(!1);
        var l = a[0];
        a = a[1];
        var m = i.useState(""), n = m[0];
        m = m[1];
        var o = b("XCometMessengerControllerRouteBuilder").buildURL({}),
            p = b("useMWJewelThreadListSearchTypeahead.react")(a, m, n, f),
            q = b("MWUIJewelPreloadThreadFolder.re").useHook();
        a = i.jsx("div", {
            className: (h || (h = b("stylex")))([b("CometTopNavListDropdown.react").styles.cardWidth]),
            children: i.jsx(b("BaseMultiStepContainer.react"), {
                fitContentWidth: !0, children: function (a) {
                    var c = function () {
                        return a(function (a) {
                            a = a.onReturn;
                            return i.jsx(b("MWJewelSpamMessagesDropdown.react"), {onClose: f, onReturn: a})
                        })
                    }, e = function () {
                        q("other"), a(function (a) {
                            a = a.onReturn;
                            return i.jsx(b("MWJewelMessageRequestsDropdown.react"), {
                                onClose: f,
                                onOpenSpamMessages: c,
                                onReturn: a
                            })
                        })
                    };
                    return i.jsxs(b("CometTopNavListDropdown.react").Card, {
                        useMaxHeight: !0,
                        children: [i.jsxs(b("CometScrollView.react"), {
                            showsHorizontalScrollIndicator: !1,
                            showsVerticalScrollIndicator: !l && n === "",
                            children: [i.jsx(b("MWJewelDropdownHeader.react"), {
                                inboxUrl: o,
                                onClose: f,
                                onOpenMessageRequests: e,
                                title: g._("Messenger")
                            }), i.jsx(b("CometErrorBoundary.react"), {
                                onError: k,
                                children: i.jsx(b("CometPlaceholder.react"), {
                                    fallback: null,
                                    children: i.jsx(b("CometMessagingJewelDropdownQPBannerContainer.react"), {queryRef: d})
                                })
                            }), i.jsx(b("cr:1525945"), {
                                folder: "inbox",
                                onClose: f,
                                onOpenMessageRequests: e,
                                searchTypeahead: p
                            })]
                        }), i.jsx(b("MWJewelMessengerLink.react"), {onClick: f, url: o})]
                    })
                }
            })
        });
        return i.jsx(b("CometTopNavListDropdown.react"), {
            label: g._("Messenger"),
            name: "MWJewelDropdown",
            children: a
        })
    }
}), null);
__d("CometNotificationsReceiveSubscription", ["CometRelay", "CurrentUser", "JSScheduler", "RelayRTIGraphQLSubscriptionTopicProvider", "relay-runtime", "CometNotificationsReceiveSubscription.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    f.subscribeToNotificationUpdates = a;
    var g, h = g !== void 0 ? g : g = b("CometNotificationsReceiveSubscription.graphql");
    f.NotificationsReceiveSubscription = h;
    var i = {};

    function a(a, c, d, e) {
        var f = b("relay-runtime").getRequest(h);
        f = f.params.id;
        f !== null && !i[f] && (i[f] = !0, b("RelayRTIGraphQLSubscriptionTopicProvider").registerProvider(f, function (a) {
            return "gqls/comet_notification_receive_subscribe/actor_id_" + b("CurrentUser").getID() + "_environment_" + a.input.environment
        }));
        var g = function (a) {
            var c = a.getRootField("comet_notification_receive_subscribe");
            if (c == null) return;
            c = c.getLinkedRecord("notification");
            if (c == null) return;
            a = a.get(b("relay-runtime").VIEWER_ID);
            if (a == null) return;
            a.setLinkedRecord(c, "new_notification")
        }, j = null, k = !1;
        b("JSScheduler").scheduleSpeculativeCallback(function () {
            k || (j = b("CometRelay").requestSubscription(a, {
                onCompleted: d,
                onError: e,
                subscription: h,
                updater: g,
                variables: c
            }))
        });
        return {
            dispose: function () {
                j != null && (j.dispose(), j = null), k = !0
            }
        }
    }
}), null);
__d("CometSetupNotificationStoreSubscription", ["CometNotificationsReceiveSubscription", "CometRelay", "JSResource", "React", "WebPixelRatio", "promiseDone", "relay-runtime", "requireDeferred", "CometSetupNotificationStoreSubscriptionNewNotification_data.graphql", "CometSetupNotificationStoreSubscriptionNewNotificationQuery.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h, i = b("React"), j = b("requireDeferred")("Banzai"),
        k = b("JSResource")("CometToastNotification.react").__setRef("CometSetupNotificationStoreSubscription"),
        l = {data: g !== void 0 ? g : g = b("CometSetupNotificationStoreSubscriptionNewNotification_data.graphql")};
    h !== void 0 ? h : h = b("CometSetupNotificationStoreSubscriptionNewNotificationQuery.graphql");
    var m = "notif_beeper_drop";

    function a(a, c) {
        var d = l.data;
        if (d == null) return;
        d = b("relay-runtime").getFragment(d);
        var e = {
                input: {client_subscription_id: "notifications:receive:subscription"},
                scale: b("WebPixelRatio").get()
            },
            f = b("relay-runtime").createOperationDescriptor(b("relay-runtime").getRequest(b("CometNotificationsReceiveSubscription").NotificationsReceiveSubscription), e);
        d = c.lookup(b("relay-runtime").createReaderSelector(d, "client:root:viewer", e, f.request));
        var g;
        e = function (a) {
            g = a
        };
        var h = {};
        f = c.subscribe(d, function (c) {
            if (c.isMissingData) return;
            c = c.data;
            var d = c.actor, e = c.new_notification;
            if (d == null || e == null) return;
            c = a.getState();
            e.seen_state !== "UNSEEN_AND_UNREAD" && e.notif_id in h && ((c = c[h[e.notif_id]]) == null ? void 0 : c.shown) !== !0 && (a["delete"](h[e.notif_id]), delete h[e.notif_id]);
            b("promiseDone")(k.load().then(function (b) {
                if (g !== !0 && e.seen_state === "UNSEEN_AND_UNREAD" && h[e.notif_id] == null) {
                    var c = a.push(i.jsx(b, {
                        actor: d, notification: e, onCloseClick: function () {
                            return a.expire(c)
                        }
                    }), 5e3);
                    h[e.notif_id] = c
                } else j.onReady(function (a) {
                    var b = e.notif_id, c = e.notif_type;
                    a.post(m, {
                        notification_data: {
                            alert_id: b,
                            logger_context: "beeper",
                            notif_type: c,
                            user_id: d == null ? void 0 : d.id
                        }, ref: "www_tab"
                    })
                })
            }))
        });
        return {disposable: f, setFilter: e}
    }
}), null);
__d("MWChatCloseTabs.bs", ["React", "MessengerWebEvent", "MWChatMultitabContext.bs", "MWChatMultitabDispatcher.bs", "MessengerWebStgTypedLoggerLite.bs", "useCometFeedNoRoutingNavigationEventLogger"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        var c = b("useCometFeedNoRoutingNavigationEventLogger")(),
            d = g.useContext(b("MWChatMultitabContext.bs").context);
        return g.useCallback(function (a) {
            c(Date.now(), "", "messenger");
            b("MessengerWebStgTypedLoggerLite.bs").log({event_name: b("MessengerWebEvent").CLOSE_ALL_CHAT_TABS});
            if (d !== void 0) return b("MWChatMultitabDispatcher.bs").dispatch(void 0, d, 1)
        }, [d, c])
    }

    f.useHook = a
}), null);
__d("MWChatCloseTabs.re", ["MWChatCloseTabs.bs"], (function (a, b, c, d, e, f) {
    a = b("MWChatCloseTabs.bs").useHook;
    f.useHook = a
}), null);
__d("MWChatCollapseTabs.bs", ["React", "MessengerWebEvent", "MWChatMultitabContext.bs", "MWChatMultitabDispatcher.bs", "MessengerWebStgTypedLoggerLite.bs", "useCometFeedNoRoutingNavigationEventLogger"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        var c = b("useCometFeedNoRoutingNavigationEventLogger")(),
            d = g.useContext(b("MWChatMultitabContext.bs").context);
        return g.useCallback(function (a) {
            c(Date.now(), "", "messenger");
            b("MessengerWebStgTypedLoggerLite.bs").log({event_name: b("MessengerWebEvent").MINIMIZE_ALL_CHAT_TABS});
            if (d !== void 0) return b("MWChatMultitabDispatcher.bs").dispatch(void 0, d, 2)
        }, [d, c])
    }

    f.useHook = a
}), null);
__d("MWChatCollapseTabs.re", ["MWChatCollapseTabs.bs"], (function (a, b, c, d, e, f) {
    a = b("MWChatCollapseTabs.bs").useHook;
    f.useHook = a
}), null);
__d("MWChatSettingsHeadPopover.react", ["ix", "fbt", "CometMenu.react", "CometMenuItem.react", "MWChatCloseTabs.re", "MWChatCollapseTabs.re", "React", "fbicon"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React");

    function a(a) {
        var c = b("MWChatCloseTabs.re").useHook(), d = b("MWChatCollapseTabs.re").useHook();
        return i.jsxs(b("CometMenu.react"), {
            withArrow: !0,
            children: [i.jsx(b("CometMenuItem.react"), {
                icon: b("fbicon")._(g("491584"), 20), onClick: function (a) {
                    return c()
                }, primaryText: h._("\u5173\u95ed\u6240\u6709\u804a\u5929")
            }), i.jsx(b("CometMenuItem.react"), {
                icon: b("fbicon")._(g("518013"), 20), onClick: function (a) {
                    return d()
                }, primaryText: h._("\u5c06\u6253\u5f00\u7684\u804a\u5929\u7a97\u53e3\u6700\u5c0f\u5316")
            })]
        })
    }
}), null);
__d("MWJewelOpenTabForCurrentThread.bs", ["bs_curry", "React", "MWThread_DEPRECATED.bs", "MWChatOpenTabForPage.bs", "MWChatOpenTabForUser.bs", "MWChatOpenTabForGroup.bs", "unrecoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a, c, d) {
        var e = b("MWThread_DEPRECATED.bs").useIdExn(void 0), f = b("MWChatOpenTabForUser.bs").useHook(void 0, d),
            h = f[0], i = b("MWChatOpenTabForPage.bs").useHook(void 0, d);
        f = b("MWChatOpenTabForGroup.bs").useHook(void 0, d);
        var j = f[0];
        return g.useCallback(function (d) {
            d = d.metaKey || d.ctrlKey || d.shiftKey;
            if (a && !d) {
                d = e.NAME;
                d === "Group" ? b("bs_curry")._1(j, e.VAL) : d === "Page" ? b("bs_curry")._1(i, e.VAL) : d === "User" ? b("bs_curry")._1(h, e.VAL) : b("unrecoverableViolation")("UserSecret Not supported", "messenger_web_product")
            }
            return b("bs_curry")._1(c, void 0)
        }, [h, j, i, c, a, e])
    }

    f.useHook = a
}), null);
__d("MWJewelThreadSnippet.react", ["CurrentEnvironment", "React", "TetraText.react"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var c = a.isUnread;
        a = a.text;
        return c ? b("CurrentEnvironment").facebookdotcom ? g.jsx(b("TetraText.react"), {
            color: "highlight",
            numberOfLines: 1,
            type: "bodyLink4",
            children: a
        }) : g.jsx(b("TetraText.react"), {
            color: "primary",
            numberOfLines: 1,
            type: "bodyLink4",
            children: a
        }) : g.jsx(b("TetraText.react"), {color: "secondary", numberOfLines: 1, type: "body4", children: a})
    }
}), null);
__d("MWJewelSpamMessagesThread.react", ["ix", "fbt", "Locale", "MWJewelThreadSnippet.react", "React", "TetraIcon.react", "TetraListCell.react", "fbicon"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React");

    function a(a) {
        var c = a.spamMessagesCount, d = a.loadedAll;
        a = a.onOpenSpamMessages;
        var e = h._("\u67e5\u770b\u5783\u573e\u4fe1\u606f");
        d = d ? h._("{number}\u6761\u964c\u751f\u6d88\u606f", [h._param("number", c)]) : h._("{number}+ \u6761\u964c\u751f\u6d88\u606f", [h._param("number", c)]);
        return i.jsx(b("TetraListCell.react"), {
            addOnPrimary: {
                icon: b("fbicon")._(g("542884"), 24),
                size: 56,
                type: "contained-icon"
            },
            addOnSecondary: {
                addOn: i.jsx(b("TetraIcon.react"), {
                    color: "secondary",
                    icon: b("Locale").isRTL() ? b("fbicon")._(g("492485"), 16) : b("fbicon")._(g("492533"), 16)
                }), type: "body"
            },
            body: i.jsx(b("MWJewelThreadSnippet.react"), {isUnread: !1, text: d}),
            headline: e,
            level: 4,
            onPress: a
        })
    }
}), null);
__d("MWJewelThreadAddOnSecondaryIcons", ["requireCond", "cr:1737009"], (function (a, b, c, d, e, f) {
    "use strict";
    f.MWJewelThreadAddOnSecondaryIcons = b("cr:1737009")
}), null);
__d("MWMSJewelConstants", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = "all";
    f.ALL = a;
    b = "unread";
    f.UNREAD = b
}), null);
__d("MercuryPayloadSource", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        UNKNOWN: "unknown",
        CLIENT_CHANNEL_MESSAGE: "client_channel_message",
        CLIENT_SEND_MESSAGE: "client_send_message",
        CLIENT_CHANGE_ARCHIVED_STATUS: "client_change-archived_status",
        CLIENT_CHANGE_PINNED_MESSAGES: "client_change-pinned_messages",
        CLIENT_CHANGE_PINNED_STATUS: "client_change-pinned_status",
        CLIENT_CHANGE_PAGE_FOLLOW_UP_STATUS: "client_change_page_follow_up_status",
        CLIENT_CHANGE_FOLDER: "client_change_folder",
        CLIENT_CHANGE_MUTE_SETTINGS: "client_change_mute_settings",
        CLIENT_CHANGE_READ_STATUS: "client_change_read_status",
        CLIENT_CHANGE_CUSTOM_LIKE: "client_change_custom_like",
        CLIENT_MARK_THREAD_SEEN: "client_mark_thread_seen",
        CLIENT_ADD_PARTICIPANTS: "client_add_participants",
        CLIENT_FETCH_PARTICIPANTS: "client_fetch_participants",
        CLIENT_DELETE_MESSAGES: "client_delete_messages",
        CLIENT_DELETE_THREAD: "client_delete_thread",
        CLIENT_UPDATE_SNIPPET: "client_update_snippet",
        CLIENT_HANDLE_ERROR: "client_handle_error",
        CLIENT_CHANGE_FLAG: "client_change_flag",
        CLIENT_MOVE_PENDING_TO_INBOX: "client_move_pending_to_inbox",
        CLIENT_CREATE_PAGE_ADMIN_NOTE: "client_create_page_admin_note",
        CLIENT_UNWRAP_MESSAGE: "client_unwrap_message",
        CLIENT_UPDATE_COMM_STATUS: "client_update_comm_status",
        CLIENT_UPDATE_COMM_ITEM_OWNER: "client_update_comm_item_owner",
        CLIENT_CHANGE_SAVED_MESSAGE_STATUS: "client_update_saved_message_status",
        SERVER_INITIAL_DATA: "server_initial_data",
        SERVER_SEND_MESSAGE: "server_send_message",
        SERVER_CHANGE_ARCHIVED_STATUS: "server_change_archived_status",
        SERVER_CHANGE_PINNED_MESSAGES: "server_change-pinned_messages",
        SERVER_CHANGE_PINNED_STATUS: "server_change_pinned_status",
        SERVER_CHANGE_PAGE_FOLLOW_UP_STATUS: "server_change_page_follow_up_status",
        SERVER_CHANGE_READ_STATUS: "server_change_read_status",
        SERVER_MARK_FOLDER_READ: "server_mark_folder_read",
        SERVER_MARK_SEEN: "server_mark_seen",
        SERVER_FETCH_PARTICIPANTS: "server_fetch_participants",
        SERVER_FETCH_THREAD_INFO: "server_fetch_thread_info",
        SERVER_FETCH_THREADLIST_INFO: "server_fetch_threadlist_info",
        SERVER_STANDALONE_NOTIFICATIONS: "server_standalone_notifications",
        SERVER_THREAD_SYNC: "server_thread_sync",
        SERVER_TAB_PRESENCE: "server_tab_presence",
        SERVER_UNREAD_THREADS: "server_unread_threads",
        SERVER_UNSEEN_THREADS: "server_unseen_threads",
        SERVER_SEARCH: "server_search",
        SERVER_CHANGE_FLAG: "server_change_flag",
        SERVER_INVALIDATE_THREAD_STATE: "server_invalidate_thread_state",
        SERVER_INVALIDATE_GLOBAL_STATE: "server_invalidate_global_state"
    });
    e.exports = a
}), null);
__d("MessengerThreadFetcher.bs", ["Promise", "bs_curry", "gkx", "FBIDCheck", "bs_belt_Array", "LogHistory", "MercuryIDs", "bs_caml_option", "MercuryDispatcher", "MercuryThreadIDMap", "MercuryPayloadSource", "setTimeoutAcrossTransitions", "MessengerGraphQLThreadFetcher.bs"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = new Map();

    function h(a, c) {
        var d = c.other_user_fbid;
        if (d == null) {
            c = c.thread_fbid;
            if (c == null) throw{
                RE_EXN_ID: "Invalid_argument",
                _1: "Encountered thread with no server identifier",
                Error: new Error()
            };
            c = [c, b("MercuryIDs").getThreadIDFromThreadFBID(c)]
        } else c = [d, b("MercuryIDs").getThreadIDFromUserID(d)];
        d = c[1];
        c = c[0];
        a = b("MercuryThreadIDMap").getForFBID(a);
        var e = {}, f = a.getClientIDFromServerIDNow(c);
        if (f == null) {
            b("gkx")("1199097") && b("LogHistory").getInstance("MessengerThreadFetcher").debug("setServerIDToClientID", d);
            a.setServerIDToClientID(c, d);
            e[c] = d;
            return [d, e]
        } else return [f, e]
    }

    function i(a, c, d) {
        var e = !b("FBIDCheck").isUser_deprecated(a);
        return b("MessengerGraphQLThreadFetcher.bs").fetchAll(a, [{
            id: c,
            limit: 0,
            loadReadReceipts: !1,
            loadDeliveryReceipts: !1,
            timestamp: null,
            isCanonical: d
        }], e).then(function (c) {
            c = b("bs_belt_Array").get(c, 0);
            if (c === void 0) return b("Promise").resolve(!1);
            c = b("bs_caml_option").valFromOption(c).thread;
            if (c == null) return b("Promise").resolve(!1);
            var d = h(a, c);
            b("MercuryDispatcher").getForFBID(a).handleUpdate({
                threads: [Object.assign(c, {thread_id: d[0]})],
                pinned_thread_ids: [],
                newlyAddedClientIDs: d[1],
                actions: [],
                preprocessed: !0,
                payload_source: b("MercuryPayloadSource").SERVER_FETCH_THREAD_INFO
            });
            return b("Promise").resolve(!0)
        })
    }

    function j(a, c, d) {
        return i(a, c, d).then(function (d) {
            var e = g.get(a);
            if (e == null) return b("Promise").resolve(!1);
            var f = e.get(c);
            if (f == null) return b("Promise").resolve(!1); else {
                b("bs_belt_Array").forEach(f[1], function (a) {
                    return b("bs_curry")._1(a, d)
                });
                e["delete"](c);
                return b("Promise").resolve(d)
            }
        })["catch"](function (e) {
            var f = g.get(a);
            if (f == null) return b("Promise").resolve(!1);
            e = f.get(c);
            if (e == null) return b("Promise").resolve(!1);
            var h = e[1];
            e = e[0];
            if (e < 5 || b("gkx")("678666")) {
                var k = Math.imul(Math.pow(2, Math.min(e, 5)) | 0, 1e3), l = new (b("Promise"))(function (e, g) {
                    b("setTimeoutAcrossTransitions")(function (g) {
                        i(a, c, d).then(function (a) {
                            e(a);
                            b("bs_belt_Array").forEach(h, function (c) {
                                return b("bs_curry")._1(c, a)
                            });
                            f["delete"](c);
                            return b("Promise").resolve(a)
                        })["catch"](function (b) {
                            return j(a, c, d)
                        })
                    }, k)
                });
                f.set(c, [e + 1 | 0, h]);
                return l
            }
            f["delete"](c);
            return b("Promise").resolve(!1)
        })
    }

    function a(a, b, c, d) {
        var e = g.get(a);
        if (e == null) {
            var f = new Map();
            f.set(b, [0, [d]]);
            g.set(a, f);
            j(a, b, c);
            return
        }
        f = e.get(b);
        f == null ? (e.set(b, [0, [d]]), j(a, b, c)) : f[1].push(d)
    }

    f.$$fetch = a
}), null);
__d("ClientSyncProtocol_GroupsSyncAction", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({OPT_IN: 0, OPT_OUT: 1, UPDATE_EMOJI: 2});
    e.exports = a
}), null);
__d("IrisProtocolMessageLifetime", [], (function (a, b, c, d, e, f) {
    e.exports = Object.freeze({
        TTL_OFF: 0,
        TTL_ON_UNKNOWN: 1,
        TTL_30SECONDS: 3e4,
        TTL_1MINUTE: 6e4,
        TTL_3MINUTES: 18e4,
        TTL_5MINUTES: 3e5,
        TTL_10MINUTES: 6e5,
        TTL_15MINUTES: 9e5,
        TTL_30MINUTES: 18e5,
        TTL_1HOUR: 36e5,
        TTL_2HOURS: 72e5,
        TTL_4HOURS: 144e5,
        TTL_8HOURS: 288e5,
        TTL_12HOURS: 432e5,
        TTL_24HOURS: 864e5,
        TTL_36HOURS: 1296e5,
        TTL_72HOURS: 2592e5
    })
}), null);
__d("MSuggestionDispatcher", ["ExplicitRegistrationDispatcher"], (function (a, b, c, d, e, f) {
    "use strict";
    a = new (b("ExplicitRegistrationDispatcher"))({strict: !1});
    e.exports = a
}), null);
__d("MSuggestionActions", ["MSuggestionDispatcher", "keyMirror"], (function (a, b, c, d, e, f) {
    "use strict";
    f.saveAllSuggestions = a;
    f.removeAllSuggestions = c;
    f.removeSuggestionsByType = d;
    var g = b("keyMirror")({
        SAVE_ALL_SUGGESTIONS: null,
        REMOVE_ALL_SUGGESTIONS: null,
        REMOVE_SUGGESTIONS_BY_TYPE: null
    });
    f.Types = g;

    function a(a, c) {
        b("MSuggestionDispatcher").dispatch({type: g.SAVE_ALL_SUGGESTIONS, threadID: a, suggestions: c})
    }

    function c(a) {
        a && b("MSuggestionDispatcher").dispatch({type: g.REMOVE_ALL_SUGGESTIONS, threadID: a})
    }

    function d(a, c) {
        b("MSuggestionDispatcher").dispatch({type: g.REMOVE_SUGGESTIONS_BY_TYPE, threadID: a, typeID: c})
    }
}), null);
__d("MercuryGlobalActionType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({MARK_ALL_READ: "mga-type:mark-all-read", MARK_ALL_SEEN: "mga-type:mark-all-seen"});
    e.exports = a
}), null);
__d("MercuryMessageCustomizations", [], (function (a, b, c, d, e, f) {
    "use strict";
    f.parseCustomizations = a;

    function a(a) {
        var b = JSON.parse(a), c = [];
        Object.keys(b).forEach(function (a) {
            c.push({customization_type: a, customization_value: b[a]})
        });
        return c
    }
}), null);
__d("MercuryProfileRanges", [], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        return !a.id && a.i ? {id: a.i, offset: a.o, length: a.l, type: a.t} : a
    }

    e.exports = {
        extractFromDelta: function (a) {
            a = (a = a) != null ? (a = a.data) != null ? a.prng : a : a;
            if (!a) return [];
            var b = [];
            try {
                b = JSON.parse(a);
                if (b.length > 0) return b.map(g)
            } catch (a) {
            }
            return b
        }
    }
}), null);
__d("MercurySyncDeltaTypes", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        AdminAddedToGroupThread: "AdminAddedToGroupThread",
        AdminRemovedFromGroupThread: "AdminRemovedFromGroupThread",
        AdminTextMessage: "AdminTextMessage",
        ChangeViewerStatus: "ChangeViewerStatus",
        DeliveryReceipt: "DeliveryReceipt",
        ForcedFetch: "ForcedFetch",
        MarkRead: "MarkRead",
        MarkUnread: "MarkUnread",
        MarkFolderSeen: "MarkFolderSeen",
        MessageDelete: "MessageDelete",
        NewMessage: "NewMessage",
        NoOp: "NoOp",
        PagesManagerEvent: "PagesManagerEvent",
        ParticipantLeftGroupThread: "ParticipantLeftGroupThread",
        ParticipantsAddedToGroupThread: "ParticipantsAddedToGroupThread",
        ReadReceipt: "ReadReceipt",
        ReplaceMessage: "ReplaceMessage",
        ThreadAction: "ThreadAction",
        ThreadDelete: "ThreadDelete",
        ThreadFolder: "ThreadFolder",
        ThreadMuteSettings: "ThreadMuteSettings",
        ThreadName: "ThreadName",
        JoinableMode: "JoinableMode",
        ApprovalMode: "ApprovalMode",
        ApprovalQueue: "ApprovalQueue",
        ClientPayload: "ClientPayload",
        GenieMessage: "GenieMessage",
        MontageMessage: "MontageMessage",
        RtcCallData: "RtcCallData"
    };
    b = a;
    e.exports = b
}), null);
__d("MessageThreadReadState", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {MARK_READ: 1, MARK_UNREAD: 2, KEEP_AS_IS: 3};
    b = a;
    e.exports = b
}), null);
__d("MessageThreadReadStateEffect", ["MessageThreadReadState"], (function (a, b, c, d, e, f) {
    "use strict";
    f.extractThreadStateEffectFromDelta = a;

    function a(a, c) {
        var d = c.messageMetadata.threadReadStateEffect;
        if (d != null) {
            var e = b("MessageThreadReadState")[d];
            return e === void 0 && typeof d === "number" ? d : e
        }
        d = c.messageMetadata.skipBumpThread;
        return d === !0 ? b("MessageThreadReadState").KEEP_AS_IS : a !== c.messageMetadata.actorFbId ? b("MessageThreadReadState").MARK_UNREAD : b("MessageThreadReadState").KEEP_AS_IS
    }
}), null);
__d("MessagingThreadAction", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        ACTION_INVALID: "ACTION_INVALID",
        ACTION_ARCHIVED: "ACTION_ARCHIVED",
        ACTION_UNARCHIVED: "ACTION_UNARCHIVED"
    });
    e.exports = a
}), null);
__d("MessengerApprovalModeTypes", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({OPEN: 0, APPROVALS: 1});
    e.exports = a
}), null);
__d("MessengerApprovalQueueTypes", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({REQUESTED: "REQUESTED", REMOVED: "REMOVED"});
    e.exports = a
}), null);
__d("MessengerGroupRequestSource", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({ADD: 0, JOIN_THROUGH_LINK: 1});
    e.exports = a
}), null);
__d("MessengerMessageWebGraphQLQuery", ["WebGraphQLQueryBase"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = function (a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }

        b.__getDocID = function () {
            return "2905186442914677"
        };
        b.getQueryID = function () {
            return "341205296991235"
        };
        return b
    }(b("WebGraphQLQueryBase"))
}), null);
__d("MessengerThreadMetadataWebGraphQLQuery", ["WebGraphQLQueryBase"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = function (a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }

        b.__getDocID = function () {
            return "1844738185554526"
        };
        b.getQueryID = function () {
            return "506565903040384"
        };
        return b
    }(b("WebGraphQLQueryBase"))
}), null);
__d("MessengerMessageDFFFetcher.bs", ["Promise", "bs_caml_array", "WebGraphQL", "MessengerMessageTransformer.bs", "MessengerMessageWebGraphQLQuery", "MessengerThreadMetadataWebGraphQLQuery"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a, c, d) {
        return b("Promise").all(b("WebGraphQL").execAll([new (b("MessengerThreadMetadataWebGraphQLQuery"))({id: c.thread_id}), new (b("MessengerMessageWebGraphQLQuery"))({
            thread_and_message_id: {
                thread_id: c.thread_id,
                message_id: c.message_id
            }
        })], {actorID: a, batchName: "MessengerMessageDFFFetcher"})).then(function (c) {
            var e = b("bs_caml_array").caml_array_get(c, 0);
            c = b("bs_caml_array").caml_array_get(c, 1);
            e = e.message_thread;
            c = c.message;
            if (e == null) throw{RE_EXN_ID: "Not_found", Error: new Error()};
            if (!(c == null)) return b("Promise").resolve(b("MessengerMessageTransformer.bs").transformMessage(a, c, {
                thread_id: null,
                thread_fbid: e.thread_key.thread_fbid,
                other_user_fbid: e.thread_key.other_user_id,
                folder: e.folder.toLowerCase()
            }, d));
            throw{RE_EXN_ID: "Not_found", Error: new Error()}
        })
    }

    f.fetch_ = a
}), null);
__d("MessengerParticipantsWebGraphQLQuery", ["WebGraphQLQueryBase"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = function (a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }

        b.__getDocID = function () {
            return "3322299604515601"
        };
        b.getQueryID = function () {
            return "685701365370722"
        };
        return b
    }(b("WebGraphQLQueryBase"))
}), null);
__d("MessengerParticipantsFetcher.bs", ["Promise", "BanzaiODS", "WebGraphQL", "MessengerServerPayloadTransformer.bs", "MessengerParticipantsWebGraphQLQuery"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        var c = new (b("MessengerParticipantsWebGraphQLQuery"))(a);
        return b("WebGraphQL").exec(c, {
            actorID: null,
            batchName: "MessengerParticipantsFetcher"
        })["catch"](function (a) {
            b("BanzaiODS").bumpEntityKey(2966, "messenger_webgraphql", "fetch_participants.failure");
            return b("Promise").reject(a)
        }).then(function (c) {
            b("BanzaiODS").bumpEntityKey(2966, "messenger_webgraphql", "fetch_participants.success");
            var d = [], e = new Set();
            c.messaging_actors.forEach(function (a) {
                if (a == null) return;
                a = b("MessengerServerPayloadTransformer.bs").transformParticipant(a);
                e.add(a.fbid);
                d.push(a)
            });
            c = a.ids.filter(function (a) {
                return !e.has(a)
            });
            c.length > 0 && c.forEach(function (a) {
                d.push(b("MessengerServerPayloadTransformer.bs").getBlockedParticipant(a))
            });
            return d
        })
    }

    f.$$fetch = a
}), null);
__d("MessengerRealtimeAttachmentTransformer.bs", ["MessengerMessageTransformer.bs", "MessengerAttachmentTransformer.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a, c, d) {
        var e = b("MessengerMessageTransformer.bs").unsafeCastBlobAttachments(c), f = c.extensible_attachment, g;
        if (f == null) g = null; else {
            var h = f.story_attachment, i = f.genie_attachment, j;
            if (i == null) j = null; else {
                i = i.genie_message;
                var k;
                if (i == null) k = null; else {
                    i = i.story_attachment;
                    k = {story_attachment: i == null ? null : b("MessengerMessageTransformer.bs").unsafeCastExtensibleAttachment(i)}
                }
                j = {genie_message: k}
            }
            g = {
                legacy_attachment_id: f.legacy_attachment_id,
                story_attachment: h == null ? null : b("MessengerMessageTransformer.bs").unsafeCastExtensibleAttachment(h),
                genie_attachment: j
            }
        }
        return b("MessengerAttachmentTransformer.bs").transformAttachment(a, {
            extensible_attachment: g,
            blob_attachments: e,
            sticker: c.sticker
        }, null, d)
    }

    f.transform = a
}), null);
__d("MessengerWebDeltaEvents", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({DELTA_RECEIVED: "DELTA_RECEIVED", DELTA_IGNORED: "DELTA_IGNORED"});
    e.exports = a
}), null);
__d("PagesMessagingEventType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({FLAG: 1, CREATE_ADMIN_NOTE: 2, PRIORITY_UPDATE: 3});
    e.exports = a
}), null);
__d("RepliedToMessageStatusForGraphQL", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({VALID: "VALID", DELETED: "DELETED", TEMPORARILY_UNAVAILABLE: "TEMPORARILY_UNAVAILABLE"});
    e.exports = a
}), null);
__d("MessengerDeltaTransformer.bs", ["Promise", "FBID.bs", "bs_curry", "gkx", "bs_js_dict", "bs_js_json", "bs_caml_obj", "FBIDCheck", "bs_belt_Array", "Bootloader", "bs_caml_array", "DateConsts", "LogHistory", "MercuryIDs", "bs_belt_Option", "bs_caml_option", "MessengerState.bs", "MontageActions", "bs_js_null_undefined", "MercuryActionType", "MercuryDispatcher", "MSuggestionActions", "MercuryThreadIDMap", "PageCommItemStatus", "MercuryPayloadSource", "MercuryProfileRanges", "MercuryLogMessageType", "MercuryServerRequests", "MercurySyncDeltaTypes", "MessagingThreadAction", "MessageThreadReadState", "MessengerThreadFetcher.bs", "MercuryGlobalActionType", "MessengerWebDeltaEvents", "PagesMessagingEventType", "MessengerGroupsSyncStatus", "MessengerGroupsSyncStatus.bs", "MessageUnsendabilityStatus.bs", "MessengerApprovalModeTypes", "MessengerMessageDFFFetcher.bs", "IrisProtocolMessageLifetime", "MessengerApprovalQueueTypes", "MessengerGroupRequestSource", "MercuryMessageCustomizations", "MessageThreadReadStateEffect", "MessengerParticipantsFetcher.bs", "ChatReliabilityInstrumentation", "RepliedToMessageStatusForGraphQL", "ClientSyncProtocol_GroupsSyncAction", "MessengerRealtimeAttachmentTransformer.bs", "MessageLiveLocationClientSyncProtocolStopReason"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        try {
            return JSON.parse(a)
        } catch (a) {
            return {}
        }
    }

    var h = b("gkx")("780647") ? 0 : 1;

    function i(a, c) {
        var d = b("bs_belt_Option").map(b("bs_caml_option").nullable_to_opt(c.otherUserFbId), function (a) {
            return a.toString()
        });
        c = b("bs_belt_Option").map(b("bs_caml_option").nullable_to_opt(c.threadFbId), function (a) {
            return a.toString()
        });
        a = b("MercuryThreadIDMap").getForFBID(a);
        d = d !== void 0 ? [b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromUserID(b("FBID.bs").ofStringExn(d))), d] : c !== void 0 ? [b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromThreadFBID(b("FBID.bs").ofStringExn(c))), c] : [void 0, void 0];
        c = d[1];
        d = d[0];
        if (c !== void 0 && d !== void 0) if (a.hasClientIDForServerID(c)) return b("bs_caml_option").nullable_to_opt(a.getClientIDFromServerIDNow(c)); else return b("bs_caml_option").valFromOption(d)
    }

    function j(a, b, c, d) {
        if (!(a == null)) return [a.toString(), {otherUserFbId: null, threadFbId: a}];
        if (b == null) return [void 0, void 0];
        a = c.toString() !== d ? c : b;
        return [a.toString(), {otherUserFbId: a, threadFbId: null}]
    }

    function k(a, c) {
        var d = parseInt(c.messageMetadata.timestamp, 10),
            e = b("MessageThreadReadStateEffect").extractThreadStateEffectFromDelta(a, c),
            f = {contents: c.messageMetadata.actorFbId.toString()}, h = !b("FBIDCheck").isUser_deprecated(a),
            j = c.attachments;
        j = j == null ? [] : b("bs_belt_Array").keepMapU(j, function (c) {
            var d = c.mercury;
            if (d == null) {
                c = c.mercuryJSON;
                c = c == null ? null : g(c)
            } else c = d;
            if (c == null) return;
            d = c.extensible_attachment;
            var e = c.blob_attachment;
            c = c.sticker_attachment;
            c = d == null ? e == null ? c == null ? [] : b("MessengerRealtimeAttachmentTransformer.bs").transform(a, {
                extensible_attachment: null,
                blob_attachments: null,
                sticker: c
            }, h) : b("MessengerRealtimeAttachmentTransformer.bs").transform(a, {
                extensible_attachment: null,
                blob_attachments: [e],
                sticker: null
            }, h) : b("MessengerRealtimeAttachmentTransformer.bs").transform(a, {
                extensible_attachment: b("bs_js_null_undefined").fromOption(d == null ? void 0 : b("bs_caml_option").some(d)),
                blob_attachments: null,
                sticker: null
            }, h);
            e = b("bs_belt_Array").get(c, 0);
            if (e !== void 0) {
                d = b("bs_caml_option").valFromOption(e).share;
                if (d == null) c = f.contents; else {
                    d = d.target;
                    if (d == null) c = f.contents; else {
                        d = d.genie_id;
                        c = d == null ? f.contents : d
                    }
                }
            } else c = f.contents;
            f.contents = c;
            return e
        });
        var k = c.messageMetadata.tags;
        k = k == null ? void 0 : b("bs_js_null_undefined").fromOption(b("bs_belt_Array").get(k, 0));
        var l = c.data, m;
        if (l == null) m = null; else {
            var n = b("bs_js_dict").get(l, "adminSignatureCreatorID");
            m = n !== void 0 ? {
                creatorID: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureCreatorID")),
                creatorName: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureCreatorName")),
                creatorType: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureCreatorType")),
                labelType: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureLabelType")),
                pageID: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignaturePageID")),
                profileURI: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureProfileURI"))
            } : null
        }
        n = f.contents;
        l = b("bs_caml_obj").caml_equal(e, b("MessageThreadReadState").MARK_UNREAD) && a !== n;
        var o = i(a, c.messageMetadata.threadKey);
        if (o !== void 0) {
            var p = c.ttl, q = c.messageMetadata.threadKey.threadFbId, r = c.messageMetadata.threadKey.otherUserFbId,
                s = c.body, t = c.data;
            if (t == null) {
                var u = c.untypedData;
                u = u == null ? !1 : b("bs_belt_Option").getWithDefault(b("bs_js_dict").get(u, "is_sponsored"), "false") === "true"
            } else u = b("bs_belt_Option").getWithDefault(b("bs_js_dict").get(t, "is_sponsored"), "false") === "true";
            t = c.data;
            var v = c.data, w;
            if (v == null) w = null; else {
                v = b("bs_js_dict").get(v, "customization");
                w = v !== void 0 ? b("MercuryMessageCustomizations").parseCustomizations(v) : null
            }
            v = c.data;
            var x = c.data, y = c.data, z;
            if (y == null) z = null; else {
                y = b("bs_js_dict").get(y, "mib_direct_message_data");
                z = y !== void 0 ? g(y) : null
            }
            y = c.data;
            var A;
            if (y == null) A = null; else {
                y = b("bs_js_dict").get(y, "message_source_data");
                if (y !== void 0) {
                    y = g(y);
                    y = b("bs_js_json").classify(y);
                    if (typeof y === "number" || y.TAG !== 2) A = null; else {
                        y = b("bs_js_dict").get(y._0, "message_source");
                        A = y !== void 0 ? b("bs_js_null_undefined").fromOption(y) : null
                    }
                } else A = null
            }
            y = c.messageMetadata.skipBumpThread;
            var B = c.data, C;
            if (B == null) C = null; else {
                B = b("bs_js_dict").get(B, "montage_reply_data");
                C = B !== void 0 ? g(B) : null
            }
            B = c.data;
            var D;
            if (B == null) D = null; else {
                B = b("bs_js_dict").get(B, "meta_ranges");
                D = B !== void 0 ? g(B) : null
            }
            return {
                message_id: c.messageMetadata.messageId,
                threading_id: null,
                offline_threading_id: c.messageMetadata.offlineThreadingId,
                author: b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(n)),
                author_email: n + "@facebook.com",
                ephemeral_ttl_mode: p == null ? 0 : b("bs_belt_Option").getWithDefault(b("bs_js_dict").get(b("IrisProtocolMessageLifetime"), p), 0),
                timestamp: d,
                is_unread: l,
                is_filtered_content: !1,
                is_filtered_content_bh: !1,
                is_filtered_content_account: !1,
                is_filtered_content_quasar: !1,
                is_filtered_content_invalid_app: !1,
                is_one_way_sent: b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(c.messageMetadata.tags), []).some(function (a) {
                    return a === "one_way_message"
                }),
                is_forwarded: b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(c.messageMetadata.tags), []).some(function (a) {
                    if (a === "action:copy_message" || a === "copy_self_message" || a === "action:copy_attachment") return !0; else return a === "copy_self_attachment"
                }),
                source: k,
                tags: c.messageMetadata.tags,
                is_spoof_warning: !1,
                folder: null,
                thread_fbid: q == null ? null : q.toString(),
                other_user_fbid: r == null ? null : r.toString(),
                body: s == null ? "" : s,
                html_body: null,
                subject: null,
                has_attachment: j.length !== 0,
                attachments: j,
                ranges: void 0,
                thread_id: o,
                action_type: b("MercuryActionType").USER_GENERATED_MESSAGE,
                is_from_iris: !0,
                is_sponsored: u,
                commerce_message_type: t == null ? null : b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(t, "commerce_message_type")),
                customizations: w,
                platform_xmd: v == null ? null : b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(v, "platform_xmd")),
                profile_ranges: b("MercuryProfileRanges").extractFromDelta(c),
                verse_group_role_xmd: x == null ? null : b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(x, "verse_group_role_id")),
                mib_direct_message_data: z,
                message_source: A,
                skip_bump_thread: y == null ? !1 : y,
                thread_read_state_effect: e,
                montage_reply_data: C,
                meta_ranges: D,
                creator_info: m,
                message_unsendability_status: b("MessageUnsendabilityStatus.bs").fromNullableString(c.messageMetadata.unsendType),
                comm_status: h ? b("PageCommItemStatus").TODO : null
            }
        }
        throw{RE_EXN_ID: "Invalid_argument", _1: "invalid thread id", Error: new Error()}
    }

    function l(a, c) {
        b("LogHistory").getInstance("MessengerDeltaTransformer").debug(a, c)
    }

    function m(a, c, d, e) {
        b("Bootloader").loadModules(["MessengerWebDeltasTypedLogger.bs"], function (f) {
            f = b("bs_curry")._1(f.messengerWebDeltasTypedLogger, void 0);
            f = f.setDeltaEvent(a).setDeltaType(c).setIgnoreReason(d).setSyncSeqID(e);
            f.log()
        }, "MessengerDeltaTransformer.bs")
    }

    function n(a) {
        return m(b("MessengerWebDeltaEvents").DELTA_RECEIVED, a, null, null)
    }

    function o(a, c) {
        m(b("MessengerWebDeltaEvents").DELTA_IGNORED, a, c, null);
        return l("DeltaIgnored", a)
    }

    function p(a, c, d, e, f) {
        return b("MessengerThreadFetcher.bs").$$fetch(a, c, d, function (c) {
            if (c) {
                b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    actions: [e],
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                return n(f)
            } else return o(f, "thread fetch failed")
        })
    }

    function q(a, c, d, e) {
        var f = c.other_user_fbid;
        if (f == null) {
            var g = c.thread_fbid;
            if (g == null) throw{RE_EXN_ID: "Invalid_argument", _1: "invalid thread id", Error: new Error()};
            g = [g, !1]
        } else g = [f, !0];
        f = g[1];
        g = g[0];
        var h = b("MercuryThreadIDMap").getForFBID(a);
        h = h.getClientIDFromServerIDNow(g);
        var i = h == null ? null : b("MessengerState.bs").getThreadMetaNow(a, h), j = b("gkx")("1143875");
        if (h == null) if (e) return p(a, g, f, c, d); else return o(d, "thread not already loaded, not required to be loaded");
        if (i == null) if (e) {
            if (j) {
                p(a, g, f, c, d);
                l("ThreadMetaMissing", g);
                b("ChatReliabilityInstrumentation").logTHREAD_INFO_MISSING(b("LogHistory").formatEntries(b("LogHistory").getEntries()));
                return
            }
            if (j) return o(d, "thread not already loaded, not required to be loaded")
        } else if (j) return o(d, "thread not already loaded, not required to be loaded");
        b("MercuryDispatcher").getForFBID(a).handleUpdate({
            actions: [c],
            pinned_thread_ids: [],
            newlyAddedClientIDs: {},
            preprocessed: !0,
            payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
        });
        return n(d)
    }

    function r(a, c) {
        var d = c.threadKey.threadFbId, e = d == null ? void 0 : b("bs_caml_option").some(d);
        if (d == null) {
            d = c.threadKey.otherUserFbId;
            var f = d == null ? void 0 : b("bs_caml_option").some(d);
            d = d == null ? [void 0, void 0] : [f, {
                otherUserFbId: b("bs_js_null_undefined").fromOption(f),
                threadFbId: null
            }]
        } else d = [e, {otherUserFbId: null, threadFbId: b("bs_js_null_undefined").fromOption(e)}];
        f = d[1];
        e = d[0];
        if (e === void 0) return;
        if (f === void 0) return;
        d = i(a, b("bs_caml_option").valFromOption(f));
        if (d !== void 0) return {
            thread_id: d,
            action_type: b("MercuryActionType").REACTION_UPDATE,
            messageId: c.messageId,
            offlineThreadingId: c.offlineThreadingId,
            reaction: c.reaction,
            senderId: c.senderId.toString(),
            thread_fbid: e.toString(),
            other_user_fbid: null,
            userId: c.userId.toString()
        }
    }

    function s(a) {
        return a / Math.pow(10, 8)
    }

    function t(a, c) {
        var d = c.threadKey.threadFbId, e = d == null ? void 0 : b("bs_caml_option").some(d),
            f = c.threadKey.otherUserFbId, g = f == null ? void 0 : b("bs_caml_option").some(f);
        d = d == null ? f == null ? [void 0, void 0] : [g, {
            otherUserFbId: null,
            threadFbId: b("bs_js_null_undefined").fromOption(g)
        }] : [e, {otherUserFbId: b("bs_js_null_undefined").fromOption(e), threadFbId: null}];
        f = d[1];
        g = d[0];
        if (g === void 0) return;
        if (f === void 0) return;
        e = i(a, b("bs_caml_option").valFromOption(f));
        if (e === void 0) return;
        if (c.messageLiveLocations.length !== 1) return;
        d = b("bs_caml_array").caml_array_get(c.messageLiveLocations, 0);
        a = d.expirationTime;
        f = d.stopReason;
        c = f == null ? Date.now() / b("DateConsts").MS_PER_SEC > a : !0;
        f = d.coordinate;
        f = f == null ? null : {latitude: s(f.latitude), longitude: s(f.longitude)};
        var h = d.destination;
        h = h == null ? null : {latitude: s(h.latitude), longitude: s(h.longitude), label: h.label};
        var j = d.stopReason;
        j = j == null ? null : j === b("MessageLiveLocationClientSyncProtocolStopReason").EXPIRED || j === b("MessageLiveLocationClientSyncProtocolStopReason").CANCELED ? "EXPIRED" : j === b("MessageLiveLocationClientSyncProtocolStopReason").ARRIVED ? "ARRIVED" : null;
        return {
            thread_id: e,
            action_type: b("MercuryActionType").LIVE_LOCATION_UPDATE,
            thread_fbid: g.toString(),
            other_user_fbid: null,
            messageId: d.messageId,
            liveLocation: {
                live_location_id: d.id.toString(),
                is_expired: c,
                expiration_time: a,
                sender: {id: d.senderId.toString()},
                coordinate: f,
                location_title: d.locationTitle,
                sender_destination: h,
                stop_reason: j
            }
        }
    }

    function u(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: null, threadFbId: d});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").EVENT_RSVP_CHANGED,
            actor_fbid: c.actorFbId.toString(),
            rsvp_status: c.rsvpStatus,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function v(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: d, threadFbId: null});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UPDATE_COMM_STATUS,
            comm_status: c.isFollowUp ? b("PageCommItemStatus").FOLLOW_UP : b("PageCommItemStatus").TODO,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function w(a, c) {
        var d = [];
        c.forEach(function (a) {
            a = b("MercuryIDs").getUserIDFromParticipantID(a);
            if (!(a == null)) {
                d.push(a);
                return
            }
        });
        return b("MessengerParticipantsFetcher.bs").$$fetch({ids: d}).then(function (c) {
            var d = [], e = [];
            c.forEach(function (a) {
                var b = a.id;
                a.is_messenger_blocked || a.is_facebook_blocked ? d.push(b) : e.push(b)
            });
            b("MercuryDispatcher").getForFBID(a).handleUpdate({
                from_client: !0,
                message_blocked_ids: d,
                message_unblocked_ids: e
            });
            return b("Promise").resolve(void 0)
        })["catch"](function (a) {
            return b("Promise").resolve(void 0)
        })
    }

    function x(a, c) {
        var d = c.actorFbid.toString(), e = b("FBID.bs").ofStringExn(d);
        if (b("bs_caml_obj").caml_notequal(e, a)) e = b("bs_caml_option").some(b("MercuryIDs").getParticipantIDFromUserID(a)); else {
            var f = c.threadKey.otherUserFbId;
            if (f == null) e = void 0; else {
                f = b("FBID.bs").ofString(f.toString());
                e = f !== void 0 ? b("bs_caml_option").some(b("MercuryIDs").getParticipantIDFromUserID(b("bs_caml_option").valFromOption(f))) : void 0
            }
        }
        if (e === void 0) return;
        f = b("bs_caml_option").valFromOption(e);
        e = c.threadKey.otherUserFbId;
        if (e == null) return;
        w(a, [f]);
        a = i(a, {otherUserFbId: e, threadFbId: null});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").BLOCK_STATUS_CHANGED,
            actorFbid: d,
            canViewerReply: c.canViewerReply,
            reason: c.reason,
            message_blocked_ids: [f],
            other_user_fbid: e.toString(),
            thread_fbid: null,
            thread_id: a
        }
    }

    function y(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) {
            var e = c.threadKey.otherUserFbId;
            e = e == null ? [void 0, void 0] : [e.toString(), {otherUserFbId: e, threadFbId: null}]
        } else e = [d.toString(), {otherUserFbId: null, threadFbId: d}];
        d = e[1];
        e = e[0];
        if (e === void 0) return;
        if (d === void 0) return;
        a = i(a, b("bs_caml_option").valFromOption(d));
        if (a !== void 0) return {
            action_type: b("MercuryActionType").MONTAGE_DIRECT_EXPIRE,
            messageId: c.messageId,
            timestamp: c.timestamp,
            thread_fbid: e,
            other_user_fbid: null,
            keep_expiry_timestamp: c.keepExpiryTimestamp,
            thread_id: a
        }
    }

    function z(a, c) {
        var d = k(a, c.message), e = c.repliedToMessage;
        if (e == null) return b("bs_caml_option").some(d);
        a = k(a, e);
        e = c.status;
        var f;
        if (e == null) f = void 0; else switch (e) {
            case 0:
                f = b("bs_caml_option").some(b("RepliedToMessageStatusForGraphQL").VALID);
                break;
            case 1:
                f = b("bs_caml_option").some(b("RepliedToMessageStatusForGraphQL").DELETED);
                break;
            case 2:
                f = b("bs_caml_option").some(b("RepliedToMessageStatusForGraphQL").TEMPORARILY_UNAVAILABLE);
                break;
            default:
                f = void 0
        }
        if (f !== void 0) return b("bs_caml_option").some(Object.assign(d, {
            replied_to_message: {
                status: b("bs_caml_option").valFromOption(f),
                message: a
            }
        }))
    }

    function A(a, c) {
        var d = c.threadKey.threadFbId, e = d == null ? void 0 : b("bs_caml_option").some(d);
        if (d == null) {
            d = c.threadKey.otherUserFbId;
            var f = d == null ? void 0 : b("bs_caml_option").some(d);
            d = d == null ? [void 0, void 0] : [f, {
                otherUserFbId: b("bs_js_null_undefined").fromOption(f),
                threadFbId: null
            }]
        } else d = [e, {otherUserFbId: null, threadFbId: b("bs_js_null_undefined").fromOption(e)}];
        f = d[1];
        e = d[0];
        if (e === void 0) return;
        if (f === void 0) return;
        d = i(a, b("bs_caml_option").valFromOption(f));
        if (d !== void 0) return {
            action_type: b("MercuryActionType").GROUPS_SYNC_STATUS_CHANGED,
            thread_fbid: e.toString(),
            other_user_fbid: null,
            actor_fbid: c.actorFbid.toString(),
            groups_sync_status_string: b("MessengerGroupsSyncStatus.bs").fromNullableString(c.groupsSyncStatus),
            thread_id: d
        }
    }

    function B(a, c) {
        var d = c.threadKey.threadFbId, e = d == null ? void 0 : b("bs_caml_option").some(d);
        if (d == null) {
            d = c.threadKey.otherUserFbId;
            var f = d == null ? void 0 : b("bs_caml_option").some(d);
            d = d == null ? [void 0, void 0] : [f, {
                otherUserFbId: b("bs_js_null_undefined").fromOption(f),
                threadFbId: null
            }]
        } else d = [e, {otherUserFbId: null, threadFbId: b("bs_js_null_undefined").fromOption(e)}];
        f = d[1];
        e = d[0];
        d = c.syncAction === b("ClientSyncProtocol_GroupsSyncAction").OPT_IN ? b("bs_caml_option").some(b("MessengerGroupsSyncStatus").OPT_IN) : c.syncAction === b("ClientSyncProtocol_GroupsSyncAction").OPT_OUT ? b("bs_caml_option").some(b("MessengerGroupsSyncStatus").OPT_OUT) : void 0;
        if (e === void 0) return;
        if (d === void 0) return;
        if (f === void 0) return;
        a = i(a, b("bs_caml_option").valFromOption(f));
        if (a === void 0) return;
        f = c.syncedFbGroupId;
        return {
            action_type: b("MercuryActionType").GROUPS_SYNC_METADATA_UPDATE,
            thread_fbid: e.toString(),
            other_user_fbid: null,
            actor_fbid: c.actorFbid.toString(),
            groups_sync_action: b("bs_caml_option").valFromOption(d),
            source_surface: c.sourceSurface,
            fb_group_id: f == null ? null : f.toString(),
            thread_id: a,
            emoji_codepoints: c.emojiCodePoints
        }
    }

    function C(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: null, threadFbId: d});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").DESCRIPTION_CHANGED,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            group_thread_description_string: c.threadDescription,
            thread_id: a
        }
    }

    function D(a) {
        return "#" + a.slice(2)
    }

    function E(a, c) {
        var d = c.threadKey.threadFbId, e = d == null ? void 0 : b("bs_caml_option").some(d);
        if (d == null) {
            d = c.threadKey.otherUserFbId;
            var f = d == null ? void 0 : b("bs_caml_option").some(d);
            d = d == null ? [void 0, void 0] : [f, {
                otherUserFbId: b("bs_js_null_undefined").fromOption(f),
                threadFbId: null
            }]
        } else d = [e, {otherUserFbId: null, threadFbId: b("bs_js_null_undefined").fromOption(e)}];
        f = d[1];
        e = d[0];
        if (e === void 0) return;
        if (f === void 0) return;
        d = i(a, b("bs_caml_option").valFromOption(f));
        if (d === void 0) return;
        a = c.fallbackColor !== "" ? D(c.fallbackColor) : "";
        f = c.reactionPack;
        var g;
        if (f == null) g = [void 0, void 0]; else {
            var h = f.reactionAssets;
            f = f.fontAsset;
            g = [h == null ? void 0 : h.map(function (a) {
                return {
                    reactionName: a.reactionName,
                    reactionEmoji: a.reactionEmoji,
                    keyframeAssetUri: a.keyframeAssetUri
                }
            }), f == null ? void 0 : f.assetUri]
        }
        h = g[1];
        f = g[0];
        g = c.gradientColors;
        if (!(g == null) && g.length !== 0) {
            g = b("bs_belt_Array").map(g, D);
            return {
                action_type: b("MercuryActionType").UPDATE_THREAD_THEME,
                thread_fbid: e.toString(),
                other_user_fbid: null,
                theme_id: c.themeId.toString(),
                solid_color: a,
                header_color: b("bs_caml_array").caml_array_get(g, 0),
                footer_color: b("bs_caml_array").caml_array_get(g, g.length - 1 | 0),
                gradient_colors: g,
                thread_id: d,
                reactions: f,
                reactionFont: h
            }
        }
        return {
            action_type: b("MercuryActionType").UPDATE_THREAD_THEME,
            thread_fbid: e.toString(),
            other_user_fbid: null,
            theme_id: c.themeId.toString(),
            solid_color: a,
            header_color: a,
            footer_color: a,
            gradient_colors: [],
            thread_id: d,
            reactions: f,
            reactionFont: h
        }
    }

    function F(a, c, d, e, f, g) {
        d = {
            action_type: b("MercuryActionType").PIN_MESSAGE,
            thread_fbid: d.threadFbId === null ? null : c,
            other_user_fbid: d.otherUserFbId === null ? null : c,
            thread_id: e,
            actor_fbid: f.actorFbid.toString(),
            pin_message_action: {
                message: {
                    message_id: f.pinnedMessage.pinnedMessageId,
                    pinning_time: f.pinnedMessage.timestamp,
                    message: g
                }
            }
        };
        return q(a, d, "DeltaClientDelta.deltaUpdatePinnedMessage", h)
    }

    function G(a, c, d) {
        var e = j(c.threadKey.threadFbId, c.threadKey.otherUserFbId, c.actorFbid, a), f = e[1], g = e[0];
        if (g === void 0) {
            d.contents = {TAG: 1, _0: "DeltaClientDelta.deltaUpdatePinnedMessage", _1: "transform failed"};
            return
        }
        if (f === void 0) {
            d.contents = {TAG: 1, _0: "DeltaClientDelta.deltaUpdatePinnedMessage", _1: "transform failed"};
            return
        }
        var h = b("bs_caml_option").valFromOption(f), k = i(a, h);
        if (k === void 0) {
            d.contents = {TAG: 1, _0: "DeltaClientDelta.deltaUpdatePinnedMessage", _1: "transform failed"};
            return
        }
        e = c.pinnedMessage.pinnedMessageId;
        f = b("MessengerState.bs").getMessageFromID(a, e);
        if (f !== void 0) return F(a, g, h, k, c, b("bs_caml_option").valFromOption(f)); else {
            b("MessengerMessageDFFFetcher.bs").fetch_(a, {message_id: e, thread_id: g}, !1).then(function (d) {
                F(a, g, h, k, c, d);
                return b("Promise").resolve(void 0)
            })["catch"](function (a) {
                d.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaUpdatePinnedMessage",
                    _1: "error on fetching pinned message payload"
                };
                return b("Promise").resolve(void 0)
            });
            return
        }
    }

    function H(a, c) {
        var d = j(c.threadKey.threadFbId, c.threadKey.otherUserFbId, c.actorFbid, a), e = d[1];
        d = d[0];
        if (d === void 0) return;
        if (e === void 0) return;
        e = b("bs_caml_option").valFromOption(e);
        a = i(a, e);
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UNPIN_MESSAGE,
            thread_fbid: e.threadFbId === null ? null : d,
            other_user_fbid: e.otherUserFbId === null ? null : d,
            thread_id: a,
            unpin_message_action: {message_id: c.pinnedMessage.pinnedMessageId},
            actor_fbid: c.actorFbid.toString()
        }
    }

    function I(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) {
            var e = c.threadKey.otherUserFbId;
            e = e == null ? [void 0, void 0] : [e.toString(), {otherUserFbId: e, threadFbId: null}]
        } else e = [d.toString(), {otherUserFbId: null, threadFbId: d}];
        d = e[1];
        e = e[0];
        if (e === void 0) return;
        if (d === void 0) return;
        a = i(a, b("bs_caml_option").valFromOption(d));
        if (a !== void 0) return {
            action_type: b("MercuryActionType").CHANGE_PINNED_STATUS,
            thread_fbid: e,
            other_user_fbid: null,
            is_pinned: c.isPinned,
            thread_id: a,
            thread_pin_timestamp: c.timestamp
        }
    }

    function J(a, c) {
        var d = c.threadKey.threadFbId, e = c.threadKey.otherUserFbId;
        e = d == null ? e == null ? [void 0, void 0] : [e.toString(), {
            otherUserFbId: e,
            threadFbId: null
        }] : [d.toString(), {otherUserFbId: null, threadFbId: d}];
        d = e[1];
        e = e[0];
        if (e === void 0) return;
        if (d === void 0) return;
        a = i(a, b("bs_caml_option").valFromOption(d));
        if (a !== void 0) return {
            action_type: b("MercuryActionType").MUTATE_TAGS,
            thread_fbid: e,
            other_user_fbid: null,
            thread_id: a,
            messageId: c.messageId,
            tags_to_add: c.isSaved ? ["message:save"] : [],
            tags_to_delete: c.isSaved ? [] : ["message:save"]
        }
    }

    function K(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: null, threadFbId: d});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UPDATE_JOINABLE_LINK,
            joinable_link: c.privateGroupLink,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function L(a) {
        a = a.directives;
        if (a == null) return;
        a = b("bs_belt_Array").get(a, 0);
        if (a === void 0) return;
        a = b("bs_caml_option").valFromOption(a).data;
        if (a == null) return;
        a = a.add_actions;
        if (a == null) return;
        var c = a.actions;
        if (c == null) return;
        c = b("bs_belt_Array").get(c, 0);
        if (c === void 0) return;
        c = b("bs_caml_option").valFromOption(c).thread_key;
        if (c == null) return;
        var d = c.thread_fbid;
        c = c.other_user_fbid;
        if (d == null) {
            if (c == null) return;
            c = c
        } else c = d;
        return {
            action_type: b("MercuryActionType").CREATE_OMNI_M_SUGGESTIONS,
            thread_fbid: b("MercuryIDs").getThreadIDFromThreadFBID(b("FBID.bs").ofStringExn(c)),
            other_user_fbid: null,
            thread_id: c,
            suggestions: a
        }
    }

    function M(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: null, threadFbId: d});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").PROMOTE_GROUP_ADMINS,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            promoted_admins: b("bs_belt_Array").map(c.promotedAdmins, function (a) {
                return {admin_fbid: a.adminFbId.toString(), admin_type: a.adminType}
            }),
            thread_id: a
        }
    }

    function N(a, c) {
        var d = c.threadKey.threadFbId, e = c.threadKey.otherUserFbId;
        if (d == null) {
            if (e == null) return;
            var f = i(a, {otherUserFbId: e, threadFbId: null});
            if (f !== void 0) return {
                action_type: b("MercuryActionType").REMOVE_MESSAGE,
                thread_fbid: null,
                messageId: c.messageID,
                other_user_fbid: e.toString(),
                removed_timestamp: c.deletionTimestamp,
                thread_id: f,
                author: b("MercuryIDs").getParticipantIDFromUserID(c.senderID)
            }; else return
        }
        e = i(a, {otherUserFbId: null, threadFbId: d});
        if (e !== void 0) return {
            action_type: b("MercuryActionType").REMOVE_MESSAGE,
            thread_fbid: d.toString(),
            messageId: c.messageID,
            other_user_fbid: null,
            removed_timestamp: c.deletionTimestamp,
            thread_id: e,
            author: b("MercuryIDs").getParticipantIDFromUserID(c.senderID)
        }
    }

    function O(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: d, threadFbId: null});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UNSUBSCRIBE_STATUS_UPDATE,
            page_unsubscribe_status: c.unSubscribeStatus,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function P(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: d, threadFbId: null});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").BLURRED_IMAGE_STATUS,
            blurred_image_uri: c.blurredImageUri,
            image_message_id: c.messageId,
            image_id: c.imageId,
            should_show: c.shouldShow,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function Q(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: d, threadFbId: null});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").IS_PIN_PROTECTED,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            is_pin_protected: c.isPinProtected,
            thread_id: a
        }
    }

    function R(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: d, threadFbId: null});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UPDATE_CONNECTIVITY_STATUS,
            other_user_fbid: d.toString(),
            subtitle_type: c.subtitleType,
            thread_connectivity_status: c.threadConnectivityStatus,
            thread_fbid: d.toString(),
            thread_id: a
        }
    }

    function S(a, c) {
        var d = c.threadkey.otherUserFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: d, threadFbId: null});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").ADS_CONVERSION_UPDATE,
            other_user_fbid: d.toString(),
            thread_fbid: d.toString(),
            thread_id: a,
            conversion_detection_data: {
                is_eligible: c.isEligible,
                conversion_type: c.conversionType,
                currency_code: c.currencyCode,
                currency_amount: c.currencyAmount,
                timestamp: c.timestamp,
                classifier: c.classifier,
                page_reply: c.pageReply,
                icebreaker_key: c.icebreakerKey,
                icebreaker_message: c.icebreakerMessage,
                trigger_id: c.triggerId
            }
        }
    }

    function T(a, c) {
        var d = c.threadkey.otherUserFbId;
        if (d == null) return;
        a = i(a, {otherUserFbId: d, threadFbId: null});
        if (a !== void 0) return {
            action_type: b("MercuryActionType").SUGGESTED_REPLY_UPDATE,
            other_user_fbid: d.toString(),
            thread_fbid: d.toString(),
            thread_id: a,
            suggested_reply_data: {
                suggestion_type: c.suggestionType,
                suggestion_content: c.suggestionContent,
                triggered_timestamp: c.triggeredTimestamp
            }
        }
    }

    var U = function (a) {
        return String.fromCharCode.apply(null, a)
    };

    function V(a, c) {
        c = JSON.parse(U(c.payload));
        c = b("bs_js_json").classify(c);
        if (typeof c === "number") return {TAG: 1, _0: "DeltaClientDelta", _1: "malformed payload"};
        if (c.TAG !== 2) return {TAG: 1, _0: "DeltaClientDelta", _1: "malformed payload"};
        c = b("bs_js_dict").get(c._0, "deltas");
        if (c === void 0) return {TAG: 1, _0: "DeltaClientDelta", _1: "client delta has no deltas"};
        c = b("bs_js_json").classify(b("bs_caml_option").valFromOption(c));
        if (typeof c === "number") return {TAG: 1, _0: "DeltaClientDelta", _1: "delta is not an array"};
        if (c.TAG !== 3) return {TAG: 1, _0: "DeltaClientDelta", _1: "delta is not an array"};
        c = b("bs_belt_Array").get(c._0, 0);
        if (c === void 0) return {TAG: 1, _0: "DeltaClientDelta", _1: "client delta is missing"};
        c = b("bs_js_json").classify(b("bs_caml_option").valFromOption(c));
        if (typeof c === "number") return {TAG: 1, _0: "DeltaClientDelta", _1: "client delta is not an object"};
        if (c.TAG !== 2) return {TAG: 1, _0: "DeltaClientDelta", _1: "client delta is not an object"};
        c = c._0;
        var d = !1, e = {contents: 0}, f = b("bs_js_dict").get(c, "deltaMessageReaction");
        if (f !== void 0) {
            d = !0;
            f = r(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMessageReaction", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaMessageReaction",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "liveLocationData");
        if (f !== void 0 && !d) {
            d = !0;
            f = t(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.liveLocationData", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.liveLocationData",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateGroupEventRSVPStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = u(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateGroupEventRSVPStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateGroupEventRSVPStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaPageThreadFollowUpData");
        if (f !== void 0 && !d) {
            d = !0;
            f = v(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPageThreadFollowUpData", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaPageThreadFollowUpData",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaChangeViewerStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = x(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaChangeViewerStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaChangeViewerStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaMontageDirectExpire");
        if (f !== void 0 && !d) {
            d = !0;
            f = y(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMontageDirectExpire", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaMontageDirectExpire",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaMessageReply");
        if (f !== void 0 && !d) {
            d = !0;
            f = z(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMessageReply", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaMessageReply",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateGroupsSyncStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = A(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateGroupsSyncStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateGroupsSyncStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateGroupsSyncMetadata");
        if (f !== void 0 && !d) {
            d = !0;
            f = B(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateGroupsSyncMetadata", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateGroupsSyncMetadata",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaGroupThreadDescription");
        if (f !== void 0 && !d) {
            d = !0;
            f = C(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaGroupThreadDescription", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaGroupThreadDescription",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateThreadTheme");
        if (f !== void 0 && !d) {
            d = !0;
            f = E(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateThreadTheme", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateThreadTheme",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateSavedMessage");
        if (f !== void 0 && !d) {
            d = !0;
            f = J(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateSavedMessage", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateSavedMessage",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdatePinnedThread");
        if (f !== void 0 && !d) {
            d = !0;
            f = I(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdatePinnedThread", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdatePinnedThread",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdatePinnedMessage");
        if (f !== void 0 && !d) {
            f = b("bs_caml_option").valFromOption(f);
            d = !0;
            if (f.pinnedMessageAction === 0) G(a, f, e); else {
                f = H(a, f);
                f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdatePinnedMessage", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaUpdatePinnedMessage",
                    _1: "transform failed"
                }
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdatePrivateGroupJoinableLink");
        if (f !== void 0 && !d) {
            d = !0;
            f = K(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdatePrivateGroupJoinableLink", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdatePrivateGroupJoinableLink",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaOmniMDirectivesV2");
        if (f !== void 0 && !d) {
            d = !0;
            f = L(b("bs_caml_option").valFromOption(f));
            if (f !== void 0) {
                f = b("bs_caml_option").valFromOption(f);
                e.contents = {TAG: 0, _0: "DeltaClientDelta.deltaOmniMDirectivesV2"};
                b("MSuggestionActions").saveAllSuggestions(f.thread_id, f.suggestions)
            } else e.contents = {TAG: 1, _0: "DeltaClientDelta.deltaOmniMDirectivesV2", _1: "transform failed"}
        }
        f = b("bs_js_dict").get(c, "deltaPromoteGroupThreadAdmin");
        if (f !== void 0 && !d) {
            d = !0;
            f = M(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPromoteGroupThreadAdmin", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaPromoteGroupThreadAdmin",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaRecallMessageData");
        if (f !== void 0 && !d) {
            d = !0;
            f = N(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaRecallMessageData", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaRecallMessageData",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaPageUnSubscribeStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = O(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPageUnSubscribeStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaPageUnSubscribeStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaPageBlurredImageStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = P(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPageBlurredImageStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaPageBlurredImageStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaPaymentPinProtectionStatusData");
        if (f !== void 0) {
            if (!d) {
                d = !0;
                f = Q(a, b("bs_caml_option").valFromOption(f));
                f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPaymentPinProtectionStatusData", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaPaymentPinProtectionStatusData",
                    _1: "transform failed"
                }
            }
        } else d || (e.contents = {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "unknown delta type: " + Object.keys(c).join(",")
        });
        f = b("bs_js_dict").get(c, "deltaThreadConnectivityStatusUpdate");
        if (f !== void 0) {
            if (!d) {
                d = !0;
                f = R(a, b("bs_caml_option").valFromOption(f));
                f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaThreadConnectivityStatusUpdateData", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaThreadConnectivityStatusUpdateData",
                    _1: "transform failed"
                }
            }
        } else d || (e.contents = {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "unknown delta type: " + Object.keys(c).join(",")
        });
        f = b("bs_js_dict").get(c, "deltaMessengerAdsConversionUpdate");
        if (f !== void 0) {
            if (!d) {
                d = !0;
                f = S(a, b("bs_caml_option").valFromOption(f));
                f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMessengerAdsConversionUpdate", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaMessengerAdsConversionUpdate",
                    _1: "transform failed"
                }
            }
        } else d || (e.contents = {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "unknown delta type: " + Object.keys(c).join(",")
        });
        f = b("bs_js_dict").get(c, "deltaMessengerBusinessSuggestedReplyUpdate");
        if (f !== void 0) {
            if (!d) {
                d = !0;
                f = T(a, b("bs_caml_option").valFromOption(f));
                f !== void 0 ? q(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMessengerBusinessSuggestedReplyUpdate", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaMessengerBusinessSuggestedReplyUpdate",
                    _1: "transform failed"
                }
            }
        } else d || (e.contents = {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "unknown delta type: " + Object.keys(c).join(",")
        });
        return e.contents
    }

    function W(a, c) {
        var d = [], e = [], f = c.folders, g = 0;
        f == null || f.length === 0 ? g = 1 : b("bs_belt_Array").forEachU(f, function (a) {
            d.push({
                action_type: b("MercuryGlobalActionType").MARK_ALL_READ,
                action_id: null,
                folder: b("bs_js_dict").get(b("MessengerState.bs").irisMapping, a),
                timestamp: parseInt(c.watermarkTimestamp, 10)
            })
        });
        g === 1 && b("bs_belt_Array").forEachU(c.threadKeys, function (d) {
            var f = i(a, d);
            if (f === void 0) return;
            var g = parseInt(c.watermarkTimestamp, 10);
            b("MercuryServerRequests").getForFBID(a).updateLastActionTimestamp(g);
            e.push({
                thread_id: f,
                action_type: b("MercuryActionType").CHANGE_READ_STATUS,
                other_user_fbid: d.otherUserFbId,
                thread_fbid: d.threadFbId,
                mark_as_read: !0,
                timestamp: g,
                folder: "inbox"
            })
        });
        return [d, e]
    }

    function X(a) {
        if (a == null) return null; else return a.toString()
    }

    function Y(a) {
        a = a.skipBumpThread;
        if (!(a == null) && a) return h; else return 1
    }

    function Z(a, c) {
        var d;
        switch (c.TAG | 0) {
            case 0:
                var e = c._0, f = k(a, e);
                q(a, f, "deltaNewMessage", Y(e.messageMetadata));
                d = 0;
                break;
            case 1:
                f = c._0;
                q(a, Object.assign(k(a, f.newMessage), {
                    action_type: b("MercuryActionType").REPLACE_MESSAGE,
                    replaced_message_id: f.replacedMessageId
                }), "deltaReplaceMessage", h);
                d = 0;
                break;
            case 2:
                e = c._0;
                f = e.threadKey.otherUserFbId;
                var g;
                if (f == null) {
                    var j = e.threadKey.threadFbId;
                    if (j == null) g = void 0; else {
                        var l = b("MercuryThreadIDMap").getForFBID(a);
                        l = l.getClientIDFromServerIDNow(j.toString());
                        g = l == null ? void 0 : b("bs_caml_option").some(l)
                    }
                } else {
                    j = b("FBID.bs").ofString(f.toString());
                    g = j !== void 0 ? b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromUserID(b("bs_caml_option").valFromOption(j))) : void 0
                }
                if (g !== void 0) {
                    l = {};
                    f = parseInt(e.deliveredWatermarkTimestampMs, 10);
                    l[b("bs_caml_option").valFromOption(g)] = f;
                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                        delivery_receipts: l,
                        pinned_thread_ids: [],
                        newlyAddedClientIDs: {},
                        actions: [],
                        preprocessed: !0
                    });
                    d = {TAG: 0, _0: "DeltaDeliveryReceipt"}
                } else d = {TAG: 1, _0: "DeltaDeliveryReceipt", _1: "no thread id"};
                break;
            case 3:
                j = W(a, c._0);
                e = j[1];
                g = j[0];
                g.length !== 0 && b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    actions: [],
                    global_actions: g,
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                e.length !== 0 && b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    actions: e,
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                d = g.length === 0 && e.length === 0 ? {
                    TAG: 1,
                    _0: "DeltaMarkRead",
                    _1: "no local or global action"
                } : {TAG: 0, _0: "DeltaMarkRead"};
                break;
            case 4:
                var m = c._0;
                f = b("bs_belt_Array").keepMapU(m.threadKeys, function (c) {
                    var d = i(a, c);
                    if (d === void 0) return;
                    var e = parseInt(m.watermarkTimestamp, 10);
                    b("MercuryServerRequests").getForFBID(a).updateLastActionTimestamp(e);
                    return {
                        thread_id: d,
                        action_type: b("MercuryActionType").CHANGE_READ_STATUS,
                        other_user_fbid: c.otherUserFbId,
                        thread_fbid: c.threadFbId,
                        mark_as_read: !1,
                        timestamp: e,
                        folder: "inbox"
                    }
                });
                b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    actions: f,
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                d = {TAG: 0, _0: "DeltaMarkUnread"};
                break;
            case 5:
                l = c._0;
                q(a, Object.assign(k(a, l), {
                    action_type: b("MercuryActionType").LOG_MESSAGE,
                    log_message_body: l.messageMetadata.adminText,
                    log_message_data: {removed_participants: [b("MercuryIDs").getParticipantIDFromUserID(l.leftParticipantFbId)]},
                    log_message_type: b("MercuryLogMessageType").UNSUBSCRIBE
                }), "DeltaParticipantLeftGroupThread", Y(l.messageMetadata));
                d = 0;
                break;
            case 6:
                j = c._0;
                q(a, Object.assign(k(a, j), {
                    action_type: b("MercuryActionType").LOG_MESSAGE,
                    log_message_body: j.messageMetadata.adminText,
                    log_message_data: {
                        added_participants: b("bs_belt_Array").map(j.addedParticipants, function (a) {
                            return b("MercuryIDs").getParticipantIDFromUserID(a.userFbId)
                        })
                    },
                    log_message_type: b("MercuryLogMessageType").SUBSCRIBE
                }), "DeltaParticipantsAddedToGroupThread", Y(j.messageMetadata));
                d = 0;
                break;
            case 7:
                g = c._0;
                q(a, Object.assign(k(a, g), {
                    action_type: b("MercuryActionType").LOG_MESSAGE,
                    log_message_body: g.messageMetadata.adminText,
                    log_message_data: {name: g.name},
                    log_message_type: b("MercuryLogMessageType").THREAD_NAME
                }), "DeltaThreadName", Y(g.messageMetadata));
                d = 0;
                break;
            case 8:
                e = c._0;
                f = {watermark: parseInt(e.watermarkTimestampMs, 10), action: parseInt(e.actionTimestampMs, 10)};
                l = e.threadKey.otherUserFbId;
                j = l == null ? b("bs_caml_option").nullable_to_opt(e.actorFbId) : l.toString();
                g = e.threadKey.otherUserFbId;
                if (g == null) {
                    l = e.threadKey.threadFbId;
                    e = l == null ? void 0 : l.toString()
                } else e = g.toString();
                if (j !== void 0) if (e !== void 0) {
                    l = b("MercuryThreadIDMap").getForFBID(a);
                    g = l.getClientIDFromServerIDNow(e);
                    if (g == null) d = {TAG: 1, _0: "DeltaReadReceipt", _1: "No clientID for serverID: " + e}; else {
                        l = {};
                        e = {};
                        j = b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(j));
                        e[j] = f;
                        l[g] = e;
                        b("MercuryDispatcher").getForFBID(a).handleUpdate({
                            roger: l,
                            pinned_thread_ids: [],
                            newlyAddedClientIDs: {},
                            actions: [],
                            preprocessed: !0
                        });
                        d = {TAG: 0, _0: "DeltaReadReceipt"}
                    }
                } else d = {TAG: 1, _0: "DeltaReadReceipt", _1: "serverID is invalid"}; else d = {
                    TAG: 1,
                    _0: "DeltaReadReceipt",
                    _1: "userID is invalid"
                };
                break;
            case 9:
                j = c._0;
                q(a, Object.assign(k(a, j), {
                    action_type: b("MercuryActionType").LOG_MESSAGE,
                    log_message_body: j.messageMetadata.adminText,
                    log_message_data: {message_type: j.type, untypedData: j.untypedData},
                    log_message_type: b("MercuryLogMessageType").GENERIC_ADMIN_TEXT,
                    message_unsendability_status: b("MessageUnsendabilityStatus.bs").fromNullableString(j.messageMetadata.unsendType)
                }), "DeltaAdminTextMessage", Y(j.messageMetadata));
                d = 0;
                break;
            case 10:
                f = c._0;
                g = i(a, {otherUserFbId: f.threadKey.otherUserFbId, threadFbId: f.threadKey.threadFbId});
                e = g !== void 0 ? {
                    action_type: b("MercuryActionType").DELETE_MESSAGES,
                    message_ids: f.messageIds,
                    other_user_fbid: X(f.threadKey.otherUserFbId),
                    thread_fbid: X(f.threadKey.threadFbId),
                    thread_id: g
                } : void 0;
                l = f.threadKey.threadFbId;
                j = f.folder;
                if (e !== void 0) {
                    g = b("bs_caml_option").valFromOption(e);
                    l == null || j == null ? (q(a, g, "DeltaMessageDelete", h), d = 0) : (j === "FOLDER_MONTAGE" ? b("MontageActions").requestUpdate(l.toString()) : q(a, g, "DeltaMessageDelete", h), d = 0)
                } else d = {TAG: 1, _0: "DeltaMessageDelete", _1: "transform failed"};
                break;
            case 11:
                f = c._0;
                e = i(a, {otherUserFbId: f.threadKey.otherUserFbId, threadFbId: f.threadKey.threadFbId});
                if (e !== void 0) {
                    j = f.action;
                    q(a, {
                        action_type: b("MercuryActionType").CHANGE_ARCHIVED_STATUS,
                        thread_fbid: X(f.threadKey.threadFbId),
                        other_user_fbid: X(f.threadKey.otherUserFbId),
                        archived: j == null ? !1 : j === b("MessagingThreadAction").ACTION_ARCHIVED,
                        thread_id: e
                    }, "DeltaThreadAction", h);
                    d = 0
                } else d = {TAG: 1, _0: "DeltaThreadAction", _1: "transform failed"};
                break;
            case 12:
                l = b("bs_belt_Array").keepMapU(c._0.threadKeys, function (c) {
                    var d = i(a, c);
                    if (d !== void 0) return {
                        thread_id: d,
                        action_type: b("MercuryActionType").DELETE_THREAD,
                        other_user_fbid: c.otherUserFbId,
                        thread_fbid: c.threadFbId
                    }
                });
                b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    actions: l,
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                d = {TAG: 0, _0: "DeltaThreadDelete"};
                break;
            case 13:
                g = c._0;
                f = i(a, {otherUserFbId: null, threadFbId: g.messageMetadata.threadKey.threadFbId});
                f !== void 0 ? (q(a, {
                    action_type: b("MercuryActionType").REMOVE_GROUP_ADMINS,
                    action_id: null,
                    thread_fbid: X(g.messageMetadata.threadKey.threadFbId),
                    other_user_fbid: null,
                    removed_admin_ids: g.removedAdminFbIds,
                    thread_id: f
                }, "DeltaAdminRemovedFromGroupThread", h), d = 0) : d = {
                    TAG: 1,
                    _0: "DeltaAdminRemovedFromGroupThread",
                    _1: "transform failed"
                };
                break;
            case 14:
                j = c._0;
                e = i(a, j.threadKey);
                if (e !== void 0) {
                    l = [{
                        thread_id: e,
                        action_type: b("MercuryActionType").CHANGE_MUTE_SETTINGS,
                        thread_fbid: j.threadKey.threadFbId,
                        other_user_fbid: j.threadKey.otherUserFbId,
                        mute_until: parseInt(j.expireTime, 10)
                    }];
                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                        pinned_thread_ids: [],
                        newlyAddedClientIDs: {},
                        actions: l,
                        preprocessed: !0,
                        payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                    });
                    d = {TAG: 0, _0: "DeltaThreadMuteSettings"}
                } else d = {TAG: 1, _0: "DeltaThreadMuteSettings", _1: "invalid thread ID"};
                break;
            case 15:
                g = c._0;
                f = g.jsonBlob;
                if (f == null) d = {TAG: 1, _0: "DeltaPagesManagerEvent", _1: "no jsonBlob"}; else {
                    try {
                        e = JSON.parse(f)
                    } catch (a) {
                        e = {}
                    }
                    j = b("bs_js_json").classify(e);
                    if (typeof j === "number" || j.TAG !== 2) d = {
                        TAG: 1,
                        _0: "DeltaPagesManagerEvent",
                        _1: "jsonBlob is not an object"
                    }; else {
                        l = j._0;
                        f = b("bs_js_dict").get(l, "type");
                        if (f !== void 0) {
                            e = b("bs_js_json").classify(b("bs_caml_option").valFromOption(f));
                            if (typeof e === "number" || e.TAG !== 1) d = {
                                TAG: 1,
                                _0: "DeltaPagesManagerEvent",
                                _1: "type is not a number"
                            }; else if (e._0 === b("PagesMessagingEventType").FLAG) {
                                j = b("bs_js_dict").get(l, "flagData");
                                if (j !== void 0) {
                                    f = b("bs_js_json").classify(b("bs_caml_option").valFromOption(j));
                                    if (typeof f === "number" || f.TAG !== 2) e = !1; else {
                                        l = b("bs_js_dict").get(f._0, "state");
                                        if (l !== void 0) {
                                            j = b("bs_js_json").classify(b("bs_caml_option").valFromOption(l));
                                            e = typeof j === "number" ? j === 1 : !1
                                        } else e = !1
                                    }
                                } else e = !1;
                                f = i(a, g.threadKey);
                                if (f !== void 0) {
                                    l = [{
                                        thread_id: f,
                                        action_type: b("MercuryActionType").CHANGE_FLAG,
                                        mark_as_flag: e,
                                        other_user_fbid: g.threadKey.otherUserFbId,
                                        thread_fbid: g.threadKey.threadFbId
                                    }];
                                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                                        pinned_thread_ids: [],
                                        newlyAddedClientIDs: {},
                                        actions: l,
                                        preprocessed: !0,
                                        payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                                    });
                                    d = {TAG: 0, _0: "DeltaPagesManagerEvent"}
                                } else d = {TAG: 1, _0: "DeltaPagesManagerEvent", _1: "threadID is invalid"}
                            } else d = {TAG: 1, _0: "DeltaPagesManagerEvent", _1: "type is not pagesFlag"}
                        } else d = {TAG: 1, _0: "DeltaPagesManagerEvent", _1: "no type on jsonBlob"}
                    }
                }
                break;
            case 16:
                j = c._0;
                f = i(a, {otherUserFbId: null, threadFbId: j.messageMetadata.threadKey.threadFbId});
                f !== void 0 ? (q(a, {
                    action_type: b("MercuryActionType").APPROVAL_MODE,
                    action_id: null,
                    thread_fbid: X(j.messageMetadata.threadKey.threadFbId),
                    other_user_fbid: null,
                    approval_mode: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(b("MessengerApprovalModeTypes"), j.mode)),
                    thread_id: f
                }, "DeltaApprovalMode", h), d = 0) : d = {TAG: 1, _0: "DeltaApprovalMode", _1: "transform failed"};
                break;
            case 17:
                e = c._0;
                g = i(a, {
                    otherUserFbId: e.messageMetadata.threadKey.otherUserFbId,
                    threadFbId: e.messageMetadata.threadKey.threadFbId
                });
                if (g !== void 0) {
                    l = e.inviterFbId;
                    if (l == null) {
                        j = e.recipientFbId;
                        if (!(j == null)) {
                            f = b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(j));
                            q(a, {
                                action_type: b("MercuryActionType").APPROVAL_QUEUE,
                                action_id: null,
                                thread_fbid: X(e.messageMetadata.threadKey.threadFbId),
                                other_user_fbid: X(e.messageMetadata.threadKey.otherUserFbId),
                                removed_id: e.action === b("MessengerApprovalQueueTypes").REMOVED ? f : null,
                                added_id: e.action === b("MessengerApprovalQueueTypes").REQUESTED ? f : null,
                                thread_id: g
                            }, "DeltaApprovalQueue", h)
                        }
                    } else {
                        if (e.action === b("MessengerApprovalQueueTypes").REQUESTED) {
                            j = e.requestSource;
                            var p;
                            if (j == null) p = b("MessengerGroupRequestSource").ADD; else switch (j) {
                                case"ADD":
                                    p = b("MessengerGroupRequestSource").ADD;
                                    break;
                                case"JOIN_THROUGH_LINK":
                                    p = b("MessengerGroupRequestSource").JOIN_THROUGH_LINK;
                                    break;
                                default:
                                    p = b("MessengerGroupRequestSource").ADD
                            }
                            f = {
                                requester: {id: e.recipientFbId},
                                inviter: {id: l},
                                request_source: p,
                                request_timestamp: e.requestTimestamp
                            }
                        } else f = null;
                        q(a, {
                            action_type: b("MercuryActionType").APPROVAL_QUEUE,
                            action_id: null,
                            thread_fbid: X(e.messageMetadata.threadKey.threadFbId),
                            other_user_fbid: X(e.messageMetadata.threadKey.otherUserFbId),
                            removed_group_id: e.action === b("MessengerApprovalQueueTypes").REMOVED ? e.recipientFbId : null,
                            added_group_id: f,
                            thread_id: g
                        }, "DeltaApprovalQueue", h)
                    }
                    d = 0
                } else d = {TAG: 1, _0: "DeltaApprovalQueue", _1: "transform failed"};
                break;
            case 18:
                j = c._0;
                q(a, k(a, j.deltaNewMessage), "DeltaGenieMessage", Y(j.deltaNewMessage.messageMetadata));
                d = 0;
                break;
            case 19:
                l = c._0;
                e = l.messageMetadata.threadKey;
                if (e == null) f = void 0; else {
                    g = e.threadFbId;
                    f = g == null ? void 0 : g
                }
                j = l.initiator;
                if (j == null) e = void 0; else {
                    g = j.userFbId;
                    e = g == null ? void 0 : g.toString()
                }
                j = i(a, {otherUserFbId: null, threadFbId: f});
                j !== void 0 ? (q(a, {
                    action_type: b("MercuryActionType").UPDATE_RTC_CALL_DATA,
                    thread_fbid: X(f),
                    other_user_fbid: null,
                    call_state: l.callState,
                    server_info_data: l.serverInfoData,
                    initiator_fbid: e,
                    thread_id: j
                }, "DeltaRTCCallData", h), d = 0) : d = {TAG: 1, _0: "DeltaRTCCallData", _1: "transform failed"};
                break;
            case 20:
                g = c._0;
                f = i(a, g.threadKey);
                if (f !== void 0) {
                    l = [{
                        thread_id: f,
                        action_type: b("MercuryActionType").CHANGE_FOLDER,
                        other_user_fbid: g.threadKey.otherUserFbId,
                        new_folder: b("bs_js_dict").get(b("MessengerState.bs").irisMapping, g.folder)
                    }];
                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                        pinned_thread_ids: [],
                        newlyAddedClientIDs: {},
                        actions: l,
                        preprocessed: !0,
                        payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                    });
                    d = {TAG: 0, _0: "DeltaThreadFolder"}
                } else d = {TAG: 1, _0: "DeltaThreadFolder", _1: "threadID is invalid"};
                break;
            case 21:
                e = c._0;
                j = i(a, e.threadKey);
                if (j !== void 0) {
                    f = [{
                        thread_id: j,
                        action_type: b("MercuryActionType").MUTATE_TAGS,
                        messageId: e.messageId,
                        tags_to_add: e.tagsToAdd,
                        tags_to_delete: e.tagsToDelete
                    }];
                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                        pinned_thread_ids: [],
                        newlyAddedClientIDs: {},
                        actions: f,
                        preprocessed: !0,
                        payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                    });
                    d = {TAG: 0, _0: "DeltaMutateMessageTags"}
                } else d = {TAG: 1, _0: "DeltaMutateMessageTags", _1: "threadID is invalid"};
                break;
            case 22:
                d = V(a, c._0);
                break
        }
        if (typeof d === "number") return; else if (d.TAG) return o(d._0, d._1); else return n(d._0)
    }

    function a(a, c) {
        if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").NewMessage)) return Z(a, {
            TAG: 0,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ReplaceMessage)) return Z(a, {
            TAG: 1,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").DeliveryReceipt)) return Z(a, {
            TAG: 2,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").MarkRead)) return Z(a, {
            TAG: 3,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").MarkUnread)) return Z(a, {
            TAG: 4,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ParticipantLeftGroupThread)) return Z(a, {
            TAG: 5,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ParticipantsAddedToGroupThread)) return Z(a, {
            TAG: 6,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadName)) return Z(a, {
            TAG: 7,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ReadReceipt)) return Z(a, {
            TAG: 8,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").AdminTextMessage)) return Z(a, {
            TAG: 9,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").MessageDelete)) return Z(a, {
            TAG: 10,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadAction)) return Z(a, {
            TAG: 11,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadDelete)) return Z(a, {
            TAG: 12,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").AdminRemovedFromGroupThread)) return Z(a, {
            TAG: 13,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadMuteSettings)) return Z(a, {
            TAG: 14,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").PagesManagerEvent)) return Z(a, {
            TAG: 15,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ApprovalMode)) return Z(a, {
            TAG: 16,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ApprovalQueue)) return Z(a, {
            TAG: 17,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ClientPayload)) return Z(a, {
            TAG: 22,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").GenieMessage)) return Z(a, {
            TAG: 18,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").RtcCallData)) return Z(a, {
            TAG: 19,
            _0: c
        }); else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").MarkFolderSeen)) {
            n("DeltaMarkFolderSeen");
            return b("MessengerState.bs").send(b("bs_caml_option").some(a), [{TAG: 0, _0: {TAG: 66, _0: c}}])
        } else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadFolder)) return Z(a, {
            TAG: 20,
            _0: c
        }); else return
    }

    f.transform = a
}), null);
__d("JSSet.bs", [], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        return Array.from(a.values())
    }

    f.values = a
}), null);
__d("MercuryActionStatus", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        UNSENT: 0,
        SUCCESS: 1,
        UNCONFIRMED: 3,
        FAILED_UNKNOWN_REASON: 4,
        UNABLE_TO_CONFIRM: 5,
        RESENT: 6,
        RESENDING: 7,
        ERROR: 10
    });
    e.exports = a
}), null);
__d("MercuryTagHelper", [], (function (a, b, c, d, e, f) {
    "use strict";
    f.get = a;

    function a(a, b) {
        a = a.find(function (a) {
            return a != null ? a.startsWith(b) : !1
        });
        return a == null ? a : a.substr(a.indexOf(":") + 1)
    }
}), null);
__d("EmojiLikeUtils", ["EmojiLikeConstants", "MercuryTagHelper"], (function (a, b, c, d, e, f) {
    "use strict";
    f.setEmojiSize = a;
    f.setEmojiSource = c;
    f.isEmojiLike = d;
    f.getEmojiSize = i;

    function a(a, b) {
        !a.tags ? a.tags = [g(b)] : a.tags.push(g(b));
        return a
    }

    function g(a) {
        var c = b("EmojiLikeConstants").TAG_PREFIX_NEW;
        return c + ":" + a
    }

    function c(a, b) {
        !a.tags ? a.tags = [h(b)] : a.tags.push(h(b));
        return a
    }

    function h(a) {
        return b("EmojiLikeConstants").SOURCE_TAG_PREFIX + ":" + a
    }

    function d(a) {
        return i(a) != null
    }

    function i(a) {
        if (!a.tags) return null;
        var c = b("MercuryTagHelper").get(a.tags, b("EmojiLikeConstants").TAG_PREFIX_NEW);
        return c ? c : b("MercuryTagHelper").get(a.tags, b("EmojiLikeConstants").TAG_PREFIX_OLD)
    }
}), null);
__d("MercuryAttachment", ["cx", "EmojiLikeUtils", "MercuryAudioType"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h = function (a) {
        return a === Object(a)
    }, i = "_1c_u", j = new Set(["animated_image", "photo", "video", "third_party_sticker"]), k = {
        getAttachIconClass: function (a) {
            switch (a) {
                case"attach:image":
                    return "_y2-";
                case"attach:video":
                    return "_y2_";
                case"attach:music":
                    return "_y30";
                case"attach:voice":
                    return "_y31";
                case"attach:text":
                    return "_y32";
                case"attach:pdf":
                    return "_1k9k";
                case"attach:richtext":
                    return "_1k9l";
                case"attach:spreadsheet":
                    return "_1k9p";
                case"attach:presentation":
                    return "_1k9r";
                case"attach:archive":
                    return "_1k9s";
                case"attach:ms:word":
                    return "_y33";
                case"attach:ms:xls":
                    return "_y34";
                case"attach:ms:ppt":
                    return "_y35"
            }
            return "_y36"
        }, getAttachIconClassByMime: function (a) {
            return this.getAttachIconClass(this.getAttachTypeByMime(a))
        }, getAttachTypeByMime: function (a) {
            if (!a) return "attach:unknown";
            if (a.startsWith("image")) return "attach:image"; else if (a.startsWith("video")) return "attach:video"; else if (a.startsWith("audio")) return "attach:music"; else if (a.startsWith("text/plain")) return "attach:text"; else if (a == "text/pdf" || a == "application/pdf" || a == "application/vnd.pdf" || a == "application/x-pdf") return "attach:pdf"; else if (a == "text/richtext" || a == "application/rtf" || a == "application/x-iwork-pages-sffkey") return "attach:richtext"; else if (a == "text/csv" || a == "application/x-iwork-numbers-sffkey") return "attach:spreadsheet"; else if (a == "application/x-iwork-keynote-sffkey") return "attach:presentation"; else if (a == "application/vnd.ms-cab-compressed" || a == "application/x-7z-compressed" || a == "application/x-ace-compressed" || a == "application/x-apple-diskimage" || a == "application/x-compress" || a == "application/x-compressed" || a == "application/x-gzip" || a == "application/x-rar-compressed" || a == "application/x-tar" || a == "application/x-zip-compressed" || a == "application/zip") return "attach:archive"; else if (a == "application/msword" || a.startsWith("application/vnd.ms-word") || a.startsWith("application/vnd.openxmlformats-officedocument.wordprocessingml")) return "attach:ms:word"; else if (a.startsWith("application/vnd.ms-excel") || a.startsWith("application/vnd.openxmlformats-officedocument.spreadsheetml")) return "attach:ms:xls"; else if (a.startsWith("application/vnd.ms-powerpoint") || a.startsWith("application/vnd.openxmlformats-officedocument.presentationml")) return "attach:ms:ppt"; else return "attach:unknown"
        }, convertRaw: function (a) {
            var b = [];
            for (var c = 0; c < a.length; c++) {
                var d = a[c];
                if (d.attach_type === "photo") b.push(d); else if (d.filename) {
                    var e = k.getAttachTypeByMime(d.filetype), f = {};
                    f.attach_type = "file";
                    f.name = d.filename;
                    f.icon_type = e;
                    f.url = "";
                    b.push(f)
                }
            }
            return b
        }, get: function (a) {
            var c = [];
            a.attachments ? c = a.attachments : a.raw_attachments && (c = this.convertRaw(a.raw_attachments));
            var d = b("EmojiLikeUtils").getEmojiSize(a);
            d && (c = c.concat([{attach_type: "emoji_like", size: d}]));
            if (!(a.attachments && a.attachments.length > 0)) {
                if (a.sticker_id) return c.concat([{attach_type: "sticker"}]);
                if (a.preview_attachments && a.preview_attachments.length > 0) return c.concat(a.preview_attachments)
            }
            return c
        }, resizeContain: function (a, b) {
            var c = a.width / a.height, d = b.width / b.height;
            if (d < c) return {
                width: Math.ceil(Math.min(a.height * d, b.width)),
                height: Math.ceil(Math.min(a.height, b.height))
            }; else return {
                width: Math.ceil(Math.min(a.width, b.width)),
                height: Math.ceil(Math.min(a.width / d, b.height))
            }
        }, isBubblePreferred: function (a) {
            return this.isFileAttachment(a)
        }, isPhotoAttachment: function (a) {
            return (this == null ? void 0 : this.getAttachTypeByMime) && this.getAttachTypeByMime(a.mime_type) === "attach:pdf" ? !1 : !!(a.attach_type == "photo" || a.attach_type == "animated_image" || a.attach_type == "third_party_sticker" || a.attach_type == "file" && a.preview_url)
        }, isPhotoGroupAttachment: function (a) {
            return j.has(a.attach_type)
        }, isSinglePhotoGroupAttachment: function (a) {
            return !!(a.attachments && a.attachments.length === 1 && a.attachments[0] && this.isPhotoGroupAttachment(a.attachments[0]))
        }, isVideoAttachment: function (a) {
            return a.attach_type == "video"
        }, isShareAttachment: function (a) {
            return a.attach_type == "share"
        }, isFileAttachment: function (a) {
            return a.attach_type == "file"
        }, isErrorAttachment: function (a) {
            return a.attach_type == "error"
        }, isStickerAttachment: function (a) {
            return a.attach_type == "sticker"
        }, isEmojiLikeAttachment: function (a) {
            return a.attach_type === "emoji_like"
        }, isVoiceAttachment: function (a) {
            return !a.metadata ? !1 : a.metadata.type === b("MercuryAudioType").AudioClip || a.metadata.type === b("MercuryAudioType").VoiceMessageWithTranscript
        }, hasAttribution: function (a) {
            return !!a.app_attribution
        }, isLightweightActionAttachment: function (a) {
            return !!(k.isShareAttachment(a) && a.share && a.share.target != null && a.share.target.lwa_type != null)
        }, isSingleVideoAttachment: function (a) {
            var b = this;
            a = this.get(a).filter(h).filter(function (a) {
                return b.isVideoAttachment(a)
            });
            return a.length === 1
        }, isSharedVideoAttachment: function (a) {
            a = a.attach_type === "share" && a.share && a.share.subattachments && a.share.subattachments[0];
            return !!(a && a.target && a.target.video_id)
        }, isGenieSharedVideoAttachment: function (a) {
            return !!(a.attach_type === "share" && a.share && a.share.style_list.indexOf("genie_message") > -1 && a.share.target && a.share.target.attachment && this.isSharedVideoAttachment(a.share.target.attachment))
        }, isSharedVideoAttachmentMessage: function (a) {
            var b = this;
            a = this.get(a).filter(h).filter(function (a) {
                return b.isSharedVideoAttachment(a) || b.isGenieSharedVideoAttachment(a)
            });
            return a.length === 1
        }, getVideoElem: function (a, b) {
            b = b.getMessageElement(a);
            if (!b) return null;
            a = b.getElementsByClassName(i);
            return a && a.length ? a[0] : b
        }
    };
    e.exports = k
}), null);
__d("MercuryDisplayTimeFilterMessageRenderer", ["fbt"], (function (a, b, c, d, e, f, g) {
    "use strict";
    a = {
        renderFilteredContent: function (a) {
            if (a.is_filtered_content_bh) return g._("\u7531\u4e8e\u5305\u542b\u8fdd\u53cd\u6211\u4eec\u793e\u7fa4\u5b88\u5219\u7684\u94fe\u63a5\uff0c\u8fd9\u6761\u6d88\u606f\u5df2\u88ab\u79fb\u9664\u3002");
            if (a.is_filtered_content_account) return g._("\u7531\u4e8e\u6211\u4eec\u9700\u8981\u9a8c\u8bc1\u53d1\u9001\u8005\u7684\u5e10\u6237\uff0c\u6d88\u606f\u6682\u65f6\u88ab\u79fb\u9664\u3002");
            if (a.is_filtered_content_quasar) return g._("\u6d88\u606f\u5305\u542b\u88ab\u7981\u6b62\u6216\u6709\u5bb3\u5185\u5bb9\uff0c\u5df2\u88ab\u5220\u9664\u3002");
            return a.is_filtered_content_invalid_app ? g._("\u7531\u4e8e\u53d1\u51fa\u6d88\u606f\u7684\u5e94\u7528\u5df2\u88ab\u7981\u6b62\u53d1\u9001\u6d88\u606f\uff0c\u6d88\u606f\u5df2\u88ab\u5220\u9664\u3002") : g._("\u7531\u4e8e\u53d1\u9001\u8005\u7684\u5e10\u6237\u9700\u8981\u9a8c\u8bc1\uff0c\u6216\u8005\u88ab\u6807\u8bb0\u4e3a\u4e0d\u826f\u5185\u5bb9\uff0c\u8fd9\u6761\u6d88\u606f\u6682\u65f6\u88ab\u79fb\u9664\u3002")
        }
    };
    e.exports = a
}), null);
__d("MercuryLocalIDs", ["randomInt"], (function (a, b, c, d, e, f) {
    "use strict";
    f.generateThreadID = a;
    f.generateOfflineThreadingID = g;

    function a(a) {
        return "root:" + g(a)
    }

    function g(a) {
        a = a != null ? a : Date.now();
        var c = b("randomInt")(0, 4294967295);
        c = ("0000000000000000000000" + c.toString(2)).slice(-22);
        a = a.toString(2) + c;
        return h(a.slice(-63))
    }
    // @todo: random msgID
    function h(a) {
        var b = "";
        a = a;
        while (a != "0") {
            var c = 0, d = "";
            for (var e = 0; e < a.length; e++) c = 2 * c + parseInt(a[e], 10), c >= 10 ? (d += "1", c -= 10) : d += "0";
            b = c.toString() + b;
            a = d.slice(d.indexOf("1"))
        }
        return b
    }
}), null);
__d("MercuryMessageClientState", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({DO_NOT_SEND_TO_SERVER: "do_not_send_to_server", SEND_TO_SERVER: "send_to_server"});
    b = a;
    e.exports = b
}), null);
__d("MercuryMessageIDs.bs", ["bs_curry", "bs_js_dict", "KeyedCallbackManager"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = new (b("KeyedCallbackManager"))();

    function a(a, c) {
        var d = a.filter(function (a) {
            return a.indexOf("id") === -1
        }), e = function (d) {
            return b("bs_curry")._1(c, a.map(function (a) {
                var c = b("bs_js_dict").get(d, a);
                if (c !== void 0) return c; else return a
            }))
        };
        return g.executeOrEnqueue(d, e)
    }

    function c(a, b) {
        g.setResource(a, b)
    }

    f.getServerIDs = a;
    f.addServerID = c
}), null);
__d("MercurySingletonProvider", ["CurrentUser"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a) {
            this.$1 = {}, this.$2 = a
        }

        var c = a.prototype;
        c.getForFBID = function (a) {
            this.$1[a] || (this.$1[a] = new this.$2(a));
            return this.$1[a]
        };
        c.get = function () {
            return this.getForFBID(b("CurrentUser").getID())
        };
        c.resetAll = function () {
            var a = this.$1;
            this.$1 = {};
            return a
        };
        a.mock = function (a) {
            throw new Error("MercurySingletonProvider.mock() must only be used in tests.")
        };
        return a
    }();
    e.exports = a
}), null);
__d("MessengerMQTTConnectionEvents", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = "messenger-mqtt-delta";
    f.DELTA_EVENT = a;
    b = "messenger-mqtt-stream-disconnect";
    f.STREAM_DISCONNECT = b;
    c = "messenger-mqtt-stream-connecting";
    f.STREAM_CONNECTING = c;
    d = "messenger-mqtt-stream-connect";
    f.STREAM_CONNECT = d;
    e = "Connected";
    f.STATE_CONNECTED = e;
    a = "Disconnected";
    f.STATE_DISCONNECTED = a;
    b = "Connecting";
    f.STATE_CONNECTING = b;
    c = "messenger-mqtt-typ";
    f.TYP = c
}), null);
__d("MercurySyncEventsProxy", ["Arbiter", "ChannelConstants", "LogHistory", "MercurySingletonProvider", "MessengerMQTTConnectionEvents"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("LogHistory").getInstance("mercury_event_proxy"), h = {
        DELTA: "DELTA",
        FAKE_DFF: "FAKE_DFF",
        FLOW: "FLOW",
        FLOW_REJECT: "FLOW_REJECT",
        INIT: "MercurySyncDeltaHandler/initSeqID",
        CONNECTED: "CONNECTED",
        RECONNECTING: "RECONNECTING",
        SHUTDOWN: "SHUTDOWN",
        TYP: "TYP"
    };
    a = function () {
        a.getArbiterTypeForFBID = function (a, b) {
            return a + "/" + b
        };
        a.getForFBID = function (a) {
            return i.getForFBID(a)
        };
        a.get = function () {
            return i.get()
        };

        function a(a) {
            this.$2 = [], this.$1 = a, this.init()
        }

        var c = a.prototype;
        c.getArbiterType = function (b) {
            return a.getArbiterTypeForFBID(this.$1, b)
        };
        c.init = function () {
            var a = this, c, d;
            this.$2.forEach(function (a) {
                return b("Arbiter").unsubscribe(a)
            });
            this.$2 = [(c = b("Arbiter")).subscribe((d = b("MessengerMQTTConnectionEvents")).DELTA_EVENT, function (c) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                return b("Arbiter").inform.apply(b("Arbiter"), [a.getArbiterType(h.DELTA)].concat(e))
            }), c.subscribe(d.STREAM_CONNECT, function (c) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                return b("Arbiter").inform.apply(b("Arbiter"), [a.getArbiterType(h.CONNECTED)].concat(e))
            }), c.subscribe(d.STREAM_DISCONNECT, function (c) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                return b("Arbiter").inform.apply(b("Arbiter"), [a.getArbiterType(h.SHUTDOWN)].concat(e))
            }), c.subscribe(d.STREAM_CONNECTING, function (c) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                return b("Arbiter").inform.apply(b("Arbiter"), [a.getArbiterType(h.RECONNECTING)].concat(e))
            }), c.subscribe(b("ChannelConstants").getArbiterType(b("ChannelConstants").FAKE_DFF), function (c) {
                g.debug("fakedff", JSON.stringify({fbid: a.$1}));
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                b("Arbiter").inform.apply(b("Arbiter"), [a.getArbiterType(h.FAKE_DFF)].concat(e))
            }), c.subscribe(d.TYP, function (c) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                b("Arbiter").inform.apply(b("Arbiter"), [a.getArbiterType(h.TYP)].concat(e))
            })]
        };
        return a
    }();
    e.exports = a;
    a.Events = h;
    var i = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MercuryThreadInfo", ["MercuryIDs"], (function (a, b, c, d, e, f) {
    "use strict";
    f.canReply = a;
    f.getMuteSetting = g;
    f.isEmptyLocalThread = h;
    f.isMuted = c;
    f.areMentionsMuted = d;
    f.areReactionsMuted = e;
    f.isNewEmptyLocalThread = i;
    f.showSettingsMenu = j;
    f.isColdOpen = k;

    function a(a) {
        return !!(a.is_subscribed && (a.can_reply === void 0 || a.can_reply) && !a.has_email_participant && !a.read_only)
    }

    function g(a) {
        return a.mute_until == null ? void 0 : a.mute_until
    }

    function h(a) {
        return b("MercuryIDs").tokenize(a.thread_id).type === "root" && !a.timestamp
    }

    function c(a) {
        a = g(a);
        return a != null && (a > Date.now() / 1e3 || a === -1)
    }

    function d(a) {
        return a.mentions_mute_mode === 1
    }

    function e(a) {
        return a.reactions_mute_mode === 1
    }

    function i(a) {
        return !!(h(a) && a.participants && a.participants.length === 0)
    }

    function j(a) {
        return !!((a.can_reply || !a.cannot_reply_reason || a.cannot_reply_reason.toLowerCase() === "blocked" || a.cannot_reply_reason.toLowerCase() === "messenger_blockee") && !a.has_email_participant && !a.read_only && a.is_subscribed)
    }

    function k(a) {
        return !!(a.is_canonical_user && (a.message_count === 0 || !a.timestamp))
    }
}), null);
__d("MercuryThreadInformer", ["ArbiterMixin", "LogHistory", "MercuryAssert", "MercurySingletonProvider", "mixin"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("LogHistory").getInstance("mercury_informer");
    a = function (a) {
        babelHelpers.inheritsLoose(c, a);
        c.get = function () {
            return h.get()
        };
        c.getForFBID = function (a) {
            return h.getForFBID(a)
        };

        function c(b) {
            var c;
            c = a.call(this) || this;
            c.$MercuryThreadInformer1 = b;
            c.$MercuryThreadInformer2 = {};
            c.$MercuryThreadInformer3 = {};
            c.$MercuryThreadInformer4 = {};
            c.$MercuryThreadInformer5 = {};
            c.$MercuryThreadInformer6 = !1;
            c.$MercuryThreadInformer7 = !1;
            c.$MercuryThreadInformer8 = !1;
            c.$MercuryThreadInformer9 = !1;
            c.$MercuryThreadInformer10 = {};
            c.$MercuryThreadInformer11 = {};
            c.$MercuryThreadInformer12 = {};
            c.$MercuryThreadInformer13 = {};
            c.$MercuryThreadInformer14 = 0;
            return c
        }

        var d = c.prototype;
        d.informNewMessage = function (a, b) {
            this.inform("new-message", {threadID: a, message: b})
        };
        d.informNewLogMessage = function (a, b) {
            this.inform("new-log-message", {threadID: a, message: b})
        };
        d.updatedThread = function (a) {
            this.$MercuryThreadInformer3[a] = !0, this.$MercuryThreadInformer15()
        };
        d.invalidatedThread = function (a) {
            this.$MercuryThreadInformer4[a] = !0, this.$MercuryThreadInformer15()
        };
        d.deletedThread = function (a) {
            this.$MercuryThreadInformer2[a] = !0, this.$MercuryThreadInformer15()
        };
        d.updatedThreadlist = function () {
            this.$MercuryThreadInformer6 = !0, this.$MercuryThreadInformer15()
        };
        d.updatedUnseenState = function () {
            this.$MercuryThreadInformer7 = !0, this.$MercuryThreadInformer15()
        };
        d.updatedUnseenTimestamp = function () {
            this.$MercuryThreadInformer8 = !0, this.$MercuryThreadInformer15()
        };
        d.updatedUnreadState = function () {
            this.$MercuryThreadInformer9 = !0, this.$MercuryThreadInformer15()
        };
        d.changedThreadReadState = function (a, b, c) {
            (!this.$MercuryThreadInformer5[a] || this.$MercuryThreadInformer5[a].timestamp < c) && (this.$MercuryThreadInformer5[a] = {
                mark_as_read: b,
                timestamp: c
            }), this.$MercuryThreadInformer15()
        };
        d.receivedMessage = function (a) {
            b("MercuryAssert").isThreadID(a.thread_id);
            var c = a.thread_id;
            this.$MercuryThreadInformer10[c] || (this.$MercuryThreadInformer10[c] = []);
            this.$MercuryThreadInformer10[c].push(a);
            this.updatedThread(c)
        };
        d.reorderedMessages = function (a, b) {
            this.$MercuryThreadInformer11[a] = {source: b}, this.$MercuryThreadInformer15()
        };
        d.updatedMessage = function (a, b, c) {
            this.$MercuryThreadInformer12[a] || (this.$MercuryThreadInformer12[a] = {}), this.$MercuryThreadInformer12[a][b] = {source: c}, this.updatedThread(a)
        };
        d.deletedMessage = function (a, b, c, d) {
            this.$MercuryThreadInformer13[a] || (this.$MercuryThreadInformer13[a] = {}), this.$MercuryThreadInformer13[a][b] = {
                attachmentIDs: d,
                source: c
            }, this.updatedThread(a)
        };
        d.synchronizeInforms = function (a) {
            this.$MercuryThreadInformer14++;
            try {
                a()
            } catch (a) {
                throw a
            } finally {
                this.$MercuryThreadInformer14--, this.$MercuryThreadInformer15()
            }
        };
        d.listen = function (a, b) {
            return this.subscribe("threads-updated", function (c, d) {
                d[a] && b(a)
            })
        };
        d.$MercuryThreadInformer15 = function () {
            if (!this.$MercuryThreadInformer14) {
                var a = this.$MercuryThreadInformer2, b = this.$MercuryThreadInformer3,
                    c = this.$MercuryThreadInformer4, d = this.$MercuryThreadInformer5,
                    e = this.$MercuryThreadInformer6, f = this.$MercuryThreadInformer7,
                    g = this.$MercuryThreadInformer8, h = this.$MercuryThreadInformer9,
                    i = this.$MercuryThreadInformer10, j = this.$MercuryThreadInformer11,
                    k = this.$MercuryThreadInformer12, l = this.$MercuryThreadInformer13;
                this.$MercuryThreadInformer2 = {};
                this.$MercuryThreadInformer3 = {};
                this.$MercuryThreadInformer4 = {};
                this.$MercuryThreadInformer5 = {};
                this.$MercuryThreadInformer6 = !1;
                this.$MercuryThreadInformer7 = !1;
                this.$MercuryThreadInformer8 = !1;
                this.$MercuryThreadInformer9 = !1;
                this.$MercuryThreadInformer10 = {};
                this.$MercuryThreadInformer11 = {};
                this.$MercuryThreadInformer12 = {};
                this.$MercuryThreadInformer13 = {};
                var m = Object.keys(b);
                (m.length || e) && this.inform("threadlist-updated", m);
                m.length && this.$MercuryThreadInformer16("threads-updated", b);
                for (var e in c) {
                    this.$MercuryThreadInformer16("thread-invalidated", c);
                    break
                }
                for (var e in d) {
                    this.$MercuryThreadInformer16("thread-read-changed", d);
                    break
                }
                for (e in a) {
                    this.$MercuryThreadInformer16("threads-deleted", a);
                    break
                }
                f && this.$MercuryThreadInformer16("unseen-updated", null);
                g && this.$MercuryThreadInformer16("unseen-timestamp-updated", null);
                h && this.$MercuryThreadInformer16("unread-updated", null);
                for (e in i) {
                    this.$MercuryThreadInformer16("messages-received", i);
                    break
                }
                for (e in j) {
                    this.$MercuryThreadInformer16("messages-reordered", j);
                    break
                }
                for (e in k) {
                    this.$MercuryThreadInformer16("messages-updated", k);
                    break
                }
                for (e in l) {
                    this.$MercuryThreadInformer16("messages-deleted", l);
                    break
                }
            }
        };
        d.$MercuryThreadInformer16 = function (a, b) {
            a === "threads-updated" && g.debug(a, JSON.stringify(b)), this.inform(a, b)
        };
        return c
    }(b("mixin")(b("ArbiterMixin")));
    e.exports = a;
    var h = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MercuryViewer", ["CurrentUser", "MercuryAssert"], (function (a, b, c, d, e, f) {
    "use strict";
    f.getID = a;
    f.isViewer = c;
    var g = "fbid:" + b("CurrentUser").getID();

    function a() {
        return g
    }

    function c(a) {
        b("MercuryAssert").isParticipantID(a);
        return a === g
    }
}), null);
__d("ThreadConnectivityStatusGraphQLType.bs", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = "UNCONNECTED";
    b = "IMPLICIT_OR_TWO_WAY_MESSAGING";
    f.unconnected = a;
    f.implicitOrTwoWayMessaging = b
}), null);
__d("ThreadConnectivityStatusGraphQLType.re", ["ThreadConnectivityStatusGraphQLType.bs"], (function (a, b, c, d, e, f) {
    a = b("ThreadConnectivityStatusGraphQLType.bs").unconnected;
    f.unconnected = a;
    c = b("ThreadConnectivityStatusGraphQLType.bs").implicitOrTwoWayMessaging;
    f.implicitOrTwoWayMessaging = c
}), null);
__d("getPageIDFromThreadID", ["FBIDCheck", "MercuryIDs"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;

    function a(a) {
        a = b("MercuryIDs").getUserIDFromThreadID(a);
        return !a || b("FBIDCheck").isUser_deprecated(a) ? null : a
    }
}), null);
__d("MessageRequestUtils", ["CurrentUser", "MercuryIDs", "MessagingTag", "ThreadConnectivityStatusGraphQLType.re", "getPageIDFromThreadID"], (function (a, b, c, d, e, f) {
    "use strict";
    f.isMessageRequest = a;
    f.isFiltered = c;
    f.shouldShowComposerPendingActions = d;
    f.shouldShowUnconnectedThreadInfoText = e;
    f.shouldSendTypingIndicators = g;

    function a(a) {
        return (a.folder === b("MessagingTag").PENDING || a.folder === b("MessagingTag").OTHER) && a.can_reply
    }

    function c(a) {
        return a.folder === b("MessagingTag").OTHER
    }

    function d(a) {
        return this.isMessageRequest(a) && (b("MercuryIDs").isGroupChat(a.thread_id) || !!b("getPageIDFromThreadID")(a.thread_id) || b("CurrentUser").isWorkUser())
    }

    function e(a) {
        var c;
        return !b("CurrentUser").isWorkUser() && b("CurrentUser").getID() !== a.other_user_fbid && ((c = a.thread_connectivity_data) == null ? void 0 : c.connectivity_status) === b("ThreadConnectivityStatusGraphQLType.re").unconnected && ((c = a.thread_connectivity_data) == null ? void 0 : c.first_sender_id) === a.other_user_fbid
    }

    function g(a) {
        if (!a) return !1;
        if (this.isMessageRequest(a)) return !1;
        return b("CurrentUser").isWorkUser() || b("MercuryIDs").isGroupChat(a.thread_id) ? !0 : ((a = a.thread_connectivity_data) == null ? void 0 : a.connectivity_status) === b("ThreadConnectivityStatusGraphQLType.re").implicitOrTwoWayMessaging
    }
}), null);
__d("MessengerDesktopNotificationPermissions", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({DEFAULT: "default", DENIED: "denied", GRANTED: "granted"});
    e.exports = a
}), null);
__d("MessengerDesktopNotifications", ["MessengerDesktopNotificationPermissions", "Run", "UserAgent", "WorkplaceChatHelper"], (function (a, b, c, d, e, f) {
    "use strict";
    f.isSupported = c;
    f.checkPermission = d;
    f.hasDefaultSound = e;
    f.isDenied = i;
    f.isGranted = j;
    f.requestPermission = k;
    f.showNotification = l;
    f.removeNotification = m;
    var g = 5e3, h = new Map();

    function a() {
        h.forEach(function (a, b, c) {
            a.close && a.close()
        })
    }

    c = null;
    f._closeTimer = c;

    function c() {
        return !!window.Notification
    }

    function d() {
        if (window.Notification) return window.Notification.permission
    }

    function e() {
        return b("UserAgent").isBrowser("FireFox") && b("UserAgent").isPlatform("Mac OS X")
    }

    function i() {
        return this.checkPermission() === b("MessengerDesktopNotificationPermissions").DENIED
    }

    function j() {
        return this.checkPermission() === b("MessengerDesktopNotificationPermissions").GRANTED
    }

    function k(a) {
        window.Notification && window.Notification.requestPermission(a)
    }

    function l(a) {
        if (this.isGranted()) {
            var c = window.Notification ? new window.Notification(a.title, {
                body: a.body,
                icon: a.icon,
                tag: a.tag,
                silent: a.silent
            }) : {};
            h.set(a.tag, c);
            a.onShow && a.onShow();
            c.onclick = function () {
                b("WorkplaceChatHelper").isDesktopChatApp() && b("WorkplaceChatHelper").showWindow(), a.onClick()
            };
            c.onclose = function () {
                h["delete"](a.tag)
            };
            this._closeTimer = setTimeout(function () {
                c.close()
            }, a.closeTime || g);
            return c
        } else return null
    }

    function m(a) {
        a = h.get(a);
        a && a.close()
    }

    b("Run").onUnload(a)
}), null);
__d("MessengerFolders.bs", ["gkx", "qex", "MessagingThreadType", "MercuryFoldersConfig", "MessengerEnvironment"], (function (a, b, c, d, e, f) {
    "use strict";
    d = b("qex")._("998180") && b("MessengerEnvironment").messengerdotcom ? ["inbox", "pending", "other", "action:archived", "marketplace_folder"] : ["inbox", "pending", "other", "action:archived"];
    var g = d.filter(function (a) {
        if (a === "pending") return !b("MercuryFoldersConfig").hide_message_filtered; else if (a === "other") return !b("MercuryFoldersConfig").hide_message_requests; else return !0
    });

    function a(a) {
        return [].concat(g)
    }

    function c(a) {
        if (a.is_archived) return "action:archived";
        var c = a.thread_type;
        if (!(c == null) && c === b("MessagingThreadType").MARKETPLACE && b("gkx")("965951")) return "marketplace_folder"; else return a.folder
    }

    f.getSupportedFolders = a;
    f.getFromMeta = c
}), null);
__d("MercuryMessageDeliveryState", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = Object.freeze({SENDING: 1, SENT: 2, DELIVERED: 3, ERROR: 0, UNKNOWN: -1});
    e.exports = a
}), null);
__d("Utils.bs", [], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        if (a == null) return !1; else return a
    }

    function b(a) {
        if (a !== void 0) return a; else return !1
    }

    f.isTruthy = a;
    f.optionBoolToBool = b
}), null);
__d("MessengerMessage.bs", ["URI", "Utils.bs", "bs_js_dict", "bs_js_json", "bs_caml_obj", "bs_caml_option", "MercuryViewer", "bs_caml_primitive", "MercuryActionType", "MercuryActionStatus", "MercuryPayloadSource", "isMessengerDotComURI", "MercuryLogMessageType", "MercuryMessageDeliveryState"], (function (a, b, c, d, e, f) {
    "use strict";
    var g;

    function a(a, b, c, d, e, f) {
        b = {
            thread_id: b,
            thread_fbid: null,
            other_user_fbid: null,
            action_type: d,
            message_id: a,
            threading_id: null,
            offline_threading_id: null,
            author: c,
            author_email: "",
            ephemeral_ttl_mode: null,
            timestamp: e,
            is_unread: null,
            is_filtered_content: !1,
            is_filtered_content_bh: !1,
            is_filtered_content_account: !1,
            is_filtered_content_quasar: !1,
            is_filtered_content_invalid_app: !1,
            is_sponsored: !1,
            is_one_way_sent: !1,
            ad_id: null,
            ad_client_token: null,
            commerce_message_type: null,
            customizations: [],
            source: "",
            source_tags: [],
            m_suggestions: null,
            tags: [],
            is_spoof_warning: !1,
            folder: "inbox",
            platform_xmd: null,
            message_source: null,
            montage_reply_data: null,
            replied_to_message: null,
            skip_bump_thread: !1,
            profile_ranges: null,
            reactions: null,
            attachments: null,
            ranges: null,
            meta_ranges: null,
            status: null,
            log_message_type: null,
            log_message_data: null,
            log_message_body: null,
            raw_attachments: null,
            body: null,
            subject: null,
            has_attachment: null,
            creator_info: null,
            error_data: null,
            removed_timestamp: null,
            unsender: null,
            verse_group_role_xmd: null,
            message_unsendability_status: null,
            is_forwarded: !1,
            preview_attachments: null,
            sticker_id: null,
            mib_direct_message_data: null
        };
        return Object.assign(b, f)
    }

    function c(a) {
        var b = a.offline_threading_id;
        if (b == null) return !1; else return b === a.message_id
    }

    function d(a) {
        if (b("bs_caml_obj").caml_equal(a.action_type, b("MercuryActionType").USER_GENERATED_MESSAGE)) return !0;
        a = a.log_message_type;
        if (a == null) return !0; else return !(b("bs_caml_obj").caml_equal(a, b("MercuryLogMessageType").SUBSCRIBE) || b("bs_caml_obj").caml_equal(a, b("MercuryLogMessageType").UNSUBSCRIBE) || b("bs_caml_obj").caml_equal(a, b("MercuryLogMessageType").SERVER_ERROR) || b("bs_caml_obj").caml_equal(a, b("MercuryLogMessageType").LIVE_LISTEN))
    }

    function e(a) {
        var c = a.ranges;
        if (c == null) return;
        c = c.map(function (a) {
            var c = a.entity;
            if (c == null) return a;
            var d = b("Utils.bs").isTruthy(c.external), e = c.url;
            if (d) return a;
            if (e == null) return a;
            d = new (g || (g = b("URI")))(e);
            e = b("isMessengerDotComURI")(g.getRequestURI());
            var f = d.getDomain();
            if (!e) return a;
            return !(f == null) && f !== "" ? a : Object.assign(Object.assign({}, a), {entity: Object.assign(Object.assign({}, c), {url: d.setProtocol("https").setDomain("www.facebook.com").toString()})})
        });
        Object.assign(a, {ranges: c})
    }

    function h(a) {
        if (b("bs_caml_obj").caml_equal(a, b("MercuryPayloadSource").UNKNOWN) || b("bs_caml_obj").caml_equal(a, b("MercuryPayloadSource").SERVER_INITIAL_DATA) || b("bs_caml_obj").caml_equal(a, b("MercuryPayloadSource").SERVER_FETCH_THREAD_INFO)) return !0; else return b("bs_caml_obj").caml_equal(a, b("MercuryPayloadSource").SERVER_THREAD_SYNC)
    }

    function i(a) {
        a = a.author;
        if (a == null) return !1; else return a === b("MercuryViewer").getID()
    }

    function j(a) {
        a = a.author;
        if (a == null) return !1; else return a !== b("MercuryViewer").getID()
    }

    function k(a) {
        a = a.status;
        if (a == null) return !1; else if (b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").UNSENT) || b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").UNCONFIRMED) || b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").UNABLE_TO_CONFIRM)) return !0; else return b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").RESENDING)
    }

    function l(a) {
        a = a.status;
        if (a == null) return !0; else return b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").SUCCESS)
    }

    function m(a, c) {
        return b("bs_caml_primitive").caml_float_compare(a.timestamp, c.timestamp)
    }

    function n(a) {
        a = a.status;
        if (a == null) return !1; else if (b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").FAILED_UNKNOWN_REASON) || b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").UNABLE_TO_CONFIRM)) return !0; else return b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").ERROR)
    }

    function o(a) {
        a = a.error_data;
        if (!(a == null)) return b("bs_caml_option").nullable_to_opt(a.description)
    }

    function p(a, c) {
        if (n(a)) return b("MercuryMessageDeliveryState").ERROR; else if (k(a)) return b("MercuryMessageDeliveryState").SENDING; else if (l(a)) if (a.is_one_way_sent || a.timestamp > c) return b("MercuryMessageDeliveryState").SENT; else return b("MercuryMessageDeliveryState").DELIVERED; else return b("MercuryMessageDeliveryState").UNKNOWN
    }

    function q(a, b) {
        if (n(a)) return 4; else if (k(a)) return 1; else if (l(a)) if (a.timestamp <= b && !a.is_one_way_sent) return 3; else return 2; else return 0
    }

    function r(a) {
        try {
            a = b("bs_caml_option").some(JSON.parse(a))
        } catch (b) {
            a = void 0
        }
        if (a === void 0) return;
        a = b("bs_js_json").classify(b("bs_caml_option").valFromOption(a));
        if (typeof a === "number") return;
        if (a.TAG !== 2) return;
        a = b("bs_js_dict").get(a._0, "persona");
        if (a === void 0) return;
        a = b("bs_js_json").classify(b("bs_caml_option").valFromOption(a));
        if (typeof a === "number" || a.TAG !== 2) return; else return b("bs_caml_option").some(a._0)
    }

    function s(a) {
        if (a == null) return null;
        a = a.platform_xmd;
        if (a == null) return null;
        a = r(a);
        if (a === void 0) return null;
        a = b("bs_caml_option").valFromOption(a);
        var c = b("bs_js_dict").get(a, "id"), d = b("bs_js_dict").get(a, "name");
        a = b("bs_js_dict").get(a, "profile_picture_url");
        if (c !== void 0 && d !== void 0 && a !== void 0) return {
            id: b("bs_caml_option").valFromOption(c),
            name: b("bs_caml_option").valFromOption(d),
            profile_picture_url: b("bs_caml_option").valFromOption(a)
        }; else return null
    }

    function t(a) {
        var c = a.log_message_type;
        if (!(c == null) && b("bs_caml_obj").caml_equal(c, b("MercuryLogMessageType").SERVER_ERROR)) return b("bs_caml_obj").caml_equal(a.action_type, b("MercuryActionType").LOG_MESSAGE); else return !1
    }

    function u(a, b) {
        var c = a.thread_fbid, d = a.other_user_fbid;
        a = a.is_from_iris;
        if (!(b == null) && b) return !1;
        if (!(c == null) || !(d == null) || a) return !0; else return !1
    }

    f.makeFakeMessage = a;
    f.isLocalMessage = c;
    f.isTitanMessage = d;
    f.finalizeRanges = e;
    f.shouldSortForPayloadSource = h;
    f.isOutbound = i;
    f.isInbound = j;
    f.isSending = k;
    f.isSent = l;
    f.compare = m;
    f.hasError = n;
    f.getError = o;
    f.getDeliveryState = p;
    f.getGutterItemStatus = q;
    f.getPersonaData = r;
    f.getPersona = s;
    f.isErrorLogMessage = t;
    f.hasServerTimestamp = u
}), null);
__d("MessengerPersonas.bs", ["bs_js_dict", "bs_js_null_undefined"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = {};

    function a(a) {
        if (a == null) return;
        var c = b("bs_js_dict").get(g, a.id);
        if (c !== void 0) return; else {
            g[a.id] = a;
            return
        }
    }

    function c(a) {
        return b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(g, a))
    }

    f.personas = g;
    f.addPersona = a;
    f.getNow = c
}), null);
__d("MessengerSharedMediaActionsLoader", ["JSResource"], (function (a, b, c, d, e, f) {
    "use strict";
    f.deletePhotos = a;

    function a(a, c) {
        b("JSResource").loadAll([b("JSResource")("MessengerSharedMediaActions").__setRef("MessengerSharedMediaActionsLoader")], function (b) {
            b.deletePhotos(a, c)
        })
    }
}), null);
__d("MessengerSharedPhotosVideosBaseData.bs", ["bs_js_dict"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = {};

    function a(a) {
        return b("bs_js_dict").get(g, a)
    }

    function h(a, b) {
        g[a] = b
    }

    function c(a, c) {
        var d = b("bs_js_dict").get(g, a);
        if (d === void 0) return;
        var e = d.actualData;
        if (e === void 0) return;
        var f = e.edges;
        if (f.length === 0) return;
        f = f.filter(function (a) {
            return !c.some(function (b) {
                return b === a.node.legacy_attachment_id
            })
        });
        d = d.fetchingState;
        f = {
            edges: f,
            newestItemCursor: e.newestItemCursor,
            oldestItemCursor: e.oldestItemCursor,
            hasNextPage: e.hasNextPage
        };
        e = {fetchingState: d, actualData: f};
        return h(a, e)
    }

    f.data = g;
    f.get = a;
    f.set = h;
    f.localRemove = c
}), null);
__d("MessengerJoinableModeType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({PRIVATE: 0, JOINABLE: 1});
    e.exports = a
}), null);
__d("MercuryVanityIDMap.bs", ["bs_js_dict", "MercuryAssert", "bs_js_null_undefined"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = {}, h = {};

    function a(a) {
        return b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(g, a.toLowerCase()))
    }

    function c(a) {
        return b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(h, a))
    }

    function d(a) {
        return b("bs_js_dict").get(h, a) !== void 0
    }

    function e(a) {
        return b("bs_js_dict").get(g, a.toLowerCase()) !== void 0
    }

    function i(a, c) {
        b("MercuryAssert").isParticipantID(c);
        a = a.toLowerCase();
        g[a] = c;
        h[c] = a
    }

    f.vanityToID = g;
    f.idToVanity = h;
    f.getID = a;
    f.getVanity = c;
    f.hasID = d;
    f.hasVanity = e;
    f.set = i
}), null);
__d("MessengerParticipants.bs", ["fbt", "Promise", "FBID.bs", "bs_curry", "bs_js_dict", "bs_caml_obj", "BanzaiODS", "immutable", "bs_belt_Array", "MercuryIDs", "bs_caml_option", "CurrentUser", "MercuryAssert", "ImmutableObject", "bs_js_null_undefined", "MercuryVanityIDMap.bs", "MercuryParticipantTypes", "MessengerParticipantsFetcher.bs"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h = {contents: 1}, i = {}, j = new Set(), k = {}, l = function (b, a) {
        delete b[a];
        return 0
    }, m = function (b, a) {
        delete b[a];
        return 0
    };

    function n(a) {
        if (b("CurrentUser").isWorkUser()) return g._("Workplace \u7528\u6237"); else return g._("Facebook \u7528\u6237")
    }

    function o(a) {
        var c = a.user_type;
        if (c == null) return a;
        if (!(b("bs_caml_obj").caml_equal(c, b("MercuryParticipantTypes").USER) || b("bs_caml_obj").caml_equal(c, b("MercuryParticipantTypes").FRIEND))) return a;
        c = a.href;
        var d = a.vanity;
        if (!(c == null)) return a;
        if (!(d == null)) return a;
        c = n(void 0);
        return Object.assign(a, {name: c, short_name: c})
    }

    function a(a) {
        Object.keys(i).forEach(function (a) {
            return m(i, a)
        })
    }

    function p(a) {
        var c = a.id, d = a.vanity;
        d == null || b("MercuryVanityIDMap.bs").set(d, c);
        d = b("bs_js_dict").get(i, c);
        d !== void 0 ? i[c] = b("ImmutableObject").set(b("bs_caml_option").valFromOption(d), a) : i[c] = new (b("ImmutableObject"))(o(a))
    }

    function c(a) {
        a = a.participants;
        if (!(a == null)) {
            a.map(p);
            return
        }
    }

    function d(a) {
        a = a.preloaded_participants;
        if (!(a == null)) {
            a.map(p);
            return
        }
    }

    function q(a, c) {
        var d = {}, e = [];
        a.forEach(function (a) {
            var c = b("bs_js_dict").get(i, a);
            c !== void 0 ? d[a] = b("bs_caml_option").valFromOption(c) : e.push(a)
        });
        if (e.length !== 0) {
            var f = [];
            e.forEach(function (a) {
                if (j.has(a)) return;
                var c = b("MercuryIDs").getUserIDFromParticipantID(a);
                if (!(c == null)) {
                    f.push(c);
                    j.add(a);
                    return
                }
            });
            var g = h.contents.toString();
            k[g] = [a, c];
            h.contents = h.contents + 1 | 0;
            f.length > 0 && b("MessengerParticipantsFetcher.bs").$$fetch({ids: f}).then(function (a) {
                a.forEach(function (a) {
                    i[a.id] = new (b("ImmutableObject"))(a);
                    var c = a.id;
                    a = a.vanity;
                    a == null || b("MercuryVanityIDMap.bs").set(a, c);
                    j["delete"](c)
                });
                Object.keys(k).forEach(function (a) {
                    var d = b("bs_js_dict").get(k, a);
                    if (d === void 0) return;
                    var e = d[0], c = {};
                    e.forEach(function (a) {
                        var d = b("bs_js_dict").get(i, a);
                        if (d !== void 0) {
                            c[a] = b("bs_caml_option").valFromOption(d);
                            return
                        }
                    });
                    if (Object.keys(c).length === e.length) {
                        l(k, a);
                        return d[1](c)
                    }
                });
                b("BanzaiODS").bumpEntityKey(2966, "messenger_webgraphql", "fetch_participant.success");
                return b("Promise").resolve(void 0)
            })["catch"](function (a) {
                b("BanzaiODS").bumpEntityKey(2966, "messenger_webgraphql", "fetch_participant.failure");
                return b("Promise").resolve(void 0)
            });
            return g
        }
        c(d);
        return null
    }

    function e(a, c) {
        b("MercuryAssert").isParticipantID(a);
        return q([a], function (d) {
            d = b("bs_js_dict").get(d, a);
            if (d !== void 0) return b("bs_curry")._1(c, b("bs_caml_option").valFromOption(d))
        })
    }

    function r(a) {
        return b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(i, a))
    }

    function s(c, d) {
        var e = [], a = [];
        c.forEach(function (b) {
            var c = r(b);
            c == null ? e.push(b) : a.push(c)
        });
        if (e.length === 0) return [a, null];
        var f = q(e, function (a) {
            return b("bs_curry")._1(d, b("bs_belt_Array").keepMap(c, function (a) {
                return b("bs_caml_option").nullable_to_opt(r(a))
            }))
        });
        return [a, f]
    }

    function t(a, c) {
        var d = function (a) {
            return b("immutable").Map(a.map(function (a) {
                return [a.id, a]
            }))
        }, e = function (a) {
            return b("bs_curry")._1(c, d(a))
        };
        a = s(a, e);
        return [d(a[0]), a[1]]
    }

    function u(a) {
        return l(k, a)
    }

    function v(a) {
        if (a == null) return null;
        if (b("MercuryVanityIDMap.bs").hasVanity(a)) {
            var c = b("MercuryVanityIDMap.bs").getID(a);
            if (c == null) return null; else return c
        }
        c = /^\d+$/;
        if (!c.test(a)) return null;
        c = b("FBID.bs").ofString(a);
        if (c !== void 0) return b("MercuryIDs").getParticipantIDFromUserID(b("bs_caml_option").valFromOption(c)); else return null
    }

    f.reset = a;
    f.addParticipants = c;
    f.addPreloadedParticipants = d;
    f.getDefaultName = n;
    f.get = e;
    f.getNow = r;
    f.getMulti = q;
    f.getMultiEager = s;
    f.getMultiEagerMap = t;
    f.removeCallback = u;
    f.getIDFromVanityOrFBID = v
}), null);
__d("MessengerThreadUtils.bs", ["FBID.bs", "bs_caml_obj", "MercuryIDs", "CurrentUser", "ImmutableObject", "MessengerParticipants.bs", "MercuryParticipantTypes", "MessengerJoinableModeType", "MessengerObjectAssociationType", "MessengerThreadCannotReplyReason"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a, c) {
        return c.filter(function (c) {
            return b("bs_caml_obj").caml_notequal(c, a)
        }).length <= 1
    }

    function h(a, c, d, e) {
        var f = b("MercuryIDs").tokenize(c), h = f.type;
        f = f.value;
        var i = d.find(function (b) {
            return b !== a
        });
        i = i !== void 0 ? b("MessengerParticipants.bs").getNow(i) : null;
        var j = b("CurrentUser").isWorkUser();
        j = !(i == null) && j && i.work_foreign_entity_info == null && i.user_type === b("MercuryParticipantTypes").USER ? [!1, b("MessengerThreadCannotReplyReason").RECIPIENTS_INVALID] : [!0, null];
        return new (b("ImmutableObject"))({
            thread_id: c,
            participants: Array.from(d),
            preloaded_participants: [],
            admins: {},
            name: "",
            snippet: "",
            snippet_sender: null,
            unread_count: e == null ? 0 : e,
            message_count: 0,
            image_src: null,
            square_image_src: null,
            timestamp: 0,
            other_user_fbid: h === "user" ? b("FBID.bs").ofStringExn(f) : null,
            is_canonical_user: h === "user",
            is_canonical: g(a, d),
            is_subscribed: !0,
            is_other_recipient_page: !1,
            folder: "inbox",
            is_archived: !1,
            is_page_follow_up: !1,
            is_page_unresponded_thread: !1,
            admin_model_status: null,
            approval_mode: 0,
            approval_queue_ids: [],
            associated_object: null,
            can_reply: j[0],
            cannot_reply_reason: j[1],
            can_viewer_report: !1,
            comm_item_owners: null,
            comm_source_id: null,
            comm_status: null,
            comm_icon_type: [],
            composer_input_disabled: null,
            custom_like_icon: null,
            custom_nickname: null,
            customization_enabled: !1,
            description: null,
            ephemeral_ttl_mode: 0,
            footer_color: null,
            game_id: null,
            group_approval_queue: null,
            work_associated_group: null,
            pinned_messages: null,
            groups_sync_status: null,
            group_thread_subtype: null,
            has_email_participant: !1,
            has_montage: !1,
            unread_mentions_count: 0,
            header_color: null,
            is_canonical_neo_user: !1,
            is_from_weak_entry_point: !1,
            is_pin_protected: !1,
            is_pinned: !1,
            is_thread_queue_enabled: !1,
            joinable_mode: {mode: 0, link: ""},
            last_message_timestamp: 0,
            last_message_id: null,
            last_message_type: null,
            last_read_timestamp: 0,
            last_message_admin_text_type: null,
            last_message_unsendability_status: null,
            lightweight_event: null,
            lightweight_events: {},
            marketplace_thread_data: null,
            mentions_mute_mode: 0,
            mute_until: null,
            object_association_type: null,
            page_comm_item_id: null,
            page_thread_info: null,
            page_unsubscribe_status: !1,
            participant_add_mode: null,
            participants_event_status: null,
            reactions_mute_mode: 0,
            read_only: !1,
            recipients_loadable: !1,
            rtc_call_data: null,
            server_timestamp: 0,
            snippet_attachments: [],
            solid_color: null,
            subtitle: null,
            theme_id: null,
            reactions: void 0,
            thread_connectivity_data: null,
            thread_fbid: null,
            thread_pin_timestamp: null,
            thread_type: null,
            thread_unsendability_status: null,
            gradient_colors: [],
            accessibility_label: null,
            reverse_gradients_for_radial: null,
            joinable_link: null,
            linked_mentorship_programs: null,
            is_business_page_active: !1,
            thread_associated_job_applications: null,
            thread_associated_page_admin: null,
            graphql_token: null,
            conversion_detection_data: null,
            suggested_reply_data: null
        })
    }

    function a(a, c, d, e) {
        a = h(a, c, d, null);
        return b("ImmutableObject").set(a, {
            associated_object: e,
            name: e.name,
            joinable_mode: {mode: b("MessengerJoinableModeType").JOINABLE, link: ""},
            object_association_type: b("MessengerObjectAssociationType").GENERAL_CHAT
        })
    }

    f.isCanonicalFromInitialParticipants = g;
    f.createNewLocalThread = h;
    f.createNewLocalGroupGeneralThread = a
}), null);
__d("ParticipantId.bs", ["bs_string", "bs_belt_Id"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("bs_string").compare;
    c = b("bs_belt_Id").MakeComparable({cmp: a});
    d = c.cmp;
    f.cmp = d
}), null);
__d("RemoteAction.bs", ["bs_curry"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
    }

    function a(a) {
        return {send: g}
    }

    function c(a, b) {
        if (b.send === g) {
            b.send = a;
            return b
        }
    }

    function d(a) {
        a.send = g
    }

    function e(a, c) {
        return b("bs_curry")._1(a.send, c)
    }

    f.create = a;
    f.subscribe = c;
    f.unsubscribe = d;
    f.send = e
}), null);
__d("ThreadConnectivityStatus", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({UNCONNECTED: 0, IMPLICIT_OR_TWO_WAY_MESSAGING: 1});
    e.exports = a
}), null);
__d("ThreadConnectivityStatus.bs", ["bs_caml_obj", "ThreadConnectivityStatus", "ThreadConnectivityStatusGraphQLType.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        if (b("bs_caml_obj").caml_equal(a, b("ThreadConnectivityStatus").UNCONNECTED)) return b("ThreadConnectivityStatusGraphQLType.bs").unconnected; else return b("ThreadConnectivityStatusGraphQLType.bs").implicitOrTwoWayMessaging
    }

    f.toGraphQLValue = a
}), null);
__d("ThreadId.bs", ["bs_string", "bs_belt_Id"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("bs_string").compare;
    c = b("bs_belt_Id").MakeComparable({cmp: a});
    d = c.cmp;
    f.cmp = d
}), null);
__d("TypingStates", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({INACTIVE: 0, TYPING: 1, QUITTING: 2});
    e.exports = a
}), null);
__d("XGroupsController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/groups/{idorvanity}/{?view}/{?post_id}/", {
        idorvanity: {type: "String", required: !0},
        view: {type: "Enum", enumType: 1},
        post_id: {type: "Int"},
        rule_id: {type: "Int"},
        ref: {type: "String"},
        source_id: {type: "String"},
        notif_t: {type: "String"},
        nux: {type: "Enum", enumType: 1},
        tip_id: {type: "Int"},
        feedback_id: {type: "FBID"},
        member_tag_id: {type: "FBID"},
        section: {type: "Enum", enumType: 1},
        thread_id: {type: "String"},
        support_thread_id: {type: "String"},
        mentorship_profile_id: {type: "FBID"},
        autopopup_create_chat_dialog: {type: "Bool", defaultValue: !1},
        sorting_setting: {type: "String"},
        multi_events: {type: "String"},
        stories: {type: "Exists", defaultValue: !1},
        topics: {type: "Exists", defaultValue: !1},
        highlight_location: {type: "Exists", defaultValue: !1},
        highlight_sections: {type: "Exists", defaultValue: !1},
        highlight_groupapps: {type: "Exists", defaultValue: !1},
        highlight_pixel: {type: "Exists", defaultValue: !1},
        highlight_mentorship_option: {type: "Exists", defaultValue: !1},
        highlight_fundraiser_option: {type: "Exists", defaultValue: !1},
        highlight_auto_approval: {type: "Exists", defaultValue: !1},
        highlight_page_member: {type: "Exists", defaultValue: !1},
        highlight_units_edit_bar: {type: "Exists", defaultValue: !1},
        highlight_keyword_alerts: {type: "Exists", defaultValue: !1},
        queue: {type: "Enum", enumType: 1},
        composer_prefill: {type: "String"},
        hide_workplace_pagelet: {type: "Bool", defaultValue: !1},
        permalink_add_comment_nux_shown: {type: "Bool", defaultValue: !1},
        badge_type: {type: "Enum", enumType: 1},
        work_learning_entry_point: {type: "Enum", enumType: 1},
        chained_wp: {type: "Bool", defaultValue: !1},
        hoist_pending_member_ids_suggested_order: {type: "FBIDKeyset"},
        comment_id: {type: "Int"},
        reply_comment_id: {type: "Int"},
        hashtags: {type: "Exists", defaultValue: !1},
        sale_post_id: {type: "FBID"}
    })
}), null);
__d("XMercuryThreadLikeIconController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/mercury/like_icon/", {emoji: {type: "String", defaultValue: ""}})
}), null);
__d("bs_belt_SortArray", ["bs_curry", "bs_belt_Array"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a, b, c, d, e) {
        while (!0) {
            var f = c, g = b;
            if (f >= d) return f;
            var h = a[f];
            if (!e(h, g)) return f;
            c = f + 1 | 0;
            b = h;
            continue
        }
    }

    function h(a, b) {
        var c = a.length;
        if (c === 0 || c === 1) return c;
        var d = a[0], e = a[1];
        if (b(d, e)) {
            var f = e, h = 2;
            while (!0) {
                var i = h, j = f;
                if (i >= c) return i;
                var k = a[i];
                if (!b(j, k)) return i;
                h = i + 1 | 0;
                f = k;
                continue
            }
        } else if (b(e, d)) return -g(a, e, 2, c, b) | 0; else return 1
    }

    function a(a, c) {
        return h(a, b("bs_curry").__2(c))
    }

    function i(a, b) {
        var c = a.length;
        if (c === 0) return !0; else {
            var d = 0;
            c = c - 1 | 0;
            while (!0) {
                var e = d;
                if (e === c) return !0;
                if (b(a[e], a[e + 1 | 0]) > 0) return !1;
                d = e + 1 | 0;
                continue
            }
        }
    }

    function c(a, c) {
        return i(a, b("bs_curry").__2(c))
    }

    function j(a, c, d, e, f, g, h, i, j) {
        d = c + d | 0;
        g = f + g | 0;
        var k = c;
        c = a[c];
        var l = f;
        f = e[f];
        i = i;
        while (!0) {
            var m = i, n = f, o = l, p = c, q = k;
            if (j(p, n) <= 0) {
                h[m] = p;
                p = q + 1 | 0;
                if (p >= d) return b("bs_belt_Array").blitUnsafe(e, o, h, m + 1 | 0, g - o | 0);
                i = m + 1 | 0;
                c = a[p];
                k = p;
                continue
            }
            h[m] = n;
            p = o + 1 | 0;
            if (p >= g) return b("bs_belt_Array").blitUnsafe(a, q, h, m + 1 | 0, d - q | 0);
            i = m + 1 | 0;
            f = e[p];
            l = p;
            continue
        }
    }

    function k(a, c, d, e, f, g, h, i, j) {
        d = c + d | 0;
        g = f + g | 0;
        var k = c;
        c = a[c];
        var l = f;
        f = e[f];
        i = i;
        while (!0) {
            var m = i, n = f, o = l, p = c, q = k, r = j(p, n);
            if (r < 0) {
                h[m] = p;
                var s = q + 1 | 0, t = m + 1 | 0;
                if (s < d) {
                    i = t;
                    c = a[s];
                    k = s;
                    continue
                }
                b("bs_belt_Array").blitUnsafe(e, o, h, t, g - o | 0);
                return (t + g | 0) - o | 0
            }
            if (r === 0) {
                h[m] = p;
                s = q + 1 | 0;
                t = o + 1 | 0;
                r = m + 1 | 0;
                if (!(s < d && t < g)) if (s === d) {
                    b("bs_belt_Array").blitUnsafe(e, t, h, r, g - t | 0);
                    return (r + g | 0) - t | 0
                } else {
                    b("bs_belt_Array").blitUnsafe(a, s, h, r, d - s | 0);
                    return (r + d | 0) - s | 0
                }
                i = r;
                f = e[t];
                l = t;
                c = a[s];
                k = s;
                continue
            }
            h[m] = n;
            p = o + 1 | 0;
            r = m + 1 | 0;
            if (p < g) {
                i = r;
                f = e[p];
                l = p;
                continue
            }
            b("bs_belt_Array").blitUnsafe(a, q, h, r, d - q | 0);
            return (r + d | 0) - q | 0
        }
    }

    function d(a, c, d, e, f, g, h, i, j) {
        return k(a, c, d, e, f, g, h, i, b("bs_curry").__2(j))
    }

    function l(a, b, c, d, e, f, g, h, i) {
        c = b + c | 0;
        f = e + f | 0;
        var j = b;
        b = a[b];
        var k = e;
        e = d[e];
        h = h;
        while (!0) {
            var l = h, m = e, n = k, o = b, p = j;
            m = i(o, m);
            if (m < 0) {
                var q = p + 1 | 0;
                if (q >= c) return l;
                b = a[q];
                j = q;
                continue
            }
            if (m === 0) {
                g[l] = o;
                q = p + 1 | 0;
                m = n + 1 | 0;
                o = l + 1 | 0;
                if (!(q < c && m < f)) return o;
                h = o;
                e = d[m];
                k = m;
                b = a[q];
                j = q;
                continue
            }
            p = n + 1 | 0;
            if (p >= f) return l;
            e = d[p];
            k = p;
            continue
        }
    }

    function e(a, c, d, e, f, g, h, i, j) {
        return l(a, c, d, e, f, g, h, i, b("bs_curry").__2(j))
    }

    function m(a, c, d, e, f, g, h, i, j) {
        d = c + d | 0;
        g = f + g | 0;
        var k = c;
        c = a[c];
        var l = f;
        f = e[f];
        i = i;
        while (!0) {
            var m = i, n = f, o = l, p = c, q = k;
            n = j(p, n);
            if (n < 0) {
                h[m] = p;
                p = m + 1 | 0;
                var r = q + 1 | 0;
                if (r >= d) return p;
                i = p;
                c = a[r];
                k = r;
                continue
            }
            if (n === 0) {
                p = q + 1 | 0;
                r = o + 1 | 0;
                if (!(p < d && r < g)) if (p === d) return m; else {
                    b("bs_belt_Array").blitUnsafe(a, p, h, m, d - p | 0);
                    return (m + d | 0) - p | 0
                }
                f = e[r];
                l = r;
                c = a[p];
                k = p;
                continue
            }
            n = o + 1 | 0;
            if (n < g) {
                f = e[n];
                l = n;
                continue
            }
            b("bs_belt_Array").blitUnsafe(a, q, h, m, d - q | 0);
            return (m + d | 0) - q | 0
        }
    }

    function n(a, c, d, e, f, g, h, i, j) {
        return m(a, c, d, e, f, g, h, i, b("bs_curry").__2(j))
    }

    function o(a, b, c, d, e, f) {
        for (var g = 0; g < e; ++g) {
            var h = a[b + g | 0], i = (d + g | 0) - 1 | 0;
            while (i >= d && f(c[i], h) > 0) c[i + 1 | 0] = c[i], i = i - 1 | 0;
            c[i + 1 | 0] = h
        }
    }

    function p(a, b, c, d, e, f) {
        if (e <= 5) return o(a, b, c, d, e, f);
        var g = e / 2 | 0;
        e = e - g | 0;
        p(a, b + g | 0, c, d + g | 0, e, f);
        p(a, b, a, b + e | 0, g, f);
        return j(a, b + e | 0, g, c, d + g | 0, e, c, d, f)
    }

    function q(a, b) {
        var c = a.length;
        if (c <= 5) return o(a, 0, a, 0, c, b);
        var d = c / 2 | 0;
        c = c - d | 0;
        var e = new Array(c);
        p(a, d, e, 0, c, b);
        p(a, 0, a, c, d, b);
        return j(a, c, d, e, 0, c, a, 0, b)
    }

    function r(a, c) {
        return q(a, b("bs_curry").__2(c))
    }

    function s(a, b) {
        a = a.slice(0);
        q(a, b);
        return a
    }

    function t(a, c) {
        return s(a, b("bs_curry").__2(c))
    }

    function u(a, b, c) {
        var d = a.length;
        if (d === 0) return -1;
        var e = a[0];
        e = c(b, e);
        if (e < 0) return -1;
        e = a[d - 1 | 0];
        e = c(b, e);
        if (e > 0) return -(d + 1 | 0) | 0; else {
            e = 0;
            d = d - 1 | 0;
            while (!0) {
                var f = d, g = e, h = (g + f | 0) / 2 | 0, i = a[h];
                i = c(b, i);
                if (i === 0) return h;
                if (i < 0) {
                    if (f === h) if (c(a[g], b) === 0) return g; else return -(f + 1 | 0) | 0;
                    d = h;
                    continue
                }
                if (g === h) if (c(a[f], b) === 0) return f; else return -(f + 1 | 0) | 0;
                e = h;
                continue
            }
        }
    }

    function v(a, c, d) {
        return u(a, c, b("bs_curry").__2(d))
    }

    var w, x;
    f.Int = w;
    f.$$String = x;
    f.strictlySortedLengthU = h;
    f.strictlySortedLength = a;
    f.isSortedU = i;
    f.isSorted = c;
    f.stableSortInPlaceByU = q;
    f.stableSortInPlaceBy = r;
    f.stableSortByU = s;
    f.stableSortBy = t;
    f.binarySearchByU = u;
    f.binarySearchBy = v;
    f.unionU = k;
    f.union = d;
    f.intersectU = l;
    f.intersect = e;
    f.diffU = m;
    f.diff = n
}), null);
__d("bs_belt_internalAVLtree", ["bs_curry", "bs_caml_option", "bs_belt_SortArray"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        if (a !== void 0) return a.h; else return 0
    }

    function h(a) {
        if (a !== void 0) return {k: a.k, v: a.v, h: a.h, l: h(a.l), r: h(a.r)}; else return a
    }

    function i(a, b, c, d) {
        var e = g(a), f = g(d);
        return {k: b, v: c, h: e >= f ? e + 1 | 0 : f + 1 | 0, l: a, r: d}
    }

    function j(a, b) {
        return {k: a, v: b, h: 1, l: void 0, r: void 0}
    }

    function k(a, b) {
        if (b !== void 0) if (a !== void 0) return a.h >= b.h; else return !1; else return !0
    }

    function a(a, b) {
        if (a.v === b) return a; else return {k: a.k, v: b, h: a.h, l: a.l, r: a.r}
    }

    function l(a, b, c, d) {
        var e = a !== void 0 ? a.h : 0, f = d !== void 0 ? d.h : 0;
        if (e > (f + 2 | 0)) {
            var h = a.l, j = a.r;
            if (g(h) >= g(j)) return i(h, a.k, a.v, i(j, b, c, d)); else return i(i(h, a.k, a.v, j.l), j.k, j.v, i(j.r, b, c, d))
        }
        if (f <= (e + 2 | 0)) return {k: b, v: c, h: e >= f ? e + 1 | 0 : f + 1 | 0, l: a, r: d};
        h = d.l;
        j = d.r;
        if (g(j) >= g(h)) return i(i(a, b, c, h), d.k, d.v, j); else return i(i(a, b, c, h.l), h.k, h.v, i(h.r, d.k, d.v, j))
    }

    function m(a) {
        while (!0) {
            var b = a, c = b.l;
            if (c === void 0) return b.k;
            a = c;
            continue
        }
    }

    function c(a) {
        if (a !== void 0) return b("bs_caml_option").some(m(a))
    }

    function d(a) {
        if (a !== void 0) return m(a)
    }

    function n(a) {
        while (!0) {
            var b = a, c = b.r;
            if (c === void 0) return b.k;
            a = c;
            continue
        }
    }

    function e(a) {
        if (a !== void 0) return b("bs_caml_option").some(n(a))
    }

    function o(a) {
        if (a !== void 0) return n(a)
    }

    function p(a) {
        while (!0) {
            var b = a, c = b.l;
            if (c === void 0) return [b.k, b.v];
            a = c;
            continue
        }
    }

    function q(a) {
        if (a !== void 0) return p(a)
    }

    function r(a) {
        if (a !== void 0) return p(a)
    }

    function s(a) {
        while (!0) {
            var b = a, c = b.r;
            if (c === void 0) return [b.k, b.v];
            a = c;
            continue
        }
    }

    function t(a) {
        if (a !== void 0) return s(a)
    }

    function aa(a) {
        if (a !== void 0) return s(a)
    }

    function u(a, b, c) {
        var d = a.l;
        if (d !== void 0) return l(u(d, b, c), a.k, a.v, a.r); else {
            b.contents = a.k;
            c.contents = a.v;
            return a.r
        }
    }

    function ba(a) {
        return a === void 0
    }

    function v(a, b) {
        while (!0) {
            var c = b, d = a;
            if (d === void 0) return c;
            b = {hd: d, tl: c};
            a = d.l;
            continue
        }
    }

    function w(a, b) {
        if (a === void 0) return;
        var c = w(a.l, b);
        if (c !== void 0) return c;
        c = a.k;
        var d = a.v, e = b(c, d);
        if (e) return [c, d];
        e = w(a.r, b);
        if (e !== void 0) return e
    }

    function ca(a, c) {
        return w(a, b("bs_curry").__2(c))
    }

    function x(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return;
            x(c.l, b);
            b(c.k, c.v);
            a = c.r;
            continue
        }
    }

    function da(a, c) {
        return x(a, b("bs_curry").__2(c))
    }

    function y(a, b) {
        if (a === void 0) return;
        var c = y(a.l, b), d = b(a.v);
        b = y(a.r, b);
        return {k: a.k, v: d, h: a.h, l: c, r: b}
    }

    function ea(a, c) {
        return y(a, b("bs_curry").__1(c))
    }

    function z(a, b) {
        if (a === void 0) return;
        var c = a.k, d = z(a.l, b), e = b(c, a.v);
        b = z(a.r, b);
        return {k: c, v: e, h: a.h, l: d, r: b}
    }

    function fa(a, c) {
        return z(a, b("bs_curry").__2(c))
    }

    function A(a, b, c) {
        while (!0) {
            var d = b, e = a;
            if (e === void 0) return d;
            var f = e.k, g = e.v, h = e.l;
            e = e.r;
            b = c(A(h, d, c), f, g);
            a = e;
            continue
        }
    }

    function ga(a, c, d) {
        return A(a, c, b("bs_curry").__3(d))
    }

    function B(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !0;
            if (!b(c.k, c.v)) return !1;
            if (!B(c.l, b)) return !1;
            a = c.r;
            continue
        }
    }

    function ha(a, c) {
        return B(a, b("bs_curry").__2(c))
    }

    function C(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !1;
            if (b(c.k, c.v)) return !0;
            if (C(c.l, b)) return !0;
            a = c.r;
            continue
        }
    }

    function ia(a, c) {
        return C(a, b("bs_curry").__2(c))
    }

    function D(a, b, c) {
        if (a !== void 0) return l(D(a.l, b, c), a.k, a.v, a.r); else return j(b, c)
    }

    function E(a, b, c) {
        if (a !== void 0) return l(a.l, a.k, a.v, E(a.r, b, c)); else return j(b, c)
    }

    function F(a, b, c, d) {
        if (a === void 0) return D(d, b, c);
        if (d === void 0) return E(a, b, c);
        var e = a.k, f = a.v, g = a.h, h = a.l, j = a.r, k = d.k, m = d.v, n = d.h, o = d.l, p = d.r;
        if (g > (n + 2 | 0)) return l(h, e, f, F(j, b, c, d)); else if (n > (g + 2 | 0)) return l(F(a, b, c, o), k, m, p); else return i(a, b, c, d)
    }

    function G(a, b) {
        if (a === void 0) return b;
        if (b === void 0) return a;
        var c = {contents: b.k}, d = {contents: b.v};
        b = u(b, c, d);
        return F(a, c.contents, d.contents, b)
    }

    function ja(a, c, d, e) {
        if (d !== void 0) return F(a, c, b("bs_caml_option").valFromOption(d), e); else return G(a, e)
    }

    function H(a, b) {
        if (a === void 0) return;
        var c = a.k, d = a.v, e = H(a.l, b), f = b(c, d);
        a = H(a.r, b);
        if (f) return F(e, c, d, a); else return G(e, a)
    }

    function ka(a, c) {
        return H(a, b("bs_curry").__2(c))
    }

    function I(a, c) {
        if (a === void 0) return;
        var d = a.k, e = a.v, f = I(a.l, c);
        e = c(d, e);
        a = I(a.r, c);
        if (e !== void 0) return F(f, d, b("bs_caml_option").valFromOption(e), a); else return G(f, a)
    }

    function la(a, c) {
        return I(a, b("bs_curry").__2(c))
    }

    function J(a, b) {
        if (a === void 0) return [void 0, void 0];
        var c = a.k, d = a.v, e = J(a.l, b), f = e[1];
        e = e[0];
        var g = b(c, d);
        a = J(a.r, b);
        b = a[1];
        a = a[0];
        if (g) return [F(e, c, d, a), G(f, b)]; else return [G(e, a), F(f, c, d, b)]
    }

    function ma(a, c) {
        return J(a, b("bs_curry").__2(c))
    }

    function K(a) {
        var b = a.l;
        a = a.r;
        b = b !== void 0 ? K(b) : 0;
        a = a !== void 0 ? K(a) : 0;
        return (1 + b | 0) + a | 0
    }

    function L(a) {
        if (a !== void 0) return K(a); else return 0
    }

    function M(a, b) {
        while (!0) {
            var c = b, d = a;
            if (d === void 0) return c;
            var e = d.k, f = d.v, g = d.l;
            d = d.r;
            b = {hd: [e, f], tl: M(d, c)};
            a = g;
            continue
        }
    }

    function na(a) {
        return M(a, 0)
    }

    function N(a) {
        while (!0) {
            var b = a;
            if (b === void 0) return;
            var c = b.l;
            b = b.r;
            var d = g(c) - g(b) | 0;
            if (!(d <= 2 && d >= -2)) throw new Error('File "belt_internalAVLtree.ml", line 373, characters 6-12');
            N(c);
            a = b;
            continue
        }
    }

    function O(a, b, c) {
        while (!0) {
            var d = b, e = a, f = e.k, g = e.l;
            e = e.r;
            g = g !== void 0 ? O(g, d, c) : d;
            c[g] = f;
            d = g + 1 | 0;
            if (e === void 0) return d;
            b = d;
            a = e;
            continue
        }
    }

    function P(a, b, c) {
        while (!0) {
            var d = b, e = a, f = e.l, g = e.r;
            f = f !== void 0 ? P(f, d, c) : d;
            c[f] = e.v;
            d = f + 1 | 0;
            if (g === void 0) return d;
            b = d;
            a = g;
            continue
        }
    }

    function Q(a, b, c) {
        while (!0) {
            var d = b, e = a, f = e.l, g = e.k, h = e.r;
            f = f !== void 0 ? Q(f, d, c) : d;
            c[f] = [g, e.v];
            d = f + 1 | 0;
            if (h === void 0) return d;
            b = d;
            a = h;
            continue
        }
    }

    function oa(b) {
        if (b === void 0) return [];
        var a = K(b);
        a = new Array(a);
        Q(b, 0, a);
        return a
    }

    function pa(b) {
        if (b === void 0) return [];
        var a = K(b);
        a = new Array(a);
        O(b, 0, a);
        return a
    }

    function qa(b) {
        if (b === void 0) return [];
        var a = K(b);
        a = new Array(a);
        P(b, 0, a);
        return a
    }

    function R(a, b, c) {
        switch (c) {
            case 0:
                return;
            case 1:
                var d = a[b];
                return j(d[0], d[1]);
            case 2:
                d = a[b];
                var e = a[b - 1 | 0];
                e = e;
                d = d;
                return {k: e[0], v: e[1], h: 2, l: j(d[0], d[1]), r: void 0};
            case 3:
                e = a[b];
                d = a[b - 1 | 0];
                var f = a[b - 2 | 0];
                f = f;
                d = d;
                e = e;
                return {k: d[0], v: d[1], h: 2, l: j(e[0], e[1]), r: j(f[0], f[1])};
            default:
                d = c / 2 | 0;
                e = R(a, b, d);
                f = a[b - d | 0];
                a = R(a, (b - d | 0) - 1 | 0, (c - d | 0) - 1 | 0);
                return i(e, f[0], f[1], a)
        }
    }

    function S(a, b, c) {
        switch (c) {
            case 0:
                return;
            case 1:
                var d = a[b];
                return j(d[0], d[1]);
            case 2:
                d = a[b];
                var e = a[b + 1 | 0];
                e = e;
                d = d;
                return {k: e[0], v: e[1], h: 2, l: j(d[0], d[1]), r: void 0};
            case 3:
                e = a[b];
                d = a[b + 1 | 0];
                var f = a[b + 2 | 0];
                f = f;
                d = d;
                e = e;
                return {k: d[0], v: d[1], h: 2, l: j(e[0], e[1]), r: j(f[0], f[1])};
            default:
                d = c / 2 | 0;
                e = S(a, b, d);
                f = a[b + d | 0];
                a = S(a, (b + d | 0) + 1 | 0, (c - d | 0) - 1 | 0);
                return i(e, f[0], f[1], a)
        }
    }

    function ra(a) {
        return S(a, 0, a.length)
    }

    function T(a, b, c, d) {
        var e = L(a), f = L(b);
        if (e === f) {
            a = v(a, 0);
            b = v(b, 0);
            while (!0) {
                var g = b, h = a;
                if (!h) return 0;
                if (!g) return 0;
                var i = g.hd, j = h.hd, k = c(j.k, i.k);
                if (k !== 0) return k;
                k = d(j.v, i.v);
                if (k !== 0) return k;
                b = v(i.r, g.tl);
                a = v(j.r, h.tl);
                continue
            }
        } else if (e < f) return -1; else return 1
    }

    function sa(a, c, d, e) {
        return T(a, c, d, b("bs_curry").__2(e))
    }

    function U(a, b, c, d) {
        var e = L(a), f = L(b);
        if (e === f) {
            e = v(a, 0);
            f = v(b, 0);
            while (!0) {
                a = f;
                b = e;
                if (!b) return !0;
                if (!a) return !0;
                var g = a.hd, h = b.hd;
                if (!(c(h.k, g.k) === 0 && d(h.v, g.v))) return !1;
                f = v(g.r, a.tl);
                e = v(h.r, b.tl);
                continue
            }
        } else return !1
    }

    function ta(a, c, d, e) {
        return U(a, c, d, b("bs_curry").__2(e))
    }

    function ua(c, d, a) {
        while (!0) {
            var e = c;
            if (e === void 0) return;
            var f = e.k;
            f = a(d, f);
            if (f === 0) return b("bs_caml_option").some(e.v);
            c = f < 0 ? e.l : e.r;
            continue
        }
    }

    function va(b, c, a) {
        while (!0) {
            var d = b;
            if (d === void 0) return;
            var e = d.k;
            e = a(c, e);
            if (e === 0) return d.v;
            b = e < 0 ? d.l : d.r;
            continue
        }
    }

    function wa(b, c, a) {
        while (!0) {
            var d = b;
            if (d !== void 0) {
                var e = d.k;
                e = a(c, e);
                if (e === 0) return d.v;
                b = e < 0 ? d.l : d.r;
                continue
            }
            throw new Error("getExn0")
        }
    }

    function xa(b, c, d, a) {
        while (!0) {
            var e = b;
            if (e === void 0) return d;
            var f = e.k;
            f = a(c, f);
            if (f === 0) return e.v;
            b = f < 0 ? e.l : e.r;
            continue
        }
    }

    function ya(b, c, a) {
        while (!0) {
            var d = b;
            if (d === void 0) return !1;
            var e = d.k;
            e = a(c, e);
            if (e === 0) return !0;
            b = e < 0 ? d.l : d.r;
            continue
        }
    }

    function V(a) {
        var b = a.l;
        a.l = b.r;
        b.r = a;
        var c = g(a.l), d = g(a.r);
        a.h = (c > d ? c : d) + 1 | 0;
        c = g(b.l);
        d = a.h;
        b.h = (c > d ? c : d) + 1 | 0;
        return b
    }

    function W(a) {
        var b = a.r;
        a.r = b.l;
        b.l = a;
        var c = g(a.l), d = g(a.r);
        a.h = (c > d ? c : d) + 1 | 0;
        c = g(b.r);
        d = a.h;
        b.h = (c > d ? c : d) + 1 | 0;
        return b
    }

    function za(a) {
        var b = a.l;
        b = W(b);
        a.l = b;
        return V(a)
    }

    function Aa(a) {
        var b = a.r;
        b = V(b);
        a.r = b;
        return W(a)
    }

    function X(a) {
        var b = g(a.l), c = g(a.r);
        a.h = (b > c ? b : c) + 1 | 0;
        return a
    }

    function Y(a) {
        var b = a.l, c = a.r, d = g(b), e = g(c);
        if (d > (2 + e | 0)) {
            var f = b.l;
            b = b.r;
            if (k(f, b)) return X(V(a)); else return X(za(a))
        }
        if (e > (2 + d | 0)) {
            f = c.l;
            b = c.r;
            if (k(b, f)) return X(W(a)); else return X(Aa(a))
        }
        a.h = (d > e ? d : e) + 1 | 0;
        return a
    }

    function Z(b, c, d, a) {
        if (b === void 0) return j(c, d);
        var e = b.k;
        e = a(c, e);
        if (e === 0) {
            b.v = d;
            return b
        }
        var f = b.l, g = b.r;
        if (e < 0) {
            e = Z(f, c, d, a);
            b.l = e
        } else b.r = Z(g, c, d, a);
        return Y(b)
    }

    function Ba(c, a) {
        var d = c.length;
        if (d === 0) return;
        var e = b("bs_belt_SortArray").strictlySortedLengthU(c, function (b, c) {
            return a(b[0], c[0]) < 0
        }), f;
        e >= 0 ? f = S(c, 0, e) : (e = -e | 0, f = R(c, e - 1 | 0, e));
        for (var e = e; e < d; ++e) {
            var g = c[e];
            f = Z(f, g[0], g[1], a)
        }
        return f
    }

    function $(a, b) {
        var c = b.r, d = b.l;
        if (d !== void 0) {
            b.l = $(a, d);
            return Y(b)
        } else {
            a.k = b.k;
            a.v = b.v;
            return c
        }
    }

    f.copy = h;
    f.create = i;
    f.bal = l;
    f.singleton = j;
    f.updateValue = a;
    f.minKey = c;
    f.minKeyUndefined = d;
    f.maxKey = e;
    f.maxKeyUndefined = o;
    f.minimum = q;
    f.minUndefined = r;
    f.maximum = t;
    f.maxUndefined = aa;
    f.removeMinAuxWithRef = u;
    f.isEmpty = ba;
    f.stackAllLeft = v;
    f.findFirstByU = w;
    f.findFirstBy = ca;
    f.forEachU = x;
    f.forEach = da;
    f.mapU = y;
    f.map = ea;
    f.mapWithKeyU = z;
    f.mapWithKey = fa;
    f.reduceU = A;
    f.reduce = ga;
    f.everyU = B;
    f.every = ha;
    f.someU = C;
    f.some = ia;
    f.join = F;
    f.concat = G;
    f.concatOrJoin = ja;
    f.keepSharedU = H;
    f.keepShared = ka;
    f.keepMapU = I;
    f.keepMap = la;
    f.partitionSharedU = J;
    f.partitionShared = ma;
    f.lengthNode = K;
    f.size = L;
    f.toList = na;
    f.checkInvariantInternal = N;
    f.fillArray = Q;
    f.toArray = oa;
    f.keysToArray = pa;
    f.valuesToArray = qa;
    f.fromSortedArrayAux = S;
    f.fromSortedArrayRevAux = R;
    f.fromSortedArrayUnsafe = ra;
    f.cmpU = T;
    f.cmp = sa;
    f.eqU = U;
    f.eq = ta;
    f.get = ua;
    f.getUndefined = va;
    f.getWithDefault = xa;
    f.getExn = wa;
    f.has = ya;
    f.fromArray = Ba;
    f.updateMutate = Z;
    f.balMutate = Y;
    f.removeMinAuxWithRootMutate = $
}), null);
__d("bs_belt_MapDict", ["bs_curry", "bs_caml_option", "bs_belt_internalAVLtree"], (function (a, b, c, d, e, f) {
    "use strict";
    var g;

    function h(c, d, e, a) {
        if (c === void 0) return b("bs_belt_internalAVLtree").singleton(d, e);
        var f = c.k, g = a(d, f);
        if (g === 0) return b("bs_belt_internalAVLtree").updateValue(c, e);
        var i = c.l, j = c.r;
        c = c.v;
        if (g < 0) return b("bs_belt_internalAVLtree").bal(h(i, d, e, a), f, c, j); else return b("bs_belt_internalAVLtree").bal(i, f, c, h(j, d, e, a))
    }

    function i(c, d, e, a) {
        if (c !== void 0) {
            var f = c.k, g = a(d, f);
            if (g === 0) {
                var h = e(b("bs_caml_option").some(c.v));
                if (h !== void 0) return b("bs_belt_internalAVLtree").updateValue(c, b("bs_caml_option").valFromOption(h));
                h = c.l;
                var j = c.r;
                if (h === void 0) return j;
                if (j === void 0) return h;
                var k = {contents: j.k}, l = {contents: j.v};
                j = b("bs_belt_internalAVLtree").removeMinAuxWithRef(j, k, l);
                return b("bs_belt_internalAVLtree").bal(h, k.contents, l.contents, j)
            }
            h = c.l;
            k = c.r;
            l = c.v;
            if (g < 0) {
                j = i(h, d, e, a);
                if (h === j) return c; else return b("bs_belt_internalAVLtree").bal(j, f, l, k)
            }
            g = i(k, d, e, a);
            if (k === g) return c; else return b("bs_belt_internalAVLtree").bal(h, f, l, g)
        }
        j = e(void 0);
        if (j !== void 0) return b("bs_belt_internalAVLtree").singleton(d, b("bs_caml_option").valFromOption(j)); else return c
    }

    function a(c, d, e, a) {
        return i(c, d, b("bs_curry").__1(e), a)
    }

    function j(c, d, a) {
        var e = c.k, f = c.l, g = c.r, h = a(d, e);
        if (h === 0) {
            if (f === void 0) return g;
            if (g === void 0) return f;
            var i = {contents: g.k}, k = {contents: g.v}, l = b("bs_belt_internalAVLtree").removeMinAuxWithRef(g, i, k);
            return b("bs_belt_internalAVLtree").bal(f, i.contents, k.contents, l)
        }
        if (h < 0) {
            if (f === void 0) return c;
            i = j(f, d, a);
            if (i === f) return c; else return b("bs_belt_internalAVLtree").bal(i, e, c.v, g)
        }
        if (g === void 0) return c;
        k = j(g, d, a);
        if (k === g) return c; else return b("bs_belt_internalAVLtree").bal(f, e, c.v, k)
    }

    function c(b, c, a) {
        if (b !== void 0) return j(b, c, a)
    }

    function d(b, c, a) {
        var d = c.length;
        b = b;
        for (var e = 0; e < d; ++e) {
            var f = c[e];
            b = h(b, f[0], f[1], a)
        }
        return b
    }

    function k(c, d, e, a) {
        var f = c.k, g = c.v, h = c.l, i = c.r, j = a(d, f);
        if (j === 0) {
            e.contents = b("bs_caml_option").some(g);
            return [h, i]
        }
        if (j < 0) {
            if (h === void 0) return [void 0, c];
            j = k(h, d, e, a);
            return [j[0], b("bs_belt_internalAVLtree").join(j[1], f, g, i)]
        }
        if (i === void 0) return [c, void 0];
        j = k(i, d, e, a);
        return [b("bs_belt_internalAVLtree").join(h, f, g, j[0]), j[1]]
    }

    function e(b, c, a) {
        if (b === void 0) return [[void 0, void 0], void 0];
        var d = {contents: void 0};
        b = k(b, c, d, a);
        return [b, d.contents]
    }

    function l(c, d, e, a) {
        if (c === void 0) if (d !== void 0) return b("bs_belt_internalAVLtree").keepMapU(d, function (a, c) {
            return e(a, void 0, b("bs_caml_option").some(c))
        }); else return;
        if (d === void 0) return b("bs_belt_internalAVLtree").keepMapU(c, function (a, c) {
            return e(a, b("bs_caml_option").some(c), void 0)
        });
        if (c.h >= d.h) {
            var f = c.k, g = c.v, h = c.l, i = c.r, j = {contents: void 0}, m = k(d, f, j, a);
            j = j.contents;
            h = l(h, m[0], e, a);
            g = e(f, b("bs_caml_option").some(g), j);
            j = l(i, m[1], e, a);
            return b("bs_belt_internalAVLtree").concatOrJoin(h, f, g, j)
        }
        i = d.k;
        m = d.v;
        h = d.l;
        f = d.r;
        g = {contents: void 0};
        j = k(c, i, g, a);
        d = g.contents;
        c = l(j[0], h, e, a);
        g = e(i, d, b("bs_caml_option").some(m));
        h = l(j[1], f, e, a);
        return b("bs_belt_internalAVLtree").concatOrJoin(c, i, g, h)
    }

    function m(c, d, e, a) {
        return l(c, d, b("bs_curry").__3(e), a)
    }

    function n(b, c, a) {
        var d = c.length;
        if (b !== void 0) {
            b = b;
            var e = 0;
            while (!0) {
                var f = e, g = b;
                if (f >= d) return g;
                var h = c[f];
                g = j(g, h, a);
                if (g === void 0) return g;
                e = f + 1 | 0;
                b = g;
                continue
            }
        }
    }

    var o, p = (g = b("bs_belt_internalAVLtree")).isEmpty, q = g.has, r = g.cmpU, s = g.cmp, t = g.eqU, u = g.eq,
        v = g.findFirstByU, w = g.findFirstBy, x = g.forEachU, y = g.forEach, z = g.reduceU, A = g.reduce, B = g.everyU,
        C = g.every, D = g.someU, E = g.some, F = g.size, G = g.toList, H = g.toArray, I = g.fromArray,
        J = g.keysToArray, K = g.valuesToArray, L = g.minKey, M = g.minKeyUndefined, N = g.maxKey,
        O = g.maxKeyUndefined, P = g.minimum, Q = g.minUndefined, R = g.maximum, S = g.maxUndefined, T = g.get,
        U = g.getUndefined, V = g.getWithDefault, W = g.getExn, X = g.checkInvariantInternal, Y = g.keepSharedU,
        Z = g.keepShared, $ = g.partitionSharedU, aa = g.partitionShared, ba = g.mapU, ca = g.map, da = g.mapWithKeyU;
    g = g.mapWithKey;
    f.empty = o;
    f.isEmpty = p;
    f.has = q;
    f.cmpU = r;
    f.cmp = s;
    f.eqU = t;
    f.eq = u;
    f.findFirstByU = v;
    f.findFirstBy = w;
    f.forEachU = x;
    f.forEach = y;
    f.reduceU = z;
    f.reduce = A;
    f.everyU = B;
    f.every = C;
    f.someU = D;
    f.some = E;
    f.size = F;
    f.toList = G;
    f.toArray = H;
    f.fromArray = I;
    f.keysToArray = J;
    f.valuesToArray = K;
    f.minKey = L;
    f.minKeyUndefined = M;
    f.maxKey = N;
    f.maxKeyUndefined = O;
    f.minimum = P;
    f.minUndefined = Q;
    f.maximum = R;
    f.maxUndefined = S;
    f.get = T;
    f.getUndefined = U;
    f.getWithDefault = V;
    f.getExn = W;
    f.checkInvariantInternal = X;
    f.remove = c;
    f.removeMany = n;
    f.set = h;
    f.updateU = i;
    f.update = a;
    f.mergeU = l;
    f.merge = m;
    f.mergeMany = d;
    f.keepU = Y;
    f.keep = Z;
    f.partitionU = $;
    f.partition = aa;
    f.split = e;
    f.mapU = ba;
    f.map = ca;
    f.mapWithKeyU = da;
    f.mapWithKey = g
}), null);
__d("bs_belt_Map", ["bs_curry", "bs_belt_MapDict"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a, c) {
        c = c.cmp;
        return {cmp: c, data: b("bs_belt_MapDict").fromArray(a, c)}
    }

    function c(c, d) {
        var e = c.data, a = c.cmp;
        d = b("bs_belt_MapDict").remove(e, d, a);
        if (d === e) return c; else return {cmp: a, data: d}
    }

    function d(c, d) {
        var a = c.cmp;
        c = b("bs_belt_MapDict").removeMany(c.data, d, a);
        return {cmp: a, data: c}
    }

    function e(c, d, e) {
        var a = c.cmp;
        return {cmp: a, data: b("bs_belt_MapDict").set(c.data, d, e, a)}
    }

    function g(c, d) {
        var a = c.cmp;
        return {cmp: a, data: b("bs_belt_MapDict").mergeMany(c.data, d, a)}
    }

    function h(c, d, e) {
        var a = c.cmp;
        return {cmp: a, data: b("bs_belt_MapDict").updateU(c.data, d, e, a)}
    }

    function i(a, c, d) {
        return h(a, c, b("bs_curry").__1(d))
    }

    function j(c, d) {
        var a = c.cmp;
        c = b("bs_belt_MapDict").split(c.data, d, a);
        d = c[0];
        return [[{cmp: a, data: d[0]}, {cmp: a, data: d[1]}], c[1]]
    }

    function k(c, d, e) {
        var a = c.cmp;
        return {cmp: a, data: b("bs_belt_MapDict").mergeU(c.data, d.data, e, a)}
    }

    function l(a, c, d) {
        return k(a, c, b("bs_curry").__3(d))
    }

    function m(a) {
        return {cmp: a.cmp, data: void 0}
    }

    function n(a) {
        return b("bs_belt_MapDict").isEmpty(a.data)
    }

    function o(a, c) {
        return b("bs_belt_MapDict").findFirstByU(a.data, c)
    }

    function p(a, c) {
        return b("bs_belt_MapDict").findFirstByU(a.data, b("bs_curry").__2(c))
    }

    function q(a, c) {
        return b("bs_belt_MapDict").forEachU(a.data, c)
    }

    function r(a, c) {
        return b("bs_belt_MapDict").forEachU(a.data, b("bs_curry").__2(c))
    }

    function s(a, c, d) {
        return b("bs_belt_MapDict").reduceU(a.data, c, d)
    }

    function t(a, c, d) {
        return s(a, c, b("bs_curry").__3(d))
    }

    function u(a, c) {
        return b("bs_belt_MapDict").everyU(a.data, c)
    }

    function v(a, c) {
        return b("bs_belt_MapDict").everyU(a.data, b("bs_curry").__2(c))
    }

    function w(a, c) {
        return b("bs_belt_MapDict").someU(a.data, c)
    }

    function x(a, c) {
        return b("bs_belt_MapDict").someU(a.data, b("bs_curry").__2(c))
    }

    function y(a, c) {
        return {cmp: a.cmp, data: b("bs_belt_MapDict").keepU(a.data, c)}
    }

    function z(a, c) {
        return y(a, b("bs_curry").__2(c))
    }

    function A(c, d) {
        var a = c.cmp;
        c = b("bs_belt_MapDict").partitionU(c.data, d);
        return [{cmp: a, data: c[0]}, {cmp: a, data: c[1]}]
    }

    function B(a, c) {
        return A(a, b("bs_curry").__2(c))
    }

    function C(a, c) {
        return {cmp: a.cmp, data: b("bs_belt_MapDict").mapU(a.data, c)}
    }

    function D(a, c) {
        return C(a, b("bs_curry").__1(c))
    }

    function E(a, c) {
        return {cmp: a.cmp, data: b("bs_belt_MapDict").mapWithKeyU(a.data, c)}
    }

    function F(a, c) {
        return E(a, b("bs_curry").__2(c))
    }

    function G(a) {
        return b("bs_belt_MapDict").size(a.data)
    }

    function H(a) {
        return b("bs_belt_MapDict").toList(a.data)
    }

    function I(a) {
        return b("bs_belt_MapDict").toArray(a.data)
    }

    function J(a) {
        return b("bs_belt_MapDict").keysToArray(a.data)
    }

    function K(a) {
        return b("bs_belt_MapDict").valuesToArray(a.data)
    }

    function L(a) {
        return b("bs_belt_MapDict").minKey(a.data)
    }

    function M(a) {
        return b("bs_belt_MapDict").minKeyUndefined(a.data)
    }

    function N(a) {
        return b("bs_belt_MapDict").maxKey(a.data)
    }

    function O(a) {
        return b("bs_belt_MapDict").maxKeyUndefined(a.data)
    }

    function P(a) {
        return b("bs_belt_MapDict").minimum(a.data)
    }

    function Q(a) {
        return b("bs_belt_MapDict").minUndefined(a.data)
    }

    function R(a) {
        return b("bs_belt_MapDict").maximum(a.data)
    }

    function S(a) {
        return b("bs_belt_MapDict").maxUndefined(a.data)
    }

    function T(a, c) {
        return b("bs_belt_MapDict").get(a.data, c, a.cmp)
    }

    function U(a, c) {
        return b("bs_belt_MapDict").getUndefined(a.data, c, a.cmp)
    }

    function V(a, c, d) {
        return b("bs_belt_MapDict").getWithDefault(a.data, c, d, a.cmp)
    }

    function W(a, c) {
        return b("bs_belt_MapDict").getExn(a.data, c, a.cmp)
    }

    function X(a, c) {
        return b("bs_belt_MapDict").has(a.data, c, a.cmp)
    }

    function Y(a) {
        return b("bs_belt_MapDict").checkInvariantInternal(a.data)
    }

    function Z(a, c, d) {
        return b("bs_belt_MapDict").eqU(a.data, c.data, a.cmp, d)
    }

    function aa(a, c, d) {
        return Z(a, c, b("bs_curry").__2(d))
    }

    function $(a, c, d) {
        return b("bs_belt_MapDict").cmpU(a.data, c.data, a.cmp, d)
    }

    function ba(a, c, d) {
        return $(a, c, b("bs_curry").__2(d))
    }

    function ca(a) {
        return a.data
    }

    function da(a) {
        a = a.cmp;
        return {cmp: a}
    }

    function ea(a, b) {
        return {cmp: a.cmp, data: b}
    }

    var fa, ga, ha;
    f.Int = fa;
    f.$$String = ga;
    f.Dict = ha;
    f.make = m;
    f.isEmpty = n;
    f.has = X;
    f.cmpU = $;
    f.cmp = ba;
    f.eqU = Z;
    f.eq = aa;
    f.findFirstByU = o;
    f.findFirstBy = p;
    f.forEachU = q;
    f.forEach = r;
    f.reduceU = s;
    f.reduce = t;
    f.everyU = u;
    f.every = v;
    f.someU = w;
    f.some = x;
    f.size = G;
    f.toArray = I;
    f.toList = H;
    f.fromArray = a;
    f.keysToArray = J;
    f.valuesToArray = K;
    f.minKey = L;
    f.minKeyUndefined = M;
    f.maxKey = N;
    f.maxKeyUndefined = O;
    f.minimum = P;
    f.minUndefined = Q;
    f.maximum = R;
    f.maxUndefined = S;
    f.get = T;
    f.getUndefined = U;
    f.getWithDefault = V;
    f.getExn = W;
    f.remove = c;
    f.removeMany = d;
    f.set = e;
    f.updateU = h;
    f.update = i;
    f.mergeMany = g;
    f.mergeU = k;
    f.merge = l;
    f.keepU = y;
    f.keep = z;
    f.partitionU = A;
    f.partition = B;
    f.split = j;
    f.mapU = C;
    f.map = D;
    f.mapWithKeyU = E;
    f.mapWithKey = F;
    f.getData = ca;
    f.getId = da;
    f.packIdData = ea;
    f.checkInvariantInternal = Y
}), null);
__d("bs_belt_internalMapString", ["bs_curry", "bs_caml_option", "bs_belt_SortArray", "bs_caml_primitive", "bs_belt_internalAVLtree"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a, c, d) {
        if (a === void 0) return b("bs_belt_internalAVLtree").singleton(c, d);
        var e = a.k;
        if (c === e) return b("bs_belt_internalAVLtree").updateValue(a, d);
        var f = a.v;
        if (c < e) return b("bs_belt_internalAVLtree").bal(g(a.l, c, d), e, f, a.r); else return b("bs_belt_internalAVLtree").bal(a.l, e, f, g(a.r, c, d))
    }

    function a(a, c) {
        while (!0) {
            var d = a;
            if (d === void 0) return;
            var e = d.k;
            if (c === e) return b("bs_caml_option").some(d.v);
            a = c < e ? d.l : d.r;
            continue
        }
    }

    function c(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return;
            var d = c.k;
            if (b === d) return c.v;
            a = b < d ? c.l : c.r;
            continue
        }
    }

    function d(a, b) {
        while (!0) {
            var c = a;
            if (c !== void 0) {
                var d = c.k;
                if (b === d) return c.v;
                a = b < d ? c.l : c.r;
                continue
            }
            throw new Error("getExn")
        }
    }

    function e(a, b, c) {
        while (!0) {
            var d = a;
            if (d === void 0) return c;
            var e = d.k;
            if (b === e) return d.v;
            a = b < e ? d.l : d.r;
            continue
        }
    }

    function h(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !1;
            var d = c.k;
            if (b === d) return !0;
            a = b < d ? c.l : c.r;
            continue
        }
    }

    function i(a, c) {
        if (a === void 0) return a;
        var d = a.k, e = a.l, f = a.r;
        if (c !== d) if (c < d) return b("bs_belt_internalAVLtree").bal(i(e, c), d, a.v, f); else return b("bs_belt_internalAVLtree").bal(e, d, a.v, i(f, c));
        if (e === void 0) return f;
        if (f === void 0) return e;
        d = {contents: f.k};
        a = {contents: f.v};
        c = b("bs_belt_internalAVLtree").removeMinAuxWithRef(f, d, a);
        return b("bs_belt_internalAVLtree").bal(e, d.contents, a.contents, c)
    }

    function j(a, c) {
        var d = c.k, e = c.v, f = c.l, g = c.r;
        if (a === d) return [f, b("bs_caml_option").some(e), g];
        if (a < d) {
            if (f === void 0) return [void 0, void 0, c];
            var h = j(a, f);
            return [h[0], h[1], b("bs_belt_internalAVLtree").join(h[2], d, e, g)]
        }
        if (g === void 0) return [c, void 0, void 0];
        h = j(a, g);
        return [b("bs_belt_internalAVLtree").join(f, d, e, h[0]), h[1], h[2]]
    }

    function k(a, b) {
        if (b !== void 0) return j(a, b); else return [void 0, void 0, void 0]
    }

    function l(a, c, d) {
        if (a !== void 0) {
            if (a.h >= (c !== void 0 ? c.h : 0)) {
                var e = a.k, f = a.v, g = a.l, h = a.r, i = k(e, c);
                return b("bs_belt_internalAVLtree").concatOrJoin(l(g, i[0], d), e, d(e, b("bs_caml_option").some(f), i[1]), l(h, i[2], d))
            }
        } else if (c === void 0) return;
        g = c.k;
        e = c.v;
        f = c.l;
        h = c.r;
        i = k(g, a);
        return b("bs_belt_internalAVLtree").concatOrJoin(l(i[0], f, d), g, d(g, i[1], b("bs_caml_option").some(e)), l(i[2], h, d))
    }

    function m(a, c, d) {
        return l(a, c, b("bs_curry").__3(d))
    }

    function n(a, c, d) {
        while (!0) {
            var e = c, f = a;
            if (!f) return 0;
            if (!e) return 0;
            var g = e.hd, h = f.hd, i = b("bs_caml_primitive").caml_string_compare(h.k, g.k);
            if (i !== 0) return i;
            i = d(h.v, g.v);
            if (i !== 0) return i;
            c = b("bs_belt_internalAVLtree").stackAllLeft(g.r, e.tl);
            a = b("bs_belt_internalAVLtree").stackAllLeft(h.r, f.tl);
            continue
        }
    }

    function o(c, d, a) {
        var e = b("bs_belt_internalAVLtree").size(c), f = b("bs_belt_internalAVLtree").size(d);
        if (e === f) return n(b("bs_belt_internalAVLtree").stackAllLeft(c, 0), b("bs_belt_internalAVLtree").stackAllLeft(d, 0), a); else if (e < f) return -1; else return 1
    }

    function p(a, c, d) {
        return o(a, c, b("bs_curry").__2(d))
    }

    function q(c, d, a) {
        while (!0) {
            var e = d, f = c;
            if (!f) return !0;
            if (!e) return !0;
            var g = e.hd, h = f.hd;
            if (!(h.k === g.k && a(h.v, g.v))) return !1;
            d = b("bs_belt_internalAVLtree").stackAllLeft(g.r, e.tl);
            c = b("bs_belt_internalAVLtree").stackAllLeft(h.r, f.tl);
            continue
        }
    }

    function r(c, d, a) {
        var e = b("bs_belt_internalAVLtree").size(c), f = b("bs_belt_internalAVLtree").size(d);
        if (e === f) return q(b("bs_belt_internalAVLtree").stackAllLeft(c, 0), b("bs_belt_internalAVLtree").stackAllLeft(d, 0), a); else return !1
    }

    function s(a, c, d) {
        return r(a, c, b("bs_curry").__2(d))
    }

    function t(a, c, d) {
        if (a === void 0) return b("bs_belt_internalAVLtree").singleton(c, d);
        var e = a.k;
        if (c === e) {
            a.k = c;
            a.v = d;
            return a
        }
        var f = a.l, g = a.r;
        if (c < e) {
            e = t(f, c, d);
            a.l = e
        } else a.r = t(g, c, d);
        return b("bs_belt_internalAVLtree").balMutate(a)
    }

    function u(a) {
        var c = a.length;
        if (c === 0) return;
        var d = b("bs_belt_SortArray").strictlySortedLengthU(a, function (a, b) {
            return a[0] < b[0]
        }), e;
        d >= 0 ? e = b("bs_belt_internalAVLtree").fromSortedArrayAux(a, 0, d) : (d = -d | 0, e = b("bs_belt_internalAVLtree").fromSortedArrayRevAux(a, d - 1 | 0, d));
        for (var d = d; d < c; ++d) {
            var f = a[d];
            e = t(e, f[0], f[1])
        }
        return e
    }

    var v, w, x;
    f.N = v;
    f.A = w;
    f.S = x;
    f.add = g;
    f.get = a;
    f.getUndefined = c;
    f.getExn = d;
    f.getWithDefault = e;
    f.has = h;
    f.remove = i;
    f.splitAux = j;
    f.split = k;
    f.mergeU = l;
    f.merge = m;
    f.compareAux = n;
    f.cmpU = o;
    f.cmp = p;
    f.eqAux = q;
    f.eqU = r;
    f.eq = s;
    f.addMutate = t;
    f.fromArray = u
}), null);
__d("bs_belt_MapString", ["bs_curry", "bs_caml_option", "bs_belt_internalAVLtree", "bs_belt_internalMapString"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h;

    function i(a, c, d) {
        if (a === void 0) return b("bs_belt_internalAVLtree").singleton(c, d);
        var e = a.k;
        if (c === e) return b("bs_belt_internalAVLtree").updateValue(a, d);
        var f = a.v;
        if (c < e) return b("bs_belt_internalAVLtree").bal(i(a.l, c, d), e, f, a.r); else return b("bs_belt_internalAVLtree").bal(a.l, e, f, i(a.r, c, d))
    }

    function j(a, c, d) {
        if (a !== void 0) {
            var e = a.k;
            if (c === e) {
                var f = d(b("bs_caml_option").some(a.v));
                if (f !== void 0) return b("bs_belt_internalAVLtree").updateValue(a, b("bs_caml_option").valFromOption(f));
                f = a.l;
                var g = a.r;
                if (f === void 0) return g;
                if (g === void 0) return f;
                var h = {contents: g.k}, i = {contents: g.v};
                g = b("bs_belt_internalAVLtree").removeMinAuxWithRef(g, h, i);
                return b("bs_belt_internalAVLtree").bal(f, h.contents, i.contents, g)
            }
            f = a.v;
            h = a.l;
            i = a.r;
            if (c < e) {
                g = j(h, c, d);
                if (h === g) return a; else return b("bs_belt_internalAVLtree").bal(g, e, f, i)
            }
            g = j(i, c, d);
            if (i === g) return a; else return b("bs_belt_internalAVLtree").bal(h, e, f, g)
        }
        i = d(void 0);
        if (i !== void 0) return b("bs_belt_internalAVLtree").singleton(c, b("bs_caml_option").valFromOption(i)); else return a
    }

    function a(a, c, d) {
        return j(a, c, b("bs_curry").__1(d))
    }

    function k(a, c) {
        var d = a.k, e = a.l, f = a.r;
        if (c === d) {
            if (e === void 0) return f;
            if (f === void 0) return e;
            var g = {contents: f.k}, h = {contents: f.v}, i = b("bs_belt_internalAVLtree").removeMinAuxWithRef(f, g, h);
            return b("bs_belt_internalAVLtree").bal(e, g.contents, h.contents, i)
        }
        if (c < d) {
            if (e === void 0) return a;
            g = k(e, c);
            if (g === e) return a; else return b("bs_belt_internalAVLtree").bal(g, d, a.v, f)
        }
        if (f === void 0) return a;
        h = k(f, c);
        return b("bs_belt_internalAVLtree").bal(e, d, a.v, h)
    }

    function c(a, b) {
        if (a !== void 0) return k(a, b)
    }

    function d(a, b) {
        var c = b.length;
        if (a !== void 0) {
            a = a;
            var d = 0;
            while (!0) {
                var e = d, f = a;
                if (e >= c) return f;
                var g = b[e];
                f = k(f, g);
                if (f === void 0) return f;
                d = e + 1 | 0;
                a = f;
                continue
            }
        }
    }

    function e(a, b) {
        var c = b.length;
        a = a;
        for (var d = 0; d < c; ++d) {
            var e = b[d];
            a = i(a, e[0], e[1])
        }
        return a
    }

    var l, m = (g = b("bs_belt_internalAVLtree")).isEmpty, n = (h = b("bs_belt_internalMapString")).has, o = h.cmpU,
        p = h.cmp, q = h.eqU, r = h.eq, s = g.findFirstByU, t = g.findFirstBy, u = g.forEachU, v = g.forEach,
        w = g.reduceU, x = g.reduce, y = g.everyU, z = g.every, A = g.someU, B = g.some, C = g.size, D = g.toList,
        E = g.toArray, F = h.fromArray, G = g.keysToArray, H = g.valuesToArray, I = g.minKey, J = g.minKeyUndefined,
        K = g.maxKey, L = g.maxKeyUndefined, M = g.minimum, N = g.minUndefined, O = g.maximum, P = g.maxUndefined,
        Q = h.get, R = h.getUndefined, S = h.getWithDefault, T = h.getExn, U = g.checkInvariantInternal, V = h.mergeU,
        W = h.merge, X = g.keepSharedU, Y = g.keepShared, Z = g.partitionSharedU, $ = g.partitionShared;
    h = h.split;
    var aa = g.mapU, ba = g.map, ca = g.mapWithKeyU;
    g = g.mapWithKey;
    f.empty = l;
    f.isEmpty = m;
    f.has = n;
    f.cmpU = o;
    f.cmp = p;
    f.eqU = q;
    f.eq = r;
    f.findFirstByU = s;
    f.findFirstBy = t;
    f.forEachU = u;
    f.forEach = v;
    f.reduceU = w;
    f.reduce = x;
    f.everyU = y;
    f.every = z;
    f.someU = A;
    f.some = B;
    f.size = C;
    f.toList = D;
    f.toArray = E;
    f.fromArray = F;
    f.keysToArray = G;
    f.valuesToArray = H;
    f.minKey = I;
    f.minKeyUndefined = J;
    f.maxKey = K;
    f.maxKeyUndefined = L;
    f.minimum = M;
    f.minUndefined = N;
    f.maximum = O;
    f.maxUndefined = P;
    f.get = Q;
    f.getUndefined = R;
    f.getWithDefault = S;
    f.getExn = T;
    f.checkInvariantInternal = U;
    f.remove = c;
    f.removeMany = d;
    f.set = i;
    f.updateU = j;
    f.update = a;
    f.mergeU = V;
    f.merge = W;
    f.mergeMany = e;
    f.keepU = X;
    f.keep = Y;
    f.partitionU = Z;
    f.partition = $;
    f.split = h;
    f.mapU = aa;
    f.map = ba;
    f.mapWithKeyU = ca;
    f.mapWithKey = g
}), null);
__d("bs_belt_internalAVLset", ["bs_curry", "bs_caml_option", "bs_belt_SortArray"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        if (a !== void 0) return a.h; else return 0
    }

    function h(a) {
        if (a !== void 0) return {v: a.v, h: a.h, l: h(a.l), r: h(a.r)}; else return a
    }

    function i(a, b, c) {
        var d = a !== void 0 ? a.h : 0, e = c !== void 0 ? c.h : 0;
        return {v: b, h: d >= e ? d + 1 | 0 : e + 1 | 0, l: a, r: c}
    }

    function j(a) {
        return {v: a, h: 1, l: void 0, r: void 0}
    }

    function k(a, b) {
        if (b !== void 0) if (a !== void 0) return a.h >= b.h; else return !1; else return !0
    }

    function l(a, b, c) {
        var d = a !== void 0 ? a.h : 0, e = c !== void 0 ? c.h : 0;
        if (d > (e + 2 | 0)) {
            var f = a.l, g = a.r;
            if (k(f, g)) return i(f, a.v, i(g, b, c)); else return i(i(f, a.v, g.l), g.v, i(g.r, b, c))
        }
        if (e <= (d + 2 | 0)) return {v: b, h: d >= e ? d + 1 | 0 : e + 1 | 0, l: a, r: c};
        f = c.l;
        g = c.r;
        if (k(g, f)) return i(i(a, b, f), c.v, g); else return i(i(a, b, f.l), f.v, i(f.r, c.v, g))
    }

    function m(a) {
        while (!0) {
            var b = a, c = b.l;
            if (c === void 0) return b.v;
            a = c;
            continue
        }
    }

    function a(a) {
        if (a !== void 0) return b("bs_caml_option").some(m(a))
    }

    function c(a) {
        if (a !== void 0) return m(a)
    }

    function n(a) {
        while (!0) {
            var b = a, c = b.r;
            if (c === void 0) return b.v;
            a = c;
            continue
        }
    }

    function d(a) {
        if (a !== void 0) return b("bs_caml_option").some(n(a))
    }

    function e(a) {
        if (a !== void 0) return n(a)
    }

    function o(a, b) {
        var c = a.l;
        if (c !== void 0) return l(o(c, b), a.v, a.r); else {
            b.contents = a.v;
            return a.r
        }
    }

    function p(a) {
        return a === void 0
    }

    function q(a, b) {
        while (!0) {
            var c = b, d = a;
            if (d === void 0) return c;
            b = {hd: d, tl: c};
            a = d.l;
            continue
        }
    }

    function r(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return;
            r(c.l, b);
            b(c.v);
            a = c.r;
            continue
        }
    }

    function s(a, c) {
        return r(a, b("bs_curry").__1(c))
    }

    function t(a, b, c) {
        while (!0) {
            var d = b, e = a;
            if (e === void 0) return d;
            b = c(t(e.l, d, c), e.v);
            a = e.r;
            continue
        }
    }

    function u(a, c, d) {
        return t(a, c, b("bs_curry").__2(d))
    }

    function v(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !0;
            if (!b(c.v)) return !1;
            if (!v(c.l, b)) return !1;
            a = c.r;
            continue
        }
    }

    function w(a, c) {
        return v(a, b("bs_curry").__1(c))
    }

    function x(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !1;
            if (b(c.v)) return !0;
            if (x(c.l, b)) return !0;
            a = c.r;
            continue
        }
    }

    function y(a, c) {
        return x(a, b("bs_curry").__1(c))
    }

    function z(a, b) {
        if (a !== void 0) return l(z(a.l, b), a.v, a.r); else return j(b)
    }

    function A(a, b) {
        if (a !== void 0) return l(a.l, a.v, A(a.r, b)); else return j(b)
    }

    function B(a, b, c) {
        if (a === void 0) return z(c, b);
        if (c === void 0) return A(a, b);
        var d = a.h, e = c.h;
        if (d > (e + 2 | 0)) return l(a.l, a.v, B(a.r, b, c)); else if (e > (d + 2 | 0)) return l(B(a, b, c.l), c.v, c.r); else return i(a, b, c)
    }

    function C(a, b) {
        if (a === void 0) return b;
        if (b === void 0) return a;
        var c = {contents: b.v};
        b = o(b, c);
        return B(a, c.contents, b)
    }

    function D(a, b) {
        if (a === void 0) return [void 0, void 0];
        var c = a.v, d = D(a.l, b), e = d[1];
        d = d[0];
        var f = b(c);
        a = D(a.r, b);
        b = a[1];
        a = a[0];
        if (f) return [B(d, c, a), C(e, b)]; else return [C(d, a), B(e, c, b)]
    }

    function E(a, c) {
        return D(a, b("bs_curry").__1(c))
    }

    function F(a) {
        var b = a.l;
        a = a.r;
        b = b !== void 0 ? F(b) : 0;
        a = a !== void 0 ? F(a) : 0;
        return (1 + b | 0) + a | 0
    }

    function G(a) {
        if (a !== void 0) return F(a); else return 0
    }

    function H(a, b) {
        while (!0) {
            var c = b, d = a;
            if (d === void 0) return c;
            b = {hd: d.v, tl: H(d.r, c)};
            a = d.l;
            continue
        }
    }

    function I(a) {
        return H(a, 0)
    }

    function J(a) {
        while (!0) {
            var b = a;
            if (b === void 0) return;
            var c = b.l;
            b = b.r;
            var d = g(c) - g(b) | 0;
            if (!(d <= 2 && d >= -2)) throw new Error('File "belt_internalAVLset.ml", line 288, characters 6-12');
            J(c);
            a = b;
            continue
        }
    }

    function K(a, b, c) {
        while (!0) {
            var d = b, e = a, f = e.v, g = e.l;
            e = e.r;
            g = g !== void 0 ? K(g, d, c) : d;
            c[g] = f;
            d = g + 1 | 0;
            if (e === void 0) return d;
            b = d;
            a = e;
            continue
        }
    }

    function L(a, b, c, d) {
        while (!0) {
            var e = a, f = e.v, g = e.l;
            e = e.r;
            g !== void 0 && L(g, b, c, d);
            if (d(f)) {
                g = b.forward;
                c[g] = f;
                b.forward = g + 1 | 0
            } else {
                g = b.backward;
                c[g] = f;
                b.backward = g - 1 | 0
            }
            if (e === void 0) return;
            a = e;
            continue
        }
    }

    function M(a, b, c, d) {
        while (!0) {
            var e = b, f = a, g = f.v, h = f.l;
            f = f.r;
            h = h !== void 0 ? M(h, e, c, d) : e;
            e = d(g) ? (c[h] = g, h + 1 | 0) : h;
            if (f === void 0) return e;
            b = e;
            a = f;
            continue
        }
    }

    function N(b) {
        if (b === void 0) return [];
        var a = F(b);
        a = new Array(a);
        K(b, 0, a);
        return a
    }

    function O(a, b, c) {
        switch (c) {
            case 0:
                return;
            case 1:
                return j(a[b]);
            case 2:
                var d = a[b], e = a[b - 1 | 0];
                return {v: e, h: 2, l: j(d), r: void 0};
            case 3:
                e = a[b];
                d = a[b - 1 | 0];
                var f = a[b - 2 | 0];
                return {v: d, h: 2, l: j(e), r: j(f)};
            default:
                d = c / 2 | 0;
                e = O(a, b, d);
                f = a[b - d | 0];
                a = O(a, (b - d | 0) - 1 | 0, (c - d | 0) - 1 | 0);
                return i(e, f, a)
        }
    }

    function P(a, b, c) {
        switch (c) {
            case 0:
                return;
            case 1:
                return j(a[b]);
            case 2:
                var d = a[b], e = a[b + 1 | 0];
                return {v: e, h: 2, l: j(d), r: void 0};
            case 3:
                e = a[b];
                d = a[b + 1 | 0];
                var f = a[b + 2 | 0];
                return {v: d, h: 2, l: j(e), r: j(f)};
            default:
                d = c / 2 | 0;
                e = P(a, b, d);
                f = a[b + d | 0];
                a = P(a, (b + d | 0) + 1 | 0, (c - d | 0) - 1 | 0);
                return i(e, f, a)
        }
    }

    function aa(a) {
        return P(a, 0, a.length)
    }

    function Q(a, b) {
        if (a === void 0) return;
        var c = a.v, d = a.l, e = a.r, f = Q(d, b), g = b(c);
        b = Q(e, b);
        if (g) if (d === f && e === b) return a; else return B(f, c, b); else return C(f, b)
    }

    function ba(a, c) {
        return Q(a, b("bs_curry").__1(c))
    }

    function R(b, c) {
        if (b === void 0) return;
        var a = F(b);
        a = new Array(a);
        b = M(b, 0, a, c);
        return P(a, 0, b)
    }

    function ca(a, c) {
        return R(a, b("bs_curry").__1(c))
    }

    function S(b, c) {
        if (b === void 0) return [void 0, void 0];
        var a = F(b), d = new Array(a), e = a - 1 | 0, f = {forward: 0, backward: e};
        L(b, f, d, c);
        b = f.forward;
        return [P(d, 0, b), O(d, e, a - b | 0)]
    }

    function da(a, c) {
        return S(a, b("bs_curry").__1(c))
    }

    function ea(b, c, a) {
        while (!0) {
            var d = b;
            if (d === void 0) return !1;
            var e = d.v;
            e = a(c, e);
            if (e === 0) return !0;
            b = e < 0 ? d.l : d.r;
            continue
        }
    }

    function T(a, b, c) {
        var d = G(a), e = G(b);
        if (d === e) {
            a = q(a, 0);
            b = q(b, 0);
            while (!0) {
                var f = b, g = a;
                if (!g) return 0;
                if (!f) return 0;
                var h = f.hd, i = g.hd, j = c(i.v, h.v);
                if (j !== 0) return j;
                b = q(h.r, f.tl);
                a = q(i.r, g.tl);
                continue
            }
        } else if (d < e) return -1; else return 1
    }

    function fa(a, b, c) {
        return T(a, b, c) === 0
    }

    function U(b, c, a) {
        while (!0) {
            var d = c, e = b;
            if (e === void 0) return !0;
            if (d === void 0) return !1;
            var f = e.v, g = e.l;
            e = e.r;
            var h = d.v, j = d.l;
            d = d.r;
            h = a(f, h);
            if (h === 0) {
                if (!U(g, j, a)) return !1;
                c = d;
                b = e;
                continue
            }
            if (h < 0) {
                if (!U(i(g, f, void 0), j, a)) return !1;
                b = e;
                continue
            }
            if (!U(i(void 0, f, e), d, a)) return !1;
            b = g;
            continue
        }
    }

    function ga(c, d, a) {
        while (!0) {
            var e = c;
            if (e === void 0) return;
            var f = e.v, g = a(d, f);
            if (g === 0) return b("bs_caml_option").some(f);
            c = g < 0 ? e.l : e.r;
            continue
        }
    }

    function ha(b, c, a) {
        while (!0) {
            var d = b;
            if (d === void 0) return;
            var e = d.v, f = a(c, e);
            if (f === 0) return e;
            b = f < 0 ? d.l : d.r;
            continue
        }
    }

    function ia(b, c, a) {
        while (!0) {
            var d = b;
            if (d !== void 0) {
                var e = d.v, f = a(c, e);
                if (f === 0) return e;
                b = f < 0 ? d.l : d.r;
                continue
            }
            throw new Error("getExn0")
        }
    }

    function V(a) {
        var b = a.l;
        a.l = b.r;
        b.r = a;
        var c = g(a.l), d = g(a.r);
        a.h = (c > d ? c : d) + 1 | 0;
        c = g(b.l);
        d = a.h;
        b.h = (c > d ? c : d) + 1 | 0;
        return b
    }

    function W(a) {
        var b = a.r;
        a.r = b.l;
        b.l = a;
        var c = g(a.l), d = g(a.r);
        a.h = (c > d ? c : d) + 1 | 0;
        c = g(b.r);
        d = a.h;
        b.h = (c > d ? c : d) + 1 | 0;
        return b
    }

    function ja(a) {
        var b = a.l;
        b = W(b);
        a.l = b;
        return V(a)
    }

    function ka(a) {
        var b = a.r;
        b = V(b);
        a.r = b;
        return W(a)
    }

    function X(a) {
        var b = g(a.l), c = g(a.r);
        a.h = (b > c ? b : c) + 1 | 0;
        return a
    }

    function Y(a) {
        var b = a.l, c = a.r, d = g(b), e = g(c);
        if (d > (2 + e | 0)) {
            var f = b.l;
            b = b.r;
            if (k(f, b)) return X(V(a)); else return X(ja(a))
        }
        if (e > (2 + d | 0)) {
            f = c.l;
            b = c.r;
            if (k(b, f)) return X(W(a)); else return X(ka(a))
        }
        a.h = (d > e ? d : e) + 1 | 0;
        return a
    }

    function Z(a, b, c) {
        if (b === void 0) return j(c);
        var d = b.v;
        d = a(c, d);
        if (d === 0) return b;
        var e = b.l, f = b.r;
        if (d < 0) {
            d = Z(a, e, c);
            b.l = d
        } else b.r = Z(a, f, c);
        return Y(b)
    }

    function la(c, a) {
        var d = c.length;
        if (d === 0) return;
        var e = b("bs_belt_SortArray").strictlySortedLengthU(c, function (b, c) {
            return a(b, c) < 0
        }), f;
        e >= 0 ? f = P(c, 0, e) : (e = -e | 0, f = O(c, e - 1 | 0, e));
        for (var e = e; e < d; ++e) f = Z(a, f, c[e]);
        return f
    }

    function $(a, b) {
        var c = b.l, d = b.r;
        if (c !== void 0) {
            b.l = $(a, c);
            return Y(b)
        } else {
            a.v = b.v;
            return d
        }
    }

    f.copy = h;
    f.create = i;
    f.bal = l;
    f.singleton = j;
    f.minimum = a;
    f.minUndefined = c;
    f.maximum = d;
    f.maxUndefined = e;
    f.removeMinAuxWithRef = o;
    f.isEmpty = p;
    f.stackAllLeft = q;
    f.forEachU = r;
    f.forEach = s;
    f.reduceU = t;
    f.reduce = u;
    f.everyU = v;
    f.every = w;
    f.someU = x;
    f.some = y;
    f.joinShared = B;
    f.concatShared = C;
    f.keepSharedU = Q;
    f.keepShared = ba;
    f.keepCopyU = R;
    f.keepCopy = ca;
    f.partitionSharedU = D;
    f.partitionShared = E;
    f.partitionCopyU = S;
    f.partitionCopy = da;
    f.lengthNode = F;
    f.size = G;
    f.toList = I;
    f.checkInvariantInternal = J;
    f.fillArray = K;
    f.toArray = N;
    f.fromSortedArrayAux = P;
    f.fromSortedArrayRevAux = O;
    f.fromSortedArrayUnsafe = aa;
    f.has = ea;
    f.cmp = T;
    f.eq = fa;
    f.subset = U;
    f.get = ga;
    f.getUndefined = ha;
    f.getExn = ia;
    f.fromArray = la;
    f.addMutate = Z;
    f.balMutate = Y;
    f.removeMinAuxWithRootMutate = $
}), null);
__d("bs_belt_SetDict", ["bs_belt_internalAVLset"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(c, d, a) {
        if (c === void 0) return b("bs_belt_internalAVLset").singleton(d);
        var e = c.v, f = a(d, e);
        if (f === 0) return c;
        var h = c.l, i = c.r;
        if (f < 0) {
            f = g(h, d, a);
            if (f === h) return c; else return b("bs_belt_internalAVLset").bal(f, e, i)
        }
        f = g(i, d, a);
        if (f === i) return c; else return b("bs_belt_internalAVLset").bal(h, e, f)
    }

    function h(c, d, a) {
        if (c === void 0) return c;
        var e = c.v, f = c.l, g = c.r, i = a(d, e);
        if (i === 0) {
            if (f === void 0) return g;
            if (g === void 0) return f;
            var j = {contents: g.v}, k = b("bs_belt_internalAVLset").removeMinAuxWithRef(g, j);
            return b("bs_belt_internalAVLset").bal(f, j.contents, k)
        }
        if (i < 0) {
            j = h(f, d, a);
            if (j === f) return c; else return b("bs_belt_internalAVLset").bal(j, e, g)
        }
        k = h(g, d, a);
        if (k === g) return c; else return b("bs_belt_internalAVLset").bal(f, e, k)
    }

    function a(b, c, a) {
        var d = c.length;
        b = b;
        for (var e = 0; e < d; ++e) {
            var f = c[e];
            b = g(b, f, a)
        }
        return b
    }

    function c(b, c, a) {
        var d = c.length;
        b = b;
        for (var e = 0; e < d; ++e) {
            var f = c[e];
            b = h(b, f, a)
        }
        return b
    }

    function i(a, c, d) {
        var e = c.v, f = c.l, g = c.r, h = a(d, e);
        if (h === 0) return [f, g];
        if (h < 0) {
            if (f === void 0) return [void 0, c];
            h = i(a, f, d);
            return [h[0], b("bs_belt_internalAVLset").joinShared(h[1], e, g)]
        }
        if (g === void 0) return [c, void 0];
        h = i(a, g, d);
        return [b("bs_belt_internalAVLset").joinShared(f, e, h[0]), h[1]]
    }

    function j(a, c, d, e) {
        var f = c.v, g = c.l, h = c.r, i = a(d, f);
        if (i === 0) {
            e.contents = !0;
            return [g, h]
        }
        if (i < 0) {
            if (g === void 0) return [void 0, c];
            i = j(a, g, d, e);
            return [i[0], b("bs_belt_internalAVLset").joinShared(i[1], f, h)]
        }
        if (h === void 0) return [c, void 0];
        i = j(a, h, d, e);
        return [b("bs_belt_internalAVLset").joinShared(g, f, i[0]), i[1]]
    }

    function d(b, c, a) {
        if (b === void 0) return [[void 0, void 0], !1];
        var d = {contents: !1};
        a = j(a, b, c, d);
        return [a, d.contents]
    }

    function k(c, d, a) {
        if (c === void 0) return d;
        if (d === void 0) return c;
        var e = c.h, f = d.h;
        if (e >= f) {
            if (f === 1) return g(c, d.v, a);
            f = c.v;
            var h = c.l, j = c.r, l = i(a, d, f);
            return b("bs_belt_internalAVLset").joinShared(k(h, l[0], a), f, k(j, l[1], a))
        }
        if (e === 1) return g(d, c.v, a);
        h = d.v;
        f = d.l;
        j = d.r;
        l = i(a, c, h);
        return b("bs_belt_internalAVLset").joinShared(k(l[0], f, a), h, k(l[1], j, a))
    }

    function l(c, d, a) {
        if (c === void 0) return;
        if (d === void 0) return;
        var e = c.v, f = c.l;
        c = c.r;
        var g = {contents: !1};
        d = j(a, d, e, g);
        f = l(f, d[0], a);
        c = l(c, d[1], a);
        if (g.contents) return b("bs_belt_internalAVLset").joinShared(f, e, c); else return b("bs_belt_internalAVLset").concatShared(f, c)
    }

    function m(c, d, a) {
        if (c === void 0) return c;
        if (d === void 0) return c;
        var e = c.v, f = c.l;
        c = c.r;
        var g = {contents: !1};
        d = j(a, d, e, g);
        f = m(f, d[0], a);
        c = m(c, d[1], a);
        if (g.contents) return b("bs_belt_internalAVLset").concatShared(f, c); else return b("bs_belt_internalAVLset").joinShared(f, e, c)
    }

    var n, o = (e = b("bs_belt_internalAVLset")).fromArray, p = e.fromSortedArrayUnsafe, q = e.isEmpty, r = e.has,
        s = e.subset, t = e.cmp, u = e.eq, v = e.forEachU, w = e.forEach, x = e.reduceU, y = e.reduce, z = e.everyU,
        A = e.every, B = e.someU, C = e.some, D = e.keepSharedU, E = e.keepShared, F = e.partitionSharedU,
        G = e.partitionShared, H = e.size, I = e.toList, J = e.toArray, K = e.minimum, L = e.minUndefined,
        M = e.maximum, N = e.maxUndefined, O = e.get, P = e.getUndefined, Q = e.getExn;
    e = e.checkInvariantInternal;
    f.empty = n;
    f.fromArray = o;
    f.fromSortedArrayUnsafe = p;
    f.isEmpty = q;
    f.has = r;
    f.add = g;
    f.mergeMany = a;
    f.remove = h;
    f.removeMany = c;
    f.union = k;
    f.intersect = l;
    f.diff = m;
    f.subset = s;
    f.cmp = t;
    f.eq = u;
    f.forEachU = v;
    f.forEach = w;
    f.reduceU = x;
    f.reduce = y;
    f.everyU = z;
    f.every = A;
    f.someU = B;
    f.some = C;
    f.keepU = D;
    f.keep = E;
    f.partitionU = F;
    f.partition = G;
    f.size = H;
    f.toList = I;
    f.toArray = J;
    f.minimum = K;
    f.minUndefined = L;
    f.maximum = M;
    f.maxUndefined = N;
    f.get = O;
    f.getUndefined = P;
    f.getExn = Q;
    f.split = d;
    f.checkInvariantInternal = e
}), null);
__d("bs_belt_Set", ["bs_curry", "bs_belt_SetDict"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a, c) {
        c = c.cmp;
        return {cmp: c, data: b("bs_belt_SetDict").fromArray(a, c)}
    }

    function c(c, d) {
        var e = c.data, a = c.cmp;
        d = b("bs_belt_SetDict").remove(e, d, a);
        if (d === e) return c; else return {cmp: a, data: d}
    }

    function d(c, d) {
        var e = c.data, a = c.cmp;
        d = b("bs_belt_SetDict").add(e, d, a);
        if (d === e) return c; else return {cmp: a, data: d}
    }

    function e(c, d) {
        var a = c.cmp;
        return {cmp: a, data: b("bs_belt_SetDict").mergeMany(c.data, d, a)}
    }

    function g(c, d) {
        var a = c.cmp;
        return {cmp: a, data: b("bs_belt_SetDict").removeMany(c.data, d, a)}
    }

    function h(c, d) {
        var a = c.cmp;
        return {cmp: a, data: b("bs_belt_SetDict").union(c.data, d.data, a)}
    }

    function i(c, d) {
        var a = c.cmp;
        return {cmp: a, data: b("bs_belt_SetDict").intersect(c.data, d.data, a)}
    }

    function j(c, d) {
        var a = c.cmp;
        return {cmp: a, data: b("bs_belt_SetDict").diff(c.data, d.data, a)}
    }

    function k(c, d) {
        var a = c.cmp;
        return b("bs_belt_SetDict").subset(c.data, d.data, a)
    }

    function l(c, d) {
        var a = c.cmp;
        c = b("bs_belt_SetDict").split(c.data, d, a);
        d = c[0];
        return [[{cmp: a, data: d[0]}, {cmp: a, data: d[1]}], c[1]]
    }

    function m(a) {
        return {cmp: a.cmp, data: void 0}
    }

    function n(a) {
        return b("bs_belt_SetDict").isEmpty(a.data)
    }

    function o(a, c) {
        var d = a.cmp;
        return b("bs_belt_SetDict").cmp(a.data, c.data, d)
    }

    function p(a, c) {
        return b("bs_belt_SetDict").eq(a.data, c.data, a.cmp)
    }

    function q(a, c) {
        return b("bs_belt_SetDict").forEachU(a.data, c)
    }

    function r(a, c) {
        return b("bs_belt_SetDict").forEachU(a.data, b("bs_curry").__1(c))
    }

    function s(a, c, d) {
        return b("bs_belt_SetDict").reduceU(a.data, c, d)
    }

    function t(a, c, d) {
        return s(a, c, b("bs_curry").__2(d))
    }

    function u(a, c) {
        return b("bs_belt_SetDict").everyU(a.data, c)
    }

    function v(a, c) {
        return b("bs_belt_SetDict").everyU(a.data, b("bs_curry").__1(c))
    }

    function w(a, c) {
        return b("bs_belt_SetDict").someU(a.data, c)
    }

    function x(a, c) {
        return b("bs_belt_SetDict").someU(a.data, b("bs_curry").__1(c))
    }

    function y(a, c) {
        return {cmp: a.cmp, data: b("bs_belt_SetDict").keepU(a.data, c)}
    }

    function z(a, c) {
        return y(a, b("bs_curry").__1(c))
    }

    function A(a, c) {
        c = b("bs_belt_SetDict").partitionU(a.data, c);
        a = a.cmp;
        return [{cmp: a, data: c[0]}, {cmp: a, data: c[1]}]
    }

    function B(a, c) {
        return A(a, b("bs_curry").__1(c))
    }

    function C(a) {
        return b("bs_belt_SetDict").size(a.data)
    }

    function D(a) {
        return b("bs_belt_SetDict").toList(a.data)
    }

    function E(a) {
        return b("bs_belt_SetDict").toArray(a.data)
    }

    function F(a) {
        return b("bs_belt_SetDict").minimum(a.data)
    }

    function G(a) {
        return b("bs_belt_SetDict").minUndefined(a.data)
    }

    function H(a) {
        return b("bs_belt_SetDict").maximum(a.data)
    }

    function I(a) {
        return b("bs_belt_SetDict").maxUndefined(a.data)
    }

    function J(a, c) {
        return b("bs_belt_SetDict").get(a.data, c, a.cmp)
    }

    function K(a, c) {
        return b("bs_belt_SetDict").getUndefined(a.data, c, a.cmp)
    }

    function L(a, c) {
        return b("bs_belt_SetDict").getExn(a.data, c, a.cmp)
    }

    function M(a, c) {
        return b("bs_belt_SetDict").has(a.data, c, a.cmp)
    }

    function N(a, c) {
        return {cmp: c.cmp, data: b("bs_belt_SetDict").fromSortedArrayUnsafe(a)}
    }

    function O(a) {
        return a.data
    }

    function P(a) {
        a = a.cmp;
        return {cmp: a}
    }

    function Q(a, b) {
        return {cmp: a.cmp, data: b}
    }

    function R(a) {
        return b("bs_belt_SetDict").checkInvariantInternal(a.data)
    }

    var S, T, U;
    f.Int = S;
    f.$$String = T;
    f.Dict = U;
    f.make = m;
    f.fromArray = a;
    f.fromSortedArrayUnsafe = N;
    f.isEmpty = n;
    f.has = M;
    f.add = d;
    f.mergeMany = e;
    f.remove = c;
    f.removeMany = g;
    f.union = h;
    f.intersect = i;
    f.diff = j;
    f.subset = k;
    f.cmp = o;
    f.eq = p;
    f.forEachU = q;
    f.forEach = r;
    f.reduceU = s;
    f.reduce = t;
    f.everyU = u;
    f.every = v;
    f.someU = w;
    f.some = x;
    f.keepU = y;
    f.keep = z;
    f.partitionU = A;
    f.partition = B;
    f.size = C;
    f.toArray = E;
    f.toList = D;
    f.minimum = F;
    f.minUndefined = G;
    f.maximum = H;
    f.maxUndefined = I;
    f.get = J;
    f.getUndefined = K;
    f.getExn = L;
    f.split = l;
    f.checkInvariantInternal = R;
    f.getData = O;
    f.getId = P;
    f.packIdData = Q
}), null);
__d("MessengerState.bs", ["invariant", "URI", "FBID.bs", "bs_array", "bs_curry", "JSSet.bs", "React", "Utils.bs", "FBJSON", "Arbiter", "gkx", "bs_js_dict", "qex", "bs_belt_Map", "bs_belt_Set", "bs_caml_obj", "ThreadId.bs", "FBIDCheck", "immutable", "bs_belt_Array", "bs_caml_array", "ChatConfig", "LogHistory", "MercuryIDs", "bs_pervasives", "bs_belt_Option", "bs_caml_option", "CurrentUser", "requireCond", "AsyncRequest", "MessagingTag", "RemoteAction.bs", "TypingStates", "MercuryAssert", "MercuryViewer", "ParticipantId.bs", "bs_belt_MapString", "bs_caml_primitive", "MercuryFilters.bs", "ImmutableObject", "MercuryLocalIDs", "ChannelConstants", "MessengerFolders.bs", "MessengerMessage.bs", "bs_js_null_undefined", "MercuryActionType", "MercuryAttachment", "MercuryDispatcher", "MercuryMessageIDs.bs", "MercuryThreadInfo", "MessengerPersonas.bs", "MessengerWebEvent", "XGroupsController", "MercuryThreadIDMap", "PageCommItemStatus", "MercuryActionStatus", "MessageRequestUtils", "MessagingThreadType", "MercuryPayloadSource", "MessengerEnvironment", "MessengerThreadUtils.bs", "recoverableViolation", "MercuryLogMessageType", "MercuryServerRequests", "MercuryThreadInformer", "MercurySyncEventsProxy", "unrecoverableViolation", "MercuryGlobalActionType", "MessageProfileRangeType", "ThreadConnectivityStatus.bs", "MercuryMessageClientState", "MessengerGroupsSyncStatus", "MercuryThreadlistConstants", "MessageUnsendabilityStatus", "setTimeoutAcrossTransitions", "MessagingGenericAdminTextType", "MessengerDesktopNotifications", "ChatReliabilityInstrumentation", "RemovedMessageTombstoneContent", "MWChatDeleteMessageEventEmitter", "MessengerThreadCannotReplyReason.bs", "RepliedToMessageStatusForGraphQL", "XMercuryThreadLikeIconController", "MessengerSharedMediaActionsLoader", "MessengerSharedPhotosVideosBaseData.bs", "MercuryDisplayTimeFilterMessageRenderer", "cr:1299779"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h, i = b("React"), j = b("MessagingTag").IRIS_MAPPING;

    function k(a) {
        var c = {};
        b("bs_belt_Map").forEach(a, function (b, a) {
            c[b] = a
        });
        return c
    }

    function a(a) {
        return k(a.threads)
    }

    function l(a, c) {
        return b("bs_js_null_undefined").fromOption(b("bs_belt_Map").get(a.threads, c))
    }

    function c(a) {
        return a.fbid
    }

    function d(a) {
        return a.deliveryReceipts
    }

    function e(a) {
        return a.readReceiptsPerThread
    }

    function m(a) {
        return a.ignoredIds
    }

    function n(a) {
        return a.blockedIds
    }

    function o(a) {
        return a.pendingFolderUnseenCount
    }

    function aa(a) {
        return a.typing
    }

    function p(a) {
        return a.pendingReadStatusThreads
    }

    function q(a) {
        return a.messages
    }

    function r(a) {
        return a.localIDsMap
    }

    function s(a) {
        return a.messagesWithUploadsInFlight
    }

    function ba(a) {
        return a.threadlistOrderMap
    }

    function ca(a) {
        return a.pinnedThreads
    }

    function t(a) {
        return a.montage
    }

    function da(a) {
        return a.orderedMessageLists
    }

    function ea(a) {
        return a.unreadCounts
    }

    function fa(a) {
        return a.initialUnreadCounts
    }

    function ga(a) {
        return a.unseenTimestamp
    }

    function ha(a) {
        b("ChatReliabilityInstrumentation").logMESSAGE_RECEIVED(b("FBJSON").stringify({
            otid: a.offline_threading_id,
            message_id: a.message_id,
            other_user_fbid: a.other_user_fbid
        }))
    }

    function ia(a, c, d) {
        d = d.reduce(b("bs_belt_Set").remove, c.reduce(b("bs_belt_Set").add, a.ignoredIds));
        if (d === a.ignoredIds) return a; else return {
            fbid: a.fbid,
            deliveryReceipts: a.deliveryReceipts,
            readReceiptsPerThread: a.readReceiptsPerThread,
            ignoredIds: d,
            blockedIds: a.blockedIds,
            pendingFolderUnseenCount: a.pendingFolderUnseenCount,
            typing: a.typing,
            threads: a.threads,
            pendingReadStatusThreads: a.pendingReadStatusThreads,
            messages: a.messages,
            localIDsMap: a.localIDsMap,
            messagesWithUploadsInFlight: a.messagesWithUploadsInFlight,
            threadlistOrderMap: a.threadlistOrderMap,
            pinnedThreads: a.pinnedThreads,
            montage: a.montage,
            orderedMessageLists: a.orderedMessageLists,
            unreadCounts: a.unreadCounts,
            initialUnreadCounts: a.initialUnreadCounts,
            unseenTimestamp: a.unseenTimestamp
        }
    }

    var ja = function (a, b) {
        delete a[b];
        return 0
    };

    function ka(a, c, d) {
        var e = b("bs_belt_MapString").get(a, c);
        if (e === void 0) return a;
        e = b("bs_caml_option").valFromOption(e);
        var f = b("bs_belt_Map").get(e, d);
        if (f !== void 0) return b("bs_belt_MapString").set(a, c, b("bs_belt_Map").remove(e, d)); else return a
    }

    function la(a, c) {
        var d = c.thread_fbid;
        if (d == null) {
            if (!(c.type === "typ" || c.type === "page_typing")) return null;
            c = b("FBID.bs").ofString(c.from.toString());
            if (c !== void 0) return b("MercuryIDs").getThreadIDFromUserID(b("bs_caml_option").valFromOption(c)); else return null
        }
        c = b("MercuryThreadIDMap").getForFBID(a);
        return c.getClientIDFromServerIDNow(d.toString())
    }

    var ma = b("gkx")("1275193") ? b("MercuryFilters.bs").getSupportedFilters(void 0).concat([b("MercuryFilters.bs").all, b("MercuryFilters.bs").groups, b("MercuryFilters.bs").named, b("MercuryFilters.bs").unnamed]) : b("gkx")("1660458") ? b("MercuryFilters.bs").getSupportedFilters(void 0).concat([b("MercuryFilters.bs").all, b("MercuryFilters.bs").groups, b("MercuryFilters.bs").unsyncedChat]) : b("MercuryFilters.bs").getSupportedFilters(void 0).concat([b("MercuryFilters.bs").all, b("MercuryFilters.bs").groups]),
        na = b("MessengerFolders.bs").getSupportedFolders(void 0).concat(["spam", "page_background"]);

    function oa(a) {
        var b = {};
        na.forEach(function (a) {
            var c = {};
            ma.forEach(function (a) {
                c[a] = {threadlist: [], reachedEnd: !1, existingIDs: new Set()}
            });
            b[a] = c
        });
        return b
    }

    function pa(a, c) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.invalidatedThread(c)
    }

    function u(a, c) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.updatedThread(c)
    }

    function qa(a, c) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.deletedThread(c)
    }

    function ra(a, c, d, e) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.changedThreadReadState(c, d, e)
    }

    function sa(a, c) {
        var d = new Map();
        c.forEach(function (a, b) {
            d.set(a, b)
        });
        return c.sort(function (c, e) {
            var f = b("bs_belt_Map").get(a.threads, c), g = b("bs_belt_Map").get(a.threads, e);
            if (f !== void 0 && g !== void 0) {
                g = b("bs_caml_option").valFromOption(g).timestamp - b("bs_caml_option").valFromOption(f).timestamp;
                if (g > 0) return 1; else if (g < 0) return -1; else return 0
            }
            f = d.get(c);
            g = d.get(e);
            return b("bs_belt_Option").getExn(f == null ? void 0 : b("bs_caml_option").some(f)) - b("bs_belt_Option").getExn(g == null ? void 0 : b("bs_caml_option").some(g)) | 0
        })
    }

    function ta(a, c, d, e) {
        a = b("bs_js_dict").get(a.threadlistOrderMap, d);
        if (a === void 0) return;
        d = b("bs_js_dict").get(b("bs_caml_option").valFromOption(a), e);
        if (d === void 0) return;
        var f = b("bs_caml_option").valFromOption(d);
        c.forEach(function (a) {
            if (!f.existingIDs.has(a)) return;
            f.existingIDs["delete"](a);
            a = f.threadlist.indexOf(a);
            f.threadlist.splice(a, 1)
        })
    }

    function v(c, d, e, f) {
        c = c !== void 0 ? c : function (a) {
            return !0
        };
        var a = b("bs_belt_Map").get(d.threads, e);
        if (a === void 0) return d;
        a = b("bs_caml_option").valFromOption(a);
        if (!b("bs_curry")._1(c, a)) return d;
        c = b("ImmutableObject").set(a, f);
        a = b("bs_belt_Map").set(d.threads, e, c);
        u(d.fbid, e);
        return {
            fbid: d.fbid,
            deliveryReceipts: d.deliveryReceipts,
            readReceiptsPerThread: d.readReceiptsPerThread,
            ignoredIds: d.ignoredIds,
            blockedIds: d.blockedIds,
            pendingFolderUnseenCount: d.pendingFolderUnseenCount,
            typing: d.typing,
            threads: a,
            pendingReadStatusThreads: d.pendingReadStatusThreads,
            messages: d.messages,
            localIDsMap: d.localIDsMap,
            messagesWithUploadsInFlight: d.messagesWithUploadsInFlight,
            threadlistOrderMap: d.threadlistOrderMap,
            pinnedThreads: d.pinnedThreads,
            montage: d.montage,
            orderedMessageLists: d.orderedMessageLists,
            unreadCounts: d.unreadCounts,
            initialUnreadCounts: d.initialUnreadCounts,
            unseenTimestamp: d.unseenTimestamp
        }
    }

    function ua(c, a, d) {
        var e = new Set(a.participants);
        Object.assign(a, {participants: Array.from(a.participants)});
        d.forEach(function (d) {
            if (!e.has(d)) {
                a.participants.push(d);
                if (b("bs_caml_obj").caml_equal(d, c)) {
                    Object.assign(a, {is_subscribed: !0, can_reply: !0, cannot_reply_reason: null});
                    return
                } else return
            }
        })
    }

    var va = b("XGroupsController");

    function w(a) {
        var c = [b("MercuryFilters.bs").all];
        a.unread_count > 0 && c.push(b("MercuryFilters.bs").unread);
        a.is_canonical || c.push(b("MercuryFilters.bs").groups);
        if (b("gkx")("1660458")) {
            var d = a.groups_sync_status;
            !(d == null) && b("bs_caml_obj").caml_equal(d, b("MessengerGroupsSyncStatus").OPT_IN) || c.push(b("MercuryFilters.bs").unsyncedChat)
        }
        if (b("gkx")("1275193")) if (a.name.length !== 0) {
            c.push(b("MercuryFilters.bs").named);
            return c
        } else {
            c.push(b("MercuryFilters.bs").unnamed);
            return c
        } else return c
    }

    function wa(a, c, d, e) {
        na.forEach(function (b) {
            if (b !== d) return ta(a, c, b, e)
        });
        var f = b("bs_js_dict").get(a.threadlistOrderMap, d);
        if (f !== void 0) {
            f = b("bs_js_dict").get(b("bs_caml_option").valFromOption(f), e);
            if (f !== void 0) {
                f = b("bs_caml_option").valFromOption(f);
                f = [f.threadlist, f.existingIDs]
            } else f = [[], new Set()]
        } else f = [[], new Set()];
        var g = f[1], h = f[0];
        c.forEach(function (a) {
            if (!g.has(a)) {
                g.add(a);
                h.push(a);
                return
            }
        });
        return [sa(a, h), g]
    }

    function xa(a, c, d, e) {
        c = b("gkx")("1275193") || b("gkx")("1660458") ? c.filter(function (c) {
            c = b("bs_belt_Map").get(a.threads, c);
            if (c === void 0) return !1;
            c = w(b("bs_caml_option").valFromOption(c));
            return c.some(function (a) {
                return a === e
            })
        }) : c;
        return wa(a, c, d, e)
    }

    function ya(a, c, d) {
        if (d === void 0) return;
        var e = b("bs_js_dict").get(a.unreadCounts, c);
        if (e !== void 0) {
            b("bs_caml_option").valFromOption(e).add(b("bs_caml_option").valFromOption(d));
            e = b("MercuryThreadInformer").getForFBID(a.fbid);
            e.updatedUnreadState();
            return
        }
        d = b("MercuryServerRequests").getForFBID(a.fbid);
        d.fetchUnreadThreadIDs(c)
    }

    var za = b("MessengerFolders.bs").getSupportedFolders(void 0).filter(function (a) {
        return a !== "action:archived"
    });

    function Aa(a, c, d) {
        if (d === void 0) return;
        var e = b("bs_js_dict").get(a.unreadCounts, c);
        if (e !== void 0) {
            b("bs_caml_option").valFromOption(e)["delete"](b("bs_caml_option").valFromOption(d));
            e = b("MercuryThreadInformer").getForFBID(a.fbid);
            e.updatedUnreadState();
            return
        }
        d = b("MercuryServerRequests").getForFBID(a.fbid);
        d.fetchUnreadThreadIDs(c)
    }

    function Ba(c, a, d) {
        var e = b("MessengerFolders.bs").getFromMeta(a);
        if (d !== e) {
            za.includes(e) && a.unread_count > 0 && ya(c, e, b("bs_caml_option").some(a.thread_id));
            if (za.includes(d)) return Aa(c, d, b("bs_caml_option").some(a.thread_id)); else return
        }
    }

    function Ca(a, c, d, e, f) {
        var g = b("gkx")("1275193"), h = b("gkx")("1660458"), i = a.threadlistOrderMap[c][d], j = i.existingIDs.has(e);
        !f && (g || h) ? xa(a, [e], c, d) : wa(a, [e], c, d);
        if (!(!g && !h || i.threadlist.length !== 0)) return;
        f = b("bs_caml_array").caml_array_get(i.threadlist, i.threadlist.length - 1 | 0) === e;
        if (!i.reachedEnd && !j && f) return ta(a, [e], c, d)
    }

    function Da(a, c, d) {
        if (na.includes(c)) if ((c === "inbox" || c === "action:archived" || c === "pending") && (b("gkx")("1275193") || b("gkx")("1660458"))) return Ca(a, c, b("MercuryFilters.bs").unread, d, !0); else {
            wa(a, [d], c, b("MercuryFilters.bs").unread);
            return
        }
    }

    function Ea(c, a) {
        var d = b("MessengerFolders.bs").getFromMeta(a);
        if (na.includes(d)) {
            ma.forEach(function (b) {
                return Ca(c, d, b, a.thread_id, !1)
            });
            return
        }
    }

    function Fa(d, e, f, g) {
        var a = b("bs_belt_Map").get(d.threads, e);
        if (a === void 0) return d;
        a = b("bs_caml_option").valFromOption(a);
        var h = b("MessengerFolders.bs").getFromMeta(a);
        if (h !== f) {
            if (g) {
                g = a.comm_status;
                g = g == null ? b("ImmutableObject").set(a, {folder: f}) : f === "other" ? b("ImmutableObject").set(a, {
                    folder: f,
                    comm_status: b("PageCommItemStatus").SPAM
                }) : f === "inbox" ? b("ImmutableObject").set(a, {
                    folder: f,
                    comm_status: b("PageCommItemStatus").TODO
                }) : b("ImmutableObject").set(a, {folder: f})
            } else g = a;
            var c = a.other_user_fbid;
            c = c == null ? [] : f === "other" ? [b("MercuryIDs").getParticipantIDFromUserID(c)] : [];
            var i = a.other_user_fbid;
            f = i == null ? [] : f === "other" ? [] : [b("MercuryIDs").getParticipantIDFromUserID(i)];
            i = ia(d, c, f);
            c = b("bs_belt_Map").set(i.threads, e, g);
            Ba(i, g, h);
            Ea(i, g);
            u(i.fbid, e);
            return {
                fbid: i.fbid,
                deliveryReceipts: i.deliveryReceipts,
                readReceiptsPerThread: i.readReceiptsPerThread,
                ignoredIds: i.ignoredIds,
                blockedIds: i.blockedIds,
                pendingFolderUnseenCount: i.pendingFolderUnseenCount,
                typing: i.typing,
                threads: c,
                pendingReadStatusThreads: i.pendingReadStatusThreads,
                messages: i.messages,
                localIDsMap: i.localIDsMap,
                messagesWithUploadsInFlight: i.messagesWithUploadsInFlight,
                threadlistOrderMap: i.threadlistOrderMap,
                pinnedThreads: i.pinnedThreads,
                montage: i.montage,
                orderedMessageLists: i.orderedMessageLists,
                unreadCounts: i.unreadCounts,
                initialUnreadCounts: i.initialUnreadCounts,
                unseenTimestamp: i.unseenTimestamp
            }
        }
        Ea(d, a);
        return d
    }

    function Ga(a, c, d) {
        d = c.is_filtered_content ? b("MercuryDisplayTimeFilterMessageRenderer").renderFilteredContent(c) : d !== void 0 ? d : c.body;
        var e = c.raw_attachments;
        e = !(e == null) && e.length !== 0 ? b("MercuryAttachment").convertRaw(e) : c.attachments;
        var f = c.removed_timestamp;
        if (f == null) {
            f = c.log_message_type;
            d = {snippet: d, snippet_attachments: e, snippet_sender: f == null ? c.author : null}
        } else d = {
            snippet: b("RemovedMessageTombstoneContent").getTombstoneContentForSnippet(c.author),
            snippet_attachments: null,
            snippet_sender: null
        };
        return Object.assign(a, d)
    }

    function x(a, c, d) {
        var e = a.event_title, f = a.event_time;
        a = a.event_location_name;
        return {
            creator_id: null,
            latitude: null,
            location_address: null,
            longitude: null,
            note: "",
            related_event: {id: ""},
            repeat_mode: null,
            seconds_to_notify_before: 0,
            status: null,
            track_rsvp: c.track_rsvp,
            title: e == null ? c.title : e,
            event_time: f == null ? c.event_time : parseInt(f, 10),
            location_name: a == null ? c.location_name : a,
            event_members: d !== void 0 ? b("bs_caml_option").valFromOption(d) : c.event_members,
            oid: c.oid,
            event_type: c.event_type
        }
    }

    function y(b, a) {
        var c = {};
        Object.keys(b).forEach(function (a) {
            c[a] = b[a]
        });
        c[a.guest_id] = a.guest_status;
        return c
    }

    var Ha = function (a, b) {
        delete a[b];
        return 0
    }, z = function (a, b) {
        delete a[b];
        return 0
    };

    function A(a) {
        var c = {contents: -1}, d = {contents: null}, e = Math.floor(Date.now() / 1e3);
        b("bs_js_dict").entries(a).forEach(function (a) {
            a = a[1];
            var b = a.event_time;
            if (b > e && (c.contents < 0 || c.contents > b)) {
                c.contents = b;
                d.contents = a;
                return
            }
        });
        return d.contents
    }

    var B = b("XMercuryThreadLikeIconController");

    function C(a, c, d) {
        d = B.getURIBuilder().setString("emoji", d).getURI();
        new (b("AsyncRequest"))(d).setHandler(function (d) {
            var e = b("MercuryDispatcher").getForFBID(a);
            e.handleUpdate({
                actions: [{
                    action_type: b("MercuryActionType").UPDATE_CUSTOM_LIKE,
                    thread_id: c,
                    custom_like: d.getPayload()
                }], from_client: !0, payload_source: b("MercuryPayloadSource").CLIENT_CHANGE_CUSTOM_LIKE
            })
        }).send()
    }

    function Ia(d, a, c, e) {
        c = c.log_message_data;
        if (c == null) return;
        var f = c.untypedData;
        if (c.message_type === b("MessagingGenericAdminTextType").CHANGE_THREAD_NICKNAME) {
            var g = a.custom_nickname;
            if (!(g == null)) {
                g = b("bs_js_dict").fromArray(b("bs_js_dict").entries(g));
                var h = f.nickname;
                h.trim().length > 0 ? g[f.participant_id] = h : z(g, f.participant_id);
                Object.assign(a, {custom_nickname: g})
            }
            u(d, e)
        } else if (c.message_type === b("MessagingGenericAdminTextType").CHANGE_THREAD_ICON) C(d, e, f.thread_icon); else if (c.message_type === b("MessagingGenericAdminTextType").CHANGE_THREAD_THEME) {
            if (!b("ChatConfig").get("chat_tab_has_gradients")) {
                h = f.theme_color;
                if (h == null) Object.assign(a, {
                    solid_color: null,
                    header_color: null,
                    footer_color: null,
                    gradient_colors: []
                }); else if (h.length > 0) {
                    g = "#" + h.slice(2);
                    Object.assign(a, {solid_color: g, header_color: g, footer_color: g, gradient_colors: [g]})
                } else Object.assign(a, {
                    solid_color: null,
                    header_color: null,
                    footer_color: null,
                    gradient_colors: []
                });
                u(d, e)
            }
        } else if (f !== void 0) if (c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_CREATE) {
            var i = {}, j = f.event_creator_id;
            a.participants.forEach(function (a) {
                a = b("MercuryIDs").getUserIDFromParticipantID(a);
                if (!(a == null)) {
                    i[a] = b("bs_caml_obj").caml_equal(a, j) ? "GOING" : "INVITED";
                    return
                }
            });
            h = b("bs_js_dict").fromArray(b("bs_js_dict").entries(a.lightweight_events));
            g = f.event_time;
            g = {
                track_rsvp: f.event_track_rsvp,
                title: f.event_title,
                event_time: g == null ? 0 : parseInt(g, 10),
                location_name: f.event_location_name,
                event_members: i,
                oid: f.event_id,
                event_type: f.event_type
            };
            Object.assign(a, {lightweight_event: g});
            h[f.event_id] = Object.assign({}, g);
            Object.assign(a, {lightweight_events: h});
            u(d, e)
        } else if (c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_UPDATE || c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_UPDATE_TIME || c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_UPDATE_TITLE || c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_UPDATE_LOCATION) {
            g = a.lightweight_event;
            if (!(g == null)) {
                h = b("bs_js_dict").fromArray(b("bs_js_dict").entries(a.lightweight_events));
                g.oid === f.event_id && Object.assign(a, {lightweight_event: x(f, g, b("bs_caml_option").some(g.event_members))});
                g = b("bs_js_dict").get(h, f.event_id);
                g !== void 0 && (h[f.event_id] = x(f, b("bs_caml_option").valFromOption(g), void 0), Object.assign(a, {lightweight_events: h}))
            }
            u(d, e)
        } else if (c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_RSVP) {
            g = b("bs_js_dict").fromArray(b("bs_js_dict").entries(a.lightweight_events));
            h = a.lightweight_event;
            if (!(h == null) && h.oid === f.event_id) {
                var k = y(h.event_members, f);
                Object.assign(a, {lightweight_event: x(f, h, b("bs_caml_option").some(k))})
            }
            h = b("bs_js_dict").get(g, f.event_id);
            if (h !== void 0) {
                k = b("bs_caml_option").valFromOption(h);
                h = y(k.event_members, f);
                g[f.event_id] = x(f, k, b("bs_caml_option").some(h));
                Object.assign(a, {lightweight_events: g})
            }
            u(d, e)
        } else if (c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_DELETE || c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_NOTIFY) {
            k = b("bs_js_dict").fromArray(b("bs_js_dict").entries(a.lightweight_events));
            Ha(k, f.event_id);
            Object.assign(a, {lightweight_event: A(k), lightweight_events: k});
            u(d, e)
        }
    }

    function Ja(c, d, e) {
        if (b("CurrentUser").isWorkUser() && b("gkx")("1179386")) {
            var a = b("bs_belt_Map").get(c.threads, d);
            if (a !== void 0) {
                a = b("bs_caml_option").valFromOption(a);
                var f = a.pinned_messages;
                f = f == null ? void 0 : f.map(function (a) {
                    if (e.findIndex(function (b) {
                        return b === a.message_id
                    }) !== -1) return {
                        message_id: a.message_id,
                        pinning_time: a.pinning_time,
                        message: null
                    }; else return a
                });
                if (f !== void 0) {
                    a = b("ImmutableObject").set(a, {pinned_messages: f});
                    f = b("bs_belt_Map").set(c.threads, d, a);
                    u(c.fbid, d);
                    a = f
                } else a = c.threads
            } else a = c.threads;
            return {
                fbid: c.fbid,
                deliveryReceipts: c.deliveryReceipts,
                readReceiptsPerThread: c.readReceiptsPerThread,
                ignoredIds: c.ignoredIds,
                blockedIds: c.blockedIds,
                pendingFolderUnseenCount: c.pendingFolderUnseenCount,
                typing: c.typing,
                threads: a,
                pendingReadStatusThreads: c.pendingReadStatusThreads,
                messages: c.messages,
                localIDsMap: c.localIDsMap,
                messagesWithUploadsInFlight: c.messagesWithUploadsInFlight,
                threadlistOrderMap: c.threadlistOrderMap,
                pinnedThreads: c.pinnedThreads,
                montage: c.montage,
                orderedMessageLists: c.orderedMessageLists,
                unreadCounts: c.unreadCounts,
                initialUnreadCounts: c.initialUnreadCounts,
                unseenTimestamp: c.unseenTimestamp
            }
        } else return c
    }

    function Ka(a, c, d, e) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.updatedMessage(c, d, b("bs_js_null_undefined").fromOption(e))
    }

    function La(c, a) {
        c = b("MercuryThreadInformer").getForFBID(c);
        c.receivedMessage(a)
    }

    function Ma(a, c, d) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.reorderedMessages(c, d)
    }

    function Na(a, c, d, e, f) {
        a = b("MercuryThreadInformer").getForFBID(a);
        f = b("bs_belt_Option").getWithDefault(b("bs_belt_Option").map(f == null ? void 0 : b("bs_caml_option").some(f), function (a) {
            return b("bs_belt_Array").keepMap(a, function (a) {
                return b("bs_caml_option").nullable_to_opt(a.message_file_fbid)
            })
        }), []);
        b("MWChatDeleteMessageEventEmitter").emit(d);
        a.deletedMessage(c, d, b("bs_js_null_undefined").fromOption(e), f)
    }

    function Oa(a, c, d, e) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.deletedMessage(c, d, b("bs_js_null_undefined").fromOption(e), null)
    }

    var Pa = function (a, b) {
        delete a[b];
        return 0
    };

    function D(c, a) {
        var d = c.localIDsMap.get(a);
        return b("bs_caml_option").nullable_to_opt(c.messages.get(b("bs_belt_Option").getWithDefault(d == null ? void 0 : b("bs_caml_option").some(d), a)))
    }

    function E(a, c, d) {
        a = a !== void 0 ? a : !1;
        d = b("bs_belt_Array").keepMap(d, function (a) {
            return D(c, a)
        });
        if (a) return d.slice().reverse(); else return d
    }

    function Qa(a, c) {
        return b("bs_belt_Array").keepMap(c, function (b) {
            return D(a, b)
        }).sort(function (a, c) {
            return b("MessengerMessage.bs").compare(c, a)
        }).map(function (a) {
            return a.message_id
        })
    }

    function F(a, b) {
        return {
            fbid: a.fbid,
            deliveryReceipts: a.deliveryReceipts,
            readReceiptsPerThread: a.readReceiptsPerThread,
            ignoredIds: a.ignoredIds,
            blockedIds: a.blockedIds,
            pendingFolderUnseenCount: a.pendingFolderUnseenCount,
            typing: a.typing,
            threads: a.threads,
            pendingReadStatusThreads: a.pendingReadStatusThreads,
            messages: a.messages.set(b[0], b[1]),
            localIDsMap: a.localIDsMap,
            messagesWithUploadsInFlight: a.messagesWithUploadsInFlight,
            threadlistOrderMap: a.threadlistOrderMap,
            pinnedThreads: a.pinnedThreads,
            montage: a.montage,
            orderedMessageLists: a.orderedMessageLists,
            unreadCounts: a.unreadCounts,
            initialUnreadCounts: a.initialUnreadCounts,
            unseenTimestamp: a.unseenTimestamp
        }
    }

    function G(b, a) {
        b.localIDsMap.set(a.message_id, a.message_id);
        return {
            fbid: b.fbid,
            deliveryReceipts: b.deliveryReceipts,
            readReceiptsPerThread: b.readReceiptsPerThread,
            ignoredIds: b.ignoredIds,
            blockedIds: b.blockedIds,
            pendingFolderUnseenCount: b.pendingFolderUnseenCount,
            typing: b.typing,
            threads: b.threads,
            pendingReadStatusThreads: b.pendingReadStatusThreads,
            messages: b.messages,
            localIDsMap: b.localIDsMap,
            messagesWithUploadsInFlight: b.messagesWithUploadsInFlight,
            threadlistOrderMap: b.threadlistOrderMap,
            pinnedThreads: b.pinnedThreads,
            montage: b.montage,
            orderedMessageLists: b.orderedMessageLists,
            unreadCounts: b.unreadCounts,
            initialUnreadCounts: b.initialUnreadCounts,
            unseenTimestamp: b.unseenTimestamp
        }
    }

    var H = function (a, b) {
        delete a[b];
        return 0
    };

    function I(c, d) {
        var a = c.orderedMessageLists;
        Object.keys(d).forEach(function (e) {
            var f = b("bs_js_dict").get(d, e);
            if (f === void 0) return;
            var g = f[0], h = g.limit, i = g.offset;
            g = a.get(g.threadID);
            if (g == null) return;
            g = g.messageIDs;
            if (g.length >= (i + h | 0)) {
                H(d, e);
                return b("bs_curry")._1(f[1], E(!0, c, g.slice(i, i + h | 0)))
            }
        })
    }

    function Ra(d, c, e) {
        var a = e[1], f = e[0];
        b("MessengerMessage.bs").finalizeRanges(a);
        var g = a.offline_threading_id;
        if (!(g == null) && g !== a.message_id) {
            d.localIDsMap.set(g, a.message_id);
            b("MercuryMessageIDs.bs").addServerID(g, a.message_id);
            g = a.threading_id;
            g == null || b("MercuryMessageIDs.bs").addServerID(g, a.message_id)
        }
        g = d.messages.has(f);
        var h = d.fbid, i = d.deliveryReceipts, j = d.readReceiptsPerThread, k = d.ignoredIds, l = d.blockedIds,
            m = d.pendingFolderUnseenCount, n = d.typing, o = d.threads, aa = d.pendingReadStatusThreads,
            p = d.messages.set(f, a), q = d.localIDsMap, r = d.messagesWithUploadsInFlight, s = d.threadlistOrderMap,
            ba = d.pinnedThreads, ca = d.montage, t = d.orderedMessageLists, da = d.unreadCounts,
            ea = d.initialUnreadCounts;
        d = d.unseenTimestamp;
        h = {
            fbid: h,
            deliveryReceipts: i,
            readReceiptsPerThread: j,
            ignoredIds: k,
            blockedIds: l,
            pendingFolderUnseenCount: m,
            typing: n,
            threads: o,
            pendingReadStatusThreads: aa,
            messages: p,
            localIDsMap: q,
            messagesWithUploadsInFlight: r,
            threadlistOrderMap: s,
            pinnedThreads: ba,
            montage: ca,
            orderedMessageLists: t,
            unreadCounts: da,
            initialUnreadCounts: ea,
            unseenTimestamp: d
        };
        if (!g && e[2] === 1) {
            i = b("bs_belt_Option").getWithDefault(b("bs_belt_Option").flatMap(b("bs_caml_option").nullable_to_opt(a.thread_id), function (a) {
                return b("bs_caml_option").nullable_to_opt(t.get(a))
            }), {messageLoadingState: b("MercuryIDs").isLocalThread(a.thread_id) ? 1 : 0, messageIDs: []});
            j = a.thread_id;
            if (!(j == null)) {
                k = Qa(h, [f].concat(i.messageIDs.filter(function (c) {
                    return b("bs_caml_obj").caml_notequal(c, a.offline_threading_id)
                })));
                t.set(j, {messageLoadingState: i.messageLoadingState, messageIDs: k})
            }
            I(h, c.messageCallbacks.contents)
        }
        return h
    }

    function J(b, c, a) {
        b.messagesWithUploadsInFlight.set(c, a);
        return {
            fbid: b.fbid,
            deliveryReceipts: b.deliveryReceipts,
            readReceiptsPerThread: b.readReceiptsPerThread,
            ignoredIds: b.ignoredIds,
            blockedIds: b.blockedIds,
            pendingFolderUnseenCount: b.pendingFolderUnseenCount,
            typing: b.typing,
            threads: b.threads,
            pendingReadStatusThreads: b.pendingReadStatusThreads,
            messages: b.messages,
            localIDsMap: b.localIDsMap,
            messagesWithUploadsInFlight: b.messagesWithUploadsInFlight,
            threadlistOrderMap: b.threadlistOrderMap,
            pinnedThreads: b.pinnedThreads,
            montage: b.montage,
            orderedMessageLists: b.orderedMessageLists,
            unreadCounts: b.unreadCounts,
            initialUnreadCounts: b.initialUnreadCounts,
            unseenTimestamp: b.unseenTimestamp
        }
    }

    function Sa(a, c) {
        var d = c[1];
        c = c[0];
        var e = a.messagesWithUploadsInFlight.get(c);
        b("bs_belt_Option").isSome(e == null ? void 0 : b("bs_caml_option").some(e)) || g(0, 1777);
        a.messagesWithUploadsInFlight["delete"](c);
        if (e == null) return b("bs_pervasives").failwith("Message must exist to update"); else return Object.assign(e, {
            image_ids: d.image_ids,
            file_ids: d.file_ids,
            audio_ids: d.audio_ids,
            gif_ids: d.gif_ids,
            video_ids: d.video_ids,
            client_state: b("MercuryMessageClientState").SEND_TO_SERVER
        })
    }

    function Ta(a, c) {
        var d = c[1], e = c[0], f = a.orderedMessageLists.get(e);
        if (f == null) return a;
        var g = b("bs_belt_Array").keepMap(d, function (b) {
            return D(a, b)
        }).map(function (a) {
            return a.message_id
        }), h = Qa(a, f.messageIDs.filter(function (a) {
            return g.indexOf(a) === -1
        }));
        a.orderedMessageLists.set(e, {messageLoadingState: f.messageLoadingState, messageIDs: h});
        Ma(a.fbid, e, b("bs_js_null_undefined").fromOption(c[2]));
        f = Ja(a, e, d);
        return {
            fbid: f.fbid,
            deliveryReceipts: f.deliveryReceipts,
            readReceiptsPerThread: f.readReceiptsPerThread,
            ignoredIds: f.ignoredIds,
            blockedIds: f.blockedIds,
            pendingFolderUnseenCount: f.pendingFolderUnseenCount,
            typing: f.typing,
            threads: f.threads,
            pendingReadStatusThreads: f.pendingReadStatusThreads,
            messages: f.messages,
            localIDsMap: f.localIDsMap,
            messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
            threadlistOrderMap: f.threadlistOrderMap,
            pinnedThreads: f.pinnedThreads,
            montage: f.montage,
            orderedMessageLists: f.orderedMessageLists,
            unreadCounts: f.unreadCounts,
            initialUnreadCounts: f.initialUnreadCounts,
            unseenTimestamp: f.unseenTimestamp
        }
    }

    function Ua(c, d) {
        var e = {snippet: "...", snippet_attachments: null, snippet_sender: null};
        d = b("bs_belt_Option").flatMap(b("bs_caml_option").nullable_to_opt(c.orderedMessageLists.get(d)), function (a) {
            return b("bs_belt_Array").get(E(void 0, c, a.messageIDs), 0)
        });
        if (d !== void 0) {
            var a = b("bs_caml_option").valFromOption(d);
            a = a.is_filtered_content ? b("MercuryDisplayTimeFilterMessageRenderer").renderFilteredContent(a) : a.body
        } else a = null;
        if (d === void 0) return e;
        d = b("bs_caml_option").valFromOption(d);
        var f = d.removed_timestamp;
        if (!(f == null)) return {
            snippet: b("RemovedMessageTombstoneContent").getTombstoneContentForSnippet(d.author),
            snippet_attachments: null,
            snippet_sender: null
        };
        if (a == null) return e;
        f = d.log_message_type;
        return {snippet: a, snippet_attachments: d.attachments, snippet_sender: f == null ? d.author : null}
    }

    function Va(c, a) {
        var d = a.attachments;
        if (d == null) return;
        var e = b("bs_belt_Array").keepMap(d, function (a) {
            if (!(b("MercuryAttachment").isPhotoAttachment(a) || b("MercuryAttachment").isVideoAttachment(a))) return;
            a = a.metadata;
            if (!(a == null)) return b("bs_caml_option").nullable_to_opt(a.fbid)
        });
        b("MessengerSharedMediaActionsLoader").deletePhotos(b("MercuryIDs").getThreadFBIDFromThreadID(a.thread_id), e);
        if (c !== void 0) return b("MessengerSharedPhotosVideosBaseData.bs").localRemove(b("bs_caml_option").valFromOption(c), b("bs_belt_Array").keepMap(d, function (a) {
            if (!(b("MercuryAttachment").isPhotoAttachment(a) || b("MercuryAttachment").isVideoAttachment(a))) return;
            a = a.metadata;
            if (!(a == null)) return b("bs_caml_option").nullable_to_opt(a.fbid)
        }))
    }

    function Wa(a, c, d) {
        d = a.orderedMessageLists.get(d);
        if (d == null) return a;
        d = d.messageIDs;
        var e = {contents: !0};
        return b("bs_belt_Array").reduce(d, a, function (d, a) {
            if (!e.contents) return d;
            var f = d.localIDsMap.get(a);
            f = b("bs_belt_Option").getWithDefault(f == null ? void 0 : b("bs_caml_option").some(f), a);
            if (f === c) {
                e.contents = !1;
                return d
            }
            a = D(d, f);
            if (a === void 0) return d;
            a = b("bs_caml_option").valFromOption(a);
            var g = a.replied_to_message, h;
            if (g == null) h = void 0; else {
                g = g.message;
                if (g == null) h = void 0; else {
                    var i = d.localIDsMap.get(g.message_id);
                    h = b("bs_belt_Option").getWithDefault(i == null ? void 0 : b("bs_caml_option").some(i), g.message_id)
                }
            }
            if (h === void 0) return d;
            if (h !== c) return d;
            i = {status: b("RepliedToMessageStatusForGraphQL").DELETED, message: null};
            g = Object.assign(Object.assign({}, a), {replied_to_message: i});
            return F(d, [f, g])
        })
    }

    function Xa(a, c) {
        if (a == null) return 0;
        if (a.length === 0) return 0;
        a = b("bs_array").map(function (a) {
            var d = a.type;
            if (b("bs_caml_obj").caml_equal(d, b("MessageProfileRangeType").THREAD_ACTIVE) || b("bs_caml_obj").caml_equal(d, b("MessageProfileRangeType").THREAD)) return b("gkx")("678578");
            d = a.id;
            if (d == null) return !1; else return b("bs_caml_obj").caml_equal(b("FBID.bs").ofStringExn(d), c)
        }, a);
        return b("bs_array").fold_left(function (a, b) {
            if (b) return a + 1 | 0; else return a
        }, 0, a)
    }

    function Ya(a, c, d) {
        if (b("cr:1299779") == null) return;
        var e = b("MercuryIDs").getThreadFBIDFromThreadID(a);
        return b("bs_curry")._1(b("cr:1299779").log, {
            event_name: b("MessengerWebEvent").SENT_MSG,
            mid: c,
            offline_threading_id: d,
            other_user_fbid: b("MercuryIDs").isCanonical(a) ? e : null,
            thread_fbid: b("MercuryIDs").isGroupChat(a) ? e : null
        })
    }

    function Za(d, c, e, f) {
        var g = e.client_message_id, h;
        if (g == null) h = d; else {
            var i = D(d, g);
            if (i !== void 0) {
                i = b("bs_caml_option").valFromOption(i);
                var j = e.message_id, k = e.status;
                if (b("bs_caml_obj").caml_equal(i.status, b("MercuryActionStatus").SUCCESS)) h = d; else if (d.messages.has(j)) {
                    var a = Object.assign(Object.assign({}, i), e);
                    Ka(d.fbid, a.thread_id, a.message_id, f);
                    h = F(d, [j, a])
                } else {
                    a = b("bs_caml_obj").caml_equal(e.status, b("MercuryActionStatus").SUCCESS) ? e.error_data : null;
                    b("MercuryMessageIDs.bs").addServerID(g, j);
                    d.localIDsMap.set(g, j);
                    i = Object.assign(Object.assign({}, i), {
                        status: k,
                        error_data: a,
                        timestamp: e.timestamp,
                        log_message_data: e.log_message_data,
                        ranges: e.ranges,
                        attachments: e.attachments,
                        has_attachment: e.has_attachment,
                        is_one_way_sent: e.is_one_way_sent,
                        is_forwarded: e.is_forwarded
                    });
                    b("MessengerMessage.bs").finalizeRanges(i);
                    k = F(d, [j, i]);
                    k.messages.set(g, {});
                    k.messages["delete"](g);
                    a = i.thread_id;
                    var l = k.orderedMessageLists.get(a);
                    if (!(l == null)) {
                        var m = Qa(k, l.messageIDs);
                        k.orderedMessageLists.set(a, {messageLoadingState: l.messageLoadingState, messageIDs: m})
                    }
                    Ka(k.fbid, i.thread_id, i.message_id, f);
                    a = b("MessengerMessage.bs").isTitanMessage(i);
                    l = c.localTitanMessageCount.get(i.thread_id);
                    a && !(l == null) && c.localTitanMessageCount.set(i.thread_id, l - 1 | 0);
                    h = {
                        fbid: k.fbid,
                        deliveryReceipts: k.deliveryReceipts,
                        readReceiptsPerThread: k.readReceiptsPerThread,
                        ignoredIds: k.ignoredIds,
                        blockedIds: k.blockedIds,
                        pendingFolderUnseenCount: k.pendingFolderUnseenCount,
                        typing: k.typing,
                        threads: k.threads,
                        pendingReadStatusThreads: k.pendingReadStatusThreads,
                        messages: k.messages,
                        localIDsMap: k.localIDsMap.set(g, j),
                        messagesWithUploadsInFlight: k.messagesWithUploadsInFlight,
                        threadlistOrderMap: k.threadlistOrderMap,
                        pinnedThreads: k.pinnedThreads,
                        montage: k.montage,
                        orderedMessageLists: k.orderedMessageLists,
                        unreadCounts: k.unreadCounts,
                        initialUnreadCounts: k.initialUnreadCounts,
                        unseenTimestamp: k.unseenTimestamp
                    }
                }
            } else h = d
        }
        m = {};
        f = e.log_message_type;
        if (f == null) Object.assign(m, {snippet_attachments: e.attachments}); else {
            if (b("bs_caml_obj").caml_equal(f, b("MercuryLogMessageType").THREAD_IMAGE)) {
                a = e.log_message_data;
                if (a == null) c = null; else {
                    i = a.image;
                    c = i == null ? null : i.preview_url
                }
                Object.assign(m, {image_src: c});
                u(h.fbid, e.thread_id)
            }
            b("bs_caml_obj").caml_notequal(f, b("MercuryLogMessageType").SUBSCRIBE) && b("bs_caml_obj").caml_notequal(f, b("MercuryLogMessageType").UNSUBSCRIBE) && Object.assign(m, {snippet_attachments: e.attachments})
        }
        Ya(e.thread_id, e.message_id, e.offline_threading_id);
        return v(void 0, h, e.thread_id, m)
    }

    function $a(c, a, d, e) {
        if (b("bs_caml_obj").caml_equal(d.action_type, b("MercuryActionType").SEND_MESSAGE)) return Za(c, a, d, e);
        var f = d.offline_threading_id;
        f = b("bs_belt_Option").flatMap(f == null ? void 0 : b("bs_caml_option").some(f), function (a) {
            return b("bs_caml_option").nullable_to_opt(c.localIDsMap.get(a))
        });
        var g = D(c, d.message_id);
        if (f !== void 0) {
            if (g === void 0) return c;
            f = b("bs_caml_option").valFromOption(g);
            if (b("bs_caml_option").nullable_to_opt(f.sticker_id) === void 0) return c;
            var h = Object.assign(f, {attachments: d.attachments});
            return F(c, [f.message_id, h])
        }
        if (g !== void 0) return c;
        f = b("bs_caml_obj").caml_equal(e, b("bs_caml_option").some(b("MercuryPayloadSource").CLIENT_SEND_MESSAGE)) ? G(c, d) : c;
        h = b("bs_caml_obj").caml_equal(d.client_state, b("MercuryMessageClientState").DO_NOT_SEND_TO_SERVER);
        g = d.upload_id;
        e = h && !(g == null) ? J(f, g, d) : f;
        h = b("MessengerMessage.bs").isErrorLogMessage(d);
        g = d.thread_id;
        h && !(g == null) && (a.failedHistoryFetchThreads.contents[g] = !0);
        f = d.manual_retry_cnt;
        h = d.thread_id;
        !(f == null) && !(h == null) && f > 0 && Ma(e.fbid, h, b("MercuryPayloadSource").CLIENT_SEND_MESSAGE);
        g = Ra(e, a, [d.message_id, d, 1]);
        La(g.fbid, d);
        return g
    }

    function ab(a, c, d, e) {
        if (c === void 0) return;
        c = b("bs_caml_obj").caml_equal(b("bs_caml_option").valFromOption(c), b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE);
        var f = d.thread_id;
        if (!c) {
            !(f == null);
            return
        }
        if (f == null) return;
        c = b("MercuryThreadInformer").getForFBID(a);
        return b("bs_curry")._3(e, c, f, d)
    }

    function bb(a, b) {
        var c = a.participants.indexOf(b);
        if (c > 0) {
            Object.assign(a, {participants: [b].concat(a.participants.slice(0, c), a.participants.slice(c + 1 | 0))});
            return
        }
    }

    function cb(c, d, e, f) {
        var g = d.thread_id;
        if (g == null) return c;
        var a = b("bs_belt_Map").get(c.threads, g);
        if (a === void 0) return c;
        a = b("bs_caml_option").valFromOption(a);
        var h = {};
        if (!d.skip_bump_thread && b("bs_caml_obj").caml_notequal(e, b("bs_caml_option").some(b("MercuryPayloadSource").SERVER_FETCH_THREAD_INFO))) {
            Ga(h, d, b("bs_caml_option").nullable_to_opt(d.log_message_body));
            if (d.timestamp > a.timestamp) {
                Object.assign(h, {timestamp: d.timestamp});
                if (d.is_unread) {
                    Object.assign(h, {unread_count: a.unread_count + 1 | 0});
                    e = Xa(d.profile_ranges, c.fbid);
                    e > 0 && Object.assign(h, {unread_mentions_count: a.unread_mentions_count + e | 0})
                }
            }
            Object.assign(h, {message_count: a.message_count + 1 | 0, is_archived: !1})
        }
        f !== !0 && d.timestamp > h.server_timestamp && Object.assign(h, {server_timestamp: d.timestamp});
        if (b("bs_caml_obj").caml_notequal(h, {})) return v(void 0, c, g, h); else return c
    }

    function db(b, a, c) {
        var d = new Set(c);
        Object.assign(a, {
            participants: a.participants.filter(function (a) {
                return !d.has(a)
            })
        });
        if (d.has(b)) {
            Object.assign(a, {can_reply: !1, is_subscribed: !1});
            return
        }
    }

    function K(c, a, d) {
        a = a.specific_to_list;
        if (!(a == null)) return a;
        a = b("MercuryIDs").tokenize(d);
        if (a.type !== "user" || a.value.length === 0) return [c]; else return [b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(a.value)), c]
    }

    function L(c, a, d) {
        var e = b("MercuryIDs").tokenize(d), f = e.type === "user", g = a.specific_to_list;
        g = f ? !0 : g == null ? !1 : b("MessengerThreadUtils.bs").isCanonicalFromInitialParticipants(c, g);
        if (g || f) c = K(c, a, d); else {
            var h = a.specific_to_list;
            c = h == null ? [] : h
        }
        return new (b("ImmutableObject"))({
            admins: {},
            admin_model_status: null,
            approval_mode: 0,
            approval_queue_ids: [],
            associated_object: null,
            can_reply: !0,
            cannot_reply_reason: null,
            can_viewer_report: !1,
            comm_item_owners: null,
            comm_source_id: null,
            comm_status: null,
            comm_icon_type: [],
            composer_input_disabled: null,
            custom_like_icon: null,
            custom_nickname: null,
            customization_enabled: !1,
            description: null,
            ephemeral_ttl_mode: 0,
            footer_color: null,
            game_id: null,
            gradient_colors: [],
            accessibility_label: null,
            reverse_gradients_for_radial: null,
            group_approval_queue: null,
            group_thread_subtype: null,
            work_associated_group: null,
            pinned_messages: null,
            groups_sync_status: null,
            has_email_participant: !1,
            has_montage: !1,
            unread_mentions_count: 0,
            header_color: null,
            is_canonical_neo_user: !1,
            is_from_weak_entry_point: !1,
            is_pin_protected: !1,
            is_pinned: !1,
            is_thread_queue_enabled: !1,
            joinable_mode: {link: "", mode: 0},
            last_message_timestamp: 0,
            last_message_type: null,
            last_message_admin_text_type: null,
            last_message_unsendability_status: null,
            last_message_id: null,
            last_read_timestamp: 0,
            lightweight_event: null,
            lightweight_events: {},
            marketplace_thread_data: null,
            mentions_mute_mode: 0,
            mute_until: null,
            page_comm_item_id: null,
            page_thread_info: null,
            page_unsubscribe_status: !1,
            participant_add_mode: null,
            participants_event_status: null,
            reactions_mute_mode: 0,
            read_only: !1,
            recipients_loadable: !0,
            rtc_call_data: null,
            server_timestamp: 0,
            solid_color: null,
            subtitle: null,
            theme_id: null,
            reactions: void 0,
            thread_associated_job_applications: null,
            thread_associated_page_admin: null,
            thread_connectivity_data: null,
            thread_fbid: null,
            thread_type: null,
            thread_pin_timestamp: null,
            thread_id: d,
            participants: c,
            preloaded_participants: [],
            name: "",
            snippet: a.body,
            snippet_attachments: [],
            snippet_sender: a.author,
            unread_count: 0,
            message_count: 0,
            image_src: null,
            square_image_src: null,
            timestamp: a.timestamp,
            other_user_fbid: f ? b("FBID.bs").ofStringExn(e.value) : null,
            is_canonical_user: f,
            is_other_recipient_page: !1,
            is_canonical: g,
            is_subscribed: !0,
            folder: "inbox",
            is_archived: !1,
            is_page_follow_up: !1,
            is_page_unresponded_thread: !1,
            object_association_type: null,
            joinable_link: null,
            linked_mentorship_programs: null,
            thread_unsendability_status: null,
            is_business_page_active: !1,
            graphql_token: null,
            conversion_detection_data: null,
            suggested_reply_data: null
        })
    }

    function eb(c, d, a, e) {
        e = b("MessengerMessage.bs").hasServerTimestamp(a, e);
        var f = a.thread_id;
        if (f == null) return;
        b("MercuryAssert").isThreadID(f);
        d = b("bs_belt_Map").get(d, f);
        if (d !== void 0) return b("bs_caml_option").some(b("bs_caml_option").valFromOption(d)); else if (b("bs_caml_obj").caml_equal(a.action_type, b("MercuryActionType").USER_GENERATED_MESSAGE) && !e) return b("bs_caml_option").some(L(b("MercuryIDs").getParticipantIDFromUserID(c), a, f)); else return
    }

    function fb(c, d) {
        var a = d.other_user_fbid;
        if (a == null) {
            var e = d.thread_fbid;
            e = e == null ? void 0 : b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromThreadFBID(e))
        } else e = b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromUserID(a));
        a = d.thread_id;
        e = a == null ? e : a == null ? void 0 : b("bs_caml_option").some(a);
        a = d.thread_id;
        var f;
        if (a == null) f = ""; else {
            a = b("bs_belt_Map").get(c.threads, a);
            f = a !== void 0 ? b("MessengerFolders.bs").getFromMeta(b("bs_caml_option").valFromOption(a)) : d.folder
        }
        za.includes(f) && (b("bs_caml_obj").caml_equal(d.action_type, b("MercuryActionType").USER_GENERATED_MESSAGE) || b("bs_caml_obj").caml_equal(d.action_type, b("MercuryActionType").LOG_MESSAGE)) && d.is_unread && ya(c, f, e);
        return {
            fbid: c.fbid,
            deliveryReceipts: c.deliveryReceipts,
            readReceiptsPerThread: c.readReceiptsPerThread,
            ignoredIds: c.ignoredIds,
            blockedIds: c.blockedIds,
            pendingFolderUnseenCount: c.pendingFolderUnseenCount,
            typing: c.typing,
            threads: c.threads,
            pendingReadStatusThreads: c.pendingReadStatusThreads,
            messages: c.messages,
            localIDsMap: c.localIDsMap,
            messagesWithUploadsInFlight: c.messagesWithUploadsInFlight,
            threadlistOrderMap: c.threadlistOrderMap,
            pinnedThreads: c.pinnedThreads,
            montage: c.montage,
            orderedMessageLists: c.orderedMessageLists,
            unreadCounts: c.unreadCounts,
            initialUnreadCounts: c.initialUnreadCounts,
            unseenTimestamp: c.unseenTimestamp
        }
    }

    var gb = function (a, b) {
        delete a[b];
        return 0
    };

    function hb(a, c) {
        Object.keys(c).forEach(function (d) {
            var e = b("bs_js_dict").get(c, d);
            if (e === void 0) return;
            var f = e[0], g = k(f.reduce(function (c, d) {
                var e = b("bs_belt_Map").get(a, d);
                if (e !== void 0) return b("bs_belt_Map").set(c, d, b("bs_caml_option").valFromOption(e)); else return c
            }, b("bs_belt_Map").make(b("ThreadId.bs"))));
            if (Object.keys(g).length === f.length) {
                gb(c, d);
                return b("bs_curry")._1(e[1], g)
            }
        })
    }

    function ib(c, a, d, e, f) {
        var g = c.fbid;
        d !== 0 && ra(g, a.thread_id, f, d);
        if (a.timestamp === 0) {
            b("ChatReliabilityInstrumentation").logERROR("thread timestamp is 0");
            e.add(a.thread_id);
            return
        }
        d = a.unread_count === 0;
        if (d === f) return;
        u(g, a.thread_id);
        if (f) e = 0; else {
            d = b("bs_belt_Option").flatMap(b("bs_caml_option").nullable_to_opt(c.orderedMessageLists.get(a.thread_id)), function (a) {
                return b("bs_belt_Array").get(E(void 0, c, a.messageIDs), 0)
            });
            g = d !== void 0 ? b("bs_caml_option").valFromOption(d).profile_ranges : null;
            e = Xa(g, c.fbid)
        }
        return {unread_count: f ? 0 : 1, unread_mentions_count: e}
    }

    function jb(a, c, d, e, f) {
        f = b("gkx")("1275193") || b("gkx")("1660458") ? xa(a, f, c, d) : wa(a, f, c, d);
        a = a.threadlistOrderMap[c];
        c = b("bs_js_dict").get(a, d);
        c = c !== void 0 ? b("bs_caml_option").valFromOption(c).reachedEnd : !1;
        a[d] = {reachedEnd: e.contents ? e.contents : c, threadlist: f[0], existingIDs: f[1]}
    }

    function kb(a, c, d, e) {
        var f = b("bs_belt_Array").make(e.length, []), g = {contents: !1};
        d.forEach(function (d) {
            d.thread_ids.forEach(function (c) {
                var h = b("bs_belt_Map").get(a.threads, c);
                if (h === void 0) return;
                h = w(b("bs_caml_option").valFromOption(h));
                for (var g = 0, d = e.length; g < d; ++g) {
                    var i = h.find(function (a) {
                        return function (c) {
                            return c === b("bs_caml_array").caml_array_get(e, a)
                        }
                    }(g));
                    (i === void 0 ? void 0 : b("bs_caml_option").some(i)) !== void 0 && b("bs_caml_array").caml_array_get(f, g).push(c)
                }
            });
            d = d.limit;
            var h = e.find(function (a) {
                return a === b("MercuryFilters.bs").all
            });
            h = h === void 0 ? void 0 : b("bs_caml_option").some(h);
            for (var i = 0, c = f.length; i < c; ++i) (h === void 0 && b("bs_caml_array").caml_array_get(f, i).length < d || b("bs_caml_array").caml_array_get(e, i) === b("MercuryFilters.bs").all && b("bs_caml_array").caml_array_get(f, i).length < d) && (g.contents = !0)
        });
        for (var d = 0, h = e.length; d < h; ++d) jb(a, c, b("bs_caml_array").caml_array_get(e, d), g, b("bs_caml_array").caml_array_get(f, d))
    }

    function M(c, a) {
        var d;
        if (a.is_archived) d = "action:archived"; else {
            var e = a.thread_type;
            d = e == null || e !== b("MessagingThreadType").MARKETPLACE ? a.folder : "marketplace_folder"
        }
        e = b("bs_js_dict").get(c.threadlistOrderMap, d);
        if (e !== void 0) return d
    }

    function lb(a, c) {
        var d = {};
        na.forEach(function (a) {
            var b = {};
            ma.forEach(function (a) {
                b[a] = []
            });
            d[a] = b
        });
        c.forEach(function (c) {
            var e = b("bs_belt_Map").get(a.threads, c.thread_id);
            if (e === void 0) return;
            var f = b("bs_caml_option").valFromOption(e), g = M(a, f);
            if (g !== void 0) {
                w(f).forEach(function (a) {
                    if (f.timestamp !== 0) {
                        d[g][a].push(c.thread_id);
                        return
                    }
                });
                return
            }
        });
        na.forEach(function (c) {
            ma.forEach(function (e) {
                var f = d[c][e];
                b("gkx")("1275193") || b("gkx")("1660458") ? xa(a, f, c, e) : wa(a, f, c, e)
            })
        });
        return {
            fbid: a.fbid,
            deliveryReceipts: a.deliveryReceipts,
            readReceiptsPerThread: a.readReceiptsPerThread,
            ignoredIds: a.ignoredIds,
            blockedIds: a.blockedIds,
            pendingFolderUnseenCount: a.pendingFolderUnseenCount,
            typing: a.typing,
            threads: a.threads,
            pendingReadStatusThreads: a.pendingReadStatusThreads,
            messages: a.messages,
            localIDsMap: a.localIDsMap,
            messagesWithUploadsInFlight: a.messagesWithUploadsInFlight,
            threadlistOrderMap: a.threadlistOrderMap,
            pinnedThreads: a.pinnedThreads,
            montage: a.montage,
            orderedMessageLists: a.orderedMessageLists,
            unreadCounts: a.unreadCounts,
            initialUnreadCounts: a.initialUnreadCounts,
            unseenTimestamp: a.unseenTimestamp
        }
    }

    function mb(a) {
        b("bs_belt_Map").map(a.threads, function (c) {
            c = b("bs_belt_Map").get(a.threads, c.thread_id);
            if (c === void 0) return;
            c = b("bs_caml_option").valFromOption(c);
            if (b("bs_caml_option").nullable_to_opt(c.thread_type) !== b("MessagingThreadType").MARKETPLACE) return;
            c = b("ImmutableObject").set(c, {folder: "marketplace_folder"});
            lb(a, [c])
        })
    }

    function nb(c, a, d) {
        var e = function (a) {
            return a.timestamp > (d && c.unseenTimestamp <= a.last_read_timestamp ? a.last_read_timestamp : c.unseenTimestamp)
        }, f = function (a) {
            var d;
            return (d = b("bs_belt_Option")).mapWithDefault(d.flatMap(d.map(d.map(b("bs_caml_option").nullable_to_opt(c.orderedMessageLists.get(a.thread_id)), function (a) {
                return b("bs_caml_array").caml_array_get(a.messageIDs, 0)
            }), function (a) {
                return b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(c.localIDsMap.get(a)), a)
            }), function (a) {
                return b("bs_caml_option").nullable_to_opt(c.messages.get(a))
            }), !1, function (a) {
                return a.author === b("MercuryIDs").getParticipantIDFromUserID(c.fbid)
            })
        }, g = function (a, c) {
            if (e(a) && !b("MercuryThreadInfo").isMuted(a) && !f(a)) return c + 1 | 0; else return c
        };
        return b("bs_belt_Option").getWithDefault(b("bs_belt_Option").map(b("bs_belt_Option").flatMap(b("bs_js_dict").get(c.threadlistOrderMap, "inbox"), function (a) {
            return b("bs_js_dict").get(a, b("MercuryFilters.bs").all)
        }), function (d) {
            d = d.threadlist;
            if (d.length !== 0) return d.reduce(function (a, d) {
                d = b("bs_belt_Map").get(c.threads, d);
                if (d !== void 0) return g(b("bs_caml_option").valFromOption(d), a); else return a
            }, 0); else if (b("bs_belt_Map").isEmpty(c.threads)) return a.fallbackUnseenCount.contents; else return b("bs_belt_Map").reduce(c.threads, 0, function (b, d, a) {
                d = M(c, a);
                if (d === "inbox") return g(a, b); else return b
            })
        }), a.fallbackUnseenCount.contents)
    }

    function N(c, a) {
        return b("bs_belt_Option").getWithDefault(b("bs_belt_Option").map(b("bs_belt_Option").flatMap(b("bs_js_dict").get(c.threadlistOrderMap, "inbox"), function (a) {
            return b("bs_js_dict").get(a, b("MercuryFilters.bs").all)
        }), function (d) {
            if (d.threadlist.length === 0) if (b("bs_belt_Map").isEmpty(c.threads)) return a.fallbackUnseenCount.contents; else return b("bs_belt_Map").reduce(c.threads, 0, function (d, e, a) {
                var f = M(c, a);
                if (f === void 0) return d;
                if (f !== "inbox") return d;
                if (!(a.timestamp > c.unseenTimestamp && !b("MercuryThreadInfo").isMuted(a))) return d;
                f = b("bs_js_dict").get(c.unreadCounts, "inbox");
                if (f !== void 0 && b("bs_caml_option").valFromOption(f).has(e)) return d + 1 | 0; else return d
            }); else return d.threadlist.reduce(function (d, e) {
                var a = b("bs_belt_Map").get(c.threads, e);
                if (a === void 0) return d;
                a = b("bs_caml_option").valFromOption(a);
                if (!(a.timestamp > c.unseenTimestamp && !b("MercuryThreadInfo").isMuted(a))) return d;
                a = b("bs_js_dict").get(c.unreadCounts, "inbox");
                if (a !== void 0 && b("bs_caml_option").valFromOption(a).has(e)) return d + 1 | 0; else return d
            }, 0)
        }), a.fallbackUnseenCount.contents)
    }

    function ob(c, a, d) {
        if (d === "pending") return {
            fbid: c.fbid,
            deliveryReceipts: c.deliveryReceipts,
            readReceiptsPerThread: c.readReceiptsPerThread,
            ignoredIds: c.ignoredIds,
            blockedIds: c.blockedIds,
            pendingFolderUnseenCount: 0,
            typing: c.typing,
            threads: c.threads,
            pendingReadStatusThreads: c.pendingReadStatusThreads,
            messages: c.messages,
            localIDsMap: c.localIDsMap,
            messagesWithUploadsInFlight: c.messagesWithUploadsInFlight,
            threadlistOrderMap: c.threadlistOrderMap,
            pinnedThreads: c.pinnedThreads,
            montage: c.montage,
            orderedMessageLists: c.orderedMessageLists,
            unreadCounts: c.unreadCounts,
            initialUnreadCounts: c.initialUnreadCounts,
            unseenTimestamp: c.unseenTimestamp
        };
        if (b("gkx")("969964")) {
            d = b("MercuryThreadInformer").getForFBID(c.fbid);
            d.updatedUnseenTimestamp()
        }
        return {
            fbid: c.fbid,
            deliveryReceipts: c.deliveryReceipts,
            readReceiptsPerThread: c.readReceiptsPerThread,
            ignoredIds: c.ignoredIds,
            blockedIds: c.blockedIds,
            pendingFolderUnseenCount: c.pendingFolderUnseenCount,
            typing: c.typing,
            threads: c.threads,
            pendingReadStatusThreads: c.pendingReadStatusThreads,
            messages: c.messages,
            localIDsMap: c.localIDsMap,
            messagesWithUploadsInFlight: c.messagesWithUploadsInFlight,
            threadlistOrderMap: c.threadlistOrderMap,
            pinnedThreads: c.pinnedThreads,
            montage: c.montage,
            orderedMessageLists: c.orderedMessageLists,
            unreadCounts: c.unreadCounts,
            initialUnreadCounts: c.initialUnreadCounts,
            unseenTimestamp: a
        }
    }

    function O(a, c, d) {
        var e = [];
        d = b("bs_array").fold_left(function (f, g) {
            switch (g.TAG | 0) {
                case 0:
                    e.push(g._0.TAG | 0);
                    break;
                case 1:
                case 2:
                    break
            }
            switch (g.TAG | 0) {
                case 0:
                    var i = g._0;
                    if (typeof i === "number") {
                        a.threadCallbacks.contents = {};
                        a.threadSubToken.contents = a.threadSubToken.contents;
                        a.failedHistoryFetchThreads.contents = {};
                        a.localTitanMessageCount.clear();
                        b("bs_belt_Map").keysToArray(f.threads).forEach(function (a) {
                            return pa(f.fbid, a)
                        });
                        return {
                            fbid: f.fbid,
                            deliveryReceipts: f.deliveryReceipts,
                            readReceiptsPerThread: void 0,
                            ignoredIds: f.ignoredIds,
                            blockedIds: f.blockedIds,
                            pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                            typing: f.typing,
                            threads: b("bs_belt_Map").make(b("ThreadId.bs")),
                            pendingReadStatusThreads: new Set(),
                            messages: new Map(),
                            localIDsMap: new Map(),
                            messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                            threadlistOrderMap: oa(void 0),
                            pinnedThreads: f.pinnedThreads,
                            montage: f.montage,
                            orderedMessageLists: new Map(),
                            unreadCounts: f.unreadCounts,
                            initialUnreadCounts: f.initialUnreadCounts,
                            unseenTimestamp: f.unseenTimestamp
                        }
                    }
                    switch (i.TAG | 0) {
                        case 0:
                            var m = i._0, n = {contents: !1}, o = {contents: f.deliveryReceipts};
                            Object.keys(m).forEach(function (a) {
                                var c = m[a],
                                    d = b("bs_belt_Option").getWithDefault(b("bs_belt_MapString").get(o.contents, a), 0);
                                if (c > d) {
                                    n.contents = !0;
                                    o.contents = b("bs_belt_MapString").set(o.contents, a, c);
                                    return
                                }
                            });
                            if (n.contents) return {
                                fbid: f.fbid,
                                deliveryReceipts: o.contents,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            }; else return f;
                        case 1:
                            return ia(f, i._0, []);
                        case 2:
                            var p = i._0, q = i._1;
                            q = q.reduce(b("bs_belt_Set").remove, p.reduce(b("bs_belt_Set").add, f.blockedIds));
                            if (q === f.blockedIds) return f; else return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: q,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 3:
                            p = i._0;
                            q = p.reduce(function (a, c) {
                                var d = c.is_messenger_ignored;
                                if (d == null) return a; else if (d) return b("bs_belt_Set").add(a, b("MercuryIDs").getParticipantIDFromUserID(c.fbid)); else return b("bs_belt_Set").remove(a, b("MercuryIDs").getParticipantIDFromUserID(c.fbid))
                            }, f.ignoredIds);
                            if (q === f.ignoredIds) return f; else return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: q,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 4:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("SetInitialPendingFolderUnseenCount");
                            p = i._0;
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: p,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 5:
                            q = i._0;
                            p = la(f.fbid, q);
                            if (p == null) return f;
                            var r = b("FBID.bs").ofString(q.from.toString());
                            if (r === void 0) return f;
                            b("MessengerPersonas.bs").addPersona(q.persona);
                            var s = q.persona;
                            r = s == null ? b("MercuryIDs").getParticipantIDFromUserID(b("bs_caml_option").valFromOption(r)) : b("MercuryIDs").getParticipantIDFromUserID(s.id);
                            if (q.st === b("TypingStates").TYPING) {
                                s = b("bs_belt_MapString").get(f.typing, p);
                                if (s !== void 0) return {
                                    fbid: f.fbid,
                                    deliveryReceipts: f.deliveryReceipts,
                                    readReceiptsPerThread: f.readReceiptsPerThread,
                                    ignoredIds: f.ignoredIds,
                                    blockedIds: f.blockedIds,
                                    pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                    typing: b("bs_belt_MapString").set(f.typing, p, b("bs_belt_Map").set(b("bs_caml_option").valFromOption(s), r, Date.now())),
                                    threads: f.threads,
                                    pendingReadStatusThreads: f.pendingReadStatusThreads,
                                    messages: f.messages,
                                    localIDsMap: f.localIDsMap,
                                    messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                    threadlistOrderMap: f.threadlistOrderMap,
                                    pinnedThreads: f.pinnedThreads,
                                    montage: f.montage,
                                    orderedMessageLists: f.orderedMessageLists,
                                    unreadCounts: f.unreadCounts,
                                    initialUnreadCounts: f.initialUnreadCounts,
                                    unseenTimestamp: f.unseenTimestamp
                                };
                                s = b("bs_belt_Map").set(b("bs_belt_Map").make(b("ParticipantId.bs")), r, Date.now());
                                return {
                                    fbid: f.fbid,
                                    deliveryReceipts: f.deliveryReceipts,
                                    readReceiptsPerThread: f.readReceiptsPerThread,
                                    ignoredIds: f.ignoredIds,
                                    blockedIds: f.blockedIds,
                                    pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                    typing: b("bs_belt_MapString").set(f.typing, p, s),
                                    threads: f.threads,
                                    pendingReadStatusThreads: f.pendingReadStatusThreads,
                                    messages: f.messages,
                                    localIDsMap: f.localIDsMap,
                                    messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                    threadlistOrderMap: f.threadlistOrderMap,
                                    pinnedThreads: f.pinnedThreads,
                                    montage: f.montage,
                                    orderedMessageLists: f.orderedMessageLists,
                                    unreadCounts: f.unreadCounts,
                                    initialUnreadCounts: f.initialUnreadCounts,
                                    unseenTimestamp: f.unseenTimestamp
                                }
                            }
                            if (q.st !== b("TypingStates").INACTIVE) return f;
                            s = ka(f.typing, p, r);
                            if (s !== f.typing) return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: s,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            }; else return f;
                        case 6:
                            var ba = i._0, ca = {contents: !1}, t = {contents: f.readReceiptsPerThread};
                            Object.keys(ba).forEach(function (a) {
                                Object.keys(ba[a]).forEach(function (c) {
                                    var d = b("bs_belt_MapString").get(t.contents, a);
                                    d = d !== void 0 ? b("bs_caml_option").valFromOption(d) : b("immutable").OrderedMap();
                                    var e = d.get(c), f = ba[a][c];
                                    if (!(e == null) && f.watermark <= e.watermark) return;
                                    ca.contents = !0;
                                    t.contents = b("bs_belt_MapString").set(t.contents, a, d.set(c, f))
                                });
                                var c = b("bs_belt_MapString").get(t.contents, a);
                                if (c !== void 0) {
                                    ca.contents = !0;
                                    t.contents = b("bs_belt_MapString").set(t.contents, a, b("bs_caml_option").valFromOption(c).sort(function (a, c) {
                                        return b("bs_caml_primitive").caml_float_compare(a.watermark, c.watermark)
                                    }));
                                    return
                                }
                            });
                            if (ca.contents) return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: t.contents,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            }; else return f;
                        case 7:
                            q = i._0;
                            if (q.length === 0) return f;
                            p = f.threads;
                            r = q.reduce(function (c, a) {
                                return b("bs_belt_Map").set(c, a.thread_id, new (b("ImmutableObject"))(a))
                            }, p);
                            hb(r, a.threadCallbacks.contents);
                            q.forEach(function (a) {
                                return u(f.fbid, a.thread_id)
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 8:
                            s = i._0;
                            if (s.length === 0) return f;
                            var da = f.pendingReadStatusThreads, ea = b("MercuryServerRequests").getForFBID(f.fbid);
                            s.forEach(function (a) {
                                var b = a.thread_id;
                                if (da.has(b)) {
                                    da["delete"](b);
                                    if (a.unread_count > 0) {
                                        ea.changeThreadReadStatus(b, !0, null, null, null, null);
                                        return
                                    } else return
                                }
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: da,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 9:
                            var fa = i._0;
                            b("qex")._("998180") && b("MessengerEnvironment").messengerdotcom && mb(f);
                            na.forEach(function (a) {
                                ma.forEach(function (c) {
                                    var d = fa.filter(function (d) {
                                        var e = d.filter;
                                        e = e == null ? b("MercuryFilters.bs").all : e;
                                        d = d.folder;
                                        d = d == null ? a === "inbox" : d === a;
                                        if (d) return e === c; else return !1
                                    });
                                    if (!b("gkx")("1275193") && !b("gkx")("1660458") || a !== "inbox" && a !== "action:archived" && a !== "pending" || c === b("MercuryFilters.bs").groups) {
                                        var e = [], g = {contents: !1};
                                        d.forEach(function (a) {
                                            a.thread_ids.forEach(function (a) {
                                                e.push(a)
                                            });
                                            var b = a.limit;
                                            if (a.thread_ids.length < b) {
                                                g.contents = !0;
                                                return
                                            }
                                        });
                                        return jb(f, a, c, g, e)
                                    }
                                    if (c !== b("MercuryFilters.bs").all) return kb(f, a, d, [b("MercuryFilters.bs").all, c]);
                                    var h = b("gkx")("1275193") ? [b("MercuryFilters.bs").all, b("MercuryFilters.bs").unread, b("MercuryFilters.bs").named, b("MercuryFilters.bs").unnamed] : [b("MercuryFilters.bs").all, b("MercuryFilters.bs").unread, b("MercuryFilters.bs").unsyncedChat];
                                    return kb(f, a, d, h)
                                })
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 10:
                            return lb(f, i._0);
                        case 11:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdatePinnedThreads");
                            p = i._0;
                            if (p.length === 0) return f;
                            p.forEach(function (b) {
                                if (!a.existingPinnedThreads.has(b)) {
                                    f.pinnedThreads.push(b);
                                    a.existingPinnedThreads.add(b);
                                    return
                                }
                            });
                            q = b("MercuryThreadInformer").getForFBID(f.fbid);
                            q.updatedThreadlist();
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 12:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UnSubscribeStatusUpdate");
                            r = i._0;
                            var ha = i._1;
                            return v(function (a) {
                                return a.page_unsubscribe_status !== ha
                            }, f, r, {page_unsubscribe_status: ha});
                        case 13:
                            s = i._0;
                            p = i._1;
                            q = i._2;
                            return v(void 0, f, s, {can_reply: p, cannot_reply_reason: q});
                        case 14:
                            r = i._0;
                            s = i._1;
                            p = b("bs_belt_Map").get(f.threads, r);
                            if (p === void 0) return f;
                            q = Object.assign({}, b("bs_caml_option").valFromOption(p));
                            ua(b("MercuryIDs").getParticipantIDFromUserID(f.fbid), q, s);
                            return v(void 0, f, r, q);
                        case 15:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangeFlag");
                            p = i._0;
                            s = i._1;
                            r = b("bs_belt_Map").get(f.threads, p);
                            if (r === void 0) return f;
                            q = b("bs_caml_option").valFromOption(r);
                            r = q.page_thread_info;
                            q = b("ImmutableObject").set(q, {page_thread_info: Object.assign(r == null ? {} : r, {flagged: s})});
                            r = b("bs_belt_Map").set(f.threads, p, q);
                            u(f.fbid, p);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 16:
                            s = i._0;
                            return v(function (a) {
                                return b("MessageRequestUtils").isMessageRequest(a)
                            }, f, s, {folder: "inbox"});
                        case 17:
                            q = i._0;
                            p = i._1;
                            return v(void 0, f, q, {custom_like_icon: p});
                        case 18:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("PromoteGroupAdmins");
                            r = i._0;
                            s = i._1;
                            q = b("bs_belt_Map").get(f.threads, r);
                            if (q === void 0) return f;
                            p = b("bs_caml_option").valFromOption(q);
                            q = b("bs_js_dict").fromArray(b("bs_js_dict").entries(p.admins));
                            p = b("ImmutableObject").set(p, {
                                admins: b("bs_array").fold_left(function (a, b) {
                                    a[b.admin_fbid] = b.admin_type;
                                    return a
                                }, q, s)
                            });
                            q = b("bs_belt_Map").set(f.threads, r, p);
                            u(f.fbid, r);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: q,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 19:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("RemoveGroupAdmins");
                            s = i._0;
                            p = i._1;
                            r = b("bs_belt_Map").get(f.threads, s);
                            if (r === void 0) return f;
                            q = b("bs_caml_option").valFromOption(r);
                            r = b("bs_js_dict").fromArray(b("bs_js_dict").entries(q.admins));
                            q = b("ImmutableObject").set(q, {
                                admins: b("bs_array").fold_left(function (c, a) {
                                    var d = b("bs_js_dict").get(c, a);
                                    d !== void 0 && ja(c, a);
                                    return c
                                }, r, p)
                            });
                            r = b("bs_belt_Map").set(f.threads, s, q);
                            u(f.fbid, s);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 20:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("JoinableMode");
                            p = i._0;
                            q = i._1;
                            return v(void 0, f, p, {joinable_mode: q});
                        case 21:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ApprovalMode");
                            s = i._0;
                            r = i._1;
                            return v(void 0, f, s, {approval_mode: r});
                        case 22:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ApprovalQueue");
                            p = i._0;
                            q = i._1;
                            s = i._2;
                            var ra = i._3, sa = i._4;
                            r = b("bs_belt_Map").get(f.threads, p);
                            if (r === void 0) return f;
                            r = b("bs_caml_option").valFromOption(r);
                            var w = r.group_approval_queue;
                            r = {
                                approval_queue_ids: r.approval_queue_ids.slice(),
                                group_approval_queue: w == null ? null : w.slice()
                            };
                            !(q == null) && r.approval_queue_ids.indexOf(q) === -1 && Object.assign(r, {approval_queue_ids: r.approval_queue_ids.concat([q])});
                            if (!(s == null)) {
                                w = r.group_approval_queue;
                                w == null ? Object.assign(r, {group_approval_queue: [s]}) : w.map(function (a) {
                                    return a.requester.id
                                }).indexOf(s.requester.id) === -1 && Object.assign(r, {group_approval_queue: w.concat([s])})
                            }
                            ra == null || Object.assign(r, {
                                approval_queue_ids: r.approval_queue_ids.filter(function (a) {
                                    return b("bs_caml_obj").caml_notequal(a, ra)
                                })
                            });
                            if (!(sa == null)) {
                                q = r.group_approval_queue;
                                Object.assign(r, {
                                    group_approval_queue: (q == null ? [] : q).filter(function (a) {
                                        return a.requester.id !== sa
                                    })
                                })
                            }
                            return v(void 0, f, p, r);
                        case 23:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("IsPinProtected");
                            w = i._0;
                            s = i._1;
                            return v(void 0, f, w, {is_pin_protected: s});
                        case 24:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateRtcCallData");
                            q = i._0;
                            p = i._1;
                            r = i._2;
                            w = i._3;
                            s = b("bs_belt_Map").get(f.threads, q);
                            if (s === void 0) return f;
                            if (p == null) {
                                s = b("bs_caml_option").valFromOption(s).rtc_call_data;
                                s = s == null ? void 0 : p
                            } else s = p;
                            return v(void 0, f, q, {
                                rtc_call_data: new (b("ImmutableObject"))({
                                    call_state: r,
                                    server_info_data: w,
                                    initiator_fbid: s
                                })
                            });
                        case 25:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateCommStatus");
                            p = i._0;
                            q = i._1;
                            return v(void 0, f, p, {comm_status: q});
                        case 26:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateCommItemOwner");
                            r = i._0;
                            w = i._1;
                            s = i._2;
                            p = i._3;
                            q = w == null ? {nodes: []} : {
                                nodes: [{
                                    admin: {
                                        id: w,
                                        name: s,
                                        profile_picture: {uri: p}
                                    }
                                }]
                            };
                            v(void 0, f, r, {comm_item_owners: q});
                            if (w == null) return v(void 0, f, r, {thread_associated_page_admin: null}); else return v(void 0, f, r, {
                                thread_associated_page_admin: {
                                    id: w,
                                    name: s,
                                    profile_picture: {uri: p}
                                }
                            });
                        case 27:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("EventRsvpChanged");
                            q = i._0;
                            var xa = i._1;
                            r = i._2;
                            w = b("bs_belt_Map").get(f.threads, q);
                            if (w === void 0) return f;
                            s = b("bs_caml_option").valFromOption(w).participants_event_status;
                            p = (s == null ? [] : s).filter(function (a) {
                                return b("bs_caml_obj").caml_notequal(a.participant_id, xa)
                            });
                            p.push({participant_id: xa, event_status: r});
                            return v(void 0, f, q, {participants_event_status: p});
                        case 28:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("GroupsSyncStatusChanged");
                            w = i._0;
                            s = i._1;
                            r = i._2;
                            return !(r == null) && b("bs_caml_obj").caml_equal(r, b("MessengerGroupsSyncStatus").OPT_IN) ? v(void 0, f, w, {groups_sync_status: s}) : v(void 0, f, w, {
                                groups_sync_status: s,
                                work_associated_group: null
                            });
                        case 29:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("GroupsSyncMetadataUpdate");
                            q = i._0;
                            p = i._1;
                            r = i._2;
                            w = i._3;
                            if (p == null) return v(void 0, f, q, {work_associated_group: null});
                            if (!b("bs_caml_obj").caml_equal(p, b("MessengerGroupsSyncStatus").OPT_IN)) if (b("bs_caml_obj").caml_equal(p, b("MessengerGroupsSyncStatus").UPDATE_EMOJI)) return v(void 0, f, q, {
                                work_associated_group: {
                                    id: r,
                                    group_icon: {emoji_codepoints: w}
                                }
                            }); else return v(void 0, f, q, {work_associated_group: null});
                            s = new (h || (h = b("URI")))(document.URL);
                            p = s.getDomain();
                            w = va.getURIBuilder().setString("idorvanity", r).getURI().setDomain(p == null ? "" : p.replace("messenger.com", "facebook.com")).setPort(s.getPort()).setProtocol("https");
                            return v(void 0, f, q, {
                                work_associated_group: {
                                    id: r,
                                    url: w.toString(),
                                    group_saves: {count: 0},
                                    group_events: {count: 0}
                                }
                            });
                        case 30:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("DescriptionChanged");
                            p = i._0;
                            s = i._1;
                            return v(void 0, f, p, {description: s});
                        case 31:
                            q = i._0;
                            r = i._1;
                            return v(void 0, f, q, {
                                solid_color: r.solid_color,
                                header_color: r.header_color,
                                footer_color: r.footer_color,
                                gradient_colors: r.gradient_colors,
                                theme_id: r.theme_id,
                                reactions: r.reactions
                            });
                        case 32:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateJoinableLink");
                            w = i._0;
                            p = i._1;
                            return v(void 0, f, w, {joinable_link: p});
                        case 33:
                            var Ca = i._0;
                            s = b("bs_belt_Map").toArray(f.threads).reduce(function (c, d) {
                                var a = d[1];
                                d = d[0];
                                if (a.folder === Ca) {
                                    u(f.fbid, d);
                                    return b("bs_belt_Map").set(c, d, b("ImmutableObject").set(a, {
                                        unread_count: 0,
                                        unread_mentions_count: 0
                                    }))
                                } else return c
                            }, f.threads);
                            f.unreadCounts[Ca] = new Set();
                            q = b("MercuryThreadInformer").getForFBID(f.fbid);
                            q.updatedUnreadState();
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: s,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 34:
                            var Ga = i._0;
                            b("gkx")("1199097") && (b("ChatReliabilityInstrumentation").logDELETE_THREAD(Ga), b("LogHistory").getInstance("messenger_state").debug("delete_thread", Ga));
                            r = b("bs_belt_Map").remove(f.threads, Ga);
                            f.orderedMessageLists["delete"](Ga);
                            f.messages.forEach(function (a, c, d) {
                                if (!b("bs_caml_obj").caml_equal(a.thread_id, Ga)) return;
                                f.messages["delete"](a.message_id);
                                c = a.offline_threading_id;
                                if (!(c == null)) {
                                    d = f.localIDsMap.get(c);
                                    d == null || (f.messages["delete"](d), f.localIDsMap["delete"](c))
                                }
                                f.localIDsMap["delete"](a.message_id)
                            });
                            pa(f.fbid, Ga);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 35:
                            w = i._0;
                            return Ra(f, a, [w.message_id, w, i._1]);
                        case 36:
                            p = [i._0, i._1, i._2];
                            var x = p[2];
                            q = p[1];
                            var y = p[0];
                            if (q.length === 0) return f;
                            s = Ta(f, [y, q, x]);
                            r = 0;
                            x !== void 0 && b("bs_caml_obj").caml_equal(b("bs_caml_option").valFromOption(x), b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE) || (r = 1);
                            r === 1 && b("MercuryServerRequests").getForFBID(s.fbid).deleteMessages(y, q);
                            return b("bs_belt_Array").reduce(q, s, function (d, e) {
                                var c = D(d, e), a = b("bs_belt_Map").get(d.threads, y);
                                if (a !== void 0) {
                                    a = b("bs_caml_option").valFromOption(a);
                                    a = b("ImmutableObject").set(b("ImmutableObject").set(a, Ua(d, y)), {message_count: a.message_count - 1 | 0});
                                    a = b("bs_belt_Map").set(d.threads, y, a);
                                    u(d.fbid, y);
                                    a = {
                                        fbid: d.fbid,
                                        deliveryReceipts: d.deliveryReceipts,
                                        readReceiptsPerThread: d.readReceiptsPerThread,
                                        ignoredIds: d.ignoredIds,
                                        blockedIds: d.blockedIds,
                                        pendingFolderUnseenCount: d.pendingFolderUnseenCount,
                                        typing: d.typing,
                                        threads: a,
                                        pendingReadStatusThreads: d.pendingReadStatusThreads,
                                        messages: d.messages,
                                        localIDsMap: d.localIDsMap,
                                        messagesWithUploadsInFlight: d.messagesWithUploadsInFlight,
                                        threadlistOrderMap: d.threadlistOrderMap,
                                        pinnedThreads: d.pinnedThreads,
                                        montage: d.montage,
                                        orderedMessageLists: d.orderedMessageLists,
                                        unreadCounts: d.unreadCounts,
                                        initialUnreadCounts: d.initialUnreadCounts,
                                        unseenTimestamp: d.unseenTimestamp
                                    }
                                } else a = d;
                                if (c !== void 0) {
                                    d = b("bs_caml_option").valFromOption(c);
                                    Va(b("bs_caml_option").some(y), d);
                                    Na(a.fbid, y, e, x, d.attachments)
                                }
                                return a
                            });
                        case 37:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangeFolder");
                            return Fa(f, i._0, i._1, 1);
                        case 38:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangeMuteSettings");
                            w = i._0;
                            p = i._1;
                            r = b("bs_belt_Map").get(f.threads, w);
                            if (r === void 0) return f;
                            q = b("bs_caml_option").valFromOption(r);
                            var Ha;
                            switch (p.TAG | 0) {
                                case 0:
                                    Ha = b("ImmutableObject").set(q, {reactions_mute_mode: p._0 ? 1 : 0});
                                    break;
                                case 1:
                                    Ha = b("ImmutableObject").set(q, {mentions_mute_mode: p._0 ? 1 : 0});
                                    break;
                                case 2:
                                    s = p._0;
                                    Ha = b("ImmutableObject").set(q, {mute_until: s === 0 ? void 0 : s});
                                    break
                            }
                            r = b("bs_belt_Map").set(f.threads, w, Ha);
                            u(f.fbid, w);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 39:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangeArchivedStatus");
                            p = i._0;
                            q = i._1;
                            s = b("bs_belt_Map").get(f.threads, p);
                            if (s === void 0) return f;
                            w = b("bs_caml_option").valFromOption(s);
                            if (w.is_archived === q) return f;
                            r = b("MessengerFolders.bs").getFromMeta(w);
                            s = w.comm_status;
                            s = s == null ? b("ImmutableObject").set(w, {is_archived: q}) : b("ImmutableObject").set(w, {
                                is_archived: q,
                                comm_status: q ? b("PageCommItemStatus").DONE : b("PageCommItemStatus").TODO
                            });
                            w = b("bs_belt_Map").set(f.threads, p, s);
                            Ba(f, s, r);
                            Ea(f, s);
                            u(f.fbid, p);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: w,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 40:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangePageFollowUpStatus");
                            q = i._0;
                            r = i._1;
                            s = b("bs_belt_Map").get(f.threads, q);
                            if (s === void 0) return f;
                            p = b("bs_caml_option").valFromOption(s);
                            if (p.is_page_follow_up === r) return f;
                            w = b("ImmutableObject").set(p, {is_page_follow_up: r});
                            s = b("bs_belt_Map").set(f.threads, q, w);
                            u(f.fbid, q);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: s,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 41:
                            p = i._0;
                            r = i._1;
                            w = i._2;
                            q = i._3;
                            s = i._4;
                            var z = b("bs_belt_Map").get(f.threads, p);
                            if (z === void 0) return f;
                            z = b("bs_caml_option").valFromOption(z);
                            w = ib(f, z, w, f.pendingReadStatusThreads, r);
                            w = w !== void 0 && z.last_message_timestamp > z.last_read_timestamp ? b("bs_caml_option").some(Object.assign(b("bs_caml_option").valFromOption(w), {last_read_timestamp: z.last_message_timestamp})) : w;
                            if (w !== void 0) {
                                w = b("ImmutableObject").set(z, b("bs_caml_option").valFromOption(w));
                                var A = b("bs_belt_Map").set(f.threads, p, w);
                                if (q) {
                                    q = !z.read_only && z.folder === "inbox";
                                    var B = b("MercuryServerRequests").getForFBID(f.fbid);
                                    B.changeThreadReadStatus(w.thread_id, r, s, w.last_read_timestamp, q, w.last_message_type)
                                }
                                B = A
                            } else B = f.threads;
                            s = b("MessengerFolders.bs").getFromMeta(z);
                            r ? (ta(f, [p], s, b("MercuryFilters.bs").unread), Aa(f, s, b("bs_caml_option").some(p))) : (b("gkx")("1275193") || b("gkx")("1660458") ? Da(f, s, p) : wa(f, [p], s, b("MercuryFilters.bs").unread), ya(f, s, b("bs_caml_option").some(p)));
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: B,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 42:
                            var C = i._0;
                            q = b("bs_belt_Option").getWithDefault(b("bs_belt_Option").map(b("bs_caml_option").nullable_to_opt(f.orderedMessageLists.get(C)), function (a) {
                                return {messageLoadingState: a.messageLoadingState, messageIDs: []}
                            }), {messageLoadingState: 0, messageIDs: []});
                            f.orderedMessageLists.set(C, q);
                            w = b("bs_belt_Option").map(b("bs_belt_Map").get(f.threads, C), function (a) {
                                return b("ImmutableObject").set(a, {message_count: 0})
                            });
                            if (w !== void 0) {
                                var La = b("bs_caml_option").valFromOption(w);
                                A = b("bs_belt_Map").set(f.threads, C, La);
                                ma.forEach(function (a) {
                                    return ta(f, [C], b("MessengerFolders.bs").getFromMeta(La), a)
                                });
                                z = A
                            } else z = f.threads;
                            za.forEach(function (a) {
                                a = b("bs_js_dict").get(f.unreadCounts, a);
                                if (a !== void 0) {
                                    b("bs_caml_option").valFromOption(a)["delete"](C);
                                    return
                                }
                            });
                            qa(f.fbid, C);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: z,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 43:
                            r = [i._0, i._1, i._2];
                            s = Sa(f, [r[0], r[1]]);
                            p = s.thread_id;
                            B = Ta(f, [p, [s.message_id], r[2]]);
                            q = a.localTitanMessageCount.get(p);
                            q == null || a.localTitanMessageCount.set(p, Math.max(0, q - 1 | 0));
                            return B;
                        case 44:
                            w = [i._0, i._1];
                            A = Sa(f, [w[0], w[1]]);
                            b("MercuryServerRequests").getForFBID(f.fbid).sendNewMessage(Object.assign(A, {preview_attachments: void 0}));
                            return f;
                        case 45:
                            z = [i._0, i._1, i._2, i._3];
                            s = z[2];
                            r = z[1];
                            p = z[0];
                            q = D(f, p);
                            if (q === void 0) return f;
                            B = b("bs_caml_option").valFromOption(q);
                            w = b("bs_js_dict").map(function (a) {
                                return a
                            }, b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(B.reactions), {}));
                            r !== void 0 ? w[s] = r : Pa(w, s);
                            A = Object.assign(Object.assign({}, B), {reactions: w});
                            q = B.thread_id;
                            q == null || Ka(f.fbid, q, p, z[3]);
                            return F(f, [p, A]);
                        case 46:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("MontageDirectExpire");
                            r = i._0;
                            i._1;
                            s = D(f, r);
                            if (s === void 0) return f;
                            w = b("bs_caml_option").valFromOption(s);
                            B = w.attachments;
                            if (B == null) return f;
                            if (B.length === 0) return f;
                            q = b("bs_caml_array").caml_array_get(B, 0);
                            z = q.share;
                            if (z == null) return f;
                            p = z.target;
                            if (p == null) return f;
                            A = p.message_state;
                            if (A == null) return f;
                            s = Object.assign(Object.assign({}, w), {attachments: b("bs_caml_array").caml_array_set(b("bs_array").copy(B), 0, Object.assign(Object.assign({}, q), {share: Object.assign(Object.assign({}, z), {target: Object.assign(Object.assign({}, p), {message_state: "EXPIRED"})})}))});
                            return F(f, [r, s]);
                        case 47:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("LiveLocationUpdate");
                            A = [i._0, i._1, i._2];
                            w = A[0];
                            B = D(f, w);
                            if (B === void 0) return f;
                            q = b("bs_caml_option").valFromOption(B);
                            z = q.attachments;
                            if (z == null) return f;
                            if (z.length === 0) return f;
                            p = b("bs_caml_array").caml_array_get(z, 0);
                            r = p.share;
                            if (r == null) return f;
                            s = r.target;
                            if (s == null) return f;
                            B = b("bs_array").copy(z);
                            b("bs_caml_array").caml_array_set(B, 0, Object.assign(Object.assign({}, p), {share: Object.assign(Object.assign({}, r), {target: Object.assign(Object.assign({}, A[1]), {live_location_id: s.live_location_id})})}));
                            z = Object.assign(Object.assign({}, q), {attachments: B});
                            p = q.thread_id;
                            p == null || Ka(f.fbid, p, w, A[2]);
                            return F(f, [w, z]);
                        case 48:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ReplaceMessage");
                            r = i._0;
                            s = i._1;
                            var E = r.replaced_message_id;
                            if (E == null) return f;
                            B = D(f, E);
                            if (B === void 0) return f;
                            q = r.message_id;
                            p = {timestamp: r.timestamp};
                            A = b("bs_caml_option").nullable_to_opt(r.status);
                            A !== void 0 && (p.status = b("bs_caml_option").valFromOption(A));
                            w = b("bs_caml_option").nullable_to_opt(r.log_message_data);
                            w !== void 0 && (p.log_message_data = b("bs_caml_option").valFromOption(w));
                            z = b("bs_caml_option").nullable_to_opt(r.meta_ranges);
                            z !== void 0 && (p.meta_ranges = b("bs_caml_option").valFromOption(z));
                            A = b("bs_caml_option").nullable_to_opt(r.ranges);
                            A !== void 0 && (p.ranges = b("bs_caml_option").valFromOption(A));
                            w = b("bs_caml_option").nullable_to_opt(r.raw_attachments);
                            w !== void 0 && (p.raw_attachments = b("bs_caml_option").valFromOption(w));
                            z = b("bs_caml_option").nullable_to_opt(r.attachments);
                            z !== void 0 && (p.attachments = b("bs_caml_option").valFromOption(z));
                            A = b("bs_caml_option").nullable_to_opt(r.body);
                            A !== void 0 && (p.body = b("bs_caml_option").valFromOption(A));
                            w = b("bs_caml_option").nullable_to_opt(r.platform_xmd);
                            w !== void 0 && (p.platform_xmd = b("bs_caml_option").valFromOption(w));
                            z = b("bs_caml_option").nullable_to_opt(r.profile_ranges);
                            z !== void 0 && (p.profile_ranges = b("bs_caml_option").valFromOption(z));
                            A = p;
                            w = Object.assign(Object.assign({}, b("bs_caml_option").valFromOption(B)), A);
                            b("MercuryMessageIDs.bs").addServerID(q, q);
                            var G = F(f, [q, w]);
                            if (q !== E) {
                                G.messages["delete"](E);
                                G.localIDsMap.set(E, q);
                                z = b("bs_belt_Option").flatMap(b("bs_caml_option").nullable_to_opt(r.thread_id), function (a) {
                                    return b("bs_caml_option").nullable_to_opt(G.orderedMessageLists.get(a))
                                });
                                p = r.thread_id;
                                if (z !== void 0 && !(p == null)) {
                                    B = Qa(G, [q].concat(z.messageIDs.filter(function (a) {
                                        return a !== E
                                    })));
                                    G.orderedMessageLists.set(p, {
                                        messageLoadingState: z.messageLoadingState,
                                        messageIDs: B
                                    })
                                }
                            }
                            A = r.message_id;
                            w = r.thread_id;
                            w == null || (Ka(G.fbid, w, E, s), Ka(G.fbid, w, A, s));
                            return {
                                fbid: G.fbid,
                                deliveryReceipts: G.deliveryReceipts,
                                readReceiptsPerThread: G.readReceiptsPerThread,
                                ignoredIds: G.ignoredIds,
                                blockedIds: G.blockedIds,
                                pendingFolderUnseenCount: G.pendingFolderUnseenCount,
                                typing: G.typing,
                                threads: G.threads,
                                pendingReadStatusThreads: G.pendingReadStatusThreads,
                                messages: G.messages,
                                localIDsMap: G.localIDsMap,
                                messagesWithUploadsInFlight: G.messagesWithUploadsInFlight,
                                threadlistOrderMap: G.threadlistOrderMap,
                                pinnedThreads: G.pinnedThreads,
                                montage: G.montage,
                                orderedMessageLists: G.orderedMessageLists,
                                unreadCounts: G.unreadCounts,
                                initialUnreadCounts: G.initialUnreadCounts,
                                unseenTimestamp: G.unseenTimestamp
                            };
                        case 49:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateLocalTitanMessagesCount");
                            q = [i._0, i._1];
                            p = q[0];
                            z = D(f, q[1]);
                            if (z !== void 0 && b("MessengerMessage.bs").isTitanMessage(b("bs_caml_option").valFromOption(z))) {
                                B = a.localTitanMessageCount.get(p);
                                B == null ? a.localTitanMessageCount.set(p, 1) : a.localTitanMessageCount.set(p, 1 + B | 0)
                            }
                            return f;
                        case 50:
                            return Za(f, a, i._0, i._1);
                        case 51:
                            r = i._0;
                            w = i._1;
                            A = i._2;
                            s = r.author;
                            if (s == null) q = !1; else {
                                z = b("MercuryIDs").getUserIDFromParticipantID(s);
                                q = z == null ? !1 : z === b("CurrentUser").getID()
                            }
                            p = r.offline_threading_id;
                            B = p == null ? void 0 : b("bs_caml_option").nullable_to_opt(f.localIDsMap.get(p));
                            s = B !== void 0;
                            if (b("gkx")("1491696") && !q && b("bs_caml_obj").caml_equal(w, b("bs_caml_option").some(b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE)) && s) return f;
                            z = cb(f, r, w, A == null ? void 0 : b("bs_caml_option").some(A));
                            ab(z.fbid, w, r, function (a, b, c) {
                                a.informNewMessage(b, c)
                            });
                            p = z.fbid;
                            if (r.folder === "pending" && b("bs_caml_obj").caml_equal(w, b("bs_caml_option").some(b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE))) B = {
                                fbid: z.fbid,
                                deliveryReceipts: z.deliveryReceipts,
                                readReceiptsPerThread: z.readReceiptsPerThread,
                                ignoredIds: z.ignoredIds,
                                blockedIds: z.blockedIds,
                                pendingFolderUnseenCount: z.pendingFolderUnseenCount + 1 | 0,
                                typing: z.typing,
                                threads: z.threads,
                                pendingReadStatusThreads: z.pendingReadStatusThreads,
                                messages: z.messages,
                                localIDsMap: z.localIDsMap,
                                messagesWithUploadsInFlight: z.messagesWithUploadsInFlight,
                                threadlistOrderMap: z.threadlistOrderMap,
                                pinnedThreads: z.pinnedThreads,
                                montage: z.montage,
                                orderedMessageLists: z.orderedMessageLists,
                                unreadCounts: z.unreadCounts,
                                initialUnreadCounts: z.initialUnreadCounts,
                                unseenTimestamp: z.unseenTimestamp
                            }; else if (r.folder === "inbox") {
                                q = r.thread_id;
                                B = q == null ? z : Fa(z, q, r.folder, 0)
                            } else {
                                s = r.thread_id;
                                if (s == null) B = z; else {
                                    q = eb(z.fbid, z.threads, r, A);
                                    if (q !== void 0) {
                                        A = b("bs_caml_option").valFromOption(q);
                                        q = z.fbid;
                                        var H = z.deliveryReceipts, I = z.readReceiptsPerThread, J = z.ignoredIds,
                                            K = z.blockedIds, L = z.pendingFolderUnseenCount, M = z.typing,
                                            N = b("bs_belt_Map").set(z.threads, A.thread_id, A),
                                            O = z.pendingReadStatusThreads, P = z.messages, Q = z.localIDsMap,
                                            R = z.messagesWithUploadsInFlight, S = z.threadlistOrderMap,
                                            T = z.pinnedThreads, U = z.montage, V = z.orderedMessageLists,
                                            W = z.unreadCounts, X = z.initialUnreadCounts, Y = z.unseenTimestamp;
                                        q = {
                                            fbid: q,
                                            deliveryReceipts: H,
                                            readReceiptsPerThread: I,
                                            ignoredIds: J,
                                            blockedIds: K,
                                            pendingFolderUnseenCount: L,
                                            typing: M,
                                            threads: N,
                                            pendingReadStatusThreads: O,
                                            messages: P,
                                            localIDsMap: Q,
                                            messagesWithUploadsInFlight: R,
                                            threadlistOrderMap: S,
                                            pinnedThreads: T,
                                            montage: U,
                                            orderedMessageLists: V,
                                            unreadCounts: W,
                                            initialUnreadCounts: X,
                                            unseenTimestamp: Y
                                        };
                                        if (b("bs_caml_obj").caml_equal(w, b("bs_caml_option").some(b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE))) {
                                            H = r.offline_threading_id;
                                            H == null ? Object.assign(r, {folder: A.folder}) : b("bs_caml_obj").caml_equal(b("bs_caml_option").nullable_to_opt(Q.get(H)), H) ? Object.assign(r, {
                                                client_message_id: r.offline_threading_id,
                                                status: b("MercuryActionStatus").SUCCESS,
                                                action_type: b("MercuryActionType").SEND_MESSAGE
                                            }) : Object.assign(r, {folder: A.folder})
                                        }
                                        Ea(q, A);
                                        I = Object.assign({}, A);
                                        J = r.offline_threading_id;
                                        if (!(J == null)) {
                                            if (J !== r.message_id) {
                                                Object.assign(I, {last_message_timestamp: r.timestamp});
                                                K = r.comm_status;
                                                K == null || Object.assign(I, {last_message_id: r.message_id})
                                            }
                                            L = r.author;
                                            if (!(b("cr:1299779") == null) && !(L == null)) {
                                                M = b("MercuryIDs").getParticipantIDFromUserID(p);
                                                r.has_attachment && M === L && Ya(s, r.message_id, J)
                                            }
                                        }
                                        N = r.comm_status;
                                        O = I.comm_status;
                                        !(N == null) && !(O == null) && b("bs_caml_obj").caml_notequal(O, b("PageCommItemStatus").FOLLOW_UP) && Object.assign(I, {comm_status: N});
                                        P = r.creator_info;
                                        !(P == null) && b("bs_caml_obj").caml_equal(P.pageID, p) && Object.assign(I, {folder: r.folder});
                                        R = r.author;
                                        R == null || bb(I, R);
                                        B = v(void 0, q, s, I)
                                    } else B = z
                                }
                            }
                            S = $a(B, a, r, w);
                            T = fb(S, r);
                            U = b("bs_caml_obj").caml_notequal(r.author, b("MercuryViewer").getID());
                            V = r.thread_id;
                            W = r.author;
                            if (!U) return T;
                            if (V == null) return T;
                            if (W == null) return T;
                            X = ka(T.typing, V, W);
                            if (X !== T.typing) return {
                                fbid: T.fbid,
                                deliveryReceipts: T.deliveryReceipts,
                                readReceiptsPerThread: T.readReceiptsPerThread,
                                ignoredIds: T.ignoredIds,
                                blockedIds: T.blockedIds,
                                pendingFolderUnseenCount: T.pendingFolderUnseenCount,
                                typing: X,
                                threads: T.threads,
                                pendingReadStatusThreads: T.pendingReadStatusThreads,
                                messages: T.messages,
                                localIDsMap: T.localIDsMap,
                                messagesWithUploadsInFlight: T.messagesWithUploadsInFlight,
                                threadlistOrderMap: T.threadlistOrderMap,
                                pinnedThreads: T.pinnedThreads,
                                montage: T.montage,
                                orderedMessageLists: T.orderedMessageLists,
                                unreadCounts: T.unreadCounts,
                                initialUnreadCounts: T.initialUnreadCounts,
                                unseenTimestamp: T.unseenTimestamp
                            }; else return T;
                        case 52:
                            Y = i._0;
                            Q = i._1;
                            H = i._2;
                            A = b("bs_caml_obj").caml_notequal(H == null ? void 0 : b("bs_caml_option").some(H), !1);
                            K = b("bs_caml_obj").caml_equal(H == null ? void 0 : b("bs_caml_option").some(H), !0);
                            M = f.fbid;
                            L = b("MercuryIDs").getParticipantIDFromUserID(M);
                            J = $a(f, a, Y, Q);
                            ab(J.fbid, Q, Y, function (a, b, c) {
                                a.informNewLogMessage(b, c)
                            });
                            O = cb(J, Y, Q, H == null ? void 0 : b("bs_caml_option").some(H));
                            N = Y.thread_id;
                            if (N == null) P = O; else {
                                p = b("bs_belt_Map").get(O.threads, N);
                                if (p !== void 0) {
                                    R = Object.assign({}, b("bs_caml_option").valFromOption(p));
                                    Ea(O, R);
                                    R.last_message_timestamp < Y.timestamp && Object.assign(R, {last_message_timestamp: Y.timestamp});
                                    if (Y.timestamp >= R.timestamp || b("gkx")("1183082")) {
                                        q = Y.log_message_type;
                                        if (!(q == null)) if (b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").SUBSCRIBE) && !K) {
                                            s = Y.log_message_data;
                                            if (s == null) I = []; else {
                                                z = s.added_participants;
                                                I = z == null ? [] : z
                                            }
                                            ua(L, R, I);
                                            u(M, N)
                                        } else if (b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").UNSUBSCRIBE) && !K) {
                                            B = Y.log_message_data;
                                            if (B == null) w = []; else {
                                                S = B.removed_participants;
                                                w = S == null ? [] : S
                                            }
                                            db(L, R, w);
                                            u(M, N)
                                        } else if (b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").THREAD_IMAGE)) {
                                            if (!A) {
                                                r = Y.log_message_data;
                                                if (r == null) U = null; else {
                                                    V = r.image;
                                                    U = V == null ? null : V.preview_url
                                                }
                                                Object.assign(R, {image_src: U})
                                            }
                                        } else if (b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").THREAD_NAME)) {
                                            W = Y.log_message_data;
                                            if (!(W == null)) {
                                                X = W.name;
                                                !(X == null) && R.name === X || u(M, N);
                                                Object.assign(R, {name: W.name})
                                            }
                                        } else b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").GENERIC_ADMIN_TEXT) && Ia(M, R, Y, N)
                                    }
                                    P = v(void 0, O, N, R)
                                } else P = O
                            }
                            return fb(P, Y);
                        case 53:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("PinMessage");
                            if (b("gkx")("1179386")) {
                                T = i._0;
                                var pb = i._1;
                                J = b("bs_belt_Map").get(f.threads, T);
                                if (J !== void 0 && !(pb == null)) {
                                    Q = b("bs_caml_option").valFromOption(J);
                                    H = Q.pinned_messages;
                                    p = H == null ? [pb.message] : H.findIndex(function (a) {
                                        return a.message_id === pb.message.message_id
                                    }) === -1 ? [pb.message] : void 0;
                                    if (p !== void 0) {
                                        s = b("ImmutableObject").set(Q, {pinned_messages: b("bs_belt_Option").getExn(p)});
                                        z = b("bs_belt_Map").set(f.threads, T, s);
                                        u(f.fbid, T);
                                        I = z
                                    } else I = f.threads
                                } else I = f.threads;
                                return {
                                    fbid: f.fbid,
                                    deliveryReceipts: f.deliveryReceipts,
                                    readReceiptsPerThread: f.readReceiptsPerThread,
                                    ignoredIds: f.ignoredIds,
                                    blockedIds: f.blockedIds,
                                    pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                    typing: f.typing,
                                    threads: I,
                                    pendingReadStatusThreads: f.pendingReadStatusThreads,
                                    messages: f.messages,
                                    localIDsMap: f.localIDsMap,
                                    messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                    threadlistOrderMap: f.threadlistOrderMap,
                                    pinnedThreads: f.pinnedThreads,
                                    montage: f.montage,
                                    orderedMessageLists: f.orderedMessageLists,
                                    unreadCounts: f.unreadCounts,
                                    initialUnreadCounts: f.initialUnreadCounts,
                                    unseenTimestamp: f.unseenTimestamp
                                }
                            } else return f;
                        case 54:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UnpinMessage");
                            if (b("gkx")("1179386")) {
                                K = i._0;
                                var Z = i._1;
                                B = b("bs_belt_Map").get(f.threads, K);
                                if (B !== void 0 && !(Z == null)) {
                                    S = b("bs_caml_option").valFromOption(B);
                                    L = S.pinned_messages;
                                    w = L == null ? void 0 : L.filter(function (a) {
                                        return a.message_id !== Z.message_id
                                    });
                                    if (w !== void 0) {
                                        A = b("ImmutableObject").set(S, {pinned_messages: b("bs_belt_Option").getExn(w)});
                                        r = b("bs_belt_Map").set(f.threads, K, A);
                                        u(f.fbid, K);
                                        V = r
                                    } else V = f.threads
                                } else V = f.threads;
                                return {
                                    fbid: f.fbid,
                                    deliveryReceipts: f.deliveryReceipts,
                                    readReceiptsPerThread: f.readReceiptsPerThread,
                                    ignoredIds: f.ignoredIds,
                                    blockedIds: f.blockedIds,
                                    pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                    typing: f.typing,
                                    threads: V,
                                    pendingReadStatusThreads: f.pendingReadStatusThreads,
                                    messages: f.messages,
                                    localIDsMap: f.localIDsMap,
                                    messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                    threadlistOrderMap: f.threadlistOrderMap,
                                    pinnedThreads: f.pinnedThreads,
                                    montage: f.montage,
                                    orderedMessageLists: f.orderedMessageLists,
                                    unreadCounts: f.unreadCounts,
                                    initialUnreadCounts: f.initialUnreadCounts,
                                    unseenTimestamp: f.unseenTimestamp
                                }
                            } else return f;
                        case 55:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangePinnedStatus");
                            U = i._0;
                            X = i._1;
                            W = i._2;
                            q = b("bs_belt_Map").get(f.threads, U);
                            M = !1;
                            if (X && !a.existingPinnedThreads.has(U)) f.pinnedThreads.push(U), a.existingPinnedThreads.add(U), M = !0; else if (!X && a.existingPinnedThreads.has(U)) {
                                N = f.pinnedThreads.indexOf(U);
                                N > -1 && f.pinnedThreads.splice(N, 1);
                                a.existingPinnedThreads["delete"](U);
                                M = !0
                            }
                            if (q !== void 0) {
                                R = b("bs_caml_option").valFromOption(q);
                                O = b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(R.thread_pin_timestamp), 0);
                                if (R.is_pinned !== X || O !== W) {
                                    P = b("ImmutableObject").set(R, {is_pinned: X, thread_pin_timestamp: W});
                                    Y = b("bs_belt_Map").set(f.threads, U, P);
                                    u(f.fbid, U);
                                    M = !0;
                                    J = Y
                                } else J = f.threads
                            } else J = f.threads;
                            if (M) return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: J,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            }; else return f;
                        case 56:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("InvalidateMontageState");
                            H = i._0;
                            Q = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            Q[H] = [];
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: Q,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 57:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("NewMontageMessage");
                            p = i._0;
                            s = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            T = p.actor.id;
                            z = b("bs_js_dict").get(s, T);
                            z !== void 0 ? (z.push(p), s[T] = z) : s[T] = [p];
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: s,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 58:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("InstantiateMontageThread");
                            I = i._0;
                            B = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            L = b("bs_js_dict").get(B, I);
                            L !== void 0 || (B[I] = []);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: B,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 59:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("DeleteMontageMessage");
                            var rb = i._0, $ = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            S = Object.keys($);
                            S.forEach(function (a) {
                                var c = b("bs_js_dict").get($, a);
                                if (c === void 0) return;
                                c = c.filter(function (a) {
                                    return a.id !== rb.messageFBID
                                });
                                $[a] = c
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: $,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 60:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("AddFetchedAllHistoryMarkers");
                            w = [i._0, i._1];
                            var sb = w[1];
                            w[0].forEach(function (a) {
                                var b = f.orderedMessageLists.get(a);
                                b == null ? f.orderedMessageLists.set(a, {
                                    messageLoadingState: 1,
                                    messageIDs: []
                                }) : f.orderedMessageLists.set(a, {messageLoadingState: 1, messageIDs: b.messageIDs});
                                return Ma(f.fbid, a, sb)
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 61:
                            A = i._0;
                            A.forEach(function (c) {
                                var a = c.folder;
                                if (!za.includes(a)) return;
                                c = c.thread_fbids.map(function (a) {
                                    return b("MercuryIDs").getThreadIDFromThreadFBID(a)
                                }).concat(c.other_user_fbids.map(function (a) {
                                    return b("MercuryIDs").getThreadIDFromUserID(a)
                                }));
                                f.unreadCounts[a] = new Set(c);
                                a = b("MercuryThreadInformer").getForFBID(f.fbid);
                                a.updatedUnreadState()
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 62:
                            K = i._0;
                            var d = {contents: f.unseenTimestamp};
                            K.forEach(function (c) {
                                f.initialUnreadCounts[c.folder] = c.unread_count;
                                c.unread_count === 0 && (f.unreadCounts[c.folder] = new Set());
                                c.folder === "inbox" && (d.contents = b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(c.seen_timestamp), d.contents), a.fallbackUnseenCount.contents = c.unseen_count);
                                c = b("MercuryThreadInformer").getForFBID(f.fbid);
                                c.updatedUnreadState();
                                c.updatedUnseenState()
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: d.contents
                            };
                        case 63:
                            var tb = i._0;
                            za.forEach(function (a) {
                                a = b("bs_js_dict").get(f.unreadCounts, a);
                                if (a === void 0) return;
                                var c = b("bs_caml_option").valFromOption(a);
                                b("bs_js_dict").entries(tb).forEach(function (a) {
                                    var b = a[0];
                                    if (c.has(b)) {
                                        c.add(a[1]);
                                        c["delete"](b);
                                        return
                                    }
                                })
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 64:
                            r = i._0;
                            V = i._1;
                            N = i._2;
                            q = i._3;
                            O = i._4;
                            R = Ja(f, r, [V]);
                            X = D(R, V);
                            if (X !== void 0) {
                                W = b("bs_caml_option").valFromOption(X);
                                Va(b("bs_caml_option").some(r), W);
                                P = b("MessengerMessage.bs").makeFakeMessage(W.message_id, W.thread_id, W.author, W.action_type, W.timestamp, {
                                    removed_timestamp: q,
                                    message_unsendability_status: b("MessageUnsendabilityStatus").DENY_TOMBSTONE_MESSAGE,
                                    unsender: {id: N}
                                });
                                U = F(R, [V, P]);
                                Y = W.thread_id;
                                if (Y == null) return U;
                                M = Wa(U, V, Y);
                                Ka(M.fbid, Y, V, O);
                                Na(M.fbid, Y, V, O, W.attachments);
                                J = b("bs_belt_Map").get(M.threads, Y);
                                if (J === void 0) return M;
                                H = b("bs_caml_option").valFromOption(J);
                                Q = Xa(W.profile_ranges, M.fbid);
                                z = b("ImmutableObject").set(b("ImmutableObject").set(H, Ua(M, Y)), {unread_mentions_count: H.unread_mentions_count - Q | 0});
                                T = b("bs_belt_Map").set(M.threads, Y, z);
                                u(M.fbid, Y);
                                return {
                                    fbid: M.fbid,
                                    deliveryReceipts: M.deliveryReceipts,
                                    readReceiptsPerThread: M.readReceiptsPerThread,
                                    ignoredIds: M.ignoredIds,
                                    blockedIds: M.blockedIds,
                                    pendingFolderUnseenCount: M.pendingFolderUnseenCount,
                                    typing: M.typing,
                                    threads: T,
                                    pendingReadStatusThreads: M.pendingReadStatusThreads,
                                    messages: M.messages,
                                    localIDsMap: M.localIDsMap,
                                    messagesWithUploadsInFlight: M.messagesWithUploadsInFlight,
                                    threadlistOrderMap: M.threadlistOrderMap,
                                    pinnedThreads: M.pinnedThreads,
                                    montage: M.montage,
                                    orderedMessageLists: M.orderedMessageLists,
                                    unreadCounts: M.unreadCounts,
                                    initialUnreadCounts: M.initialUnreadCounts,
                                    unseenTimestamp: M.unseenTimestamp
                                }
                            }
                            Oa(R.fbid, r, V, O);
                            return R;
                        case 65:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateConnectivityStatus");
                            p = i._0;
                            s = i._1;
                            L = b("ThreadConnectivityStatus.bs").toGraphQLValue(s);
                            I = b("bs_belt_Map").get(f.threads, p);
                            if (I === void 0) return f;
                            B = b("bs_caml_option").valFromOption(I);
                            S = B.thread_connectivity_data;
                            w = S == null ? b("ImmutableObject").set(B, {
                                thread_connectivity_data: {
                                    connectivity_status: L,
                                    first_sender_id: null
                                }
                            }) : b("ImmutableObject").set(B, {
                                thread_connectivity_data: {
                                    connectivity_status: L,
                                    first_sender_id: S.first_sender_id
                                }
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: b("bs_belt_Map").set(f.threads, p, w),
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 66:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("DeltaMarkFolderSeen");
                            var ub = i._0;
                            return b("bs_belt_Array").reduceU(ub.folders, f, function (c, a) {
                                a = b("bs_js_dict").get(j, a);
                                if (a !== void 0) return ob(c, Number(ub.timestamp), a); else return c
                            });
                        case 67:
                            A = [i._0, i._1, i._2, i._3];
                            var vb = A[2];
                            K = A[0];
                            X = D(f, K);
                            if (X === void 0) return f;
                            q = b("bs_caml_option").valFromOption(X);
                            N = A[1].concat(q.tags).filter(function (a) {
                                return vb.indexOf(a) === -1
                            });
                            P = Object.assign(Object.assign({}, q), {tags: N});
                            U = q.thread_id;
                            U == null || Ka(f.fbid, U, K, A[3]);
                            return F(f, [K, P]);
                        case 68:
                            J = i._0;
                            W = i._1;
                            return v(void 0, f, J, {conversion_detection_data: W});
                        case 69:
                            H = [i._0, i._1, i._2, i._3, i._4];
                            Q = H[0];
                            z = D(f, Q);
                            if (z === void 0) return f;
                            Y = b("bs_caml_option").valFromOption(z);
                            T = Y.attachments;
                            if (T == null) return f;
                            if (T.length !== 1) return f;
                            M = T[0];
                            r = H[2] ? [Object.assign(Object.assign({}, M), {blurred_image_uri: void 0})] : [Object.assign(Object.assign({}, M), {blurred_image_uri: H[3]})];
                            V = Object.assign(Object.assign({}, Y), {attachments: r});
                            O = Y.thread_id;
                            O == null || Ka(f.fbid, O, Q, H[4]);
                            return F(f, [Q, V]);
                        case 70:
                            R = i._0;
                            s = i._1;
                            return v(void 0, f, R, {suggested_reply_data: s})
                    }
                case 1:
                    I = g._0;
                    if (typeof I === "number") if (I === 0) {
                        var wb = [];
                        b("bs_belt_MapString").forEach(f.typing, function (a, c) {
                            return b("bs_belt_Map").forEach(c, function (b, c) {
                                if (c < Date.now() - 3e4) {
                                    wb.push([a, b]);
                                    return
                                }
                            })
                        });
                        if (wb.length === 0) return f;
                        var c = {contents: f.typing};
                        wb.forEach(function (a) {
                            c.contents = ka(c.contents, a[0], a[1])
                        });
                        return {
                            fbid: f.fbid,
                            deliveryReceipts: f.deliveryReceipts,
                            readReceiptsPerThread: f.readReceiptsPerThread,
                            ignoredIds: f.ignoredIds,
                            blockedIds: f.blockedIds,
                            pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                            typing: c.contents,
                            threads: f.threads,
                            pendingReadStatusThreads: f.pendingReadStatusThreads,
                            messages: f.messages,
                            localIDsMap: f.localIDsMap,
                            messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                            threadlistOrderMap: f.threadlistOrderMap,
                            pinnedThreads: f.pinnedThreads,
                            montage: f.montage,
                            orderedMessageLists: f.orderedMessageLists,
                            unreadCounts: f.unreadCounts,
                            initialUnreadCounts: f.initialUnreadCounts,
                            unseenTimestamp: f.unseenTimestamp
                        }
                    } else {
                        if (nb(f, a, !1) <= 0) return f;
                        B = b("MercuryServerRequests").getForFBID(f.fbid);
                        B.markSeen();
                        return ob(f, B.getLastActionTimestamp(), "inbox")
                    }
                    switch (I.TAG | 0) {
                        case 0:
                            L = I._0;
                            S = I._1;
                            p = I._2;
                            w = I._3;
                            var xb = f.threads, yb = [];
                            X = k(L.reduce(function (d, c) {
                                var a = b("bs_belt_Map").get(xb, c);
                                if (a !== void 0) return b("bs_belt_Map").set(d, c, b("bs_caml_option").valFromOption(a)); else {
                                    yb.push(c);
                                    return d
                                }
                            }, b("bs_belt_Map").make(b("ThreadId.bs"))));
                            if (yb.length !== 0) {
                                N = a.threadSubToken;
                                q = N.contents.toString();
                                a.threadSubToken.contents = N.contents + 1 | 0;
                                a.threadCallbacks.contents[q] = [L, p];
                                U = b("MercuryServerRequests").getForFBID(f.fbid);
                                A = yb.reduce(function (d, c) {
                                    var e = b("MercuryIDs").tokenize(c), g = e.type;
                                    e = e.value;
                                    if (g !== "user") return d;
                                    g = b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(e));
                                    e = b("MercuryIDs").getParticipantIDFromUserID(f.fbid);
                                    e = b("MessengerThreadUtils.bs").createNewLocalThread(e, c, b("bs_caml_obj").caml_equal(g, e) ? [e] : [e, g], null);
                                    g = b("bs_belt_Map").set(d, c, e);
                                    b("gkx")("1074761") || hb(g, a.threadCallbacks.contents);
                                    return g
                                }, f.threads);
                                U.fetchThreadData(yb, w);
                                b("bs_curry")._1(S, q);
                                if (A === f.threads) return f; else return {
                                    fbid: f.fbid,
                                    deliveryReceipts: f.deliveryReceipts,
                                    readReceiptsPerThread: f.readReceiptsPerThread,
                                    ignoredIds: f.ignoredIds,
                                    blockedIds: f.blockedIds,
                                    pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                    typing: f.typing,
                                    threads: A,
                                    pendingReadStatusThreads: f.pendingReadStatusThreads,
                                    messages: f.messages,
                                    localIDsMap: f.localIDsMap,
                                    messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                    threadlistOrderMap: f.threadlistOrderMap,
                                    pinnedThreads: f.pinnedThreads,
                                    montage: f.montage,
                                    orderedMessageLists: f.orderedMessageLists,
                                    unreadCounts: f.unreadCounts,
                                    initialUnreadCounts: f.initialUnreadCounts,
                                    unseenTimestamp: f.unseenTimestamp
                                }
                            }
                            b("bs_curry")._1(p, X);
                            return f;
                        case 1:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UnsubscribeThread");
                            K = a.threadCallbacks.contents;
                            gb(K, I._0);
                            a.threadCallbacks.contents = K;
                            return f;
                        case 2:
                            P = I._0;
                            J = b("bs_belt_Array").keepMap(P, function (a) {
                                a = D(f, a);
                                if (a !== void 0) return b("bs_caml_option").nullable_to_opt(b("bs_caml_option").valFromOption(a).offline_threading_id)
                            });
                            J.forEach(function (a) {
                                f.localIDsMap["delete"](a)
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 3:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("MontagePollStickerVoted");
                            var zb = I._0;
                            W = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            z = zb.montageActorID;
                            T = b("bs_js_dict").get(W, z);
                            if (T !== void 0) {
                                M = T.map(function (a) {
                                    if (b("bs_caml_obj").caml_equal(zb.montageMessageID, a.id)) {
                                        var c = a.montage_overlays.map(function (a) {
                                            if (!b("bs_caml_obj").caml_equal(a.poll.id, zb.pollID)) return a;
                                            var c = a.poll.poll_options.map(function (a, c) {
                                                if (c === zb.optionVotedIndex) return new (b("ImmutableObject"))({
                                                    text: a.text,
                                                    vote_count: a.vote_count + 1 | 0
                                                }); else return a
                                            });
                                            c = new (b("ImmutableObject"))({
                                                can_viewer_vote: a.poll.can_viewer_vote,
                                                id: a.poll.id,
                                                poll_options: c,
                                                viewer_vote_index: zb.optionVotedIndex
                                            });
                                            return b("ImmutableObject").set(new (b("ImmutableObject"))(a), {poll: c})
                                        });
                                        return b("ImmutableObject").set(new (b("ImmutableObject"))(a), {montage_overlays: c})
                                    } else return a
                                });
                                W[z] = M
                            }
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: W,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 4:
                            r = b("bs_belt_Map").set(f.threads, I._0, I._1);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 5:
                            b("MercuryServerRequests").getForFBID(f.fbid).updateLastActionTimestamp(I._0);
                            return f
                    }
                case 2:
                    Y = g._0;
                    switch (Y.TAG | 0) {
                        case 0:
                            b("bs_curry")._1(Y._0, {blocked_ids: f.blockedIds});
                            break;
                        case 1:
                            b("bs_curry")._1(Y._1, b("bs_belt_Map").get(f.threads, Y._0));
                            break;
                        case 2:
                            b("bs_curry")._1(Y._0, f.pinnedThreads.concat([]));
                            break;
                        case 3:
                            b("bs_curry")._2(Y._0, f, a);
                            break
                    }
                    return f
            }
        }, d, c);
        e.length > 0 && b("LogHistory").getInstance("messenger_state").debug("actions", b("bs_belt_Option").getWithDefault(JSON.stringify(e), ""));
        return d
    }

    function P(a) {
        var c = [b("MercurySyncEventsProxy").getArbiterTypeForFBID(a, "TYP")];
        b("FBIDCheck").isUser_deprecated(a) || c.push(b("ChannelConstants").getArbiterType("page_typing"));
        return c
    }

    function Q(a) {
        return {
            fbid: a,
            deliveryReceipts: void 0,
            readReceiptsPerThread: void 0,
            ignoredIds: b("bs_belt_Set").make(b("ParticipantId.bs")),
            blockedIds: b("bs_belt_Set").make(b("ParticipantId.bs")),
            pendingFolderUnseenCount: 0,
            typing: void 0,
            threads: b("bs_belt_Map").make(b("ThreadId.bs")),
            pendingReadStatusThreads: new Set(),
            messages: new Map(),
            localIDsMap: new Map(),
            messagesWithUploadsInFlight: new Map(),
            threadlistOrderMap: oa(void 0),
            pinnedThreads: [],
            montage: {},
            orderedMessageLists: new Map(),
            unreadCounts: {},
            initialUnreadCounts: {},
            unseenTimestamp: 0
        }
    }

    var R = {contents: {}}, S = {contents: 0}, T = new Map(), U = {contents: {}}, V = {contents: 0}, W = new Set(),
        X = {contents: {}}, Y = {contents: 0}, pb = {
            threadCallbacks: R,
            threadSubToken: S,
            localTitanMessageCount: T,
            messageCallbacks: U,
            messageSubToken: V,
            existingPinnedThreads: W,
            failedHistoryFetchThreads: X,
            fallbackUnseenCount: Y
        }, qb = {contents: 0}, Z = {};

    function rb(a, c, d) {
        d = c !== void 0 ? b("bs_caml_option").valFromOption(c) : b("RemoteAction.bs").create(void 0);
        c = b("bs_js_dict").get(Z, a);
        if (c !== void 0) return;
        Z[a] = {subscriptions: new Set(), state: Q(a), remoteAction: d};
        b("RemoteAction.bs").subscribe(function (c) {
            var d = b("bs_js_dict").get(Z, a);
            if (d !== void 0) {
                var e = d.state;
                c = O(pb, c, e);
                Z[a] = {subscriptions: d.subscriptions, state: c, remoteAction: d.remoteAction};
                if (c === e) return;
                d = b("bs_js_dict").get(Z, a);
                d !== void 0 ? d.subscriptions.forEach(function (a) {
                    return b("bs_curry")._1(a.fn, void 0)
                }) : b("recoverableViolation")("Subscriptions deleted after createion", "messenger_comet");
                return
            }
            b("recoverableViolation")("State deleted after creation", "messenger_comet")
        }, d);
        var e = b("bs_caml_option").some(a), f = function (a) {
            return $(e, a)
        }, g = function (a) {
            b("bs_curry")._1(f, [{TAG: 0, _0: {TAG: 5, _0: a}}]), b("setTimeoutAcrossTransitions")(function (a) {
                return b("bs_curry")._1(f, [{TAG: 1, _0: 0}])
            }, 3e4)
        };
        b("Arbiter").subscribe(P(a), function (b, c) {
            b = c.obj;
            c = b.to;
            if (!(c == null) && c.toString() !== a) return; else {
                g(b);
                return
            }
        })
    }

    function $(a, c) {
        a = a !== void 0 ? b("bs_caml_option").valFromOption(a) : b("CurrentUser").getID();
        rb(a, void 0, void 0);
        a = b("bs_js_dict").get(Z, a);
        if (a !== void 0) return b("RemoteAction.bs").send(a.remoteAction, c); else {
            b("recoverableViolation")("Subscriptions deleted after createion", "messenger_comet");
            return
        }
    }

    function sb(a, c, d, e) {
        var f = a !== void 0 ? b("bs_caml_option").valFromOption(a) : b("CurrentUser").getID();
        e = c !== void 0 ? b("bs_caml_option").valFromOption(c) : b("RemoteAction.bs").create(void 0);
        rb(f, b("bs_caml_option").some(e), void 0);
        a = i.useState(function () {
            var a = b("bs_js_dict").get(Z, f);
            if (a !== void 0) return a.state; else return b("unrecoverableViolation")("Rendering without state initialized", "messenger_comet")
        });
        var g = a[1], h = a[0];
        c = b("bs_js_dict").get(Z, f);
        var j = i.useCallback(function (a) {
            a = b("bs_js_dict").get(Z, f);
            var c = a !== void 0 ? a.state : b("unrecoverableViolation")("Rendering without state initialized", "messenger_comet");
            if (d !== void 0) if (b("bs_curry")._2(d, h, c)) return b("bs_curry")._1(g, function (a) {
                return c
            }); else return; else return b("bs_curry")._1(g, function (a) {
                return c
            })
        }, [d, h, g, c, f]);
        i.useEffect(function () {
            qb.contents = qb.contents + 1 | 0;
            var a = qb.contents, c = {id: a, fn: j};
            a = b("bs_js_dict").get(Z, f);
            a !== void 0 ? a.subscriptions.add(c) : b("recoverableViolation")("Subscriptions deleted after createion, can't add subscription", "messenger_comet");
            b("bs_curry")._1(j, void 0);
            return function (a) {
                a = b("bs_js_dict").get(Z, f);
                a !== void 0 ? a.subscriptions["delete"](c) : b("recoverableViolation")("Subscriptions deleted after createion, can't remove subscription", "messenger_comet")
            }
        }, [j, f]);
        return h
    }

    function tb(a) {
        var c = a.shouldUpdate, d = a.remoteAction, e = a.fbid;
        a = a.children;
        e = e !== void 0 ? b("bs_caml_option").valFromOption(e) : b("CurrentUser").getID();
        return b("bs_curry")._1(a, sb(b("bs_caml_option").some(e), d, c, void 0))
    }

    function ub(a) {
        b("gkx")("1463539") && b("recoverableViolation")("messenger state is not allowed when lightspeed is enabled", "messenger_comet");
        return sb(b("bs_caml_option").some(a), void 0, void 0, void 0)
    }

    function vb(a, c) {
        return $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 0, _0: c}}])
    }

    function wb(a, c) {
        b("MercuryAssert").isThreadID(c);
        var d = {contents: void 0}, e = function (a) {
            d.contents = a
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 1, _0: c, _1: e}}]);
        return b("bs_js_null_undefined").fromOption(d.contents)
    }

    function xb(a, c, d, e) {
        if (c.length !== 0) {
            b("MercuryAssert").allThreadID(c);
            var f = {contents: null}, g = function (a) {
                f.contents = a
            };
            $(b("bs_caml_option").some(a), [{TAG: 1, _0: {TAG: 0, _0: c, _1: g, _2: d, _3: e}}]);
            return f.contents
        }
        b("bs_curry")._1(d, {});
        return null
    }

    function yb(a, c, d, e) {
        return xb(a, [c], function (a) {
            return b("bs_curry")._1(d, a[c])
        }, e)
    }

    function zb(a, c, d, e) {
        var f = {contents: void 0}, g = function (a) {
            f.contents = a
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 1, _0: c, _1: g}}]);
        g = f.contents;
        if (g !== void 0) return b("bs_caml_option").valFromOption(g);
        g = b("MessengerThreadUtils.bs").createNewLocalThread(b("MercuryIDs").getParticipantIDFromUserID(a), c, d, e);
        $(b("bs_caml_option").some(a), [{TAG: 1, _0: {TAG: 4, _0: c, _1: g}}]);
        return g
    }

    function Ab(a) {
        var c = b("MercuryLocalIDs").generateThreadID(null);
        zb(a, c, [], null);
        return c
    }

    function Bb(a, c, d, e) {
        var f = {contents: void 0}, g = function (a) {
            f.contents = a
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 1, _0: c, _1: g}}]);
        g = f.contents;
        if (g !== void 0) return b("bs_caml_option").valFromOption(g);
        g = b("MessengerThreadUtils.bs").createNewLocalGroupGeneralThread(b("MercuryIDs").getParticipantIDFromUserID(a), c, d, e);
        $(b("bs_caml_option").some(a), [{TAG: 1, _0: {TAG: 4, _0: c, _1: g}}]);
        return g
    }

    function Cb(a, c, d) {
        var e = b("MercuryLocalIDs").generateThreadID(null);
        Bb(a, e, c, d);
        return e
    }

    function Db(a, c) {
        var d = {contents: void 0}, e = function (a) {
            d.contents = a
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 1, _0: c, _1: e}}]);
        a = d.contents;
        if (a !== void 0) return b("MercuryThreadInfo").isEmptyLocalThread(b("bs_caml_option").valFromOption(a)); else return !1
    }

    function Eb(a, c) {
        var d = {contents: void 0}, e = function (a) {
            d.contents = a
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 1, _0: c, _1: e}}]);
        a = d.contents;
        if (a !== void 0) return b("MercuryThreadInfo").isNewEmptyLocalThread(b("bs_caml_option").valFromOption(a)); else return !1
    }

    function Fb(c) {
        var a = {contents: []}, d = function (b) {
            a.contents = b
        };
        $(b("bs_caml_option").some(c), [{TAG: 2, _0: {TAG: 2, _0: d}}]);
        return a.contents
    }

    function Gb(a, c) {
        return $(b("bs_caml_option").some(a), [{TAG: 1, _0: {TAG: 1, _0: c}}])
    }

    function Hb(a) {
        var c = a.payload_source;
        if (c == null) return !1;
        if (b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").CLIENT_CHANGE_ARCHIVED_STATUS) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").CLIENT_SEND_MESSAGE) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_SEND_MESSAGE) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_FETCH_THREADLIST_INFO) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_THREAD_SYNC) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_CHANGE_PINNED_STATUS) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_CHANGE_PINNED_MESSAGES) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_INVALIDATE_GLOBAL_STATE) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").CLIENT_UPDATE_COMM_STATUS)) return !0;
        if (!b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_INITIAL_DATA)) return !1;
        c = a.ordered_threadlists;
        return !(c == null)
    }

    function Ib(a, c) {
        c = {TAG: 1, _0: {TAG: 3, _0: c}};
        return $(b("bs_caml_option").some(a), [c])
    }

    // @todo sendJs
    function Jb(a, c) {
        return $(a == null ? void 0 : b("bs_caml_option").some(a), c)
    }

    // @todo processJSActions
    function Kb(a) {
        var c = [], d = !1;
        if (!(a == null)) {
            var e = a.payload_source;
            !(e == null) && b("bs_caml_obj").caml_equal(e, b("MercuryPayloadSource").SERVER_INVALIDATE_GLOBAL_STATE) && (d = !0);
            e = a.newlyAddedClientIDs;
            !(e == null) && Object.keys(e).length > 0 && c.push({TAG: 0, _0: {TAG: 63, _0: e}});
            e = a.delivery_receipts;
            e == null || c.push({TAG: 0, _0: {TAG: 0, _0: e}});
            e = a.message_ignored_ids;
            e == null || c.push({TAG: 0, _0: {TAG: 1, _0: e}});
            e = a.threads;
            if (!(e == null)) {
                var f = a.payload_source;
                f == null || (b("bs_caml_obj").caml_equal(f, b("MercuryPayloadSource").SERVER_FETCH_THREAD_INFO) && c.push({
                    TAG: 0,
                    _0: {TAG: 8, _0: e}
                }), b("bs_caml_obj").caml_equal(f, b("MercuryPayloadSource").SERVER_INVALIDATE_THREAD_STATE) && e.length > 0 && c.unshift({
                    TAG: 0,
                    _0: {TAG: 34, _0: b("bs_caml_array").caml_array_get(e, 0).thread_id}
                }));
                c.push({TAG: 0, _0: {TAG: 7, _0: e}})
            }
            f = a.participants;
            if (!(f == null)) {
                c.push({TAG: 0, _0: {TAG: 3, _0: f}});
                var g = [], h = [];
                f.forEach(function (a) {
                    a.is_messenger_blocked || a.is_facebook_blocked ? g.push(b("MercuryIDs").getParticipantIDFromUserID(a.fbid)) : h.push(b("MercuryIDs").getParticipantIDFromUserID(a.fbid))
                });
                e = 0;
                (g.length !== 0 || h.length !== 0) && (e = 1);
                e === 1 && c.push({TAG: 0, _0: {TAG: 2, _0: g, _1: h}})
            }
            f = a.message_blocked_ids;
            !(f == null) && f.length > 0 && c.push({TAG: 0, _0: {TAG: 2, _0: f, _1: []}});
            e = a.message_unblocked_ids;
            !(e == null) && e.length > 0 && c.push({TAG: 0, _0: {TAG: 2, _0: [], _1: e}});
            f = a.pending_folder_unseen_count;
            f == null || c.push({TAG: 0, _0: {TAG: 4, _0: f}});
            e = a.global_actions;
            e == null || e.forEach(function (a) {
                if (b("bs_caml_obj").caml_equal(a.action_type, b("MercuryGlobalActionType").MARK_ALL_READ)) {
                    c.push({TAG: 0, _0: {TAG: 33, _0: a.folder}});
                    return
                }
            });
            if (Hb(a)) {
                f = a.ordered_threadlists;
                e = 0;
                f == null || f.length === 0 ? e = 1 : c.push({TAG: 0, _0: {TAG: 9, _0: f}});
                if (e === 1) {
                    f = a.threads;
                    e = a.payload_source;
                    !(f == null) && !(e == null) && f.length > 0 && e !== b("MercuryPayloadSource").SERVER_CHANGE_PINNED_STATUS && c.push({
                        TAG: 0,
                        _0: {TAG: 10, _0: f}
                    })
                }
            }
            e = a.pinned_thread_ids;
            !(e == null) && e.length > 0 && Hb(a) && c.push({TAG: 0, _0: {TAG: 11, _0: e}});
            f = a.roger;
            f == null || c.push({TAG: 0, _0: {TAG: 6, _0: f}});
            e = a.montage_delete_message_delta;
            e == null || c.push({TAG: 0, _0: {TAG: 59, _0: e}});
            f = a.montage_new_message_delta;
            f == null || c.push({TAG: 0, _0: {TAG: 57, _0: f}});
            e = a.montage_poll_sticker_vote;
            e == null || e.forEach(function (a) {
                c.push({TAG: 1, _0: {TAG: 3, _0: a}})
            });
            f = a.current_montage_thread;
            if (!(f == null)) {
                e = f.user;
                if (!(e == null)) {
                    f = e.messenger_montage_thread;
                    f == null || (c.push({
                        TAG: 0,
                        _0: {TAG: 58, _0: e.id}
                    }), f.montage_messages.edges.forEach(function (a) {
                        c.push({TAG: 0, _0: {TAG: 57, _0: a.node}})
                    }))
                }
            }
            e = a.unread_thread_fbids;
            e == null || c.push({TAG: 0, _0: {TAG: 61, _0: e}});
            f = a.message_counts;
            f == null || c.push({TAG: 0, _0: {TAG: 62, _0: f}});
            e = a.actions;
            if (!(e == null)) {
                var i = a.payload_source, j = i == null ? void 0 : b("bs_caml_option").some(i);
                e.forEach(function (d) {
                    var e = d.action_type, f = 0;
                    (i == null || !i.startsWith("server")) && (f = 1);
                    f === 1 && c.push({TAG: 1, _0: {TAG: 5, _0: d.timestamp}});
                    if (b("bs_caml_obj").caml_equal(j, b("bs_caml_option").some(b("MercuryPayloadSource").SERVER_SEARCH))) {
                        c.push({TAG: 0, _0: {TAG: 35, _0: d, _1: 0}});
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(b("bs_caml_option").nullable_to_opt(d.client_state), b("bs_caml_option").some(b("MercuryMessageClientState").SEND_TO_SERVER))) {
                        c.push({TAG: 0, _0: {TAG: 35, _0: d, _1: 0}});
                        return
                    }
                    f = d.thread_id;
                    var g = d.upload_id, h = d.upload_data, k = d.message_ids;
                    ha(d);
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").DELETE_MESSAGES)) if (!(f == null) && !(k == null)) {
                        c.push({TAG: 0, _0: {TAG: 36, _0: f, _1: k, _2: j}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_FOLDER)) {
                        k = d.new_folder;
                        if (!(f == null) && !(k == null)) {
                            c.push({TAG: 0, _0: {TAG: 37, _0: f, _1: k}});
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_ARCHIVED_STATUS)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 39, _0: f, _1: d.archived}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_MUTE_SETTINGS)) {
                        k = d.reactions_mute_mode;
                        var l = d.mentions_mute_mode, m = d.mute_until;
                        l = k == null ? l == null ? m == null ? void 0 : {TAG: 2, _0: m} : m == null ? {
                            TAG: 1,
                            _0: l === 1
                        } : void 0 : !(l == null) || !(m == null) ? void 0 : {TAG: 0, _0: k === 1};
                        if (!(f == null) && l !== void 0) {
                            c.push({TAG: 0, _0: {TAG: 38, _0: f, _1: l}});
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_READ_STATUS)) {
                        if (f == null) return;
                        m = a.from_client;
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 41,
                                _0: f,
                                _1: d.mark_as_read,
                                _2: d.timestamp,
                                _3: m == null ? !1 : m,
                                _4: d.source
                            }
                        });
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_PAGE_FOLLOW_UP_STATUS)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 40, _0: f, _1: d.is_page_follow_up}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").BLOCK_STATUS_CHANGED)) {
                        if (f == null) return;
                        k = d.canViewerReply ? null : b("MessengerThreadCannotReplyReason.bs").fromMessageThreadCannotReplyReason(d.reason);
                        c.push({TAG: 0, _0: {TAG: 13, _0: f, _1: d.canViewerReply, _2: k}});
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").DELETE_THREAD)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 42, _0: f}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").REACTION_UPDATE)) {
                        l = d.messageId;
                        m = d.userId;
                        if (!(l == null) && !(m == null)) {
                            c.push({
                                TAG: 0,
                                _0: {TAG: 45, _0: l, _1: b("bs_caml_option").nullable_to_opt(d.reaction), _2: m, _3: j}
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").MONTAGE_DIRECT_EXPIRE)) {
                        k = d.messageId;
                        if (!(k == null)) {
                            c.push({TAG: 0, _0: {TAG: 46, _0: k, _1: j}});
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").LIVE_LOCATION_UPDATE)) {
                        l = d.messageId;
                        m = d.liveLocation;
                        if (!(l == null) && !(m == null)) {
                            c.push({TAG: 0, _0: {TAG: 47, _0: l, _1: m, _2: j}});
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").REPLACE_MESSAGE)) {
                        c.push({TAG: 0, _0: {TAG: 48, _0: d, _1: j}});
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CONFIRM_ATTACHMENT_PLACEHOLDER)) if (!(g == null) && !(h == null)) {
                        c.push({TAG: 0, _0: {TAG: 44, _0: g, _1: h}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CANCEL_ATTACHMENT_PLACEHOLDER)) if (!(g == null) && !(h == null)) {
                        c.push({TAG: 0, _0: {TAG: 43, _0: g, _1: h, _2: j}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").SEND_MESSAGE)) {
                        c.push({TAG: 0, _0: {TAG: 50, _0: d, _1: j}});
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").USER_GENERATED_MESSAGE)) {
                        c.push({TAG: 0, _0: {TAG: 51, _0: d, _1: j, _2: a.from_client}});
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").LOG_MESSAGE)) if (!b("MessengerMessage.bs").isLocalMessage(d)) {
                        c.push({TAG: 0, _0: {TAG: 52, _0: d, _1: j, _2: a.from_client}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_PINNED_STATUS)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 55, _0: f, _1: d.is_pinned, _2: d.thread_pin_timestamp}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").PIN_MESSAGE)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 53, _0: f, _1: d.pin_message_action}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UNPIN_MESSAGE)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 54, _0: f, _1: d.unpin_message_action}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").REMOVE_MESSAGE)) {
                        k = d.thread_id;
                        l = d.messageId;
                        m = d.removed_timestamp;
                        g = d.author;
                        if (!(k == null) && !(l == null) && !(m == null) && !(g == null)) {
                            c.push({TAG: 0, _0: {TAG: 64, _0: k, _1: l, _2: g, _3: m, _4: j}});
                            b("MessengerDesktopNotifications").removeNotification(l);
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UNSUBSCRIBE_STATUS_UPDATE)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 12, _0: f, _1: d.page_unsubscribe_status}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").BLURRED_IMAGE_STATUS)) {
                        h = d.image_message_id;
                        k = d.image_id;
                        g = d.should_show;
                        m = d.blurred_image_uri;
                        if (!(h == null) && !(k == null) && !(g == null) && !(m == null)) {
                            c.push({TAG: 0, _0: {TAG: 69, _0: h, _1: k, _2: g, _3: m, _4: j}});
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").ADD_PARTICIPANTS)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 14, _0: f, _1: d.participants}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_FLAG)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 15, _0: f, _1: d.mark_as_flag}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").MOVE_PENDING_TO_INBOX)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 16, _0: f}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_CUSTOM_LIKE)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 17, _0: f, _1: d.custom_like}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").PROMOTE_GROUP_ADMINS)) {
                        l = d.promoted_admins;
                        if (!(f == null) && !(l == null)) {
                            c.push({TAG: 0, _0: {TAG: 18, _0: f, _1: l}});
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").REMOVE_GROUP_ADMINS)) {
                        h = d.removed_admin_ids;
                        if (!(f == null) && !(h == null)) {
                            c.push({TAG: 0, _0: {TAG: 19, _0: f, _1: h}});
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").JOINABLE_MODE)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 20, _0: f, _1: d.joinable_mode}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").APPROVAL_MODE)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 21, _0: f, _1: d.approval_mode}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").APPROVAL_QUEUE)) if (!(f == null)) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 22,
                                _0: f,
                                _1: d.added_id,
                                _2: d.added_group_id,
                                _3: d.removed_id,
                                _4: d.removed_group_id
                            }
                        });
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").IS_PIN_PROTECTED)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 23, _0: f, _1: d.is_pin_protected}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_RTC_CALL_DATA)) if (!(f == null)) {
                        c.push({
                            TAG: 0,
                            _0: {TAG: 24, _0: f, _1: d.initiator_fbid, _2: d.call_state, _3: d.server_info_data}
                        });
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_COMM_STATUS)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 25, _0: f, _1: d.comm_status}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_COMM_ITEM_OWNER)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 26, _0: f, _1: d.id, _2: d.name, _3: d.profile_pic_uri}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").EVENT_RSVP_CHANGED)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 27, _0: f, _1: d.actor_fbid, _2: d.rsvp_status}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_CONNECTIVITY_STATUS)) {
                        k = d.thread_connectivity_status;
                        if (!(f == null) && !(k == null)) {
                            c.push({TAG: 0, _0: {TAG: 65, _0: f, _1: k}});
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").GROUPS_SYNC_STATUS_CHANGED)) if (!(f == null)) {
                        c.push({
                            TAG: 0,
                            _0: {TAG: 28, _0: f, _1: d.groups_sync_action, _2: d.groups_sync_status_string}
                        });
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").GROUPS_SYNC_METADATA_UPDATE)) if (!(f == null)) {
                        c.push({
                            TAG: 0,
                            _0: {TAG: 29, _0: f, _1: d.groups_sync_action, _2: d.fb_group_id, _3: d.emoji_codepoints}
                        });
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").DESCRIPTION_CHANGED)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 30, _0: f, _1: d.group_thread_description_string}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_THREAD_THEME)) if (!(f == null)) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 31,
                                _0: f,
                                _1: {
                                    solid_color: d.solid_color,
                                    header_color: d.header_color,
                                    footer_color: d.footer_color,
                                    gradient_colors: d.gradient_colors,
                                    theme_id: d.theme_id,
                                    reactions: d.reactions
                                }
                            }
                        });
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_JOINABLE_LINK)) if (!(f == null)) {
                        c.push({TAG: 0, _0: {TAG: 32, _0: f, _1: d.joinable_link}});
                        return
                    } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").MUTATE_TAGS)) {
                        g = d.tags_to_add;
                        m = g == null ? [] : g;
                        l = d.tags_to_delete;
                        h = l == null ? [] : l;
                        k = d.messageId;
                        if (!(k == null)) {
                            c.push({TAG: 0, _0: {TAG: 67, _0: k, _1: m, _2: h, _3: j}});
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").ADS_CONVERSION_UPDATE)) {
                        g = d.conversion_detection_data;
                        if (!(f == null) && !(g == null)) {
                            c.push({TAG: 0, _0: {TAG: 68, _0: f, _1: g}});
                            return
                        } else return
                    }
                    if (!b("bs_caml_obj").caml_equal(e, b("MercuryActionType").SUGGESTED_REPLY_UPDATE)) return;
                    l = d.suggested_reply_data;
                    if (!(f == null) && !(l == null)) {
                        c.push({TAG: 0, _0: {TAG: 70, _0: f, _1: l}});
                        return
                    }
                });
                b("Utils.bs").isTruthy(a.from_client) && e.forEach(function (a) {
                    var b = a.thread_id;
                    if (!(b == null)) {
                        c.push({TAG: 0, _0: {TAG: 49, _0: b, _1: a.message_id}});
                        return
                    }
                })
            }
            f = a.end_of_history;
            f == null || c.push({TAG: 0, _0: {TAG: 60, _0: f, _1: a.payload_source}})
        }
        d && c.unshift({TAG: 0, _0: 0});
        return c
    }

    function Lb(c, d) {
        var a = {contents: []}, e = function (b, c) {
            c = b.orderedMessageLists.get(d);
            if (!(c == null)) {
                a.contents = E(!0, b, c.messageIDs);
                return
            }
        };
        $(b("bs_caml_option").some(c), [{TAG: 2, _0: {TAG: 3, _0: e}}]);
        return a.contents
    }

    function Mb(c, d) {
        var a = {contents: d}, e = function (b, c) {
            c = b.localIDsMap.get(d);
            if (!(c == null)) {
                a.contents = c;
                return
            }
        };
        $(b("bs_caml_option").some(c), [{TAG: 2, _0: {TAG: 3, _0: e}}]);
        return a.contents
    }

    function Nb(a, c) {
        var d = {contents: void 0}, e = function (a, b) {
            d.contents = a
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: e}}]);
        a = d.contents;
        if (a !== void 0) return E(!1, a, c); else return []
    }

    function Ob(a, c) {
        var d = {contents: void 0}, e = function (a, b) {
            d.contents = a
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: e}}]);
        a = d.contents;
        if (a !== void 0) return b("bs_caml_option").nullable_to_opt(a.messages.get(c))
    }

    function Pb(a, c, d) {
        var e = {contents: !1}, f = function (a, b) {
            b = a.orderedMessageLists.get(c);
            if (b == null) return;
            a = b.messageLoadingState;
            b = b.messageIDs.length;
            a ? e.contents = !0 : e.contents = b >= d
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: f}}]);
        return e.contents
    }

    function Qb(a, c) {
        var d = {contents: !1}, e = function (a, b) {
            b = a.orderedMessageLists.get(c);
            if (b == null) return;
            a = b.messageLoadingState;
            a ? d.contents = !0 : d.contents = !1
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: e}}]);
        return d.contents
    }

    function Rb(a, c) {
        return $(b("bs_caml_option").some(a), [{TAG: 1, _0: {TAG: 2, _0: c}}])
    }

    function Sb(a, c, d, e) {
        var f = [], g = function (g, h) {
            h = g.orderedMessageLists.get(c);
            if (h == null) return;
            h = h.messageIDs;
            for (var i = d, j = d + e | 0; i <= j; ++i) {
                var a = b("bs_belt_Option").flatMap(b("bs_belt_Array").get(h, i), function (a) {
                    return D(g, a)
                });
                a !== void 0 && f.push(b("bs_caml_option").valFromOption(a))
            }
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: g}}]);
        return f
    }

    var Tb = {contents: void 0};

    function Ub(a, c, d, e, f, g, h) {
        var i = function (j, i) {
            Tb.contents = [c, d, e];
            var k = j.orderedMessageLists.get(c);
            k = k == null ? [[], void 0] : [k.messageIDs, k.messageLoadingState];
            var l = k[0];
            if (b("bs_js_dict").get(i.failedHistoryFetchThreads.contents, c) !== !0) {
                var m = i.localTitanMessageCount;
                m = l.length - b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(m.get(c)), 0) | 0;
                m > 0 && b("ChatReliabilityInstrumentation").logERROR("fetch made with message in flight");
                var n = m - d | 0;
                n = e - n | 0;
                if (!(n > 0 && b("bs_caml_obj").caml_notequal(k[1], 1))) return b("bs_curry")._1(f, b("bs_belt_Array").keepMap(l, function (a) {
                    return D(j, a)
                }).slice(d, e));
                k = b("MercuryServerRequests").getForFBID(a);
                l = b("bs_js_null_undefined").fromOption(b("bs_belt_Option").map(b("bs_belt_Option").flatMap(b("bs_belt_Array").get(l, m - 1 | 0), function (a) {
                    return D(j, a)
                }), function (a) {
                    return a.timestamp
                }));
                var o = i.messageSubToken.contents;
                i.messageSubToken.contents = o + 1 | 0;
                i.messageCallbacks.contents[String(o)] = [{threadID: c, offset: d, limit: e}, f];
                if (b("bs_caml_obj").caml_equal([c, d, e], Tb.contents)) {
                    k.fetchThreadMessages(c, m, n, l, g, h);
                    return
                } else return
            }
            Tb.contents = void 0;
            i.failedHistoryFetchThreads.contents[c] = !1
        };
        return $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: i}}])
    }

    function Vb(a, b, c, d, e, f, g) {
        if (!Qb(a, b)) return Ub(a, b, c, d, e, f, g)
    }

    function Wb(a) {
        var c = {contents: 0}, d = function (d, a) {
            c.contents = b("bs_caml_primitive").caml_int_min(N(d, a), b("MercuryThreadlistConstants").MAX_UNSEEN_COUNT)
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: d}}]);
        return c.contents
    }

    function Xb(a) {
        var c = {contents: 0}, d = function (b, a) {
            c.contents = N(b, a)
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: d}}]);
        return c.contents
    }

    function Yb(a) {
        var c = {contents: 0}, d = function (d, a) {
            c.contents = b("bs_caml_primitive").caml_int_min(nb(d, a, !0), b("MercuryThreadlistConstants").MAX_UNSEEN_COUNT)
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: d}}]);
        return c.contents
    }

    function Zb(a) {
        return $(b("bs_caml_option").some(a), [{TAG: 1, _0: 1}])
    }

    function $b(a, c) {
        var d = {contents: null}, e = function (a, e) {
            e = b("bs_js_dict").get(a.unreadCounts, c);
            d.contents = e !== void 0 ? b("bs_belt_Array").keepMap(b("JSSet.bs").values(b("bs_caml_option").valFromOption(e)), function (c) {
                return b("bs_caml_option").nullable_to_opt(l(a, c))
            }).filter(function (a) {
                return !b("MercuryThreadInfo").isMuted(a)
            }).length : null
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: e}}]);
        return d.contents
    }

    function ac(a) {
        var c = {contents: []}, d = function (a, d) {
            c.contents = b("bs_belt_Map").keysToArray(a.threads)
        };
        $(b("bs_caml_option").some(a), [{TAG: 2, _0: {TAG: 3, _0: d}}]);
        return c.contents
    }

    R = {make: tb};
    S = tb;
    f.irisMapping = j;
    f.fbid = c;
    f.deliveryReceipts = d;
    f.readReceiptsPerThread = e;
    f.ignoredIds = m;
    f.blockedIds = n;
    f.pendingFolderUnseenCount = o;
    f.typing = aa;
    f.pendingReadStatusThreads = p;
    f.messages = q;
    f.localIDsMap = r;
    f.messagesWithUploadsInFlight = s;
    f.threadlistOrderMap = ba;
    f.pinnedThreads = ca;
    f.montage = t;
    f.orderedMessageLists = da;
    f.unreadCounts = ea;
    f.initialUnreadCounts = fa;
    f.unseenTimestamp = ga;
    f.threads = a;
    f.thread = l;
    f.send = $;
    f.compute = vb;
    f.getThreadMetaNow = wb;
    f.getMultiThreadMeta = xb;
    f.getThreadMeta = yb;
    f.createNewLocalThread = zb;
    f.createNewLocalThreadGenerateID = Ab;
    f.createNewLocalGroupGeneralThreadGenerateID = Cb;
    f.isEmptyLocalThread = Db;
    f.isNewEmptyLocalThread = Eb;
    f.getPinnedThreadlist = Fb;
    f.unsubscribeThread = Gb;
    f.sendJS = Jb;
    f.invalidateSearchedMessages = Rb;
    f.hasLoadedNMessages = Pb;
    f.hasLoadedAllMessages = Qb;
    f.getCurrentlyLoadedMessages = Lb;
    f.getServerMessageID = Mb;
    f.getMessagesFromIDs = Nb;
    f.getMessageFromID = Ob;
    f.getThreadMessagesRange = Ub;
    f.getThreadMessagesRangeNow = Sb;
    f.fetchMoreMessages = Vb;
    f.processPollStickerVoted = Ib;
    f.getUnseenUnreadCount = Wb;
    f.getUnseenUnreadCountRaw = Xb;
    f.getUnseenCount = Yb;
    f.getThreadIDs_debug = ac;
    f.getUnreadThreadCount = $b;
    f.markAsSeen = Zb;
    f.processJSActions = Kb;
    f.Provider = R;
    f.jsComponent = S;
    f.useHook = ub
}), null);
__d("MessengerState.re", ["bs_curry", "MessengerState.bs"], (function (a, b, c, d, e, f) {
    c = (a = b("MessengerState.bs")).fbid;
    f.fbid = c;
    d = a.deliveryReceipts;
    f.deliveryReceipts = d;
    e = a.readReceiptsPerThread;
    f.readReceiptsPerThread = e;
    c = a.ignoredIds;
    f.ignoredIds = c;
    d = a.blockedIds;
    f.blockedIds = d;
    e = a.pendingFolderUnseenCount;
    f.pendingFolderUnseenCount = e;
    c = a.typing;
    f.typing = c;
    d = a.pendingReadStatusThreads;
    f.pendingReadStatusThreads = d;
    e = a.messages;
    f.messages = e;
    c = a.localIDsMap;
    f.localIDsMap = c;
    d = a.messagesWithUploadsInFlight;
    f.messagesWithUploadsInFlight = d;
    e = a.threadlistOrderMap;
    f.threadlistOrderMap = e;
    c = a.pinnedThreads;
    f.pinnedThreads = c;
    d = a.montage;
    f.montage = d;
    e = a.orderedMessageLists;
    f.orderedMessageLists = e;
    c = a.unreadCounts;
    f.unreadCounts = c;
    d = a.initialUnreadCounts;
    f.initialUnreadCounts = d;
    e = a.unseenTimestamp;
    f.unseenTimestamp = e;
    c = a.threads;
    f.threads = c;
    d = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").thread, a, c);
        return a
    };
    f.thread = d;
    e = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").compute, a, c);
        return a
    };
    f.compute = e;
    c = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getThreadMetaNow, a, c);
        return a
    };
    f.getThreadMetaNow = c;
    d = function (a, c, d, e) {
        a = b("bs_curry")._4(b("MessengerState.bs").getMultiThreadMeta, a, c, d, e);
        return a
    };
    f.getMultiThreadMeta = d;
    e = function (a, c, d, e) {
        a = b("bs_curry")._4(b("MessengerState.bs").getThreadMeta, a, c, d, e);
        return a
    };
    f.getThreadMeta = e;
    c = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").isEmptyLocalThread, a, c);
        return a
    };
    f.isEmptyLocalThread = c;
    d = a.getPinnedThreadlist;
    f.getPinnedThreadlist = d;
    e = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").unsubscribeThread, a, c);
        return a
    };
    f.unsubscribeThread = e;
    c = function (a, c, d) {
        a = b("bs_curry")._3(b("MessengerState.bs").hasLoadedNMessages, a, c, d);
        return a
    };
    f.hasLoadedNMessages = c;
    d = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getCurrentlyLoadedMessages, a, c);
        return a
    };
    f.getCurrentlyLoadedMessages = d;
    e = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getServerMessageID, a, c);
        return a
    };
    f.getServerMessageID = e;
    c = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getMessagesFromIDs, a, c);
        return a
    };
    f.getMessagesFromIDs = c;
    d = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getMessageFromID, a, c);
        return a
    };
    f.getMessageFromID = d;
    e = function (a, c, d, e, f, g, h) {
        a = b("bs_curry")._7(b("MessengerState.bs").getThreadMessagesRange, a, c, d, e, f, g, h);
        return a
    };
    f.getThreadMessagesRange = e;
    c = function (a, c, d, e) {
        a = b("bs_curry")._4(b("MessengerState.bs").getThreadMessagesRangeNow, a, c, d, e);
        return a
    };
    f.getThreadMessagesRangeNow = c;
    d = function (a, c, d, e, f, g, h) {
        a = b("bs_curry")._7(b("MessengerState.bs").fetchMoreMessages, a, c, d, e, f, g, h);
        return a
    };
    f.fetchMoreMessages = d;
    e = a.getUnseenUnreadCount;
    f.getUnseenUnreadCount = e;
    c = a.getUnseenCount;
    f.getUnseenCount = c;
    d = a.getThreadIDs_debug;
    f.getThreadIDs_debug = d;
    e = function (a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getUnreadThreadCount, a, c);
        return a
    };
    f.getUnreadThreadCount = e;
    (function (a) {
        return null
    });
    c = a.jsComponent;
    f.jsComponent = c;
    d = a.useHook;
    f.useHook = d
}), null);
__d("MercuryDelayedDispatcher", ["MercuryDispatcher", "MercuryServerPayloadPreprocessor", "MercuryServerRequests", "MercurySingletonProvider", "MercuryThreadIDMap"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a) {
            var c = this;
            this.$1 = a;
            this.$2 = [];
            this.$3 = b("MercuryThreadIDMap").getForFBID(this.$1);
            this.$4 = b("MercuryDispatcher").getForFBID(this.$1);
            this.$5 = b("MercuryServerRequests").getForFBID(this.$1);
            this.$6 = b("MercuryServerPayloadPreprocessor").getForFBID(this.$1);
            this.$4.subscribe("model-update-completed", function (a, b) {
                return c.$7()
            })
        }

        a.getForFBID = function (a) {
            return g.getForFBID(a)
        };
        a.get = function () {
            return g.get()
        };
        var c = a.prototype;
        c.handleUpdateWaitForThread = function (a, b) {
            var c = this, d = this.$3.getClientIDFromServerIDNow(b);
            if (d) {
                this.$8(a);
                return
            }
            this.$3.getClientIDFromServerID(b, function () {
                return c.$2.push({thread_fbid: b, payload: a})
            });
            this.$5.ensureThreadIsFetched(b)
        };
        c.$7 = function () {
            if (this.$2 && this.$2.length) {
                var a = this.$2.shift(), b = a.thread_fbid;
                a = a.payload;
                this.handleUpdateWaitForThread(a, b)
            }
        };
        c.$8 = function (a) {
            a.from_client ? this.$4.handleUpdate(a) : this.$6.handleUpdate(a)
        };
        return a
    }();
    e.exports = a;
    var g = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MercuryDispatcher", ["invariant", "ArbiterMixin", "LogHistory", "MercurySingletonProvider", "MercuryThreadInformer", "MessengerParticipants.bs", "MessengerState.bs", "gkx", "isEmpty", "mixin"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h, i = b("LogHistory").getInstance("mercury_dispatcher");
    a = function (a) {
        babelHelpers.inheritsLoose(c, a);
        c.getForFBID = function (a) {
            return j.getForFBID(a)
        };
        c.get = function () {
            return j.get()
        };

        function c(b) {
            var c;
            c = a.call(this) || this;
            c.$MercuryDispatcher1 = b;
            return c
        }

        var d = c.prototype;
        d.handlePreprocessedUpdate = function (a) {
            a.preprocessed = !0, this.handleUpdate(a)
        };
        d.handleUpdate = function (a) {
            var c = this;
            this.$MercuryDispatcher2(a);
            !!a.from_client !== !!a.preprocessed || g(0, 5757);
            delete a.preprocessed;
            (h || (h = b("isEmpty")))(a) || b("MercuryThreadInformer").getForFBID(this.$MercuryDispatcher1).synchronizeInforms(function () {
                a.payload_source === "server_invalidate_global_state" && (c.inform("invalidate-global-state", {}), b("MessengerParticipants.bs").reset());
                if (a.payload_source === "server_invalidate_thread_state") {
                    var d = a.threads && a.threads.length > 0 && a.threads[0] && a.threads[0].thread_id;
                    d && c.inform("invalidate-thread-state", d)
                }
                a.threads && Array.isArray(a.threads) && a.threads.length > 0 && b("gkx")("1443200") && b("MessengerParticipants.bs").addPreloadedParticipants(a.threads[0]);
                b("MessengerParticipants.bs").addParticipants(a);
                b("MessengerState.bs").sendJS(c.$MercuryDispatcher1, b("MessengerState.bs").processJSActions(a));
                c.inform("update-threadlist", a);
                c.inform("update-messages", a);
                c.inform("model-update-completed", null)
            })
        };
        d.$MercuryDispatcher2 = function (a) {
            var b = a.payload_source;
            if (b === "client_change_read_status" || b === "client_mark_thread_seen") return;
            var c = {from_client: a.from_client, messages: null};
            if (a.actions) {
                a = a.actions.filter(function (a) {
                    return a.action_type === "ma-type:user-generated-message" || a.action_type === "ma-type:log-message"
                }).map(function (a) {
                    return {
                        action_type: a.action_type,
                        other_user_fbid: a.other_user_fbid,
                        thread_fbid: a.thread_fbid,
                        message_id: a.message_id
                    }
                });
                a.length && (c.messages = a)
            }
            i.debug("update:" + b, JSON.stringify(c))
        };
        return c
    }(b("mixin")(b("ArbiterMixin")));
    e.exports = a;
    var j = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MercurySendErrorLogger", ["Banzai", "BanzaiLogger"], (function (a, b, c, d, e, f) {
    var g = b("BanzaiLogger").create({retry: !0}), h = b("Banzai").isEnabled("mercury_send_error_logging");
    a = {
        log: function (a) {
            if (!h) return;
            a = {
                message_id: a.message_id,
                timestamp_client: Date.now(),
                error_type: a.error_data.type,
                error_code: a.error_data.code,
                error_description: a.error_data.description,
                is_transient: a.error_data.is_transient
            };
            g.log("MercurySendErrorLoggerConfig", a)
        }
    };
    e.exports = a
}), null);
__d("MercuryServerPayloadPreprocessor", ["invariant", "ChatReliabilityInstrumentation", "LogHistory", "MercuryAttachment", "MercuryDispatcher", "MercuryIDs", "MercurySendErrorLogger", "MercurySingletonProvider", "MercuryThreadIDMap", "MessengerEnvironment", "MessengerState.re", "URI", "gkx"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h;
    a = function () {
        function a(a) {
            this.$4 = b("LogHistory").getInstance("MercuryServerPayloadPreprocessor"), this.$1 = a, this.$2 = b("MercuryThreadIDMap").getForFBID(this.$1), this.$3 = b("MercuryDispatcher").getForFBID(this.$1)
        }

        a.getForFBID = function (a) {
            return i.getForFBID(a)
        };
        a.get = function () {
            return i.get()
        };
        var c = a.prototype;
        c.handleUpdate = function (a) {
            var c = this, e = {};
            a.from_client && g(0, 2150);
            (a.threads || []).forEach(function (a) {
                c.$5(a, e);
                var b = c.$2.getServerIDFromClientIDNow(a.thread_id);
                d(["MercuryServerRequests"], function (d) {
                    d = d.getForFBID(c.$1);
                    d.markThreadFetched(a.thread_id);
                    b && d.markThreadFetched(b);
                    d.updateLastActionTimestamp(a.timestamp)
                })
            });
            a.pinned_thread_ids = (a.pinned_thread_ids || []).map(function (a) {
                return c.$2.getClientIDFromServerIDNow(a)
            });
            (a.ordered_threadlists || []).forEach(function (a) {
                var b = a.thread_fbids || [];
                b = b.concat(a.other_user_fbids || []);
                a.thread_ids = b.map(function (a) {
                    return c.$2.getClientIDFromServerIDNow(a.toString())
                })
            });
            if (a.delivery_receipts) {
                var f = {};
                for (var h = a.delivery_receipts, i = Array.isArray(h), j = 0, h = i ? h : h[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); ;) {
                    var k;
                    if (i) {
                        if (j >= h.length) break;
                        k = h[j++]
                    } else {
                        j = h.next();
                        if (j.done) break;
                        k = j.value
                    }
                    k = k;
                    var l = k.other_user_fbid ? b("MercuryIDs").getThreadIDFromUserID(k.other_user_fbid) : this.$2.getClientIDFromServerIDNow(k.thread_fbid);
                    l && (f[l] = k.time)
                }
                a.delivery_receipts = f
            }
            a.actions = a.actions || [];
            a.actions.forEach(function (f) {
                f.action_type === "ma-type:send-message" && f.status === 10 && b("MercurySendErrorLogger").log(f);
                var h = null, i = null;
                f.other_user_fbid ? (i = b("MercuryIDs").getThreadIDFromUserID(f.other_user_fbid), h = f.other_user_fbid) : f.thread_fbid ? (i = b("MercuryIDs").getThreadIDFromThreadFBID(f.thread_fbid), h = f.thread_fbid) : f.thread_id ? (i = b("MercuryIDs").getThreadIDFromThreadFBID(f.thread_id), h = f.thread_id) : f.status && f.status != 1 && f.client_thread_id ? i = f.client_thread_id : g(0, 2151, f.action_type, f.status);
                h = h && h.toString();
                f.thread_id = c.$2.hasClientIDForServerID(h) ? c.$2.getClientIDFromServerIDNow(h) : i;
                f.action_type == "ma-type:send-message" && f.client_thread_id && h && (f.thread_id = f.client_thread_id, c.$6("forceSetServerIDToClientID", h, f.client_thread_id) && b("ChatReliabilityInstrumentation").logSET_THREAD_ID_MAP(h + ":" + f.client_thread_id), c.$2.forceSetServerIDToClientID(h, f.client_thread_id), e[h] = f.client_thread_id);
                f.thread_id || g(0, 2152, f.action_type);
                (!a.payload_source || !a.payload_source.startsWith("server")) && d(["MercuryServerRequests"], function (a) {
                    a.getForFBID(c.$1).updateLastActionTimestamp(f.timestamp)
                })
            });
            this.$7(a);
            this.$8(a);
            if (a.end_of_history) {
                l = [];
                for (var k = 0; k < a.end_of_history.length; k++) {
                    j = a.end_of_history[k];
                    j.type == "user" ? l.push("user:" + j.fbid) : j.type == "thread" && this.$2.hasClientIDForServerID(j.fbid) && l.push(this.$2.getClientIDFromServerIDNow(j.fbid))
                }
                a.end_of_history = l
            }
            if (a.roger) {
                var m = {};
                Object.keys(a.roger).forEach(function (d) {
                    var e = Object.keys(a.roger[d]), f;
                    d ? f = c.$2.getClientIDFromServerIDNow(d) : e.length === 1 && (f = b("MercuryIDs").getThreadIDFromUserID(e[0]));
                    if (f) {
                        e = a.roger[d];
                        m[f] = {};
                        for (var g in e) if (Object.prototype.hasOwnProperty.call(e, g)) {
                            d = b("MercuryIDs").getParticipantIDFromUserID(g);
                            m[f][d] = e[g]
                        }
                    }
                });
                a.roger = m
            }
            a.newlyAddedClientIDs = e;
            a.preprocessed = !0;
            this.$3.handleUpdate(a)
        };
        c.$6 = function (a, c, d) {
            if (!b("gkx")("1199097")) return;
            var e = b("MessengerState.re").getThreadMetaNow(this.$1, d);
            if (e == null) {
                this.$4.debug(a, c + ":" + d);
                return !0
            }
            return !1
        };
        c.$5 = function (a, c) {
            var d = a.other_user_fbid ? a.other_user_fbid : a.thread_fbid;
            d || g(0, 2153);
            var e = this.$2.getClientIDFromServerIDNow(d);
            e || (e = a.other_user_fbid ? b("MercuryIDs").getThreadIDFromUserID(a.other_user_fbid) : b("MercuryIDs").getThreadIDFromThreadFBID(a.thread_fbid), this.$6("setServerIDToClientID", d, e), this.$2.setServerIDToClientID(d, e), this.$2.setDeprecatedServerIDToClientID(a.thread_id, e), c[d] = e);
            a.thread_id = e
        };
        c.$7 = function (a) {
            a.actions.forEach(function (a) {
                a.action_type === "ma-type:user-generated-message" && (a.attachments = a.attachments || [], a.attachments.forEach(function (a) {
                    if (b("MercuryAttachment").isShareAttachment(a) && a.share && b("MessengerEnvironment").messengerui) {
                        var c = new (h || (h = b("URI")))(a.share.uri);
                        c.getDomain() || (a.share.uri = c.setDomain("facebook.com").setSubdomain((h || (h = b("URI"))).getRequestURI().getSubdomain()).setProtocol("https").toString())
                    }
                }))
            })
        };
        c.$8 = function (a) {
            a.actions.forEach(function (a) {
                if (a.action_type !== "ma-type:user-generated-message") return;
                a = a;
                if (!a.has_attachment || !a.attachments) return;
                for (var c = a.attachments.length - 1; c >= 0; c -= 1) {
                    var d = a.attachments[c];
                    if (!d.share || !d.share.style_list || d.share.style_list[0] != "genie_message") continue;
                    d.share.target.genie_id && (a.author = b("MercuryIDs").getParticipantIDFromUserID(d.share.target.genie_id));
                    d.share.target && !d.share.target.attachment && (a.attachments.splice(c, 1), a.has_attachment = a.attachments.length > 0)
                }
            })
        };
        return a
    }();
    e.exports = a;
    var i = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MercuryServerSendMessageQueueOptions", [], (function (a, b, c, d, e, f) {
    a = function (a, b, c, d, e, f) {
        this.success_handler = a, this.error_handler = b, this.transport_error_handler = c, this.timeout_handler = d, this.timeout = e, this.connection_retries = f
    };
    e.exports = a
}), null);
__d("MercurySyncDeltaHolder", ["MercurySingletonProvider"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a() {
            this.$2 = new Map(), this.$3 = [], this.$1 = 0
        }

        a.getForFBID = function (a) {
            return g.getForFBID(a)
        };
        a.get = function () {
            return g.get()
        };
        var b = a.prototype;
        b.peek = function () {
            this.$3 = this.$3.sort(function (a, b) {
                return a - b
            });
            return this.$3[0]
        };
        b.getTop = function () {
            this.$3 = this.$3.sort(function (a, b) {
                return a - b
            });
            return this.$3.reverse()[0]
        };
        b.pop = function () {
            this.$3 = this.$3.sort(function (a, b) {
                return a - b
            });
            if (this.$3.length === 0) return void 0;
            var a = this.$3.shift(), b = this.$2.get(a);
            this.$2["delete"](a);
            return {seqID: a, delta: b}
        };
        b.push = function (a, b) {
            if (this.$2.has(a)) return;
            this.$2.set(a, b);
            this.$3.push(a)
        };
        b.getLastSeqID = function () {
            return this.$1
        };
        b.updateLastSeqID = function (a) {
            this.$1 = a
        };
        b.updateLastSeqIDAndClearHistory = function (a) {
            this.$2 = new Map(), this.$3 = [], this.$1 = a
        };
        return a
    }();
    e.exports = a;
    var g = new (b("MercurySingletonProvider"))(a)
}), null);
__d("XMercuryUnseenThreadIDsController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/mercury/unseen_thread_ids/", {})
}), null);
__d("XMessagingChangeMentionsMuteModeController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/ajax/mercury/change_mentions_mute_thread/", {})
}), null);
__d("XMessagingChangeReactionsMuteModeController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/ajax/mercury/change_reactions_mute_thread/", {})
}), null);
__d("MercuryServerRequests", ["errorCode", "invariant", "Promise", "Arbiter", "AsyncResponse", "AvailableListConstants", "BanzaiODS", "Bootloader", "ChannelConstants", "ChatReliabilityInstrumentation", "CurrentUser", "Env", "LogHistory", "MercuryAPIArgsSource", "MercuryAssert", "MercuryDispatcher", "MercuryIDs", "MercuryMessageClientState", "MercuryMessageIDs.bs", "MercurySendErrorLogger", "MercuryServerDispatcher", "MercuryServerPayloadPreprocessor", "MercuryServerRequestsConfig", "MercuryServerSendMessageQueueOptions", "MercuryServerSendMessageQueueRouter", "MercuryServerURIs", "MercurySingletonProvider", "MercurySyncDeltaHolder", "MercuryTagHelper", "MercuryThreadIDMap", "MessagingConfig", "MessagingTag", "MessengerEnvironment", "MessengerWebStgTypedLoggerLite", "PresenceStatus", "ScriptPath", "XMercuryUnseenThreadIDsController", "XMessagingChangeMentionsMuteModeController", "XMessagingChangeReactionsMuteModeController", "createObjectFrom", "promiseDone", "setTimeoutAcrossTransitions", "gkx"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    var i, j = b("MessengerWebStgTypedLoggerLite").log, k = b("LogHistory").getInstance("mercury_server"),
        l = b("MercuryAPIArgsSource").MERCURY, m = 30 * 1e3;

    function n(a) {
        return a.getError() ? "_" + a.getError() : ""
    }

    function o(a, c) {
        var d = babelHelpers["extends"]({}, a), e;
        if (c.threads) {
            d.threads || (d.threads = {});
            for (e in c.threads) d.threads[e] = Object.keys(b("createObjectFrom")((d.threads[e] || []).concat(c.threads[e] || [])))
        }
        if (c.messages) {
            d.messages || (d.messages = {});
            for (e in c.messages) {
                d.messages[e] || (d.messages[e] = {});
                for (var f in c.messages[e]) d.messages[e][f] ? d.messages[e][f] = s(d.messages[e][f], c.messages[e][f]) : d.messages[e][f] = c.messages[e][f]
            }
        }
        d.client = a.client || c.client;
        return d
    }

    function p(a, c) {
        var d = Object.assign(b("createObjectFrom")(a.folders, !0), b("createObjectFrom")(c.folders, !0));
        a = a.client || c.client;
        return {folders: Object.keys(d), client: a}
    }

    function q(a, b) {
        for (var c in b) if (a[c] && typeof a[c] === "object") a[c] = s(a[c], b[c]); else if (b[c] && typeof b[c] === "object") {
            var d = {};
            Object.assign(d, b[c]);
            a[c] = d
        }
        return a
    }

    function r(a, b) {
        return b
    }

    function s(a, b) {
        var c = Math.max(a.limit, b.limit), d;
        !a.timestamp ? d = b.timestamp : !b.timestamp ? d = a.timestamp : d = Math.min(a.timestamp, b.timestamp);
        return {limit: c, timestamp: d}
    }

    function t(a, b) {
        var c = a.client || b.client;
        c = {ids: {}, client: c};
        Object.assign(c.ids, a.ids, b.ids);
        return c
    }

    function u(a, c) {
        var d = {}, e, f = a.client || c.client;
        delete a.client;
        delete c.client;
        for (e in a) Object.assign(d, b("createObjectFrom")(a[e], e));
        for (e in c) Object.assign(d, b("createObjectFrom")(c[e], e));
        a = {client: f};
        for (var g in d) e = d[g], a[e] || (a[e] = []), a[e].push(g);
        return a
    }

    function v(a, c) {
        var d = a.client || c.client;
        a = b("createObjectFrom")(a.ids, !0);
        c = b("createObjectFrom")(c.ids, !0);
        a = Object.assign(a, c);
        return {ids: Object.keys(a), client: d}
    }

    a = function () {
        function a(a) {
            var c = this;
            this.$1 = a;
            this.$2 = 0;
            this.$3 = {};
            this.$4 = {};
            this.__threadIDMap = b("MercuryThreadIDMap").getForFBID(this.$1);
            this.$5 = b("MercuryDispatcher").getForFBID(this.$1);
            this.$6 = b("MercuryServerPayloadPreprocessor").getForFBID(this.$1);
            this.$7 = new (b("MercuryServerSendMessageQueueOptions"))(function (a, b) {
                c.__handleUpdate(a, b)
            }, function (a) {
                return c.$9(a)
            }, function (a) {
                c.$10(a)
            }, function (a) {
                return c.$11(a)
            }, b("MercuryServerRequestsConfig").sendMessageTimeout, b("MessagingConfig").SEND_CONNECTION_RETRIES);
            this.$8 = b("MercurySyncDeltaHolder").getForFBID(this.$1);
            this.$12()
        }

        a.getForFBID = function (a) {
            return w.getForFBID(a)
        };
        a.get = function () {
            return w.get()
        };
        var c = a.prototype;
        c.fetchThreadlistInfo = function (a, c, d, e, f, g) {
            d === void 0 && (d = b("MessagingTag").INBOX);
            f === void 0 && (f = l);
            var h = e ? b("MercuryServerDispatcher").IMMEDIATE : null;
            f = {client: f};
            f[d] = {offset: a, limit: c, filter: e, before: g};
            this.__sendRequest(b("MercuryServerURIs").THREADLIST_INFO, f, h)
        };
        c.fetchUnseenThreadIDs = function (a, c) {
            a === void 0 && b("MessagingTag").INBOX, c === void 0 && (c = l), this.__sendRequest(b("XMercuryUnseenThreadIDsController").getURIBuilder().getURI().toString(), {})
        };
        c.fetchUnreadThreadIDs = function (a, c) {
            c === void 0 && (c = l), this.__sendRequest(b("MercuryServerURIs").UNREAD_THREADS, {
                folders: [a],
                client: c
            })
        };
        c.fetchThreadData = function (a, c) {
            var d = this;
            c === void 0 && (c = l);
            b("MercuryAssert").allThreadID(a);
            var e = {threads: {}, client: c}, f = [], g = [];
            a.forEach(function (a) {
                if (d.$3[a]) return;
                d.$3[a] = !0;
                var c = d.__threadIDMap.getServerIDFromClientIDNow(a);
                a = b("MercuryIDs").tokenize(a);
                if (a.type == "user") f.push(a.value), e.threads.user_ids = f; else if (a.type == "thread") c ? g.push(c) : g.push(a.value), e.threads.thread_fbids = g; else if (a.type == "root") c && (g.push(c), e.threads.thread_fbids = g); else if (a.type != "pending") throw new Error("Unknown thread type", a)
            });
            e.threads.user_ids && e.threads.user_ids.forEach(function (a) {
                a || (k.error("empty user id", JSON.stringify(f)), b("ChatReliabilityInstrumentation").logERROR("Invalid user ID sent to thread_info.php: " + JSON.stringify(f)))
            });
            e.threads.thread_fbids && e.threads.thread_fbids.forEach(function (c) {
                c || b("ChatReliabilityInstrumentation").logERROR("Invalid FBID sent to thread_info.php: " + JSON.stringify(a))
            });
            for (var h in e.threads) {
                this.__sendRequest(b("MercuryServerURIs").THREAD_INFO, e);
                break
            }
        };
        c.ensureThreadIsFetched = function (a, c) {
            c === void 0 && (c = l);
            if (!this.__threadIDMap.getClientIDFromServerIDNow(a) && !this.$3[a]) {
                if (!a) {
                    b("ChatReliabilityInstrumentation").logERROR("Ensure invalid FBID sent to thread_info.php");
                    k.error("attempting to fetch empty thread_fbid. Bad idea!");
                    return
                }
                this.$3[a] = !0;
                this.__sendRequest(b("MercuryServerURIs").THREAD_INFO, {threads: {thread_fbids: [a]}, client: c})
            }
        };
        c.fetchThreadMessages = function (a, c, d, e, f, g) {
            var h = this;
            g === void 0 && (g = l);
            b("MercuryAssert").isThreadID(a);
            var i;
            c = b("MercuryIDs").tokenize(a);
            var j = this.__threadIDMap.getServerIDFromClientIDNow(a), k = !1;
            if (j) j = j, i = c.type == "user" ? "user_ids" : "thread_fbids"; else {
                j = c.value;
                switch (c.type) {
                    case"user":
                        i = "user_ids";
                        k = !0;
                        break;
                    case"thread":
                        i = "thread_fbids";
                        break
                }
            }
            var m = {messages: {}, threads: {}, client: g};
            i ? (m.messages[i] = {}, m.messages[i][j] = {
                timestamp: e,
                limit: d
            }, k && (m.threads[i] = [j]), this.__sendRequest(b("MercuryServerURIs").THREAD_INFO, m, f)) : this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                m.messages.thread_fbids = {}, m.messages.thread_fbids[a] = {
                    timestamp: e,
                    limit: d
                }, h.__sendRequest(b("MercuryServerURIs").THREAD_INFO, m, f)
            })
        };
        c.handleThreadInfoError = function (a, c) {
            var d = a.getData();
            c = [];
            if (d.messages && !b("gkx")("1738138")) {
                for (var e in d.messages.thread_fbids) {
                    a = this.__threadIDMap.getClientIDFromServerIDNow(e);
                    a && c.push(this.$13(a))
                }
                for (var f in d.messages.user_ids) c.push(this.$13("user:" + f));
                for (var g in d.messages.group_ids) c.push(this.$13("group:" + g))
            }
            c.length && this.$5.handleUpdate({actions: c, from_client: !0, payload_source: "client_channel_message"});
            if (d.threads && (d.threads.user_ids || d.threads.thread_fbids || d.threads.group_ids || d.threads.thread_ids)) {
                a = 5;
                c = !0;
                d.retry_count || (d.retry_count = 0, d.messages && delete d.messages);
                if (c) {
                    c = Math.pow(2, Math.min(d.retry_count, a)) * 1e3;
                    b("setTimeoutAcrossTransitions")(function () {
                        k.log("retry_thread", "{}"), this.__sendRequest(b("MercuryServerURIs").THREAD_INFO, d)
                    }.bind(this), c);
                    d.retry_count++
                }
            }
        };
        c.markFolderAsRead = function (a) {
            this.__sendRequest(b("MercuryServerURIs").MARK_FOLDER_READ, {folder: a});
            a = [{action_type: "mga-type:mark-all-read", folder: a}];
            this.$5.handleUpdate({global_actions: a, from_client: !0, payload_source: "client_change_read_status"})
        };
        c.changeThreadReadStatus = function (a, c, d, e, f, g) {
            var h = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (i) {
                var j;
                j = {
                    ids: (j = {}, j[i] = c, j),
                    source: d,
                    watermarkTimestamp: e,
                    shouldSendReadReceipt: f,
                    commerce_last_message_type: g
                };
                k.log("initiate_change_read_status", JSON.stringify({
                    thread_id: a,
                    thread_fbid: i,
                    mark_as_read: c,
                    watermarkTimestamp: e
                }));
                h.__sendRequest(b("MercuryServerURIs").CHANGE_READ_STATUS, j)
            })
        };
        c.changeThreadArchivedStatus = function (a, c, d) {
            var e = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                var f = {ids: {}, source: d};
                f.ids[a] = c;
                e.__sendRequest(b("MercuryServerURIs").CHANGE_ARCHIVED_STATUS, f)
            })
        };
        c.changeThreadPinnedStatus = function (a, c, d) {
            var e = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                var f = {ids: {}, source: d};
                f.ids[a] = c;
                e.__sendRequest(b("MercuryServerURIs").CHANGE_PINNED_STATUS, f)
            })
        };
        c.changeThreadPageFollowUpStatus = function (a, c, d) {
            var e = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                var f = {ids: {}, source: d};
                f.ids[a] = c;
                e.__sendRequest(b("MercuryServerURIs").CHANGE_PAGE_FOLLOW_UP_STATUS, f)
            })
        };
        c.changeThreadFolder = function (a, c) {
            var d = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                var e = {};
                e[c] = [a];
                d.__sendRequest(b("MercuryServerURIs").MOVE_THREAD, e)
            })
        };
        c.changeMutingOnThread = function (a, c) {
            var d = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                d.__sendRequest(b("MercuryServerURIs").CHANGE_MUTE_THREAD, {
                    thread_fbid: a,
                    mute_settings: c,
                    payload_source: l
                })
            })
        };
        c.changeMentionsMutingOnThread = function (a, c) {
            var d = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                d.__sendRequest(b("XMessagingChangeMentionsMuteModeController").getURIBuilder().getURI(), {
                    thread_fbid: a,
                    mentions_mute_mode: c,
                    payload_source: l
                })
            })
        };
        c.changeReactionsMutingOnThread = function (a, c) {
            var d = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                d.__sendRequest(b("XMessagingChangeReactionsMuteModeController").getURIBuilder().getURI(), {
                    thread_fbid: a,
                    reactions_mute_mode: c,
                    payload_source: l
                })
            })
        };
        c.markThreadSpam = function (a, c) {
            var d = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                d.__sendRequest(b("MercuryServerURIs").MARK_SPAM, {id: a, source: c})
            })
        };
        c.unmarkThreadSpam = function (a, c) {
            var d = this;
            b("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function (a) {
                d.__sendRequest(b("MercuryServerURIs").UNMARK_SPAM, {id: a, source: c})
            })
        };
        c.deleteThread = function (a, b) {
            this.deleteThreads([a], b)
        };
        c.deleteThreads = function (a, c) {
            var d = this;
            b("promiseDone")(b("Promise").all(a.map(function (a) {
                b("MercuryAssert").isThreadID(a);
                return new (b("Promise"))(function (b) {
                    return d.__threadIDMap.getServerIDFromClientID(a, b)
                })
            })).then(function (a) {
                d.__sendRequest(b("MercuryServerURIs").DELETE_THREAD, {ids: a, source: c})
            }))
        };
        c.deleteMessages = function (a, c) {
            b("MercuryMessageIDs.bs").getServerIDs(c || [], function (a) {
                this.__sendRequest(b("MercuryServerURIs").DELETE_MESSAGES, {message_ids: a})
            }.bind(this))
        };
        c.sendDeliveryReceipts = function (a, c) {
            b("MercuryMessageIDs.bs").getServerIDs(a || [], function (a) {
                this.__sendRequest(b("MercuryServerURIs").DELIVERY_RECEIPTS, {message_ids: a, thread_ids: c})
            }.bind(this))
        };
        c.sendNewMessage = function (a, c) {
            var d = this;
            c === void 0 && (c = l);
            a.offline_threading_id || b("BanzaiODS").bumpEntityKey(3303, "chat.web", "missing_otid_on_send");
            if (a.client_state && a.client_state !== b("MercuryMessageClientState").SEND_TO_SERVER) return;
            var e = b("MercuryIDs").tokenize(a.thread_id), f = e.type, g = babelHelpers["extends"]({}, a);
            g.thread_id = null;
            f == "user" ? (g.other_user_fbid = e.value, this.$14(g, c)) : f == "thread" ? (g.thread_fbid = e.value, this.$14(g, c)) : f == "root" && e.value == g.offline_threading_id ? (g.client_thread_id = a.thread_id, this.$14(g, c)) : (b("MercuryIDs").isLocalThread(a.thread_id) || h(0, 5587, a.thread_id), this.__threadIDMap.getServerIDFromClientID(a.thread_id, function (a) {
                g.thread_fbid = a, d.$14(g, c)
            }));
            this.$15("send_msg", a);
            b("Bootloader").loadModules(["QuickPerformanceLogger", "MessengerWebQuickLogModule"], function (b, c) {
                b.markerStart(c.SEND_MESSAGE, a.offline_threading_id)
            }, "MercuryServerRequests")
        };
        c.$15 = function (a, c) {
            try {
                var d = (i || (i = b("Env"))).isCQuick ? "Comet Inbox" : b("MessengerEnvironment").messengerdotcom ? "messenger_dot_com" : b("MessengerEnvironment").facebookdotcom ? "Facebook Messenger (other)" : "Other",
                    e = b("MercuryTagHelper").get(c.tags || [], "entrypoint"),
                    f = b("MercuryIDs").getThreadFBIDFromThreadID(c.thread_id),
                    g = b("PresenceStatus").get(f) === b("AvailableListConstants").ACTIVE;
                j({
                    attachment_infos: void 0,
                    client_timestamp: Date.now(),
                    entry_point: e,
                    event_name: a,
                    first_attachment_type: void 0,
                    "interface": d,
                    mid: c.message_id,
                    offline_threading_id: c.offline_threading_id,
                    other_user_fbid: b("MercuryIDs").isGroupChat(c.thread_id) ? void 0 : f,
                    thread_fbid: b("MercuryIDs").isGroupChat(c.thread_id) ? f : void 0,
                    extra_data: {pathName: b("ScriptPath").getScriptPath(), isActiveNow: g}
                })
            } catch (a) {
                b("BanzaiODS").bumpEntityKey(3303, "chat.web", "logging_error")
            }
        };
        c.$14 = function (a, c) {
            b("Arbiter").inform(b("ChannelConstants").ATTEMPT_RECONNECT), this.$4[a.message_id] = Date.now(), b("MercuryServerSendMessageQueueRouter").getForFBID(this.$1).enqueue(a.other_user_fbid || a.thread_fbid || a.client_thread_id, this.$7, c, a)
        };
        c.__getSendMessageQueueOptions = function () {
            return this.$7
        };
        c.markSeen = function () {
            var a = this.$2;
            this.__sendRequest(b("MercuryServerURIs").MARK_SEEN, {seen_timestamp: a})
        };
        c.$16 = function (a, c, d, e) {
            a = a.getData();
            a = a.message_batch || [a];
            k.debug("handle_send_message_error_common", JSON.stringify({
                reliability_error_status: d,
                request_error_status: c,
                error_data: e,
                message_list: a
            }));
            b("ChatReliabilityInstrumentation").logERROR("send_message_fail");
            var f = a.map(function (a) {
                a = {
                    action_type: "ma-type:send-message",
                    other_user_fbid: a.other_user_fbid,
                    thread_fbid: a.thread_fbid,
                    client_message_id: a.message_id,
                    message_id: a.message_id,
                    client_thread_id: a.client_thread_id,
                    status: c,
                    error_data: e
                };
                return a
            });
            f.forEach(function (a) {
                a.action_type === "ma-type:send-message" && a.status === 10 && this.__logMercurySendError(a)
            }, this);
            d = {actions: f, payload_source: "client_handle_error"};
            b("Bootloader").loadModules(["QuickPerformanceLogger", "MessengerWebQuickLogModule"], function (a, b) {
                f.map(function (c) {
                    a.markerEnd(b.SEND_MESSAGE, "FAIL", c.client_message_id)
                })
            }, "MercuryServerRequests");
            this.$6.handleUpdate(d)
        };
        c.handleSendMessageError = function (a) {
            var c = a.getPayload(), d = null, e = null;
            c && c.error_payload ? (d = 3, e = "send_error") : (d = 10, e = "request_error" + n(a));
            c = a.error;
            c === 1404102 ? b("AsyncResponse").verboseErrorHandler(a) : (c === 1545052 || c === 1409009 || c === 1409008 || c === 1409007 || c === 1409006 || c === 1545083 || c === 1545084) && b("AsyncResponse").defaultErrorHandler(a);
            c = /<.*>/.test(a.getErrorDescription()) ? a.getErrorSummary() : a.getErrorDescription();
            this.$16(a.getRequest(), d, e, {type: 1, code: a.getError(), description: c, is_transient: a.isTransient()})
        };
        c.handleSendMessageTransportError = function (a) {
            this.$16(a.getRequest(), 10, "transport_error" + n(a), {type: 2, code: a.getError(), is_transient: !0})
        };
        c.handleSendMessageTimeout = function (a) {
            this.$16(a, 10, "transport_timeout", {type: 3, is_transient: !0})
        };
        c.getLastActionTimestamp = function () {
            return this.$2
        };
        c.__logMercurySendError = function (a) {
            b("MercurySendErrorLogger").log(a)
        };
        c.updateLastActionTimestamp = function (a) {
            var b = Date.now() - 1e3 * 60 * 60 * 24;
            a && a > b && (this.$2 = Math.max(this.$2, a))
        };
        c.markThreadFetched = function (a) {
            delete this.$3[a]
        };
        c.$13 = function (a) {
            return {
                action_type: "ma-type:log-message",
                thread_id: a,
                message_id: a,
                timestamp: Date.now(),
                is_unread: !1,
                source: "source:unknown",
                log_message_body: "",
                log_message_type: "log:error-msg",
                log_message_data: {}
            }
        };
        c.__getForAsyncRequest = function (c) {
            c = c.getData();
            c = c.request_user_id ? c.request_user_id : b("CurrentUser").getID();
            return a.getForFBID(c)
        };
        c.__handleUpdate = function (a, c) {
            a.payload_source === "server_send_message" && b("Bootloader").loadModules(["QuickPerformanceLogger", "MessengerWebQuickLogModule"], function (b, c) {
                var d = a.actions && a.actions[0] && a.actions[0].client_message_id;
                d && b.markerEnd(c.SEND_MESSAGE, "SUCCESS", d)
            }, "MercuryServerRequests"), this.__getForAsyncRequest(c).$6.handleUpdate(a)
        };
        c.$17 = function (a) {
            var b = this.__getForAsyncRequest(a);
            b.handleThreadInfoError(a)
        };
        c.$18 = function (a) {
            var b = this.__getForAsyncRequest(a);
            b.handleThreadInfoError(a, !0)
        };
        c.$9 = function (a) {
            var b = this.__getForAsyncRequest(a.getRequest());
            b.handleSendMessageError(a)
        };
        c.$10 = function (a) {
            var b = this.__getForAsyncRequest(a.getRequest());
            b.handleSendMessageTransportError(a)
        };
        c.$11 = function (a) {
            var b = this.__getForAsyncRequest(a);
            b.handleSendMessageTimeout(a)
        };
        c.$12 = function () {
            var a = this, c, d = null;
            b("MercuryServerRequestsConfig").msgrRegion && (d = {
                name: "X-MSGR-Region",
                value: b("MercuryServerRequestsConfig").msgrRegion
            });
            c = (c = {}, c[b("MercuryServerURIs").THREAD_INFO] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").BATCH_DEFERRED_MULTI,
                customHeader: d,
                batch_function: o,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                },
                error_handler: function (b) {
                    return a.$17(b.getRequest())
                },
                timeout_handler: function (b) {
                    return a.$18(b)
                },
                timeout: m
            }, c[b("MercuryServerURIs").MARK_FOLDER_READ] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").CHANGE_READ_STATUS] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    a.__handleUpdate(b, c);
                    c = (b.threads || []).map(function (a) {
                        return a && a.thread_id
                    });
                    k.log("response_change_read_status", JSON.stringify({threads: c}))
                }
            }, c[b("MercuryServerURIs").MARK_SEEN] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: d,
                batch_function: r,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").THREADLIST_INFO] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").BATCH_SUCCESSIVE_UNIQUE,
                customHeader: d,
                batch_function: q,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").MARK_SPAM] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").UNMARK_SPAM] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").UNREAD_THREADS] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").BATCH_SUCCESSIVE_UNIQUE,
                customHeader: d,
                batch_function: p,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").CHANGE_ARCHIVED_STATUS] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: d,
                batch_function: t,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").CHANGE_PINNED_STATUS] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: d,
                batch_function: t,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").CHANGE_PAGE_FOLLOW_UP_STATUS] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: d,
                batch_function: t,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").DELETE_THREAD] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: d,
                batch_function: v,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").DELETE_MESSAGES] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").DELIVERY_RECEIPTS] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").MOVE_THREAD] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: d,
                batch_function: u,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c[b("MercuryServerURIs").CHANGE_MUTE_THREAD] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, c);
            var e = b("XMercuryUnseenThreadIDsController").getURIBuilder().getURI().toString();
            c[e] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            };
            e = b("XMessagingChangeMentionsMuteModeController").getURIBuilder().getURI().toString();
            c[e] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            };
            e = b("XMessagingChangeReactionsMuteModeController").getURIBuilder().getURI().toString();
            c[e] = {
                request_user_id: this.$1,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: d,
                handler: function (b, c) {
                    return a.__handleUpdate(b, c)
                }
            };
            b("MercuryServerDispatcher").registerEndpoints(c)
        };
        c.__sendRequest = function (a, c, d) {
            if (this.$8) switch (a) {
                case b("MercuryServerURIs").THREADLIST_INFO:
                case b("MercuryServerURIs").THREAD_INFO:
                    c.cachius_min_seq_id = this.$8.getLastSeqID();
                    break;
                default:
                    break
            }
            b("MercuryServerDispatcher").trySend(a, c, d, this.$1)
        };
        c.__getFBID = function () {
            return this.$1
        };
        return a
    }();
    e.exports = a;
    var w = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MercuryThreadIDMap", ["KeyedCallbackManager", "MercuryAssert", "MercuryIDs", "MercurySingletonProvider"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a) {
            this.$1 = a, this.$2 = new (b("KeyedCallbackManager"))(), this.$3 = new (b("KeyedCallbackManager"))()
        }

        a.getForFBID = function (a) {
            return g.getForFBID(a)
        };
        a.get = function () {
            return g.get()
        };
        var c = a.prototype;
        c.setServerIDToClientID = function (a, b) {
            var c = this.getClientIDFromServerIDNow(a);
            if (c) return;
            this.forceSetServerIDToClientID(a, b)
        };
        c.forceSetServerIDToClientID = function (a, b) {
            this.$2.setResource(a, b), this.$3.setResource(b, a)
        };
        c.setDeprecatedServerIDToClientID = function (a, b) {
            a && this.$2.setResource(a, b)
        };
        c.getClientIDFromServerIDNow = function (a) {
            return this.$2.getResource(a)
        };
        c.getClientIDFromServerID = function (a, b) {
            var c = this;
            this.$2.executeOrEnqueue(a, b);
            d(["MercuryServerRequests"], function (b) {
                b.getForFBID(c.$1).ensureThreadIsFetched(a)
            })
        };
        c.getServerIDFromClientIDNow = function (a) {
            return this.$3.getResource(a)
        };
        c.getServerIDFromClientID = function (a, c) {
            var e = this;
            b("MercuryAssert").isThreadID(a);
            var f = this.$3.executeOrEnqueue(a, c);
            d(["MercuryServerRequests"], function (c) {
                var d = e.$3.getUnavailableResources(f), g = b("MercuryIDs").tokenize(a);
                d.length && g.type != "root" && c.getForFBID(e.$1).fetchThreadData(d)
            })
        };
        c.hasClientIDForServerID = function (a) {
            return !!this.getClientIDFromServerIDNow(a)
        };
        c.convertThreadIDIfAvailable = function (a) {
            var b = this.getClientIDFromServerIDNow(a);
            return b || a
        };
        c.canLinkExternally = function (a) {
            b("MercuryAssert").isThreadID(a);
            var c = b("MercuryIDs").tokenize(a);
            return c.type == "user" || !!this.getServerIDFromClientIDNow(a)
        };
        c.reset = function () {
            this.$3.reset(), this.$2.reset()
        };
        return a
    }();
    e.exports = a;
    var g = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MercuryLoggingHelper", [], (function (a, b, c, d, e, f) {
    a = {
        obfuscateThread: function (a) {
            var b = babelHelpers["extends"]({}, a);
            a && a.snippet && a.snippet.length > 0 && (b.snippet = "*** [redacted] ***");
            return b
        }, obfuscateMessage: function (a) {
            var b = babelHelpers["extends"]({}, a);
            a && a.body && a.body.length > 0 && (b.body = "*** [redacted] ***");
            return b
        }
    };
    e.exports = a
}), null);
__d("MercuryServerSendMessageQueueSimulatedError", ["AsyncRequest", "AsyncResponse"], (function (a, b, c, d, e, f) {
    var g = 9999;
    a = {
        create: function (a) {
            a = new (b("AsyncRequest"))(this.endpoint_uri).setData({message_batch: [a], client: this.client});
            var c = new (b("AsyncResponse"))(a, {});
            Object.assign(c, {error: g, silentError: !1, transientError: !0, request: a});
            return c
        }
    };
    e.exports = a
}), null);
__d("MessengerAttachmentTransformerForSend.bs", ["MercuryAttachmentType", "MessengerMessageTransformer.bs", "MessengerAttachmentTransformer.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a, c, d, e) {
        c = c.node;
        if (c == null) return {attach_type: b("MercuryAttachmentType").ERROR};
        if (c.__typename === "ExtensibleMessageAttachment") {
            var f = c.story_attachment, g = c.genie_attachment, h;
            if (g == null) h = null; else {
                g = g.genie_message;
                var i;
                if (g == null) i = null; else {
                    g = g.story_attachment;
                    i = {story_attachment: g == null ? null : b("MessengerMessageTransformer.bs").unsafeCastExtensibleAttachment(g)}
                }
                h = {genie_message: i}
            }
            g = {
                legacy_attachment_id: c.legacy_attachment_id,
                story_attachment: f == null ? null : b("MessengerMessageTransformer.bs").unsafeCastExtensibleAttachment(f),
                genie_attachment: h
            }
        } else g = null;
        i = c.__typename === "Sticker" ? c : null;
        f = c.__typename;
        var j;
        switch (f) {
            case"MessageAnimatedImage":
            case"MessageAudio":
            case"MessageFile":
            case"MessageImage":
            case"MessageVideo":
                j = [c];
                break;
            default:
                j = null
        }
        h = b("MessengerMessageTransformer.bs").unsafeCastBlobAttachments({blob_attachments: j});
        f = b("MessengerAttachmentTransformer.bs").transformAttachment(a, {
            extensible_attachment: g,
            blob_attachments: h,
            sticker: i
        }, d, e);
        if (f.length !== 0) return f[0]; else return {}
    }

    function a(a, b, c, d) {
        return b.map(function (b) {
            return g(a, b, c, d)
        })
    }

    f._transform = g;
    f.transform = a
}), null);
__d("XMessagingSendController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/messaging/send/", {privacy_mutation_token: {type: "String"}})
}), null);
__d("MercuryServerSendMessageQueue", ["fbt", "BanzaiODS", "ChatReliabilityInstrumentation", "CurrentUser", "LogHistory", "MercuryIDs", "MercuryLoggingHelper", "MercuryServerDispatcher", "MercuryServerRequestsConfig", "MercuryServerSendMessageQueueSimulatedError", "MercurySyncDeltaHandler", "MessengerAttachmentTransformerForSend.bs", "MessengerObjectAssociationType", "MessengerState.bs", "Run", "XMessagingSendController"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h = b("LogHistory").getInstance("mercury_server_send_message_queue");
    a = function () {
        function a(a, c, d, e) {
            var f = this;
            this.pending_message = null;
            this.queue = [];
            this.$6 = function () {
                return f.queue.length || f.pending_message ? g._("\u6d88\u606f\u8fd8\u672a\u53d1\u9001\uff0c\u786e\u5b9a\u73b0\u5728\u9000\u51fa\uff1f") : void 0
            };
            this.sender_id = a;
            this.queue_id = c;
            this.$2 = d.success_handler;
            this.$1 = d.error_handler;
            this.$4 = d.transport_error_handler;
            this.$3 = d.timeout_handler;
            this.$5 = b("MercurySyncDeltaHandler").getForFBID(this.sender_id);
            this.client = e;
            b("Run").onBeforeUnload(this.$6, !1);
            a = null;
            b("MercuryServerRequestsConfig").msgrRegion && (a = {
                name: "X-MSGR-Region",
                value: b("MercuryServerRequestsConfig").msgrRegion
            });
            c = this.__getSendURI();
            c = (e = {}, e[c] = {
                request_user_id: this.sender_id,
                endpoint_id: this.queue_id,
                mode: b("MercuryServerDispatcher").IMMEDIATE,
                customHeader: a,
                handler: this.handleSuccess.bind(this),
                error_handler: this.handleError.bind(this),
                transport_error_handler: this.handleTransportError.bind(this),
                timeout: d.timeout,
                timeout_handler: this.handleTimeout.bind(this),
                connection_retries: d.connection_retries
            }, e);
            b("MercuryServerDispatcher").registerEndpoints(c)
        }

        var c = a.prototype;
        c.__getSendURI = function () {
            return b("XMessagingSendController").getURIBuilder().getURI().toString()
        };
        c.__preparePayload = function (a) {
            var c;
            c = (c = a) != null ? (c = c.replied_to_message) != null ? (c = c.message) != null ? c.message_id : c : c : c;
            var d = null, e = a.client_thread_id;
            if (b("MercuryIDs").isLocalThread(e)) {
                e = b("MessengerState.bs").getThreadMetaNow(b("CurrentUser").getID(), e);
                if (e && e.message_count === 1 && e.object_association_type === b("MessengerObjectAssociationType").GENERAL_CHAT) {
                    d = (e = e) != null ? (e = e.associated_object) != null ? e.id : e : e
                }
            }
            e = c ? b("MessengerState.bs").getServerMessageID(b("CurrentUser").getID(), c) : null;
            return {
                client: this.client,
                action_type: a.action_type,
                app_id: a.app_id,
                audio_ids: a.audio_ids,
                body: a.body,
                client_thread_id: a.client_thread_id,
                ephemeral_ttl_mode: a.ephemeral_ttl_mode,
                file_ids: a.file_ids,
                gif_ids: a.gif_ids,
                has_attachment: a.has_attachment,
                image_ids: a.image_ids,
                location_attachment: a.location_attachment,
                lightweight_action_attachment: a.lightweight_action_attachment,
                log_message_data: a.log_message_data,
                log_message_type: a.log_message_type,
                message_id: a.message_id,
                message_source_data: a.message_source_data,
                montage_reply_data: a.montage_reply_data,
                offline_threading_id: a.offline_threading_id,
                other_user_fbid: a.other_user_fbid,
                photo_fbids: a.photo_fbids,
                shareable_attachment: a.shareable_attachment,
                signature_id: a.signatureID,
                source: a.source,
                specific_to_list: a.specific_to_list,
                sticker_id: a.sticker_id,
                tags: a.tags,
                thread_fbid: a.thread_fbid,
                timestamp: a.timestamp,
                ui_push_phase: a.ui_push_phase,
                video_ids: a.video_ids,
                platform_xmd: a.platform_xmd,
                profile_xmd: a.profile_xmd,
                replied_to_message_id: e,
                work_synced_group_id: d,
                to_list_md5: a.to_list_md5,
                mib_direct_message_data: a.mib_direct_message_data
            }
        };
        c.enqueue = function (a) {
            this.queue.push(a), this.$7()
        };
        c.$7 = function () {
            if (this.pending_message || !this.queue.length) {
                this.pending_message && this.$8();
                return
            }
            this.pending_message = this.queue.shift();
            var a = this.__preparePayload(this.pending_message);
            for (var c in a) (a[c] === void 0 || a[c] === null) && delete a[c];
            if (!a.action_type) {
                var d = b("MercuryLoggingHelper").obfuscateMessage(a);
                b("ChatReliabilityInstrumentation").logERROR("missing action type before sending to send controller");
                h.debug("missing_action_type", JSON.stringify(d))
            }
            if (!a.message_id) {
                d = b("MercuryLoggingHelper").obfuscateMessage(a);
                b("ChatReliabilityInstrumentation").logERROR("missing action type before sending to send controller" + JSON.stringify(d));
                h.debug("missing_message_id", JSON.stringify(d))
            }
            this.$9();
            b("MercuryServerDispatcher").trySend(this.__getSendURI(), a, null, this.sender_id, this.queue_id)
        };
        c.$10 = function () {
            while (this.queue.length) this.$11(this.queue.shift())
        };
        c.$11 = function (a) {
            this.$1(b("MercuryServerSendMessageQueueSimulatedError").create(a)), h.error("mark_as_failed", JSON.stringify({
                fbid: this.sender_id,
                queue_id: this.queue_id,
                message: b("MercuryLoggingHelper").obfuscateMessage(a)
            }))
        };
        c.handleSuccess = function (a, c) {
            var d = this;
            this.pending_message = null;
            var e = (a.actions || []).map(function (a) {
                var c = babelHelpers["extends"]({}, a);
                if (a.graphql_payload && a.graphql_payload.length > 0) {
                    var e = b("MessengerAttachmentTransformerForSend.bs").transform(d.sender_id, a.graphql_payload, a.message_id, a.for_page);
                    c = Object.assign(c, {attachments: e})
                }
                e = (e = a) != null ? (e = e.log_message_data) != null ? e.graphql_image : e : e;
                if (e) {
                    e = b("MessengerAttachmentTransformerForSend.bs").transform(d.sender_id, [e], a.message_id, a.for_page);
                    c = Object.assign(c, {log_message_data: {image: e[0]}})
                }
                return c
            });
            a.actions = e;
            this.resumeAfterSuccess(a, c)
        };
        c.resumeAfterSuccess = function (a, b) {
            this.$2(a, b), this.$12(), this.$7()
        };
        c.handleError = function (a) {
            this.pending_message = null, this.$12(), this.$1(a), this.$10()
        };
        c.handleTransportError = function (a) {
            this.pending_message = null, this.$12(), this.$4(a), this.$10()
        };
        c.handleTimeout = function (a) {
            this.pending_message = null, this.$12(), this.$3(a), this.$10()
        };
        c.$9 = function () {
            this.$5.pause()
        };
        c.$12 = function () {
            this.$5.resume()
        };
        c.$8 = function () {
            h.debug("maybe_send_next_pending_message", JSON.stringify({
                fbid: this.sender_id,
                queue_id: this.queue_id,
                pending_message: b("MercuryLoggingHelper").obfuscateMessage(this.pending_message),
                queue: this.queue.map(function (a) {
                    return b("MercuryLoggingHelper").obfuscateMessage(a)
                })
            }));
            var a = "send_queue.delayed.queue_length." + this.queue.length.toString();
            b("BanzaiODS").bumpEntityKey(3303, "chat.web", a)
        };
        return a
    }();
    e.exports = a
}), null);
__d("MercurySingletonMixin", ["CurrentUser"], (function (a, b, c, d, e, f) {
    a = {
        _getInstances: function () {
            this._instances || (this._instances = {});
            return this._instances
        }, get: function () {
            return this.getForFBID(b("CurrentUser").getID())
        }, getForFBID: function (a) {
            var b = this._getInstances();
            b[a] || (b[a] = new this(a));
            return b[a]
        }
    };
    e.exports = a
}), null);
__d("MercuryServerSendMessageQueueRouter", ["BanzaiODS", "LogHistory", "MercuryServerSendMessageQueue", "MercurySingletonMixin"], (function (a, b, c, d, e, f) {
    var g = b("LogHistory").getInstance("mercury_server_send_message_queue_router"), h = "chat.web.send_queue_router";
    b("BanzaiODS").setEntitySample(h, .1);
    a = function () {
        function a(a) {
            this.queues = new Map(), this.fbid = a
        }

        var c = a.prototype;
        c.enqueue = function (a, c, d, e) {
            var f = this.queues.get(a);
            f === void 0 && (f = new (b("MercuryServerSendMessageQueue"))(this.fbid, a, c, d), this.queues.set(a, f), g.debug("added queue", JSON.stringify({
                fbid: this.fbid,
                queue_id: a
            })), b("BanzaiODS").bumpEntityKey(3303, h, "new_queue"));
            f.enqueue(e)
        };
        return a
    }();
    e.exports = a;
    Object.assign(a, b("MercurySingletonMixin"))
}), null);
__d("MercurySyncDataFetcherImpl", ["invariant", "Promise", "AsyncResponse", "Bootloader", "CurrentUser", "FBIDCheck", "MercuryConfig", "MercuryThreadlistConstants", "MessagingConfig", "QE2Logger", "UserActivity", "clearTimeout", "setTimeoutAcrossTransitions"], (function (a, b, c, d, e, f, g) {
    "use strict";
    f.fetchThreadlistFromGraphQL = a;
    f.fetchThreadFromGraphQL = c;
    f.fetchMessageFromGraphQL = d;
    var h = null, i = null, j = null, k = {
        limit: b("MercuryThreadlistConstants").WEBMESSENGER_THREAD_COUNT + 1,
        folder: "inbox",
        tags: ["INBOX"],
        timestamp: null,
        filter: null,
        includeDeliveryReceipts: !1,
        includeSeqID: !0
    }, l = {};

    function a(a) {
        return new (b("Promise"))(function (b, c) {
            m(a, b, c, 0)
        })
    }

    function m(a, c, d, e) {
        if (!b("CurrentUser").isLoggedInNow() || e > b("MessagingConfig").syncFetchRetries) {
            b("clearTimeout")(l[a]);
            d();
            return
        }
        var f = e === 0 ? 0 : b("MessagingConfig").syncFetchInitialTimeoutMs * Math.pow(b("MessagingConfig").syncFetchTimeoutMultiplier, e);
        b("UserActivity").isOnTab() || (b("QE2Logger").logExposureForUser("mercury_dff_fetch_delay", a), f += b("MercuryConfig").DFFD * Math.random());
        b("clearTimeout")(l[a]);
        l[a] = b("setTimeoutAcrossTransitions")(function () {
            var f = !1, n = function (h) {
                if (f) return;
                if (h.errors && h.errors.length > 0) {
                    var k = h.errors[0].message;
                    if (k) {
                        var l = function () {
                            j && i || g(0, 3650), new j().setErrorMessage(k).setEvent(i.DFF_FAILURE).setQueryParams(a).log()
                        };
                        j && i ? l() : b("Bootloader").loadModules(["MessengerWebGraphQLTypedLogger", "MessengerWebGraphQLEvent"], function (a, b) {
                            j = a, i = b, l()
                        }, "MercurySyncDataFetcherImpl")
                    }
                }
                f = !0;
                m(a, c, d, e + 1)
            }, o = function () {
                if (!b("CurrentUser").isLoggedInNow()) return;
                h || g(0, 3651);
                h.fetchAll(a, [k], !b("FBIDCheck").isUser_deprecated(a), "dff").then(function (d) {
                    f = !0, c(new (b("AsyncResponse"))(null, babelHelpers["extends"]({}, d, {payload_source: "server_invalidate_global_state"}))), b("clearTimeout")(l[a])
                }, n)
            };
            h ? o() : b("Bootloader").loadModules(["MessengerGraphQLThreadlistFetcher.bs"], function (a) {
                h = a, o()
            }, "MercurySyncDataFetcherImpl")
        }, f)
    }

    function c(a, c, d) {
        return new (b("Promise"))(function (b, e) {
            n(a, c, d, b, e, 0)
        })
    }

    function n(a, c, d, e, f, g) {
        if (g > b("MessagingConfig").syncFetchRetries) {
            f();
            return
        }
        var h = g === 0 ? 0 : b("MessagingConfig").syncFetchInitialTimeoutMs * Math.pow(b("MessagingConfig").syncFetchTimeoutMultiplier, g);
        b("setTimeoutAcrossTransitions")(function () {
            var h = !1, i = function (b) {
                if (h) return;
                h = !0;
                n(a, c, d, e, f, g + 1)
            };
            b("Bootloader").loadModules(["MessengerThreadDFFFetcher.bs"], function (f) {
                return f.fetch_(a, {id: c, limit: d}, !b("FBIDCheck").isUser_deprecated(a)).then(function (a) {
                    h = !0, e(new (b("AsyncResponse"))(null, babelHelpers["extends"]({}, a, {payload_source: "server_invalidate_thread_state"})))
                }, i)
            }, "MercurySyncDataFetcherImpl")
        }, h)
    }

    function d(a, c, d) {
        return new (b("Promise"))(function (b, e) {
            o(a, c, d, b, e, 0)
        })
    }

    function o(a, c, d, e, f, g) {
        if (g > b("MessagingConfig").syncFetchRetries) {
            f();
            return
        }
        var h = g === 0 ? 0 : b("MessagingConfig").syncFetchInitialTimeoutMs * Math.pow(b("MessagingConfig").syncFetchTimeoutMultiplier, g);
        b("setTimeoutAcrossTransitions")(function () {
            var h = !1, i = function (b) {
                if (h) return;
                h = !0;
                o(a, c, d, e, f, g + 1)
            };
            b("Bootloader").loadModules(["MessengerMessageDFFFetcher.bs"], function (f) {
                return f.fetch_(a, {
                    thread_id: c,
                    message_id: d
                }, !b("FBIDCheck").isUser_deprecated(a)).then(function (a) {
                    h = !0, e(new (b("AsyncResponse"))(null, babelHelpers["extends"]({}, a)))
                }, i)
            }, "MercurySyncDataFetcherImpl")
        }, h)
    }
}), null);
__d("MercurySyncDataFetcher", ["Promise", "LogHistory", "MercurySyncDataFetcherImpl", "MessagingConfig", "WebGraphQLConfig", "clearTimeout", "promiseDone", "setTimeoutAcrossTransitions"], (function (a, b, c, d, e, f) {
    "use strict";
    f.getMaxTimeoutMs = a;
    f.fetchThreadlistFromGraphQL = c;
    f.fetchThreadFromGraphQL = d;
    f.fetchMessageFromGraphQL = e;
    var g = b("LogHistory").getInstance("mercury_sync_data_fetcher");

    function a() {
        var a = 0;
        for (var c = 0; c < b("MessagingConfig").syncFetchRetries; c++) {
            var d = c === 0 ? 0 : b("MessagingConfig").syncFetchInitialTimeoutMs * Math.pow(b("MessagingConfig").syncFetchTimeoutMultiplier, c);
            a += d + b("MessagingConfig").syncFetchRequestTimeoutMs
        }
        return a
    }

    var h = a();

    function c(a) {
        var c = null;
        return new (b("Promise"))(function (d, e) {
            var f = function (a) {
                g.error("fetch_threadlist_graphql_timeout", JSON.stringify({timeout: h})), b("clearTimeout")(c), e(a)
            };
            c = b("setTimeoutAcrossTransitions")(f, Math.max(h, b("WebGraphQLConfig").timeout * b("MessagingConfig").syncFetchRetries));
            b("promiseDone")(b("MercurySyncDataFetcherImpl").fetchThreadlistFromGraphQL(a), function (a) {
                b("clearTimeout")(c), d(a)
            }, f)
        })
    }

    function d(a, c, d) {
        return new (b("Promise"))(function (e, f) {
            var i = function (a) {
                g.error("fetch_thread_graphql_timeout", JSON.stringify({timeout: h})), f(a)
            }, j = b("setTimeoutAcrossTransitions")(i, h);
            b("promiseDone")(b("MercurySyncDataFetcherImpl").fetchThreadFromGraphQL(a, c, d), function (a) {
                b("clearTimeout")(j), e(a)
            }, i)
        })
    }

    function e(a, c, d) {
        return new (b("Promise"))(function (e, f) {
            var i = function (a) {
                g.error("fetch_message_graphql_timeout", JSON.stringify({timeout: h})), f(a)
            }, j = b("setTimeoutAcrossTransitions")(i, h);
            b("promiseDone")(b("MercurySyncDataFetcherImpl").fetchMessageFromGraphQL(a, c, d), function (a) {
                b("clearTimeout")(j), e(a)
            }, i)
        })
    }
}), null);
__d("MercurySyncDFFDataFetcher", ["Promise", "CurrentUser", "MercurySingletonProvider", "MercurySyncDataFetcher", "MercuryThreadIDMap", "MessengerState.bs"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a) {
            this.$1 = a, this.__threadIDMap = b("MercuryThreadIDMap").getForFBID(this.$1)
        }

        a.getForFBID = function (a) {
            return g.getForFBID(a)
        };
        a.get = function () {
            return g.get()
        };
        var c = a.prototype;
        c.fetchInvalidateGlobalStateForGraphQL = function () {
            return this.$1 && this.$1 !== "0" && b("CurrentUser").isLoggedIn() ? b("MercurySyncDataFetcher").fetchThreadlistFromGraphQL(this.$1) : new (b("Promise"))(function (a, b) {
                return b(!0)
            })
        };
        c.fetchInvalidateThreadState = function (a, c) {
            var d = 11, e = 3;
            a = a || c;
            c = this.__threadIDMap.getClientIDFromServerIDNow(a);
            if (!c) return b("Promise").resolve({
                getPayload: function () {
                    return {}
                }
            });
            e = e + b("MessengerState.bs").getCurrentlyLoadedMessages(this.$1, c).length;
            return !a ? b("Promise").resolve({
                getPayload: function () {
                    return {}
                }
            }) : b("MercurySyncDataFetcher").fetchThreadFromGraphQL(this.$1, a, Math.max(e, d))
        };
        c.fetchInvalidateMessage = function (a, c, d) {
            a = a || c;
            return !a ? b("Promise").resolve({
                getPayload: function () {
                    return {}
                }
            }) : b("MercurySyncDataFetcher").fetchMessageFromGraphQL(this.$1, a, d)
        };
        return a
    }();
    e.exports = a;
    var g = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MercurySyncConstants", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = Object.freeze({
        ARBITER_EVENT_INVALID_STATE: "SYNC:INVALID_STATE",
        ARBITER_EVENT_INVALID_STATE_RETRY: "SYNC:INVALID_STATE_RETRY",
        ARBITER_EVENT_INVALID_STATE_RECOVER: "SYNC:INVALID_STATE_RECOVER",
        ARBITER_EVENT_INVALID_STATE_STALE: "SYNC:INVALID_STATE_STALE"
    });
    e.exports = a
}), null);
__d("MercurySyncTopicType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({DELTA: "delta", DELTAFLOW: "deltaflow", DELTAFLOWREJECT: "deltaflowreject"});
    e.exports = a
}), null);
__d("onAfterLoadSafe", ["Run", "TimeSlice", "requestIdleCallback"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;

    function a(a) {
        return b("TimeSlice").guard(function () {
            return b("Run").onAfterLoad(function () {
                b("requestIdleCallback")(a)
            })
        }, "delayed after load", {propagationType: b("TimeSlice").PropagationType.ORPHAN})()
    }
}), null);
__d("MercurySyncDeltaHandler", ["invariant", "Arbiter", "Bootloader", "ChatReliabilityInstrumentation", "CurrentUser", "LogHistory", "MercuryDelayedDispatcher", "MercuryServerPayloadPreprocessor", "MercurySingletonProvider", "MercurySyncConstants", "MercurySyncDeltaHolder", "MercurySyncDeltaTypes", "MercurySyncEventsProxy", "MercurySyncForcedFetchHandler", "MercurySyncHolesTypedLogger", "MercurySyncTopicType", "MercuryThreadIDMap", "MessengerDeltaTransformer.bs", "gkx", "onAfterLoadSafe", "performanceAbsoluteNow", "promiseDone"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h, i = b("LogHistory").getInstance("mercury_sync_delta_handler"), j = "app_id:219994525426954";
    a = function () {
        a.getForFBID = function (a) {
            return k.getForFBID(a)
        };
        a.get = function () {
            return k.get()
        };

        function a(a) {
            var c = this;
            this.$1 = a;
            this.$2 = b("MercurySyncForcedFetchHandler").getForFBID(this.$1);
            this.__payloadPreprocessor = b("MercuryServerPayloadPreprocessor").getForFBID(this.$1);
            this.__delayedDispatcher = b("MercuryDelayedDispatcher").getForFBID(this.$1);
            this.$3 = b("MercurySyncDeltaHolder").getForFBID(this.$1);
            this.$4 = 0;
            this.$11 = b("MercuryThreadIDMap").getForFBID(this.$1);
            this.$5 = [];
            this.$10 = b("MercurySyncEventsProxy").getForFBID(this.$1);
            i.debug("constructor", JSON.stringify({fbid: this.$1}));
            b("Arbiter").subscribe(b("MercurySyncEventsProxy").Events.INIT, function (a, d) {
                i.debug("initSeqID", JSON.stringify(d));
                a = d && d.seqID;
                d = d && d.fbid;
                if (!d) return;
                if (d !== c.$1) return;
                a ? c.$3.updateLastSeqID(a) : c.$3.updateLastSeqID(0);
                c.$12();
                b("gkx")("678667") && b("onAfterLoadSafe")(function () {
                    b("Bootloader").loadModules(["MessengerSyncSeqIDSanityCheck"], function (a) {
                        a.getForFBID(c.$1).init()
                    }, "MercurySyncDeltaHandler")
                })
            })
        }

        var c = a.prototype;
        c.$12 = function () {
            var a = this;
            i.debug("setUpSubscriptionsToRealTimeUpdates", JSON.stringify({fbid: this.$1}));
            this.$6 = b("Arbiter").subscribe(this.$10.getArbiterType(b("MercurySyncEventsProxy").Events.DELTA), function (c, d) {
                c = d && d.obj && d.obj.queue;
                if (c && c.toString() !== a.$1) return;
                c = d && d.obj && d.obj.delta;
                d = d && d.obj && d.obj.iseq;
                if (!c || !d) return;
                a.$13(d, b("MercurySyncTopicType").DELTA);
                a.$14(d, c);
                a.$3.push(d, c);
                a.$15()
            });
            this.$8 = b("Arbiter").subscribe(this.$10.getArbiterType(b("MercurySyncEventsProxy").Events.FLOW_REJECT), function (b, c) {
                b = c && c.obj && c.obj.queue;
                if (b && b.toString() !== a.$1) return;
                a.$9 && a.$16()
            });
            this.$7 = b("Arbiter").subscribe(this.$10.getArbiterType(b("MercurySyncEventsProxy").Events.FAKE_DFF), function (b, c) {
                b = c && c.obj && c.obj.queue;
                if (b && b.toString() !== a.$1) return;
                b = c && c.obj && c.obj.delta;
                if (!b) return;
                if (a.$17(b)) if (a.$5.some(function (b) {
                    return a.$17(b)
                })) return; else a.$5.push(b); else a.$5.push(b);
                a.$15()
            });
            this.$9 = !0
        };
        c.$17 = function (a) {
            return a["class"] === b("MercurySyncDeltaTypes").ForcedFetch && !a.threadKey && !a.messageId
        };
        c.$15 = function () {
            if (this.$4 > 0) return;
            if (this.$5.length > 0) {
                var a = this.$5.shift();
                this.$18(this.$3.getLastSeqID(), a);
                this.$15()
            }
            a = this.$3.peek();
            if (!a) return;
            a = a - this.$3.getLastSeqID();
            if (a === 1) {
                var b = this.$3.pop();
                if (!b) return;
                var c = b.seqID;
                b = b.delta;
                this.$18(c, b);
                this.$15()
            } else a > 1 ? this.$19() : (this.$3.pop(), this.$15())
        };
        c.$18 = function (a, c) {
            c.numNoOps && c.numNoOps > 1 ? this.$3.updateLastSeqID(a + c.numNoOps - 1) : this.$3.updateLastSeqID(a), c["class"] === b("MercurySyncDeltaTypes").ForcedFetch ? (i.debug("DFF", JSON.stringify(c)), c.threadKey !== void 0 && c.messageId === void 0 ? this.$20(a, c) : c.threadKey !== void 0 && c.messageId !== void 0 ? this.$21(a, c) : (b("ChatReliabilityInstrumentation").logDFF_DELTA_INIT(JSON.stringify(c)), this.$22(a))) : b("MessengerDeltaTransformer.bs").transform(this.$1, c)
        };
        c.$19 = function () {
            var a = JSON.stringify({$23: this.$3.getLastSeqID(), nextSeqID: this.$3.peek()});
            i.warn("hole", a);
            var c = this.$3.peek();
            !c && g(0, 5132);
            c = c - 1;
            b("ChatReliabilityInstrumentation").logDFF_HOLE_INIT(a);
            this.$22(c)
        };
        c.$24 = function (a, c, d, e) {
            var f = this;
            this.$4 && g(0, 5134);
            this.$4++;
            i.debug("_scheduleDataFetch:start", JSON.stringify({seqID: a}));
            b("promiseDone")(c(), function (b) {
                i.debug("_scheduleDataFetch:success", JSON.stringify({seqID: a})), f.$4--, d(a, b), f.$15()
            }, function (b) {
                i.error("_scheduleDataFetch:failure", JSON.stringify({seqID: a})), f.$4--, e(a, b), f.$15()
            })
        };
        c.emergencyDFF = function (a, b) {
            this.$22(0, a, b)
        };
        c.$22 = function (a, c, d) {
            var e = this;
            if (!b("CurrentUser").isLoggedInNow()) return;
            this.$24(void 0, function () {
                return e.$2.processGlobalDFFForGraphQL()
            }, function (a, d) {
                b("gkx")("1199098") && e.$11.reset();
                a = d.getPayload();
                e.__payloadPreprocessor.handleUpdate(a);
                a.sequence_id && (i.debug("_initiateGlobalDFF:success", JSON.stringify({seqID: a.sequence_id})), b("gkx")("678668") ? e.$3.updateLastSeqIDAndClearHistory(a.sequence_id) : e.$3.updateLastSeqID(a.sequence_id));
                b("Arbiter").inform(b("MercurySyncConstants").ARBITER_EVENT_INVALID_STATE_RECOVER);
                c && c(a.sequence_id)
            }, function (f, g) {
                i.error("_initiateGlobalDFF:failure", ""), g ? (e.$9 && e.$16(), d && d()) : (b("Arbiter").inform(b("MercurySyncConstants").ARBITER_EVENT_INVALID_STATE_RETRY), i.debug("_initiateGlobalDFF:retry", ""), e.$22(a, c, d))
            })
        };
        c.$20 = function (a, b) {
            var c = this;
            this.$24(a, function () {
                return c.$2.processThreadDFF(a, b.threadKey, b.isLazy)
            }, function (a, b) {
                c.__payloadPreprocessor.handleUpdate(b.getPayload()), c.$3.updateLastSeqID(a)
            }, function () {
                i.error("_initiateThreadDFF:failure", JSON.stringify(b));
                var d = babelHelpers["extends"]({}, b);
                delete d.threadKey;
                c.$3.updateLastSeqID(a - 1);
                c.$3.push(a, d)
            })
        };
        c.$21 = function (a, b) {
            var c = this;
            this.$24(a, function () {
                return c.$2.processMessageDFF(a, b.threadKey, b.messageId, b.isLazy)
            }, function (a, b) {
                b = b.getPayload();
                var d = b.other_user_fbid ? b.other_user_fbid : b.thread_fbid;
                b = [babelHelpers["extends"]({}, b)];
                var e = "client_channel_message";
                c.__delayedDispatcher.handleUpdateWaitForThread({actions: b, payload_source: e}, d);
                c.$3.updateLastSeqID(a)
            }, function () {
                i.error("_initiateMessageDFF:failure", JSON.stringify(b));
                var d = babelHelpers["extends"]({}, b);
                delete d.messageId;
                c.$3.updateLastSeqID(a - 1);
                c.$3.push(a, d)
            })
        };
        c.$13 = function (a, c) {
            var d = a - this.$3.getLastSeqID();
            if (d !== 1 && d !== 0) {
                if (!b("CurrentUser").isEmployee()) return;
                new (b("MercurySyncHolesTypedLogger"))().setSeqID(a).setDifference(d).setTopicType(c).log()
            }
        };
        c.$14 = function (a, c) {
            switch (c["class"]) {
                case b("MercurySyncDeltaTypes").NewMessage:
                    var d = (h || (h = b("performanceAbsoluteNow")))();
                    b("Bootloader").loadModules(["QuickPerformanceLogger", "MessengerWebQuickLogModule"], function (a, b) {
                        var e = c.messageMetadata.tags;
                        Array.isArray(e) && e.includes(j) && a.markerEnd(b.SEND_MESSAGE, "SUCCESS", c.messageMetadata.offlineThreadingId, d)
                    }, "MercurySyncDeltaHandler");
                    i.debug("message_delta", JSON.stringify({
                        seqID: a,
                        threadKey: c.messageMetadata.threadKey,
                        messageId: c.messageMetadata.messageId
                    }));
                    break;
                case b("MercurySyncDeltaTypes").ReadReceipt:
                    i.debug("read_receipt_delta", JSON.stringify({
                        seqID: a,
                        threadKey: c.threadKey,
                        actionTimestampMs: c.actionTimestampMs,
                        watermarkTimestampMs: c.watermarkTimestampMs
                    }));
                    break;
                case b("MercurySyncDeltaTypes").DeliveryReceipt:
                    i.debug("delivery_receipt_delta", JSON.stringify({
                        seqID: a,
                        deliveredWatermarkTimestampMs: c.deliveredWatermarkTimestampMs,
                        messageIds: c.messageIds
                    }));
                    break
            }
        };
        c.pause = function () {
            this.$4++
        };
        c.resume = function () {
            this.$4--, this.$15()
        };
        c.$16 = function (a) {
            a === void 0 && (a = !1), this.$9 = !1, b("Arbiter").unsubscribe(this.$6), b("Arbiter").unsubscribe(this.$7), b("Arbiter").unsubscribe(this.$8), a || b("Arbiter").inform(b("MercurySyncConstants").ARBITER_EVENT_INVALID_STATE)
        };
        return a
    }();
    e.exports = a;
    var k = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MercurySyncForcedFetchHandler", ["Promise", "MercurySingletonProvider", "MercurySyncDFFDataFetcher", "MercuryThreadIDMap", "MessengerState.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        return {
            getPayload: function () {
                return {sequence_id: a}
            }
        }
    }

    a = function () {
        a.getForFBID = function (a) {
            return h.getForFBID(a)
        };
        a.get = function () {
            return h.get()
        };

        function a(a) {
            this.$1 = a, this.$2 = b("MercuryThreadIDMap").getForFBID(this.$1), this.$3 = b("MercurySyncDFFDataFetcher").getForFBID(this.$1)
        }

        var c = a.prototype;
        c.processMessageDFF = function (a, c, d, e) {
            if (e) {
                e = c.otherUserFbId !== void 0 ? c.otherUserFbId.toString() : c.threadFbId.toString();
                e = this.$2.getClientIDFromServerIDNow(e);
                if (e === void 0) return b("Promise").resolve(g(a));
                e = b("MessengerState.bs").getMessagesFromIDs(this.$1, [d]);
                if (e.length === 0) return b("Promise").resolve(g(a))
            }
            return this.$3.fetchInvalidateMessage(c.otherUserFbId, c.threadFbId, d)
        };
        c.processThreadDFF = function (a, c, d) {
            if (d) {
                d = c.otherUserFbId !== void 0 ? c.otherUserFbId.toString() : c.threadFbId.toString();
                d = this.$2.getClientIDFromServerIDNow(d);
                if (d === void 0) return b("Promise").resolve(g(a))
            }
            return this.$3.fetchInvalidateThreadState(c.otherUserFbId, c.threadFbId)
        };
        c.processGlobalDFFForGraphQL = function () {
            return this.$3.fetchInvalidateGlobalStateForGraphQL()
        };
        return a
    }();
    e.exports = a;
    var h = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MontageDispatcher", ["ExplicitRegistrationDispatcher"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function (a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }

        return b
    }(b("ExplicitRegistrationDispatcher"));
    c = new a({strict: !1});
    e.exports = c
}), null);
__d("MontageActions", ["Bootloader", "CurrentUser", "MercuryServerPayloadPreprocessor", "MontageDispatcher", "WebGraphQL", "keyMirror", "promiseDone", "uniqueID"], (function (a, b, c, d, e, f) {
    "use strict";
    f.requestUpdate = a;
    f.montageThreadChanged = c;
    f.hasUpdated = d;
    f.loadMontageThreadForActor = e;
    f.deleteMontage = i;
    f.handleNewMontageDelta = j;
    f.updatePollStickerChoice = k;
    var g = b("keyMirror")({REQUEST_UPDATE: null, HAS_UPDATED: null, HANDLE_ACTION: null});
    f.Types = g;
    var h = new Set();

    function a(a) {
        b("MontageDispatcher").dispatch({type: g.REQUEST_UPDATE, threadFBID: a})
    }

    function c(a, c) {
        b("MontageDispatcher").dispatch({type: g.REQUEST_UPDATE, threadFBID: a})
    }

    function d(a) {
        b("MontageDispatcher").dispatch({type: g.HAS_UPDATED, threadFBID: a})
    }

    function e(a) {
        if (h.has(a)) return;
        h.add(a);
        b("Bootloader").loadModules(["MessengerMontageThreadQueryWebGraphQLQuery"], function (c) {
            c = b("WebGraphQL").exec(new c({id: a}));
            b("promiseDone")(c, function (c) {
                b("MercuryServerPayloadPreprocessor").getForFBID(b("CurrentUser").getID()).handleUpdate({current_montage_thread: c}), h["delete"](a)
            })
        }, "MontageActions")
    }

    function i(a, c) {
        b("MercuryServerPayloadPreprocessor").getForFBID(b("CurrentUser").getID()).handleUpdate({montage_delete_message_delta: c})
    }

    function j(a, c) {
        b("Bootloader").loadModules(["MessengerNewMontageMessageWebGraphQLQuery"], function (a) {
            a = b("WebGraphQL").exec(new a({id: c.message_fbid}));
            b("promiseDone")(a, function (a) {
                b("MercuryServerPayloadPreprocessor").getForFBID(b("CurrentUser").getID()).handleUpdate({montage_new_message_delta: a.montage_message})
            })
        }, "MontageActions")
    }

    function k(a) {
        b("Bootloader").loadModules(["MessengerState.bs", "MessengerMontagePollVoteMutationWebGraphQLMutation"], function (c, d) {
            b("MercuryServerPayloadPreprocessor").getForFBID(b("CurrentUser").getID()).handleUpdate({montage_poll_sticker_vote: [a]});
            c = b("WebGraphQL").exec(new d({
                input: {
                    client_mutation_id: b("uniqueID")(),
                    story_card_poll_id: a.pollID,
                    option: a.optionVotedIndex,
                    actor_id: b("CurrentUser").getID()
                }
            }));
            b("promiseDone")(c, function (a) {
            }, function (a) {
            })
        }, "MontageActions")
    }
}), null);
__d("RemovedMessageTombstoneContent", ["fbt", "CurrentUser", "GenderConst", "IntlVariations", "MercuryIDs", "MessengerParticipants.bs", "MessengerState.bs", "gkx", "immutable"], (function (a, b, c, d, e, f, g) {
    "use strict";
    f.getRemovedMessageTombstoneContent = a;
    f.getTombstoneContentForSnippet = c;
    f._getFbtForCurrentViewerAuthor = d;
    f._getFbtForOtherAuthor = e;
    f._getFbtForUnknownAuthor = h;

    function a(a, c) {
        var d;
        d = ((d = a.unsender) == null ? void 0 : d.id) || a.author;
        var e = b("MercuryIDs").getUserIDFromParticipantID(d), f = b("CurrentUser").getID();
        if (e === f) return this._getFbtForCurrentViewerAuthor();
        f = b("MessengerState.bs").getThreadMetaNow(f, a.thread_id);
        f = f == null ? void 0 : (f = f.custom_nickname) == null ? void 0 : f[e];
        f = f || ((e = c.get(d)) == null ? void 0 : e.short_name) || ((f = a.unsender) == null ? void 0 : f.short_name) || ((e = a.unsender) == null ? void 0 : e.name);
        e = (a = c.get(d)) == null ? void 0 : a.gender;
        if (f) return this._getFbtForOtherAuthor(f, e); else return this._getFbtForUnknownAuthor()
    }

    function c(a) {
        if (a == null) return this._getFbtForUnknownAuthor().toString();
        var c = b("MercuryIDs").getUserIDFromParticipantID(a);
        if (c === b("CurrentUser").getID()) return this._getFbtForCurrentViewerAuthor().toString();
        c = b("MessengerParticipants.bs").getNow(a);
        a = c && c.short_name;
        c = c && c.gender;
        if (a) return this._getFbtForOtherAuthor(a, c).toString(); else return this._getFbtForUnknownAuthor().toString()
    }

    function d() {
        return b("gkx")("1531920") ? g._("\u4f60\u64a4\u56de\u4e86\u6d88\u606f") : g._("\u4f60\u79fb\u9664\u4e86\u6d88\u606f")
    }

    function e(a, c) {
        return b("gkx")("1531920") ? g._({"*": "{name}\u64a4\u56de\u4e86\u6d88\u606f"}, [g._param("name", a, [1, c === b("GenderConst").FEMALE_SINGULAR ? b("IntlVariations").GENDER_FEMALE : b("IntlVariations").GENDER_MALE])]) : g._({"*": "{name}\u79fb\u9664\u4e86\u4e00\u6761\u6d88\u606f"}, [g._param("name", a, [1, c === b("GenderConst").FEMALE_SINGULAR ? b("IntlVariations").GENDER_FEMALE : b("IntlVariations").GENDER_MALE])])
    }

    function h() {
        return b("gkx")("1531920") ? g._("\u4e00\u4f4d\u8054\u7cfb\u4eba\u64a4\u56de\u4e86\u6d88\u606f") : g._("\u4e00\u4f4d\u8054\u7cfb\u4eba\u79fb\u9664\u4e86\u6d88\u606f")
    }
}), null);
__d("MWMSCurrentThreadDetails.bs", ["CurrentUser", "MWChatThreadId.bs", "MessengerState.bs", "MWThread_DEPRECATED.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        return b("MessengerState.bs").getThreadMetaNow(b("CurrentUser").getID(), b("MWChatThreadId.bs").getMercuryID(a))
    }

    f.useHook = a
}), null);
__d("MWMSCurrentThreadDetails.re", ["MWMSCurrentThreadDetails.bs"], (function (a, b, c, d, e, f) {
    a = b("MWMSCurrentThreadDetails.bs").useHook;
    f.useHook = a
}), null);
__d("MWMSJewelGetOngoingCallData", ["MWMSCurrentThreadDetails.re"], (function (a, b, c, d, e, f) {
    "use strict";
    f.useHook = a;

    function a() {
        var a = b("MWMSCurrentThreadDetails.re").useHook();
        return a == null ? void 0 : a.rtc_call_data
    }
}), null);
__d("MWMSJewelGetOngoingCallData.bs", ["MWMSJewelGetOngoingCallData"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        return b("MWMSJewelGetOngoingCallData").useHook()
    }

    f.useHook = a
}), null);
__d("MWMSJewelGetThreadIDs", ["Actor", "MercuryIDs", "MessengerState.re", "MWChatThreadId.re", "MWMSJewelConstants"], (function (a, b, c, d, e, f) {
    "use strict";
    f.useHook = a;

    function a(a) {
        var c = b("Actor").useActor(), d = c[0];
        c = b("MessengerState.re").useHook(d);
        c = b("MessengerState.re").threadlistOrderMap(c)[a];
        a = c != null ? c[b("MWMSJewelConstants").ALL] : null;
        a = (c = a == null ? void 0 : a.threadlist) != null ? c : [];
        var e = [];
        a.forEach(function (a) {
            var c = b("MessengerState.re").getThreadMetaNow(d, a), f = c == null ? void 0 : c.thread_type;
            if (c && f != null) {
                f = b("MWChatThreadId.re").deserializeThreadlistIdUseOnlyInJewel(b("MercuryIDs").getThreadFBIDFromThreadID(a), f, (a = c.is_other_recipient_page) != null ? a : !1);
                f != null && e.push(f)
            }
        });
        return e
    }
}), null);
__d("MWMSJewelGetThreadIDs.bs", ["MWMSJewelGetThreadIDs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        return b("MWMSJewelGetThreadIDs").useHook(a)
    }

    f.useHook = a
}), null);
__d("MWMSJewelHasReachedEnd", ["Actor", "MessengerState.re", "MWMSJewelConstants"], (function (a, b, c, d, e, f) {
    "use strict";
    f.useHook = a;

    function a(a) {
        var c = b("Actor").useActor();
        c = c[0];
        c = b("MessengerState.re").useHook(c);
        c = b("MessengerState.re").threadlistOrderMap(c)[a];
        a = c != null ? c[b("MWMSJewelConstants").ALL] : null;
        return a == null ? void 0 : a.reachedEnd
    }
}), null);
__d("MWMSJewelHasReachedEnd.bs", ["MWMSJewelHasReachedEnd"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        return b("MWMSJewelHasReachedEnd").useHook(a)
    }

    f.useHook = a
}), null);
__d("MWMSJewelIsActorSnippetSender.bs", ["MercuryIDs", "CurrentUser", "MWMSCurrentThreadDetails.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MWMSCurrentThreadDetails.bs").useHook(void 0);
        if (a == null) return !1;
        a = a.snippet_sender;
        if (a == null) return !1; else return a === b("MercuryIDs").getParticipantIDFromUserID(b("CurrentUser").getID())
    }

    f.useHook = a
}), null);
__d("MessengerThreadListLoggerUtil", ["MessagingTag", "QuickPerformanceLogger"], (function (a, b, c, d, e, f) {
    "use strict";
    f.markerStart = a;
    f.markerEnd = c;
    var g = new Map(), h = 1;

    function i(a, c) {
        return !a || !a.includes(b("MessagingTag").INBOX.toUpperCase()) ? null : c == null ? 25296905 : 25296906
    }

    function j(a, b, c) {
        return [].concat(a || [], [b, c]).filter(Boolean).join("_")
    }

    function a(a, c, d) {
        var e = i(a, c);
        if (!e) return;
        b("QuickPerformanceLogger").markerStart(e, h);
        g.set(j(a, c, d), h);
        h++
    }

    function c(a, c, d, e) {
        var f = i(a, c);
        if (!f) return;
        a = j(a, c, d);
        c = g.get(a);
        c != null && (b("QuickPerformanceLogger").markerEnd(f, e, c), g["delete"](a))
    }
}), null);
__d("MessengerThreadlistWebGraphQLQuery", ["WebGraphQLQueryBase"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = function (a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }

        b.__getDocID = function () {
            return "3426149104143726"
        };
        b.getQueryID = function () {
            return "700533614147542"
        };
        return b
    }(b("WebGraphQLQueryBase"))
}), null);
__d("MessengerGraphQLThreadlistFetcher.bs", ["Promise", "Utils.bs", "gkx", "bs_js_dict", "BanzaiODS", "bs_caml_array", "WebGraphQL", "bs_caml_format", "bs_caml_option", "CurrentUser", "bs_caml_exceptions", "MercuryServerRequestsConfig", "MessengerThreadListLoggerUtil", "ChatReliabilityInstrumentation", "MessengerServerPayloadTransformer.bs", "MessengerThreadlistWebGraphQLQuery"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = {contents: !0};

    function h(a) {
        b("MessengerThreadListLoggerUtil").markerStart(a.tags, a.timestamp, a.limit);
        return new (b("MessengerThreadlistWebGraphQLQuery"))({
            limit: a.limit,
            before: a.timestamp,
            tags: a.tags,
            isWorkUser: b("CurrentUser").isWorkUser(),
            includeDeliveryReceipts: a.includeDeliveryReceipts,
            includeSeqID: a.includeSeqID,
            onlyPinnedThreads: a.onlyPinnedThreads,
            is_work_teamwork_not_putting_muted_in_unreads: b("gkx")("1105011")
        })
    }

    function i(a, c, d, e) {
        var f = [], g = [], h = {}, i = [], j = {}, k = {contents: void 0}, l = {contents: 0}, m = [];
        e.forEach(function (e, n) {
            n = b("bs_caml_array").caml_array_get(c, n);
            var o = b("Utils.bs").optionBoolToBool(b("bs_caml_option").nullable_to_opt(n.onlyPinnedThreads)), p = [],
                q = [], r = [], s = e.viewer.pending_threads;
            s == null || (l.contents = s.unseen_count);
            e.viewer.message_threads.nodes.forEach(function (c) {
                if (c == null) return;
                var e = b("MessengerServerPayloadTransformer.bs").transformThread(a, c, d),
                    g = b("MessengerServerPayloadTransformer.bs").transformParticipants(c);
                g.forEach(function (a) {
                    j[a.fbid] = a
                });
                var k;
                if (e.is_canonical) {
                    g = e.other_user_fbid;
                    g == null ? k = null : (p.push(g), k = g)
                } else {
                    g = e.thread_fbid;
                    g == null ? k = null : (q.push(g), k = g)
                }
                r.push(e.thread_id);
                f.push(e);
                if (!(k == null)) {
                    g = b("MessengerServerPayloadTransformer.bs").transformReadReceipts(a, c);
                    g !== void 0 && (h[k] = b("bs_caml_option").valFromOption(g))
                }
                if (!(k == null)) {
                    g = b("MessengerServerPayloadTransformer.bs").transformDeliveryReceipts(c);
                    if (g.length !== 0) {
                        c = g[0];
                        e.is_canonical ? i.push({
                            other_user_fbid: k,
                            thread_fbid: null,
                            time: b("bs_caml_format").caml_float_of_string(c.timestamp_precise)
                        }) : i.push({
                            other_user_fbid: null,
                            thread_fbid: k,
                            time: b("bs_caml_format").caml_float_of_string(c.timestamp_precise)
                        })
                    }
                }
                if (!(k == null) && o) {
                    m.push(k);
                    return
                }
            });
            s = e.viewer.message_threads.sync_sequence_id;
            s == null || (k.contents = b("bs_caml_format").caml_int_of_string(s));
            if (o) return;
            e = n.timestamp;
            g.push({
                folder: n.folder,
                other_user_fbids: p,
                thread_fbids: q,
                thread_ids: r,
                filter: n.filter,
                limit: e == null ? n.limit : n.limit - 1 | 0
            })
        });
        return {
            threads: f,
            ordered_threadlists: g,
            pending_folder_unseen_count: l.contents,
            roger: h,
            delivery_receipts: i,
            participants: b("bs_js_dict").values(j),
            sequence_id: k.contents,
            pinned_thread_ids: m
        }
    }

    var j = b("bs_caml_exceptions").create("MessengerGraphQLThreadlistFetcher.SessionLoggedOut");

    function k(a, c) {
        a.forEach(function (a) {
            b("MessengerThreadListLoggerUtil").markerEnd(a.tags, a.timestamp, a.limit, c)
        })
    }

    function a(a, c, d, e) {
        if (!g.contents) return b("Promise").reject({RE_EXN_ID: j});
        var f = c.map(h);
        return b("Promise").all(b("WebGraphQL").execAll(f, {
            actorID: d ? a : null,
            batchName: "MessengerGraphQLThreadlistFetcher",
            msgrRegion: b("MercuryServerRequestsConfig").msgrRegion,
            allowCrossPageTransition: !0
        }))["catch"](function (a) {
            var d;
            try {
                d = b("bs_caml_array").caml_array_get(a.errors, 0).should_end_session
            } catch (a) {
                d = !1
            }
            d && (g.contents = !1);
            b("BanzaiODS").bumpEntityKey(2966, "messenger_webgraphql", e + ".failure");
            k(c, "FAIL");
            b("ChatReliabilityInstrumentation").logERROR("fetch_thread_list_fail");
            return b("Promise").reject(a)
        }).then(function (f) {
            b("BanzaiODS").bumpEntityKey(2966, "messenger_webgraphql", e + ".success");
            k(c, "SUCCESS");
            return i(a, c, d, f)
        })
    }

    f.canMakeRequests = g;
    f._getQuery = h;
    f.transform = i;
    f.SessionLoggedOut = j;
    f.markerEnd = k;
    f.fetchAll = a
}), null);
__d("MessengerGraphQLThreadlistFetcher.re", ["bs_curry", "MessengerGraphQLThreadlistFetcher.bs"], (function (a, b, c, d, e, f) {
    a = function (a, c, d, e) {
        a = b("bs_curry")._4(b("MessengerGraphQLThreadlistFetcher.bs").fetchAll, a, c, d, e);
        return a
    };
    f.fetchAll = a
}), null);
__d("MWMSJewelThreadlistFetcher", ["MercuryServerPayloadPreprocessor", "MessengerGraphQLThreadlistFetcher.re", "MessengerWebGraphQLTypedLogger", "promiseDone"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = {inbox: !1, other: !1, pending: !1}, h = 20;
    f.PAGINATION_COUNT = h;
    var i = function (a, b) {
        return a.map(function (a) {
            var c = [a.folder.toUpperCase()];
            a.filter != null && c.push(a.filter);
            return {
                filter: a.filter,
                folder: a.folder,
                includeDeliveryReceipts: !0,
                includeSeqID: !1,
                isWorkUser: !1,
                limit: b == null ? h : h + 1,
                onlyPinnedThreads: !1,
                tags: c,
                timestamp: b
            }
        })
    };
    f._createParams = i;
    var j = function (a, c) {
        b("promiseDone")(b("MessengerGraphQLThreadlistFetcher.re").fetchAll(a, c, !1, "fetch_threadlist"), function (c) {
            return b("MercuryServerPayloadPreprocessor").getForFBID(a).handleUpdate(babelHelpers["extends"]({}, c, {payload_source: "server_fetch_threadlist_info"}))
        }, function (a) {
            a = typeof a === "object" && a !== null && a.errors != null ? a.errors : a;
            new (b("MessengerWebGraphQLTypedLogger"))().setErrorMessage(JSON.stringify(a)).setEvent("threadlist_failure").setQueryParams(JSON.stringify(c)).log()
        })
    };
    f._loadItems = j;
    a = function (a, b, c) {
        j(a, i([{folder: b}], c))
    };
    f.loadItems = a;
    c = function (a, b, c) {
        g[b] || (g[b] = !0, j(a, i([{folder: b}].concat(c === !0 ? [{
            filter: "unread",
            folder: "pending"
        }] : []), null)))
    };
    f.preloadItems = c
}), null);
__d("MWMSJewelLoadMoreThreads", ["Actor", "MessengerState.re", "MWMSJewelConstants", "MWMSJewelThreadlistFetcher"], (function (a, b, c, d, e, f) {
    "use strict";
    f.useHook = a;

    function a(a) {
        var c = b("Actor").useActor(), d = c[0], e = b("MessengerState.re").useHook(d);
        c = b("MessengerState.re").threadlistOrderMap(e)[a];
        c = c != null ? c[b("MWMSJewelConstants").ALL] : null;
        var f = (c = c == null ? void 0 : c.threadlist) != null ? c : [], g = function () {
            var a = f && f.length > 0 ? f[f.length - 1] : null;
            if (a == null) return null;
            a = b("MessengerState.re").threads(e)[a];
            return a ? a.timestamp : null
        };
        c = function () {
            b("MWMSJewelThreadlistFetcher").loadItems(d, a, g())
        };
        return c
    }
}), null);
__d("MWMSJewelLoadMoreThreads.bs", ["MWMSJewelLoadMoreThreads"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("MWMSJewelLoadMoreThreads").useHook;
    f.useHook = a
}), null);
__d("MWJewelMessageRequestsThread.react", ["ix", "fbt", "Locale", "MWJewelThreadSnippet.react", "React", "TetraIcon.react", "TetraListCell.react", "fbicon"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React");

    function a(a) {
        var c = a.onOpenMessageRequests, d = a.otherParticipantName;
        a = a.unreadRequestsCount;
        var e = h._({"*": "\u65b0\u7684\u964c\u751f\u6d88\u606f"}, [h._plural(a)]), f = h._({
            "someone": "\u6765\u81ea\u4f60\u53ef\u80fd\u8ba4\u8bc6\u7684\u7528\u6237",
            "people": "\u6765\u81ea\u4f60\u53ef\u80fd\u8ba4\u8bc6\u7684\u7528\u6237"
        }, [h._enum(a === 1 ? "someone" : "people", {someone: "someone", people: "people"})]);
        d != null && (a === 1 ? f = h._("\u6765\u81ea{name}", [h._param("name", d)]) : f = h._("\u6765\u81ea{name}\u548c\u5176\u4ed6{count}\u4f4d\u7528\u6237", [h._param("name", d), h._param("count", a - 1)]));
        return i.jsx(b("TetraListCell.react"), {
            addOnPrimary: {
                icon: b("fbicon")._(g("542884"), 24),
                size: 56,
                type: "contained-icon"
            },
            addOnSecondary: {
                addOn: i.jsx(b("TetraIcon.react"), {
                    color: "secondary",
                    icon: b("Locale").isRTL() ? b("fbicon")._(g("492485"), 16) : b("fbicon")._(g("492533"), 16)
                }), type: "body"
            },
            body: i.jsx(b("MWJewelThreadSnippet.react"), {isUnread: !0, text: f}),
            headline: e,
            level: 4,
            onPress: c
        })
    }
}), null);
__d("MessengerParticipants.re", ["bs_curry", "MessengerParticipants.bs"], (function (a, b, c, d, e, f) {
    a = function (a, c) {
        a = b("bs_curry")._2(b("MessengerParticipants.bs").get, a, c);
        return a
    };
    f.get = a;
    c = b("MessengerParticipants.bs").getNow;
    f.getNow = c;
    d = function (a, c) {
        a = b("bs_curry")._2(b("MessengerParticipants.bs").getMulti, a, c);
        return a
    };
    f.getMulti = d;
    e = function (a, c) {
        a = b("bs_curry")._2(b("MessengerParticipants.bs").getMultiEager, a, c);
        return a
    };
    f.getMultiEager = e;
    a = function (a, c) {
        a = b("bs_curry")._2(b("MessengerParticipants.bs").getMultiEagerMap, a, c);
        return a
    };
    f.getMultiEagerMap = a;
    c = b("MessengerParticipants.bs").removeCallback;
    f.removeCallback = c
}), null);
__d("MWMSJewelMessageRequestsThread.react", ["Actor", "MessengerParticipants.re", "MessengerState.re", "MWJewelMessageRequestsThread.react", "MWMSJewelConstants", "React"], (function (a, b, c, d, e, f) {
    "use strict";
    f.useHook = a;
    var g = b("React"), h = "pending";

    function a(a) {
        var c = b("Actor").useActor();
        c = c[0];
        c = b("MessengerState.re").useHook(c);
        if (a == null) return;
        var d = b("MessengerState.re").threadlistOrderMap(c)[h];
        d = d != null ? d[b("MWMSJewelConstants").UNREAD] : null;
        d = d == null ? void 0 : d.threadlist;
        if (d == null) return;
        var e = d.length;
        if (e > 0) {
            c = b("MessengerState.re").thread(c, d[0]);
            d = c == null ? void 0 : c.snippet_sender;
            d = d != null ? b("MessengerParticipants.re").getNow(d) : null;
            if (c != null) return g.jsx(b("MWJewelMessageRequestsThread.react"), {
                onOpenMessageRequests: a,
                otherParticipantName: d == null ? void 0 : d.name,
                unreadRequestsCount: e
            })
        }
    }
}), null);
__d("MWMSJewelMessageRequestsThread.bs", ["MWMSJewelMessageRequestsThread.react"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("MWMSJewelMessageRequestsThread.react").useHook;
    f.useHook = a
}), null);
__d("MWMSJewelPreloadThreadFolder", ["Actor", "MWMSJewelThreadlistFetcher", "React"], (function (a, b, c, d, e, f) {
    "use strict";
    f.useHook = a;
    var g = b("React");

    function a() {
        var a = b("Actor").useActor(), c = a[0];
        return g.useCallback(function (a) {
            b("MWMSJewelThreadlistFetcher").preloadItems(c, a)
        }, [c])
    }
}), null);
__d("MWMSJewelPreloadThreadFolder.bs", ["MWMSJewelPreloadThreadFolder"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("MWMSJewelPreloadThreadFolder").useHook;
    f.useHook = a
}), null);
__d("MWMSJewelSpamMessagesThread.react", ["Actor", "MessengerState.re", "MWJewelSpamMessagesThread.react", "MWMSJewelConstants", "React"], (function (a, b, c, d, e, f) {
    "use strict";
    f.useHook = a;
    var g = b("React"), h = "other";

    function a(a) {
        var c = b("Actor").useActor();
        c = c[0];
        c = b("MessengerState.re").useHook(c);
        if (a == null) return;
        c = b("MessengerState.re").threadlistOrderMap(c)[h];
        c = c != null ? c[b("MWMSJewelConstants").ALL] : null;
        var d = c == null ? void 0 : c.threadlist;
        if (d == null) return;
        d = d.length;
        if (d > 0) return g.jsx(b("MWJewelSpamMessagesThread.react"), {
            loadedAll: (c == null ? void 0 : c.reachedEnd) === !0,
            onOpenSpamMessages: a,
            spamMessagesCount: d
        })
    }
}), null);
__d("MWMSJewelSpamMessagesThread.bs", ["MWMSJewelSpamMessagesThread.react"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("MWMSJewelSpamMessagesThread.react").useHook;
    f.useHook = a
}), null);
__d("MWMSMarkSeen.bs", ["React", "Actor.re", "MercuryServerRequests"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        a = b("Actor.re").useActor();
        var c = a[0];
        return g.useCallback(function (a) {
            b("MercuryServerRequests").getForFBID(c).markSeen()
        }, [c])
    }

    f.useHook = a
}), null);
__d("MWThreadListGlimmer_DEPRECATED.bs", ["React", "stylex", "BaseGlimmer.react"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = b("React"), i = {
        glimmerBody: {
            borderTopStartRadius: "ue3kfks5",
            borderTopEndRadius: "pw54ja7n",
            borderBottomEndRadius: "uo3d90p7",
            borderBottomStartRadius: "l82x9zwi",
            height: "cyypbtt7",
            width: "eq70wtua"
        },
        glimmerHeadline: {
            borderTopStartRadius: "ue3kfks5",
            borderTopEndRadius: "pw54ja7n",
            borderBottomEndRadius: "uo3d90p7",
            borderBottomStartRadius: "l82x9zwi",
            height: "gl3lb2sf",
            marginBottom: "oud54xpy",
            width: "n99xedck"
        },
        glimmerPhoto36: {
            borderTopStartRadius: "s45kfl79",
            borderTopEndRadius: "emlxlaya",
            borderBottomEndRadius: "bkmhp75w",
            borderBottomStartRadius: "spb7xbtv",
            height: "tv7at329",
            marginTop: "aov4n071",
            marginEnd: "wkznzc2l",
            marginBottom: "bi6gxh9e",
            marginStart: "hcukyx3x",
            width: "thwo4zme"
        },
        glimmerPhoto56: {
            borderTopStartRadius: "s45kfl79",
            borderTopEndRadius: "emlxlaya",
            borderBottomEndRadius: "bkmhp75w",
            borderBottomStartRadius: "spb7xbtv",
            height: "e5d9fub0",
            marginTop: "aov4n071",
            marginEnd: "wkznzc2l",
            marginBottom: "bi6gxh9e",
            marginStart: "hcukyx3x",
            width: "oeao4gh3"
        },
        glimmerRoot: {display: "j83agx80", paddingStart: "dati1w0a"},
        glimmerText: {display: "j83agx80", flexDirection: "cbu4d94t", flexGrow: "buofh1pr", justifyContent: "taijpn5t"}
    };

    function a(a) {
        return h.jsxs("div", {
            children: [h.jsx(b("BaseGlimmer.react"), {
                className: (g || (g = b("stylex")))(i.glimmerPhoto56),
                index: 0
            }), h.jsxs("div", {
                children: [h.jsx(b("BaseGlimmer.react"), {
                    className: g(i.glimmerHeadline),
                    index: 1
                }), h.jsx(b("BaseGlimmer.react"), {className: g(i.glimmerBody), index: 2})], className: g(i.glimmerText)
            })], className: g(i.glimmerRoot)
        })
    }

    c = a;
    f.styles = i;
    f.make = c
}), null);
__d("MWMSIsCurrentThreadMuted.bs", ["MercuryThreadInfo", "MWMSCurrentThreadDetails.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MWMSCurrentThreadDetails.bs").useHook(void 0);
        if (a == null) return [!1, 0];
        var c = a.mute_until;
        c = c == null ? 0 : c;
        return [b("MercuryThreadInfo").isMuted(a), c]
    }

    f.useHook = a
}), null);
__d("MWMSIsCurrentThreadUnread.bs", ["MWMSCurrentThreadDetails.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MWMSCurrentThreadDetails.bs").useHook(void 0);
        if (a == null) return !1; else return a.unread_count > 0
    }

    f.useHook = a
}), null);
__d("MessengerReadReceipt.bs", ["bs_array", "Utils.bs", "immutable", "bs_caml_option", "bs_belt_MapString", "MercuryActionStatus"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a, c, d, e) {
        c = c >= a.timestamp;
        var f = a.status;
        e = !e || d !== a.author;
        if (c) if (f == null) if (e) return !0; else return !1; else if (e) return f === b("MercuryActionStatus").SUCCESS; else return !1; else return !1
    }

    function a(a, c, d) {
        if (c == null) return [];
        a = b("bs_belt_MapString").get(a, c.thread_id);
        if (a !== void 0) return b("bs_caml_option").valFromOption(a).reduce(function (a, e, f, h) {
            if (g(c, e.watermark, f, b("Utils.bs").isTruthy(d))) return b("bs_array").append(a, [f]); else return a
        }, []); else return []
    }

    function c(a, c) {
        a = b("bs_belt_MapString").get(a, c.thread_id);
        if (a !== void 0) return b("bs_caml_option").valFromOption(a).reduce(function (a, b, d, e) {
            if (a) return g(c, b.watermark, d, !1); else return !1
        }, !0); else return !1
    }

    function d(a) {
        return !b("bs_belt_MapString").isEmpty(a)
    }

    function e(a, c) {
        if (b("bs_belt_MapString").isEmpty(a)) return b("immutable").OrderedMap();
        a = b("bs_belt_MapString").get(a, c);
        if (a !== void 0) return b("bs_caml_option").valFromOption(a); else return b("immutable").OrderedMap()
    }

    function h(a, c, d) {
        a = b("bs_belt_MapString").get(a, c);
        if (a === void 0) return null;
        c = b("bs_caml_option").valFromOption(a).get(d);
        if (c == null) return null; else return c
    }

    var i;
    f.emptyReadReceipts = i;
    f.wasSeen = g;
    f.getSeenBy = a;
    f.wasSeenByAll = c;
    f.hasReadReceipts = d;
    f.getSeenTimestamps = e;
    f.getSeenTimestamp = h
}), null);
__d("MessengerReadReceipt.re", ["bs_curry", "MessengerReadReceipt.bs"], (function (a, b, c, d, e, f) {
    a = function (a, c, d) {
        a = b("bs_curry")._3(b("MessengerReadReceipt.bs").getSeenBy, a, c, d);
        return a
    };
    f.getSeenBy = a;
    c = function (a, c) {
        a = b("bs_curry")._2(b("MessengerReadReceipt.bs").getSeenTimestamps, a, c);
        return a
    };
    f.getSeenTimestamps = c
}), null);
__d("MWMSJewelThreadSeenByImages", ["CurrentUser", "MessengerParticipants.re", "MessengerReadReceipt.re", "MessengerState.re", "MWMSCurrentThreadDetails.re"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        var a = b("MessengerState.re").useHook(b("CurrentUser").getID());
        a = b("MessengerState.re").readReceiptsPerThread(a);
        var c = b("MWMSCurrentThreadDetails.re").useHook();
        if (c == null) return [];
        var d = c == null ? void 0 : c.snippet_sender;
        a = d != null ? b("MessengerReadReceipt.re").getSeenBy(a, {
            author: d,
            status: null,
            thread_id: c.thread_id,
            timestamp: c.timestamp
        }, !0) : [];
        var e = Object.fromEntries(c.participants.map(function (a) {
            return b("MessengerParticipants.re").getNow(a)
        }).filter(Boolean).map(function (a) {
            return [a.id, a]
        }));
        return a.map(function (a) {
            a = e[a];
            return a != null && a.image_src != null ? {alt: a.name, src: a.image_src} : null
        }).filter(Boolean)
    };
    f.useHook = a
}), null);
__d("MWMSJewelThreadSeenByImages.bs", ["MWMSJewelThreadSeenByImages"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        return b("MWMSJewelThreadSeenByImages").useHook()
    }

    f.useHook = a
}), null);
__d("MWMSLastMessageTimestamp.bs", ["MWMSCurrentThreadDetails.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MWMSCurrentThreadDetails.bs").useHook(void 0);
        if (a == null) return 0; else return a.last_message_timestamp
    }

    f.useHook = a
}), null);
__d("MercuryParticipantListRenderer", ["fbt", "MercuryIDs"], (function (a, b, c, d, e, f, g) {
    "use strict";
    a = function () {
        function a() {
            var a = this;
            this.$6 = function (c) {
                var d = a.$5;
                if (d != null) {
                    var e = b("MercuryIDs").getUserIDFromParticipantID(c.id);
                    if (e != null && d[e] != null && d[e] != void 0) return d[e]
                }
                return a.$2 ? c.short_name : c.name
            };
            this.$1 = !1;
            this.$2 = !1;
            this.$3 = !1;
            this.$4 = 0;
            this.$5 = null
        }

        var c = a.prototype;
        c.renderParticipantList = function (a) {
            a = a.map(this.$6);
            switch (a.length) {
                case 0:
                    return h(this.$1);
                case 1:
                    return i(a);
                case 2:
                    return this.$3 ? k(a) : j(a);
                case 3:
                    return this.$3 ? m(a) : l(a);
                default:
                    return this.$3 ? o(a, this.$4) : n(a, this.$4)
            }
        };
        c.setIsNewThread = function (a) {
            this.$1 = a;
            return this
        };
        c.setNameRenderer = function (a) {
            this.$6 = a;
            return this
        };
        c.setUseShortName = function (a) {
            this.$2 = a;
            return this
        };
        c.setNickname = function (a) {
            this.$5 = a;
            return this
        };
        c.setUseAndSeparator = function (a) {
            this.$3 = a;
            return this
        };
        c.setTotalParticipantCount = function (a) {
            this.$4 = a;
            return this
        };
        return a
    }();
    e.exports = a;

    function h(a) {
        if (a) return g._("\u65b0\u6d88\u606f"); else return g._("\u6ca1\u6709\b\u6210\u5458\u53c2\u4e0e\u804a\u5929")
    }

    function i(a) {
        return a[0]
    }

    function j(a) {
        return g._("{participant1}\uff0c {participant2}", [g._param("participant1", a[0]), g._param("participant2", a[1])])
    }

    function k(a) {
        return g._("{participant1}\u548c{participant2}", [g._param("participant1", a[0]), g._param("participant2", a[1])])
    }

    function l(a) {
        return g._("{participant1}\uff0c {participant2}\uff0c {participant3}", [g._param("participant1", a[0]), g._param("participant2", a[1]), g._param("participant3", a[2])])
    }

    function m(a) {
        return g._("{participant1}\u3001{participant2}\u548c{participant3}", [g._param("participant1", a[0]), g._param("participant2", a[1]), g._param("participant3", a[2])])
    }

    function n(a, b) {
        return g._("{participant1}\uff0c {participant2}\uff0c {participant3}\uff0c {others_link}", [g._param("participant1", a[0]), g._param("participant2", a[1]), g._param("participant3", a[2]), g._param("others_link", p((b || a.length) - 3))])
    }

    function o(a, b) {
        return g._("{participant1}\u3001{participant2}\u548c{others_link}", [g._param("participant1", a[0]), g._param("participant2", a[1]), g._param("others_link", p((b || a.length) - 2))])
    }

    function p(a) {
        if (a > 1) return g._({"*": "\u5176\u4ed6{others_count}\u4f4d\u7528\u6237"}, [g._param("others_count", a, [0])]); else return g._("\u5176\u4ed6 1 \u4eba")
    }
}), null);
__d("MWMSThreadTitle.bs", ["bs_js_dict", "bs_belt_Array", "MercuryIDs", "bs_caml_option", "CurrentUser", "JsDictReadOnly.bs", "MercuryParticipantListRenderer"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        var c = {};
        b("bs_js_dict").entries(a).forEach(function (a) {
            c[a[0]] = a[1]
        });
        return c
    }

    function h(a, c, d, e, f) {
        if (a !== "") return a;
        a = g(d);
        return new (b("MercuryParticipantListRenderer"))().setUseShortName(f).setUseAndSeparator(e).setIsNewThread(!1).setNickname(a).renderParticipantList(c)
    }

    function i(a, c) {
        if (a !== void 0) return [b("bs_caml_option").valFromOption(a)]; else {
            var d = b("MercuryIDs").getParticipantIDFromUserID(b("CurrentUser").getID());
            a = b("JsDictReadOnly.bs").keys(c);
            var e = a.length;
            return b("bs_belt_Array").keepMap(a, function (a) {
                if (a === d && e !== 1) return; else {
                    a = b("JsDictReadOnly.bs").get(c, a);
                    if (a !== void 0) return b("bs_caml_option").nullable_to_opt(b("bs_caml_option").valFromOption(a).image_src); else return
                }
            })
        }
    }

    function a(a, c) {
        return i(a, b("JsDictReadOnly.bs").from(c))
    }

    function j(a, c, d) {
        var e = b("MercuryIDs").getParticipantIDFromUserID(b("CurrentUser").getID()),
            f = b("JsDictReadOnly.bs").keys(c).length,
            g = b("bs_belt_Array").keepMap(b("JsDictReadOnly.bs").keys(c), function (a) {
                if (a === e && f > 1) return;
                a = b("JsDictReadOnly.bs").get(c, a);
                if (a === void 0) return;
                a = b("bs_caml_option").valFromOption(a);
                return {id: a.id, name: a.name, short_name: a.short_name}
            });
        return h(a, g, d, !0, !0)
    }

    function c(a, c, d) {
        return j(a, b("JsDictReadOnly.bs").from(c), d)
    }

    function k(a, c, d) {
        c = b("JsDictReadOnly.bs").get(c, b("MercuryIDs").getParticipantIDFromUserID(a));
        if (c === void 0) return;
        a = b("bs_caml_option").valFromOption(c);
        return h("", [{id: a.id, name: a.name, short_name: a.short_name}], d, !1, !1)
    }

    function d(a, c, d) {
        return k(a, b("JsDictReadOnly.bs").from(c), d)
    }

    function l(a, c) {
        c = b("JsDictReadOnly.bs").get(c, b("MercuryIDs").getParticipantIDFromUserID(a));
        if (c !== void 0) return b("bs_caml_option").some(b("bs_caml_option").valFromOption(c).name)
    }

    function e(a, c) {
        return l(a, b("JsDictReadOnly.bs").from(c))
    }

    f.getProfileImages_ = i;
    f.getProfileImages = a;
    f.getTitleForGroup_ = j;
    f.getTitleForGroup = c;
    f.getTitleForUser_ = k;
    f.getTitleForUser = d;
    f.getTitleForPage_ = l;
    f.getTitleForPage = e
}), null);
__d("MWChatTitleHooks.bs", ["bs_curry", "React", "bs_js_dict", "bs_belt_Option", "bs_caml_option", "JsDictReadOnly.bs", "MWMSThreadTitle.bs"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a, c) {
        return b("MWMSThreadTitle.bs").getProfileImages_(c, b("JsDictReadOnly.bs").from(a))
    }

    function c(a) {
        var c = g.useState(function () {
            return b("bs_belt_Option").getWithDefault(b("bs_belt_Option").flatMap(a, function (a) {
                return b("bs_caml_option").nullable_to_opt(a.custom_nickname)
            }), {})
        }), d = c[1], e = c[0], f = b("bs_belt_Option").flatMap(a, function (a) {
            return b("bs_caml_option").nullable_to_opt(a.custom_nickname)
        });
        g.useEffect(function () {
            if (f !== void 0) {
                var a = b("bs_caml_option").valFromOption(f);
                b("bs_curry")._1(d, function (b) {
                    return a
                })
            }
            return function (a) {
            }
        }, [f, d]);
        c = g.useCallback(function (a) {
            return function (c) {
                var f = b("bs_js_dict").get(e, a), g = b("bs_js_dict").map(function (a) {
                    return a
                }, e);
                c !== void 0 && c !== "" ? g[a] = c : b("bs_js_dict").unsafeDeleteKey(g, a);
                b("bs_curry")._1(d, function (a) {
                    return g
                });
                return f
            }
        }, [e, d]);
        return [e, c]
    }

    f.useImages = a;
    f.useNicknames = c
}), null);
__d("MWUILoadParticipants.bs", ["requireCond", "cr:1459406"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1459406").useMercuryParticipants;
    c = b("cr:1459406").useParticipants;
    f.useMercuryParticipants = a;
    f.useParticipants = c
}), null);
__d("MWUIThreadImage.bs", ["requireCond", "cr:1549085"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1549085").useHook;
    f.$MWLSThreadImage$OR$MWMSThreadImage$requireCond = b("cr:1549085");
    f.useHook = a
}), null);
__d("MWMSLoadThreadPicture.bs", ["bs_curry", "MWUIThreadImage.bs", "MWChatTitleHooks.bs", "MWThread_DEPRECATED.bs", "MWUILoadParticipants.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        a = b("bs_curry")._1(b("MWUILoadParticipants.bs").useMercuryParticipants, a);
        var c = b("bs_curry")._1(b("MWUIThreadImage.bs").useHook, void 0);
        return b("MWChatTitleHooks.bs").useImages(a[0], c)
    }

    f.useHook = a
}), null);
__d("MWUIThreadName.bs", ["requireCond", "cr:1549086"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1549086").useHook;
    f.$MWLSThreadName$OR$MWMSThreadName$requireCond = b("cr:1549086");
    f.useHook = a
}), null);
__d("MWMSLoadThreadTitle.bs", ["bs_curry", "bs_belt_Option", "MWUIThreadName.bs", "MWMSThreadTitle.bs", "MWThread_DEPRECATED.bs", "MWUILoadParticipants.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        var c = b("bs_curry")._1(b("MWUIThreadName.bs").useHook, void 0),
            d = b("bs_curry")._1(b("MWUILoadParticipants.bs").useMercuryParticipants, a), e = d[1], f = d[0],
            g = a.NAME;
        c = g === "Group" ? b("MWMSThreadTitle.bs").getTitleForGroup(b("bs_belt_Option").getWithDefault(c, ""), f, e) : g === "Page" ? b("MWMSThreadTitle.bs").getTitleForPage(a.VAL, f) : b("MWMSThreadTitle.bs").getTitleForUser(a.VAL, f, e);
        return [c, d[2]]
    }

    f.useHook = a
}), null);
__d("MessengerParticipantUtils.bs", ["bs_belt_Set", "bs_caml_obj", "MercuryIDs"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a, c, d) {
        var e = b("MercuryIDs").getParticipantIDFromUserID(a);
        a = d.participants.filter(function (a) {
            return b("bs_caml_obj").caml_notequal(a, e)
        });
        return a.filter(function (a) {
            return b("bs_belt_Set").has(c, a)
        })
    }

    d = b("bs_belt_Set").has;

    function h(a, b, c) {
        if (c.is_canonical) return []; else return g(a, b, c)
    }

    function a(a, b, c) {
        return h(a, b, c).length > 0
    }

    function c(a, b, c) {
        return g(a, b, c).length > 0
    }

    f.findIntersection = g;
    f.has = d;
    f.participantsInGroupThread = h;
    f.areParticipantsInGroupThread = a;
    f.areParticipantsInThread = c
}), null);
__d("OnlineUserIds.bs", ["bs_belt_Set", "ParticipantId.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        return b("bs_belt_Set").make(b("ParticipantId.bs"))
    }

    function c(a) {
        return b("bs_belt_Set").fromArray(a, b("ParticipantId.bs"))
    }

    f.make = a;
    f.fromArray = c
}), null);
__d("MWMSPresenceIsThreadActive.bs", ["bs_curry", "React", "bs_belt_Map", "MercuryIDs", "bs_caml_option", "CurrentUser", "OnlineUserIds.bs", "MWChatThreadId.bs", "MessengerState.bs", "requireDeferred", "MWThread_DEPRECATED.bs", "PresenceStatusContext", "AvailableListConstants", "MessengerParticipantUtils.bs"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React"), h = b("PresenceStatusContext"), i = b("requireDeferred")("MessengerMQTTPresence");

    function a(a) {
        var c = b("MWThread_DEPRECATED.bs").useId(void 0);
        a = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        var d = g.useContext(h), e;
        if (c !== void 0 && typeof c !== "string") {
            var f = c.NAME;
            e = f === "User" || f === "Page" || f === "Group" ? b("bs_belt_Map").get(a.threads, b("MWChatThreadId.bs").getMercuryID(c)) : void 0
        } else e = void 0;
        var j = g.useCallback(function (a) {
            if (e !== void 0) return b("MessengerParticipantUtils.bs").findIntersection(b("CurrentUser").getID(), b("OnlineUserIds.bs").fromArray(d.getOnlineIDs().map(function (a) {
                return b("MercuryIDs").getParticipantIDFromUserID(a)
            })), b("bs_caml_option").valFromOption(e)).length !== 0; else return !1
        }, [e, d]), k = g.useCallback(function (a) {
            if (e !== void 0 && d.getChatVisibility()) return b("bs_caml_option").valFromOption(e).is_business_page_active; else return !1
        }, [e, d]);
        f = g.useState(function () {
            if (c === void 0) return !1;
            if (typeof c === "string") return !1;
            var a = c.NAME;
            if (a === "Group") return b("bs_curry")._1(j, void 0);
            if (a === "Page") return b("bs_curry")._1(k, void 0);
            if (a !== "User") return !1;
            a = d.get(c.VAL);
            if (a == null) return !1; else return a === b("AvailableListConstants").ACTIVE
        });
        var l = f[1];
        g.useEffect(function () {
            if (c !== void 0 && typeof c !== "string" && c.NAME === "User") {
                var a = c.VAL, b = d.get(a);
                b == null && i.onReady(function (b) {
                    b.sendAdditionalBuddyRequest(a)
                })
            }
        }, [c, d]);
        g.useEffect(function () {
            c !== void 0 && !(typeof c === "string" || c.NAME !== "Group") && b("bs_curry")._1(l, function (a) {
                return b("bs_curry")._1(j, void 0)
            })
        }, [c, d, j]);
        g.useEffect(function () {
            var a = d.addListener(function (a) {
                if (c === void 0) return;
                if (typeof c === "string") return;
                a = c.NAME;
                if (a === "Group") return b("bs_curry")._1(l, function (a) {
                    return b("bs_curry")._1(j, void 0)
                });
                if (a === "Page") return b("bs_curry")._1(l, function (a) {
                    return b("bs_curry")._1(k, void 0)
                });
                if (a !== "User") return;
                var e = d.get(c.VAL);
                if (e == null) return b("bs_curry")._1(l, function (a) {
                    return !1
                }); else return b("bs_curry")._1(l, function (a) {
                    return e === b("AvailableListConstants").ACTIVE
                })
            });
            return function (c) {
                return b("bs_curry")._1(a, void 0)
            }
        }, [c, d, j]);
        return f[0]
    }

    f.useHook = a
}), null);
__d("MercuryAttachmentSnippetType", ["keyMirror"], (function (a, b, c, d, e, f) {
    a = b("keyMirror")({
        PHOTO: null,
        GIF: null,
        VIDEO: null,
        AUDIO_CLIP: null,
        STICKER: null,
        SHARE: null,
        ERROR: null,
        MIXED: null,
        GIFT: null,
        THIRDPARTYSTICKER: null,
        FILE: null,
        LIKE_STICKER: null
    });
    c = a;
    e.exports = c
}), null);
__d("MercuryGiftSnippetRenderer", ["fbt"], (function (a, b, c, d, e, f, g) {
    "use strict";
    f.renderText = a;

    function a(a, b) {
        return a ? g._("\u4f60\u53d1\u9001\u4e86\u60c5\u4eba\u8282\u871c\u8bed") : g._("{name}\u53d1\u9001\u4e86\u60c5\u4eba\u8282\u871c\u8bed", [g._param("name", b)])
    }
}), null);
__d("MessengerLightweightActionUtils", [], (function (a, b, c, d, e, f) {
    "use strict";
    f.isLWAAttachment = g;
    f.isLWAMessage = a;
    f.getCollapsedLWAText = b;
    f.getLWASnippetText = c;

    function g(a) {
        return !!(a && a.attach_type === "share" && a.share && a.share.target && a.share.target.lwa_type)
    }

    function a(a) {
        a = a == null ? void 0 : a.attachments;
        return !!(a && a.length === 1 && g(a[0]))
    }

    function b(a) {
        return a.attachments[0].share.title
    }

    function c(a) {
        return a[0].share.title
    }
}), null);
__d("P2PSnippetStringUtils", ["fbt"], (function (a, b, c, d, e, f, g) {
    f.getRequestCanceledSnippet = a;
    f.getRequestDeclinedSnippet = b;
    f.getRequestSentSnippet = c;
    f.getRequestSnippetByStatus = d;
    f.getTransferCanceledSnippet = e;
    f.getTransferDeclinedSnippet = h;
    f.getTransferSentSnippet = i;
    f.getTransferSnippetByStatus = j;

    function a(a, b, c, d, e) {
        if (a) return g._("\u4f60\u5bf9{receiver's name}\u7684{payment request amount}\u6536\u6b3e\u8bf7\u6c42\u88ab\u53d6\u6d88\u3002", [g._param("payment request amount", e), g._param("receiver's name", d)]); else if (b) return g._("{requester's name}\u7684{payment request amount}\u6536\u6b3e\u8bf7\u6c42\u88ab\u53d6\u6d88\u3002", [g._param("requester's name", c), g._param("payment request amount", e)]); else return g._("{requester's name}\u5bf9{receiver's name}\u7684{payment request amount}\u6536\u6b3e\u8bf7\u6c42\u88ab\u53d6\u6d88\u3002", [g._param("requester's name", c), g._param("payment request amount", e), g._param("receiver's name", d)])
    }

    function b(a, b, c, d, e) {
        if (a) return g._("{receiver's name}\u62d2\u7edd\u652f\u4ed8{payment request amount}", [g._param("receiver's name", d), g._param("payment request amount", e)]); else if (b) return g._("\u4f60\u62d2\u7edd\u5411{requester's name}\u652f\u4ed8{payment request amount}", [g._param("requester's name", c), g._param("payment request amount", e)]); else return g._("{receiver's name}\u62d2\u7edd\u5411{sender's name}\u652f\u4ed8{payment request amount}", [g._param("receiver's name", d), g._param("sender's name", c), g._param("payment request amount", e)])
    }

    function c(a, b, c, d, e) {
        if (a) return g._("\u4f60\u8bf7{requestee name}\u652f\u4ed8{amount}\u3002", [g._param("amount", e), g._param("requestee name", d)]); else if (b) return g._("{requester name}\u8bf7\u4f60\u652f\u4ed8{amount}\u3002", [g._param("requester name", c), g._param("amount", e)]); else return g._("{name}\u8bf7{requestee name}\u652f\u4ed8{amount}\u3002", [g._param("name", c), g._param("amount", e), g._param("requestee name", d)])
    }

    function d(a, b, c, d, e, f) {
        a = a || 1;
        b = [b, c, d, e, f];
        switch (a) {
            case 2:
                return this.getRequestDeclinedSnippet.apply(this, b);
            case 5:
            case 6:
                return this.getRequestCanceledSnippet.apply(this, b)
        }
        return this.getRequestSentSnippet.apply(this, b)
    }

    function e(a, b, c, d, e) {
        if (a) return g._("\u4f60\u5411{receiver_name}\u652f\u4ed8\u7684{amount}\u88ab\u53d6\u6d88\u4e86\u3002", [g._param("amount", e), g._param("receiver_name", d)]); else if (b) return g._("{sender name}\u652f\u4ed8\u7684{amount}\u5df2\u88ab\u53d6\u6d88\u3002", [g._param("sender name", c), g._param("amount", e)]); else return g._("{sender_name}\u5411{receiver_name}\u652f\u4ed8\u7684{amount}\u88ab\u53d6\u6d88\u3002", [g._param("sender_name", c), g._param("amount", e), g._param("receiver_name", d)])
    }

    function h(a, b, c, d, e) {
        if (a) return g._("{receiver_name}\u62d2\u6536\u4e86\u4f60\u652f\u4ed8\u7684{amount}\u3002", [g._param("receiver_name", d), g._param("amount", e)]); else if (b) return g._("\u4f60\u62d2\u6536\u4e86{sender name}\u7684{amount}\u4ed8\u6b3e", [g._param("sender name", c), g._param("amount", e)]); else return g._("{receiver_name}\u62d2\u6536\u4e86{sender_name}\u652f\u4ed8\u7684{amount}\u3002", [g._param("receiver_name", d), g._param("sender_name", c), g._param("amount", e)])
    }

    function i(a, b, c, d, e) {
        if (a) return g._("\u4f60\u5411{receiver name}\u652f\u4ed8\u4e86{amount}\u3002", [g._param("receiver name", d), g._param("amount", e)]); else if (b) return g._("{name}\u5411\u4f60\u4ed8\u6b3e{amount}\u3002", [g._param("name", c), g._param("amount", e)]); else return g._("{sender name}\u4ed8\u7ed9{receiver name}{amount}", [g._param("sender name", c), g._param("receiver name", d), g._param("amount", e)])
    }

    function j(a, b, c, d, e, f) {
        b = [b, c, d, e, f];
        c = a || 15;
        switch (c) {
            case 5:
                return this.getTransferDeclinedSnippet.apply(this, b);
            case 3:
            case 10:
            case 11:
            case 12:
            case 16:
                return this.getTransferCanceledSnippet.apply(this, b)
        }
        return this.getTransferSentSnippet.apply(this, b)
    }
}), null);
__d("MercuryAttachmentSnippetRenderer", ["fbt", "CurrentUser", "MercuryAttachmentSnippetType", "MercuryAudioType", "MercuryGiftSnippetRenderer", "MessengerLightweightActionUtils", "P2PSnippetStringUtils", "StickerConstants"], (function (a, b, c, d, e, f, g) {
    "use strict";
    a = {
        getAttachmentSnippetType: function (a) {
            if (this._hasOnlyPhotos(a)) return b("MercuryAttachmentSnippetType").PHOTO;
            if (this._hasOnlyAnimatedImages(a)) return b("MercuryAttachmentSnippetType").GIF;
            if (this._hasOnlyVideo(a)) return b("MercuryAttachmentSnippetType").VIDEO;
            if (this._hasAudioClip(a)) return b("MercuryAttachmentSnippetType").AUDIO_CLIP;
            if (this._hasLikeSticker(a)) return b("MercuryAttachmentSnippetType").LIKE_STICKER;
            if (this._hasSticker(a)) return b("MercuryAttachmentSnippetType").STICKER;
            if (this._hasThirdPartySticker(a)) return b("MercuryAttachmentSnippetType").THIRDPARTYSTICKER;
            if (this._hasShare(a)) return b("MercuryAttachmentSnippetType").SHARE;
            if (this._hasGift(a)) return b("MercuryAttachmentSnippetType").GIFT;
            if (this._hasError(a)) return b("MercuryAttachmentSnippetType").ERROR;
            return this._hasFile(a) ? b("MercuryAttachmentSnippetType").FILE : b("MercuryAttachmentSnippetType").MIXED
        }, renderAttachmentSnippetText: function (a, c, d, e) {
            switch (a) {
                case b("MercuryAttachmentSnippetType").PHOTO:
                    return this._renderPhotoAttachmentSnippetText(c, d, this._getPhotoAttachments(e));
                case b("MercuryAttachmentSnippetType").GIF:
                    return this._renderAnimatedImagesAttachmentSnippetText(c, d, this._getAnimatedImageAttachments(e));
                case b("MercuryAttachmentSnippetType").VIDEO:
                    return c ? g._("\u4f60\u53d1\u9001\u4e86\u89c6\u9891\u3002") : g._("{sender name}\u53d1\u9001\u4e86\u89c6\u9891\u3002", [g._param("sender name", d)]);
                case b("MercuryAttachmentSnippetType").AUDIO_CLIP:
                    return c ? g._("\u4f60\u53d1\u9001\u4e86\u8bed\u97f3\u6d88\u606f\u3002") : g._("{name}\u53d1\u9001\u4e86\u4e00\u6761\u8bed\u97f3\u6d88\u606f\u3002", [g._param("name", d)]);
                case b("MercuryAttachmentSnippetType").STICKER:
                case b("MercuryAttachmentSnippetType").LIKE_STICKER:
                case b("MercuryAttachmentSnippetType").THIRDPARTYSTICKER:
                    return c ? g._("\u4f60\u53d1\u4e86\u4e00\u4e2a\u8d34\u56fe") : g._("{name}\u53d1\u6765\u4e86\u8d34\u56fe", [g._param("name", d)]);
                case b("MercuryAttachmentSnippetType").SHARE:
                    if (e && this._hasP2PPayment(e)) return this._renderP2PPaymentSnippetText(e[0]);
                    if (e && this._hasP2PPaymentRequest(e)) return this._renderP2PPaymentRequestSnippetText(e[0]);
                    if (e && this._hasBusinessMessage(e)) return this._renderBusinessMessageSnippetText(e[0], d);
                    if (e && this._hasLocation(e)) return c ? g._("You sent a location.") : g._("{sender name} sent a location.", [g._param("sender name", d)]);
                    if (e && this._hasLiveLocation(e)) return c ? g._("\u4f60\u53d1\u9001\u4e86\u5b9e\u65f6\u4f4d\u7f6e\u3002") : g._("{sender name}\u53d1\u9001\u4e86\u5b9e\u65f6\u4f4d\u7f6e\u3002", [g._param("sender name", d)]);
                    if (e && this._hasMontageDirect(e)) {
                        a = e[0];
                        a = (a = a) != null ? (a = a.share) != null ? (a = a.media) != null ? a.source : a : a : a;
                        return c ? a ? g._("You sent a video.") : g._("\u4f60\u53d1\u4e86\u4e00\u5f20\u7167\u7247") : a ? g._("View {sender name}'s disappearing video.", [g._param("sender name", d)]) : g._("View {sender name}'s disappearing photo.", [g._param("sender name", d)])
                    }
                    if (e && e.length === 1 && b("MessengerLightweightActionUtils").isLWAAttachment(e[0])) return b("MessengerLightweightActionUtils").getLWASnippetText(e);
                    return e && e.length === 1 && this._isGloballyRemovedMessageAttachment(e[0]) ? e[0].share.description : c ? g._("\u4f60\u53d1\u9001\u4e86\u94fe\u63a5") : g._("{sender name}\u53d1\u9001\u4e86\u94fe\u63a5", [g._param("sender name", d)]);
                case b("MercuryAttachmentSnippetType").GIFT:
                    return b("MercuryGiftSnippetRenderer").renderText(c, d);
                case b("MercuryAttachmentSnippetType").FILE:
                    return c ? g._("\u4f60\u53d1\u9001\u4e86\u9644\u4ef6\u3002") : g._("{sender name}\u53d1\u9001\u4e86\u9644\u4ef6\u3002", [g._param("sender name", d)]);
                case b("MercuryAttachmentSnippetType").MIXED:
                    return c ? g._("\u4f60\u53d1\u9001\u4e86\u9644\u4ef6\u3002") : g._("{sender name}\u53d1\u9001\u4e86\u4e00\u4e9b\u9644\u4ef6\u3002", [g._param("sender name", d)]);
                case b("MercuryAttachmentSnippetType").ERROR:
                    return c ? g._("\u4f60\u53d1\u9001\u4e86\u9644\u4ef6\u3002") : g._("{sender name}\u53d1\u9001\u4e86\u4e00\u4e2a\u9644\u4ef6\u3002", [g._param("sender name", d)]);
                default:
                    return ""
            }
        }, _isGloballyRemovedMessageAttachment: function (a) {
            return a.share && a.share.style_list && a.share.style_list.includes("globally_deleted_message_placeholder")
        }, _hasOnlyPhotos: function (a) {
            return this._getPhotoAttachments(a).length === a.length
        }, _hasThirdPartySticker: function (a) {
            return a.length === 1 && a[0].attach_type === "third_party_sticker"
        }, _hasOnlyAnimatedImages: function (a) {
            return this._getAnimatedImageAttachments(a).length === a.length
        }, _hasOnlyVideo: function (a) {
            return a.length === 1 && a[0].attach_type === "video"
        }, _hasAudioClip: function (a) {
            var c = a[0].metadata && a[0].metadata.type;
            return a.length === 1 && (c === b("MercuryAudioType").AudioClip || c === b("MercuryAudioType").VoiceMessageWithTranscript)
        }, _hasBusinessMessage: function (a) {
            return this._hasSingleShareAttachmentOfStyle(a, "business_message_items")
        }, _hasSticker: function (a) {
            return a.length === 1 && a[0].attach_type === "sticker"
        }, _hasLikeSticker: function (a) {
            if (a.length < 1) return !1;
            var c = a[0].metadata && a[0].metadata.stickerID;
            return a.length === 1 && (c == b("StickerConstants").LIKE_STICKER_ID || c == b("StickerConstants").HOT_LIKE_SMALL_STICKER_ID || c == b("StickerConstants").HOT_LIKE_MEDIUM_STICKER_ID || c == b("StickerConstants").HOT_LIKE_LARGE_STICKER_ID)
        }, _hasLocation: function (a) {
            return this._hasSingleShareAttachmentOfStyle(a, "message_location")
        }, _hasLiveLocation: function (a) {
            return this._hasSingleShareAttachmentOfStyle(a, "message_live_location")
        }, _hasMontageDirect: function (a) {
            return this._hasSingleShareAttachmentOfStyle(a, "montage_direct")
        }, _hasP2PPayment: function (a) {
            return this._hasSingleShareAttachmentOfStyle(a, "orion")
        }, _hasP2PPaymentRequest: function (a) {
            return this._hasSingleShareAttachmentOfStyle(a, "orion_request")
        }, _hasSingleShareAttachmentOfStyle: function (a, b) {
            return a.length === 1 && a[0].attach_type === "share" && a[0].share && a[0].share.style_list.indexOf(b) >= 0
        }, _hasShare: function (a) {
            return a.length === 1 && a[0].attach_type === "share"
        }, _hasError: function (a) {
            return a.length === 1 && a[0].attach_type === "error"
        }, _hasGift: function (a) {
            return a.length === 1 && a[0].attach_type === "gift"
        }, _hasFile: function (a) {
            return a.length === 1 && a[0].attach_type === "file"
        }, _getPhotoAttachments: function (a) {
            return !a ? [] : a.filter(function (a) {
                return a.attach_type === "photo"
            })
        }, _getAnimatedImageAttachments: function (a) {
            return !a ? [] : a.filter(function (a) {
                return a.attach_type === "animated_image"
            })
        }, _renderPhotoAttachmentSnippetText: function (a, b, c) {
            if (c.length === 1) if (a) return g._("\u4f60\u53d1\u9001\u4e86\u4e00\u5f20\u7167\u7247\u3002"); else return g._("{name}\u53d1\u9001\u4e86\u7167\u7247", [g._param("name", b)]); else if (a) return g._({"*": "\u4f60\u53d1\u9001\u4e86{num_photos}\u5f20\u7167\u7247\u3002"}, [g._param("num_photos", c.length, [0])]); else return g._({"*": "{name}\u53d1\u9001\u4e86{num_photos}\u5f20\u7167\u7247\u3002"}, [g._param("name", b), g._param("num_photos", c.length, [0])])
        }, _renderAnimatedImagesAttachmentSnippetText: function (a, b, c) {
            if (c.length === 1) if (a) return g._("\u4f60\u53d1\u9001\u4e86\u4e00\u5f20\u52a8\u56fe\u3002"); else return g._("{name}\u53d1\u9001\u4e86\u4e00\u5f20\u52a8\u56fe\u3002", [g._param("name", b)]); else if (a) return g._("\u4f60\u53d1\u9001\u4e86{num_animated_images}\u5f20\u52a8\u56fe\u3002", [g._param("num_animated_images", c.length)]); else return g._("{name}\u53d1\u9001\u4e86{num_animated_images}\u5f20\u52a8\u56fe\u3002", [g._param("name", b), g._param("num_animated_images", c.length)])
        }, _renderBusinessMessageSnippetText: function (a, b) {
            a = a.share.target;
            a = a && a.message || g._("{sender name}\u53d1\u9001\u4e86\u4e00\u4e2a\u9644\u4ef6\u3002", [g._param("sender name", b)]);
            return a
        }, _renderP2PPaymentSnippetText: function (a) {
            a = a.share.target;
            return this.renderP2PPaymentSnippetText(b("CurrentUser").getID() === a.sender.id, a.sender.name, a.amountWithSymbol, a.status, b("CurrentUser").getID() === a.receiver.id, a.receiver.name)
        }, _renderP2PPaymentRequestSnippetText: function (a) {
            a = a.share.target;
            return this.renderP2PPaymentRequestSnippetText(b("CurrentUser").getID() === a.requester.id, a.requester.name, a.amountWithSymbol, a.currentStatus, b("CurrentUser").getID() === a.requestee.id, a.requestee.name)
        }, renderP2PPaymentSnippetText: function (a, c, d, e, f, g) {
            return b("P2PSnippetStringUtils").getTransferSnippetByStatus(e, a, f || !1, c || "", g || "", d)
        }, renderP2PPaymentRequestSnippetText: function (a, c, d, e, f, g) {
            return b("P2PSnippetStringUtils").getRequestSnippetByStatus(e, a, f || !1, c || "", g || "", d)
        }
    };
    e.exports = a
}), null);
__d("useMWMSSnippetRenderer_DONT_USE.react", ["fbt", "Actor", "BaseText.react", "CometEmojiTransform", "CometEmoticonTransform", "MercuryAttachmentSnippetRenderer", "MercuryAttachmentSnippetType", "MercuryIDs", "MessengerParticipants.re", "React"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React"), i = ["227878347358915", "369239263222822", "369239343222814", "369239383222810"];

    function j(a, c) {
        var d = b("MercuryIDs").getUserIDFromParticipantID(a.id);
        c = c && c[d] || a.short_name;
        return h.jsx(b("BaseText.react"), {
            text: c,
            transforms: [b("CometEmoticonTransform")(), b("CometEmojiTransform")()]
        })
    }

    function k(a, b, c, d, e) {
        return c.id === d ? g._("\u4f60\uff1a{last message sent in the thread}", [g._param("last message sent in the thread", a)]) : e ? a : g._("{sender name}\uff1a{last message sent in the thread}", [g._param("sender name", j(c, b)), g._param("last message sent in the thread", a)])
    }

    function a(a) {
        var c = b("Actor").useActor();
        c = c[0];
        if (a == null) return null;
        c = b("MercuryIDs").getParticipantIDFromUserID(c);
        var d = a.snippet, e = a == null ? void 0 : a.snippet_sender;
        e = e != null ? b("MessengerParticipants.re").getNow(e) : null;
        if (e != null) if (a.snippet_attachments.length !== 0) {
            var f = a.snippet_attachments, g = b("MercuryAttachmentSnippetRenderer").getAttachmentSnippetType(f);
            g === b("MercuryAttachmentSnippetType").SHARE && d !== "" || (d = b("MercuryAttachmentSnippetRenderer").renderAttachmentSnippetText(g, c === a.snippet_sender, j(e, a.custom_nickname), f));
            (f == null ? void 0 : f.length) === 1 && i.includes((g = f[0]) == null ? void 0 : (f = g.metadata) == null ? void 0 : f.stickerID) && (d = k(h.jsx(b("BaseText.react"), {
                text: "(Y)",
                transforms: [b("CometEmoticonTransform")()]
            }), a.custom_nickname, e, c, a.is_canonical))
        } else a.snippet != null && a.snippet.toString() !== "" && (d = k(h.jsx(b("BaseText.react"), {
            text: a.snippet.toString(),
            transforms: [b("CometEmoticonTransform")(), b("CometEmojiTransform")()]
        }), a.custom_nickname, e, c, a.is_canonical));
        return d
    }
}), null);
__d("MWMSSnippetRenderer.bs", ["bs_curry", "MWMSCurrentThreadDetails.bs", "useMWMSSnippetRenderer_DONT_USE.react"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("useMWMSSnippetRenderer_DONT_USE.react");

    function a(a) {
        return b("bs_curry")._1(g, b("MWMSCurrentThreadDetails.bs").useHook(void 0))
    }

    f.useSnippetHook = g;
    f.useHook = a
}), null);
__d("MWThreadIsMuted_DEPRECATED.bs", [], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        if (a <= -1) return !0; else return a > Date.now()
    }

    f.getThreadIsMuted = a
}), null);
__d("MWThreadListLastMessage_DEPRECATED.bs", ["fbt", "React", "Locale", "stylex", "TetraText.react", "CometMiddot.react", "MWJewelThreadSnippet.react", "CometRelativeTimestamp.react"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h, i = b("React"), j = {
        middot: {marginTop: "kvgmc6g5", marginEnd: "cgat1ltu", marginBottom: "oygrvhab", marginStart: "kkf49tns"},
        root: {display: "j83agx80"},
        rootRtl: {flexDirection: "rl25f0pe"},
        timestamp: {whiteSpace: "g0qnabr5"}
    };

    function a(a) {
        var c = a.hasOngoingCall, d = a.lastMessageTimestamp, e = a.snippet;
        a = a.isUnread;
        return i.jsxs(i.Fragment, {
            children: [i.jsxs("div", {
                children: [i.jsx(b("MWJewelThreadSnippet.react"), {
                    isUnread: a,
                    text: e
                }), i.jsx("span", {
                    children: i.jsx(b("TetraText.react"), {
                        type: "body4",
                        children: i.jsx(b("CometMiddot.react"), {})
                    }), className: (h || (h = b("stylex")))(j.middot)
                }), i.jsx("span", {
                    children: i.jsx(b("CometRelativeTimestamp.react"), {
                        date: new Date(d),
                        format: "minimized"
                    }), className: h(j.timestamp)
                })], className: h(j.root, b("Locale").isRTL() ? j.rootRtl : !1)
            }), c ? i.jsx(b("TetraText.react"), {
                color: "positive",
                type: "body4",
                children: g._("\u6b63\u5728\u901a\u8bdd")
            }) : null]
        })
    }

    c = a;
    f.styles = j;
    f.make = c
}), null);
__d("RTWebInboxJoinOngoingCallIcon.react", ["ix", "React", "TetraIcon.react", "fbicon", "stylex"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React"), i = function (a) {
        switch (a) {
            case"AUDIO_GROUP_CALL":
                return b("fbicon")._(g("558161"), 20);
            case"VIDEO_GROUP_CALL":
                return b("fbicon")._(g("493174"), 20);
            default:
                return null
        }
    };

    function a(a) {
        var c = a.hidden;
        a = a.ongoingCallType;
        if (c) return null;
        c = i(a);
        return c === null ? null : h.jsx("div", {
            className: "ke6wolob rk01pc8j pmk7jnqg mrt03zmi rm21btxo akv41dx8 spb7xbtv bkmhp75w emlxlaya s45kfl79",
            children: h.jsx("div", {
                className: "thwo4zme l9j0dhe7 a8nywdso qt6c0cv9 rz4wbd8a jb3vyjys taijpn5t tv7at329 j83agx80 rq0escxv sk4xxmp2 agehan2d n8ej3o3l rt8b4zig spb7xbtv bkmhp75w emlxlaya s45kfl79 h5vs1ck6 bp9cbjyn",
                children: h.jsx(b("TetraIcon.react"), {color: "white", icon: c, size: 20})
            })
        })
    }
}), null);
__d("MWUIMarkThreadAsRead.bs", ["requireCond", "cr:1503714"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1503714").useHook;
    f.useHook = a
}), null);
__d("MWUIMarkThreadAsRead.re", ["MWUIMarkThreadAsRead.bs"], (function (a, b, c, d, e, f) {
    a = b("MWUIMarkThreadAsRead.bs").useHook;
    f.useHook = a
}), null);
__d("useMWJewelThreadAddOnSecondary", ["fbt", "CometBadge.react", "CometPressable.react", "MWJewelThreadAddOnSecondaryIcons", "MWUIMarkThreadAsRead.re", "React", "TetraOverlappingFacepileUnstyled.react", "stylex"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React"), i = g._("\u6807\u8bb0\u4e3a\u5df2\u8bfb");

    function a(a, c, d, e) {
        var f = b("MWUIMarkThreadAsRead.re").useHook();
        if (a) return {
            addOn: h.jsx(b("CometPressable.react"), {
                "aria-label": i, expanding: !0, onPress: function () {
                    return f()
                }, children: h.jsx(b("CometBadge.react"), {color: "blue", isProfileBadge: !0, size: 12})
            }), type: "body"
        };
        if (c) return {
            addOn: b("MWJewelThreadAddOnSecondaryIcons").MWJewelThreadAddOnSecondaryIcons.bell,
            type: "body"
        };
        if (d) if (e.length === 0) return {
            addOn: b("MWJewelThreadAddOnSecondaryIcons").MWJewelThreadAddOnSecondaryIcons.checkmark,
            type: "body"
        }; else return {
            addOn: h.jsx(b("TetraOverlappingFacepileUnstyled.react"), {
                count: e.length,
                isTextInline: !0,
                items: e.map(function (a) {
                    return {alt: a.alt, source: {uri: a.src}}
                }),
                size: 16
            }), type: "body"
        };
        return {addOn: h.jsx("div", {className: "fwizqjfa cyypbtt7"}), type: "body"}
    }
}), null);
__d("MWThreadListItem_DEPRECATED.bs", ["fbt", "bs_curry", "React", "stylex", "bs_belt_Option", "bs_caml_option", "TetraText.react", "requireDeferred", "useCometPreloader", "CometEmojiTransform", "MWMSLoadThreadTitle.bs", "MWMSSnippetRenderer.bs", "MWThread_DEPRECATED.bs", "TetraListCell.react", "MWMSLoadThreadPicture.bs", "CometEmoticonTransform", "getMWThreadAddOnPrimary", "useMWChatOpenTabForUser", "MWMSIsCurrentThreadMuted.bs", "MWMSLastMessageTimestamp.bs", "MWMSIsCurrentThreadUnread.bs", "MWMSPresenceIsThreadActive.bs", "MWThreadIsMuted_DEPRECATED.bs", "CometTextWithEntities.react", "MWMSJewelGetOngoingCallData.bs", "MWMSJewelThreadSeenByImages.bs", "useMenuButtonVisibilityState", "MWMSJewelIsActorSnippetSender.bs", "CometListCellHoverButton.react", "MWJewelOpenTabForCurrentThread.bs", "useMWJewelThreadAddOnSecondary", "MWThreadListLastMessage_DEPRECATED.bs", "RTWebInboxJoinOngoingCallIcon.react", "XCometMessengerControllerRouteBuilder", "useShouldShowMessagingEntrypointInCometRoot"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h, i = b("React");
    c = {};
    var j = {listItemContainer: {position: "l9j0dhe7"}};

    function a(a) {
        var c = a.messagingEntrypoint, d = a.onClose, e = a.selected;
        a = a.size;
        var f = b("useShouldShowMessagingEntrypointInCometRoot")("CHAT"), k = b("useMWChatOpenTabForUser")(c), l = k[1];
        k = i.useState(function () {
            return !1
        });
        var m = k[1];
        k = i.useRef(null);
        var n = b("MWMSPresenceIsThreadActive.bs").useHook(void 0), o = b("MWThread_DEPRECATED.bs").useFBID(void 0),
            p = b("MWMSJewelGetOngoingCallData.bs").useHook(void 0),
            q = b("MWMSJewelThreadSeenByImages.bs").useHook(void 0),
            r = b("MWMSIsCurrentThreadUnread.bs").useHook(void 0), s = b("MWMSIsCurrentThreadMuted.bs").useHook(void 0);
        s = s[1];
        var t = b("MWMSLoadThreadTitle.bs").useHook(void 0);
        t = t[0];
        var u = b("MWMSSnippetRenderer.bs").useHook(void 0), v = b("MWMSLoadThreadPicture.bs").useHook(void 0),
            w = b("MWMSJewelIsActorSnippetSender.bs").useHook(void 0),
            x = b("MWMSLastMessageTimestamp.bs").useHook(void 0),
            y = b("MWThreadIsMuted_DEPRECATED.bs").getThreadIsMuted(s * 1e3), z = b("useMenuButtonVisibilityState")(),
            A = z[1], B = A.setListItemHovered, C = i.useCallback(function (a) {
                b("bs_curry")._1(B, !1);
                return b("bs_curry")._1(m, function (a) {
                    return !1
                })
            }, [B]), D = i.useCallback(function (a) {
                b("bs_curry")._1(B, !0);
                return b("bs_curry")._1(m, function (a) {
                    return !0
                })
            }, [B]);
        v = b("getMWThreadAddOnPrimary")(v, t, n, a);
        n = b("useMWJewelThreadAddOnSecondary")(r, y, w, q);
        a = b("XCometMessengerControllerRouteBuilder").buildURL({thread_key: o});
        y = b("MWJewelOpenTabForCurrentThread.bs").useHook(f, d, c);
        w = i.useCallback(function (a) {
            return b("bs_curry")._1(l, o)
        }, [l, o]);
        q = b("useCometPreloader")("button", w, w);
        w = (c = b("bs_belt_Option")).getWithDefault(c.getWithDefault(c.map(p, function (a) {
            return b("bs_caml_option").nullable_to_opt(a.call_state)
        }), void 0), "NO_ONGOING_CALL");
        var E = w !== "NO_ONGOING_CALL";
        c = c.getWithDefault(t, g._("Facebook \u7528\u6237"));
        t = i.jsx(b("TetraText.react"), {
            color: "primary",
            type: r ? "headlineEmphasized4" : "body3",
            numberOfLines: 1,
            children: i.jsx(b("CometTextWithEntities.react"), {
                text: c.toString(),
                transforms: [b("CometEmoticonTransform")(), b("CometEmojiTransform")()]
            })
        });
        c = {
            body: i.jsx(b("MWThreadListLastMessage_DEPRECATED.bs").make, {
                hasOngoingCall: E,
                lastMessageTimestamp: x,
                snippet: u,
                isUnread: r
            }),
            headline: t,
            addOnSecondary: n,
            bodyLineLimit: 1,
            emphasized: r,
            headlineLineLimit: 1,
            level: 4,
            linkProps: {preventLocalNavigation: f, url: a},
            onHoverIn: q[0],
            onHoverOut: q[1],
            onPress: y,
            selected: e
        };
        x = v == null ? void 0 : b("bs_caml_option").some(v);
        x !== void 0 && (c.addOnPrimary = b("bs_caml_option").valFromOption(x));
        u = i.jsxs(i.Fragment, {
            children: [i.jsx("div", {
                children: i.jsx(b("TetraListCell.react"), c),
                ref: k
            }), i.jsx(b("RTWebInboxJoinOngoingCallIcon.react"), {
                hidden: !E,
                ongoingCallType: w
            }), i.jsx(b("CometListCellHoverButton.react"), {
                hidden: !z[0],
                onFocusChange: A.setMenuBtnFocused,
                onHoverChange: A.setMenuBtnHovered,
                onMenuStateChange: A.setMenuOpened,
                popoverResource: b("requireDeferred")("MWThreadListHoverButtonDropdownMenu_DEPRECATED.react"),
                popoverProps: {callData: p, fbid: o, isUnread: r, mutedUntil: s, onCloseJewel: d},
                popoverTriggerType: "lazy"
            })]
        });
        t = {children: u, className: (h || (h = b("stylex")))(j.listItemContainer), onMouseEnter: D, onMouseLeave: C};
        return i.jsx("div", (t["data-testid"] = "mwthreadlist-item", t))
    }

    d = a;
    f.RTWebInboxJoinOngoingCallIcon = c;
    f.styles = j;
    f.make = d
}), null);
__d("MWUIJewelMessageRequestsThread.bs", ["requireCond", "cr:1516272"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1516272").useHook;
    f.useHook = a
}), null);
__d("MWUIJewelSpamMessagesThread.bs", ["requireCond", "cr:1531918"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1531918").useHook;
    f.useHook = a
}), null);
__d("MWThreadList_DEPRECATED.bs", ["fbt", "bs_curry", "React", "bs_caml_obj", "stylex", "bs_belt_Option", "bs_caml_option", "MWMSMarkSeen.bs", "MWChatThreadId.bs", "TetraText.react", "FocusRegion.react", "MWThread_DEPRECATED.bs", "useSimpleImpression", "MWMSJewelGetThreadIDs.bs", "MWMSJewelHasReachedEnd.bs", "MessengerWebEntryPoint", "MWMSJewelLoadMoreThreads.bs", "CometHeroHoldTrigger.react", "MWThreadListItem_DEPRECATED.bs", "MWUIJewelSpamMessagesThread.bs", "MWMSJewelPreloadThreadFolder.bs", "MWThreadListGlimmer_DEPRECATED.bs", "MWUIJewelMessageRequestsThread.bs", "CometInfiniteScrollTrigger.react", "CometSettingsListDropdownLoadingState.react"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h, i = b("React"), j = {
        emptyInbox: {
            paddingTop: "discj3wi",
            paddingEnd: "hv4rvrfc",
            paddingBottom: "ihqw7lf3",
            paddingStart: "dati1w0a"
        }, noOverflow: {overflowX: "ni8dbmo4", overflowY: "stjgntxs"}
    };

    function a(a) {
        var c = a.folder, d = a.isLoading, e = a.setIsLoading, f = a.searchTypeahead, k = a.onOpenMessageRequests,
            l = a.onOpenSpamMessages, m = a.threadListMessagingEntrypoint, n = a.selectedThreadID, o = a.onClose,
            p = i.useRef(0);
        a = b("MWMSJewelGetThreadIDs.bs").useHook(c);
        var q = b("MWMSJewelLoadMoreThreads.bs").useHook(c), r = b("MWMSJewelHasReachedEnd.bs").useHook(c),
            s = b("MWMSJewelPreloadThreadFolder.bs").useHook(), t = b("MWMSMarkSeen.bs").useHook(void 0), u = a.length;
        i.useEffect(function () {
            u === 0 && r !== !0 && s(c)
        }, [c, u, r, s]);
        b("useSimpleImpression")(t);
        i.useEffect(function () {
            u > p.current && d && (p.current = u, b("bs_curry")._1(e, !1))
        }, [u, p, d, e]);
        t = f !== void 0 ? i.jsx(b("FocusRegion.react").FocusRegion, {children: b("bs_caml_option").valFromOption(f)}) : null;
        f = b("MWUIJewelMessageRequestsThread.bs").useHook(k);
        k = b("MWUIJewelSpamMessagesThread.bs").useHook(l);
        if (u === 0) {
            if (d && r === !1) return i.jsxs("div", {
                children: [i.jsx(b("CometHeroHoldTrigger.react"), {
                    description: "Jewel Query",
                    hold: !0
                }), i.jsx(b("CometSettingsListDropdownLoadingState.react").InnerGlimmer, {size: 56})],
                className: (h || (h = b("stylex")))(j.noOverflow)
            });
            l = i.jsxs(i.Fragment, {
                children: [t, f, i.jsx("div", {
                    children: i.jsx(b("TetraText.react"), {
                        align: "center",
                        type: "body2",
                        children: g._("\u65e0\u6d88\u606f\u3002")
                    }), className: (h || (h = b("stylex")))(j.emptyInbox)
                })]
            });
            l = {children: l, className: h(j.noOverflow)};
            return i.jsx("div", (l["data-testid"] = "MWJewelThreadListContainer", l))
        }
        l = i.jsxs(i.Fragment, {
            children: [t, f, a.map(function (a) {
                return i.jsx(b("MWThread_DEPRECATED.bs").make, {
                    id: a,
                    children: i.jsx(b("MWThreadListItem_DEPRECATED.bs").make, {
                        messagingEntrypoint: b("bs_belt_Option").getWithDefault(m, b("MessengerWebEntryPoint").JEWEL),
                        onClose: o,
                        selected: b("bs_belt_Option").mapWithDefault(n, !1, function (c) {
                            return b("bs_caml_obj").caml_equal(c, a)
                        }),
                        size: 56
                    })
                }, b("MWChatThreadId.bs").serializeFuture(a))
            }), k, i.jsxs(b("CometInfiniteScrollTrigger.react"), {
                hasMore: r === !1,
                isLoading: d,
                onLoadMore: function (a) {
                    q();
                    return b("bs_curry")._1(e, !0)
                },
                children: [i.jsx(b("MWThreadListGlimmer_DEPRECATED.bs").make, {}), i.jsx(b("MWThreadListGlimmer_DEPRECATED.bs").make, {})]
            })]
        });
        t = {children: l};
        return i.jsx("div", (t["data-testid"] = "MWJewelThreadListContainer", t))
    }

    c = a;
    f.styles = j;
    f.make = c
}), null);
__d("MWThreadList_DEPRECATED.re", ["MWThreadList_DEPRECATED.bs"], (function (a, b, c, d, e, f) {
    (function (a) {
        return null
    });
    a = b("MWThreadList_DEPRECATED.bs").make;
    f.make = a
}), null);
__d("MWMSJewelThreadList.react", ["Actor", "MessengerState.re", "MWThreadList_DEPRECATED.re", "React"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var c = a.folder, d = babelHelpers.objectWithoutPropertiesLoose(a, ["folder"]);
        a = b("Actor").useActor();
        a = a[0];
        var e = g.useState(!0), f = e[0], h = e[1];
        return g.jsx(b("MessengerState.re").jsComponent, {
            fbid: a, children: function (a) {
                return g.jsx(b("MWThreadList_DEPRECATED.re").make, babelHelpers["extends"]({}, d, {
                    folder: c,
                    isLoading: f,
                    setIsLoading: h
                }))
            }
        })
    }
}), null);
__d("MWMSJewelThreadlistFetcher.bs", ["MWMSJewelThreadlistFetcher"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a, c, d) {
        b("MWMSJewelThreadlistFetcher").preloadItems(a, c, d)
    }

    f.preloadItems = a
}), null);
__d("MWUIJewelThreadlistFetcher.bs", ["requireCond", "cr:1758812"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1758812").preloadItems;
    f.preloadItems = a
}), null);
__d("MWUIJewelThreadlistFetcher.re", ["bs_curry", "MWUIJewelThreadlistFetcher.bs"], (function (a, b, c, d, e, f) {
    a = function (a, c, d) {
        a = b("bs_curry")._3(b("MWUIJewelThreadlistFetcher.bs").preloadItems, a, c, d);
        return a
    };
    f.preloadItems = a
}), null);
__d("TetraMWJewelThreadAddOnSecondaryIcons", ["ix", "React", "TetraIcon.react", "fbicon"], (function (a, b, c, d, e, f, g) {
    "use strict";
    a = b("React");
    c = a.jsx(b("TetraIcon.react"), {color: "disabled", icon: b("fbicon")._(g("498145"), 16)});
    f.checkmark = c;
    d = a.jsx(b("TetraIcon.react"), {color: "disabled", icon: b("fbicon")._(g("569284"), 16)});
    f.bell = d
}), null);
__d("MWChatSearchTypeaheadViewList.react", ["fbt", "React", "TetraText.react", "orEmptyArray", "stylex"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function i(a) {
        var c = a.activeEntryKey, d = a.children, e = a.entries;
        a = a.title;
        return e != null && e.length > 0 ? h.jsxs("div", {
            className: "scb9dxdr qt6c0cv9 dflh9lhu jb3vyjys",
            children: [h.jsx("div", {
                className: "scb9dxdr sj5x9vvc dflh9lhu cxgpxx05",
                children: h.jsx(b("TetraText.react"), {type: "entityHeaderMeta1", children: a})
            }), e.map(function (a, b) {
                var e = c === a.getKey();
                return d(a, e, b)
            })]
        }) : null
    }

    function a(a) {
        var c = a.children, d = a.entries, e = a.highlightedEntry;
        a = babelHelpers.objectWithoutPropertiesLoose(a, ["children", "entries", "highlightedEntry"]);
        a = e != null ? e.getKey() : null;
        e = d.reduce(function (a, b) {
            var c = b.getRawData();
            c = c.resultType;
            a[c] != null ? a[c].push(b) : a[c] = [b];
            return a
        }, {});
        d = b("orEmptyArray")(e.user);
        return h.jsxs("ul", {
            "data-testid": void 0,
            role: "listbox",
            children: [h.jsx(i, {
                activeEntryKey: a, children: c, entries: d.filter(function (a) {
                    return a.getRawData().isContact
                }), title: g._("\u8054\u7cfb\u4eba")
            }), h.jsx(i, {
                activeEntryKey: a,
                children: c,
                entries: e.group,
                title: g._("\u7fa4\u804a")
            }), h.jsx(i, {
                activeEntryKey: a,
                children: c,
                entries: e.page,
                title: g._("\u5546\u5bb6")
            }), h.jsx(i, {
                activeEntryKey: a, children: c, entries: d.filter(function (a) {
                    return !a.getRawData().isContact
                }), title: g._("\u66f4\u591a\u7528\u6237")
            })]
        })
    }
}), null);
__d("MWJewelSearchTypeaheadViewList.react", ["CometScrollView.react", "MWChatSearchTypeaheadViewList.react", "React", "stylex"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React"), h = {scroll: {maxHeight: "nt8syekh"}};

    function a(a) {
        return g.jsx(b("CometScrollView.react"), {
            showsHorizontalScrollIndicator: !1,
            xstyle: h.scroll,
            children: g.jsx(b("MWChatSearchTypeaheadViewList.react"), babelHelpers["extends"]({}, a))
        })
    }
}), null);
__d("MWChatSubscribeToThreadRead", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function (a, b) {
        var c = a.subscribe("thread-read-changed", function (a, c) {
            a = 0;
            for (var d in c) c[d].mark_as_read && c[d].timestamp > a && (a = c[d].timestamp);
            a > 0 && b(null, a)
        });
        return function () {
            a.unsubscribe(c)
        }
    };
    f.subscribe = a
}), null);
__d("MWChatSubscribeToThreadReadCond", ["requireCond", "cr:1273135"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1273135") == null ? function () {
        return function () {
        }
    } : b("cr:1273135").subscribe;
    f.subscribe = a
}), null);
__d("MWUIMarkThreadAsUnread.bs", ["requireCond", "cr:1613538"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1613538").useHook;
    f.useHook = a
}), null);
__d("MWUIMarkThreadAsUnread.re", ["MWUIMarkThreadAsUnread.bs"], (function (a, b, c, d, e, f) {
    a = b("MWUIMarkThreadAsUnread.bs").useHook;
    f.useHook = a
}), null);
__d("MWChatIsMessageRequest.bs", [], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        if (a !== void 0) if (a === "pending") return !0; else return a === "other"; else return !1
    }

    f.fn = a
}), null);
__d("MWChatParticipantsHook.bs", ["bs_curry", "React", "bs_belt_Map", "bs_belt_Array", "bs_belt_Option", "bs_caml_option", "CurrentUser", "MWChatThreadId.bs", "MessengerState.bs", "MessengerParticipants.bs"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function h(a) {
        a = a.slice().sort(function (a, b) {
            if (a > b) return -1; else if (a === b) return 0; else return 1
        });
        return a.join(",")
    }

    function i(a) {
        if (a === void 0) return "";
        a = b("bs_caml_option").valFromOption(a);
        var c = h(a.participants);
        a = b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(a.thread_type), 0);
        return String(a) + c
    }

    function a(a) {
        var c = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        c = b("bs_belt_Map").get(c.threads, b("MWChatThreadId.bs").getMercuryID(a));
        var d = c !== void 0 ? b("bs_caml_option").valFromOption(c).participants : [],
            e = b("bs_belt_Array").keepMap(d, function (a) {
                a = b("MessengerParticipants.bs").getNow(a);
                if (!(a == null)) return b("bs_caml_option").some(a)
            });
        a = g.useState(function () {
            var a = {};
            e.length === d.length && e.forEach(function (b) {
                a[b.id] = b
            });
            return a
        });
        var f = a[1];
        c = i(c);
        g.useEffect(function () {
            var a = b("MessengerParticipants.bs").getMulti(d, function (a) {
                return b("bs_curry")._1(f, function (b) {
                    return a
                })
            });
            return function (c) {
                if (!(a == null)) return b("MessengerParticipants.bs").removeCallback(a)
            }
        }, [c, f]);
        return a[0]
    }

    f.createHashForParticipantIds = h;
    f.useParticipantsPayloadHash = i;
    f.useParticipants = a
}), null);
__d("MWMSBlockedIds.bs", ["bs_belt_Set", "MercuryIDs", "bs_belt_Option", "bs_caml_option", "CurrentUser", "MessengerState.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        return new Set(b("bs_belt_Set").toArray(a.blockedIds).map(function (a) {
            return b("bs_belt_Option").getExn(b("bs_caml_option").nullable_to_opt(b("MercuryIDs").getUserIDFromParticipantID(a)))
        }))
    }

    f.useHook = a
}), null);
__d("MWMSBlockStatus.bs", ["bs_curry", "bs_js_dict", "MercuryIDs", "bs_belt_Option", "bs_caml_option", "MWMSBlockedIds.bs", "MWThread_DEPRECATED.bs", "MWUILoadParticipants.bs", "recoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MWMSBlockedIds.bs").useHook(void 0);
        var c = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        if (typeof c === "string") return !1;
        var d = c.NAME;
        if (d === "User" || d === "Page") return a.has(c.VAL); else return !1
    }

    function c(a) {
        var c = b("bs_curry")._1(b("MWUILoadParticipants.bs").useMercuryParticipants, a),
            d = b("MWMSBlockedIds.bs").useHook(void 0);
        if (typeof a === "string" || a.NAME !== "Group") {
            b("recoverableViolation")("Trying to get block status for non group thread", "messenger_comet");
            return !1
        } else return b("bs_js_dict").entries(c[0]).some(function (a) {
            return d.has(b("bs_belt_Option").getExn(b("bs_caml_option").nullable_to_opt(b("MercuryIDs").getUserIDFromParticipantID(a[1].id))))
        })
    }

    function d(a) {
        var c = b("MWMSBlockedIds.bs").useHook(void 0);
        a = b("bs_curry")._1(b("MWUILoadParticipants.bs").useMercuryParticipants, a);
        return b("bs_js_dict").values(a[0]).filter(function (a) {
            return c.has(b("bs_belt_Option").getExn(b("bs_caml_option").nullable_to_opt(b("MercuryIDs").getUserIDFromParticipantID(a.id))))
        }).map(function (a) {
            return a.fbid
        })
    }

    f.useIsThreadBlocked = a;
    f.useIsBlockedUserInGroup = c;
    f.useBlockeesInThread = d
}), null);
__d("MWMSLoadParticipants.bs", ["bs_js_dict", "bs_belt_Map", "bs_belt_Option", "bs_caml_option", "CurrentUser", "MWChatThreadId.bs", "MessengerState.bs", "MWChatTitleHooks.bs", "MWChatParticipantsHook.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        var c = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        c = b("bs_belt_Map").get(c.threads, b("MWChatThreadId.bs").getMercuryID(a));
        a = b("MWChatParticipantsHook.bs").useParticipants(a);
        c = b("MWChatTitleHooks.bs").useNicknames(c);
        return [a, c[0], c[1]]
    }

    function a(a) {
        var c = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        c = b("bs_belt_Map").get(c.threads, b("MWChatThreadId.bs").getMercuryID(a));
        var d = c !== void 0 ? b("bs_caml_option").valFromOption(c).admins : {};
        c = g(a);
        var e = c[1];
        a = b("bs_js_dict").values(c[0]);
        var f = new Map();
        a.forEach(function (a) {
            var c = a.fbid, g = b("bs_js_dict").get(e, c);
            c = b("bs_js_dict").get(d, c);
            var h = a.fbid, i = b("bs_belt_Option").getWithDefault(g, a.short_name), j = a.name,
                k = b("bs_caml_option").nullable_to_opt(a.href), l = b("bs_caml_option").nullable_to_opt(a.image_src),
                m = a.is_friend;
            c = b("bs_belt_Option").isSome(c);
            h = {
                contactId: h,
                name: i,
                actualName: j,
                nickname: g,
                profileUrl: k,
                profilePictureUrl: l,
                isContact: m,
                isAdmin: c
            };
            f.set(a.fbid, h)
        });
        return f
    }

    f.useMercuryParticipants = g;
    f.useParticipants = a
}), null);
__d("MWMSMarkThreadAsRead.bs", ["React", "FBMqttChannel", "MWThread_DEPRECATED.bs", "recoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        var c = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        return g.useCallback(function (a) {
            a = JSON.stringify({threadId: c.VAL, mark: "read", state: !0});
            a !== void 0 ? b("FBMqttChannel").publish("/mark_thread", a) : b("recoverableViolation")("Failed to construct JSON to mark read", "messenger_comet")
        }, [c])
    }

    f.useHook = a
}), null);
__d("MWMSMarkThreadAsUnread.bs", ["React", "FBMqttChannel", "MWThread_DEPRECATED.bs", "recoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        var c = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        return g.useCallback(function (a) {
            a = JSON.stringify({threadId: c.VAL, mark: "read", state: !1});
            a !== void 0 ? b("FBMqttChannel").publish("/mark_thread", a) : b("recoverableViolation")("Failed to construct JSON to mark unread", "messenger_comet")
        }, [c])
    }

    f.useHook = a
}), null);
__d("MWMSThreadCapabilities.bs", ["gkx", "bs_belt_Map", "bs_belt_Option", "bs_caml_option", "CurrentUser", "MWChatThreadId.bs", "MessengerState.bs", "MWThread_DEPRECATED.bs", "MessagingThreadType", "MessengerParticipants.bs", "MercuryParticipantTypes"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        a = a.user_type;
        if (a == null) return !1; else return a === b("MercuryParticipantTypes").PARENT_APPROVED_USER
    }

    function a(a) {
        var c;
        a = b("MWThread_DEPRECATED.bs").useId(void 0);
        var d = b("CurrentUser").getID(), e = b("MessengerState.bs").useHook(d),
            f = (c = b("bs_belt_Option")).getWithDefault(c.flatMap(a, function (a) {
                return b("bs_belt_Option").map(b("bs_belt_Option").flatMap(b("bs_caml_option").nullable_to_opt(b("MessengerState.bs").getThreadMetaNow(d, b("MWChatThreadId.bs").getMercuryID(a))), function (a) {
                    return b("bs_caml_option").nullable_to_opt(a.thread_type)
                }), function (a) {
                    return a === b("MessagingThreadType").GROUP
                })
            }), !1);
        c = c.map(c.flatMap(a, function (a) {
            return b("bs_belt_Map").get(e.threads, b("MWChatThreadId.bs").getMercuryID(a))
        }), function (a) {
            return a.participants
        });
        a = c !== void 0 ? c.reduce(function (a, c) {
            c = b("MessengerParticipants.bs").getNow(c);
            if (c == null) return a; else if (a) return !0; else return g(c)
        }, !1) : !1;
        return {
            canSendGif: !a,
            canSendPayment: !a,
            canCreatePoll: f && !a,
            canDisplayActorTypeInThreadViewHeader: !1,
            canCustomizeEmoji: !0,
            canCustomizeNicknames: !0,
            canCustomizeTheme: !0,
            canCreateGroup: !0,
            canRtcVideoCall: !0,
            canRtcVoiceCall: !0,
            canSendFile: !0,
            canSendAudioClip: !1,
            canSendQuickCamAttachment: b("gkx")("1710025")
        }
    }

    function c(a) {
        return a.canSendGif
    }

    function d(a) {
        return a.canSendPayment
    }

    function e(a) {
        return a.canCreatePoll
    }

    function h(a) {
        return a.canDisplayActorTypeInThreadViewHeader
    }

    function i(a) {
        return a.canCustomizeEmoji
    }

    function j(a) {
        return a.canCustomizeTheme
    }

    function k(a) {
        return a.canCustomizeNicknames
    }

    function l(a) {
        return a.canCreateGroup
    }

    function m(a) {
        return a.canRtcVideoCall
    }

    function n(a) {
        return a.canRtcVoiceCall
    }

    function o(a) {
        return a.canSendFile
    }

    function p(a) {
        return a.canSendAudioClip
    }

    function q(a) {
        return a.canSendQuickCamAttachment
    }

    f.isParentApprovedUser = g;
    f.useCapabilities = a;
    f.canSendGif = c;
    f.canSendPayment = d;
    f.canCreatePoll = e;
    f.canDisplayActorTypeInThreadViewHeader = h;
    f.canCustomizeEmoji = i;
    f.canCustomizeTheme = j;
    f.canCustomizeNicknames = k;
    f.canCreateGroup = l;
    f.canRtcVideoCall = m;
    f.canRtcVoiceCall = n;
    f.canSendFile = o;
    f.canSendAudioClip = p;
    f.canSendQuickCamAttachment = q
}), null);
__d("MWMSThreadFolder.bs", ["React", "bs_belt_Map", "bs_belt_Option", "CurrentUser", "MWChatThreadId.bs", "MessengerState.bs", "MWThread_DEPRECATED.bs"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        var c = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        a = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        var d = a.threads;
        return g.useMemo(function () {
            var a = b("MWChatThreadId.bs").getMercuryID(c);
            a = b("bs_belt_Map").get(d, a);
            return b("bs_belt_Option").map(a, function (a) {
                return a.folder
            })
        }, [d, c])
    }

    f.useHook = a
}), null);
__d("MWMSThreadHasThread.bs", ["React", "bs_belt_Map", "bs_belt_Option", "CurrentUser", "MWChatThreadId.bs", "MessengerState.bs", "MWThread_DEPRECATED.bs"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        var c = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        a = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        var d = a.threads;
        return g.useMemo(function () {
            var a = b("MWChatThreadId.bs").getMercuryID(c);
            return b("bs_belt_Option").isSome(b("bs_belt_Map").get(d, a))
        }, [d, c])
    }

    f.useHook = a
}), null);
__d("MWMSThreadImage.bs", ["React", "bs_belt_Map", "bs_belt_Option", "bs_caml_option", "CurrentUser", "MWChatThreadId.bs", "MessengerState.bs", "MWThread_DEPRECATED.bs"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        var c = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        a = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        var d = a.threads;
        return g.useMemo(function () {
            var a = b("MWChatThreadId.bs").getMercuryID(c);
            a = b("bs_belt_Map").get(d, a);
            return b("bs_belt_Option").mapWithDefault(a, void 0, function (a) {
                if (a.square_image_src !== null) return b("bs_caml_option").nullable_to_opt(a.square_image_src); else return b("bs_caml_option").nullable_to_opt(a.image_src)
            })
        }, [d, c])
    }

    f.useHook = a
}), null);
__d("MWMSThreadProfileLink.bs", ["React", "bs_belt_Option", "bs_caml_option", "MWThread_DEPRECATED.bs", "MessagingThreadType", "MWMSCurrentThreadDetails.bs", "XCometVanityURLControllerRouteBuilder"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        a = b("MWMSCurrentThreadDetails.bs").useHook(void 0);
        var c = b("MWThread_DEPRECATED.bs").useFBID(void 0),
            d = b("bs_belt_Option").mapWithDefault(a == null ? void 0 : b("bs_caml_option").some(a), !1, function (a) {
                return b("bs_belt_Option").mapWithDefault(b("bs_caml_option").nullable_to_opt(a.thread_type), !1, function (a) {
                    return a === b("MessagingThreadType").ONE_TO_ONE
                })
            });
        return g.useMemo(function () {
            if (d) return b("XCometVanityURLControllerRouteBuilder").buildURL({vanity: c})
        }, [c, d])
    }

    f.useHook = a
}), null);
__d("MWThread_DEPRECATED.re", ["MWThread_DEPRECATED.bs"], (function (a, b, c, d, e, f) {
    c = (a = b("MWThread_DEPRECATED.bs")).useId;
    f.useId = c;
    d = a.useIdExn;
    f.useIdExn = d;
    e = a.toThreadKey;
    f.toThreadKey = e;
    b = a.useFBID;
    f.useFBID = b;
    c = a.key;
    f.key = c;
    (function (a) {
        return null
    });
    d = a.make;
    f.make = d
}), null);
__d("MWChatUpdateMuteSettingMutation", ["CometRelay", "CometRelayEnvironment", "createCommitMutation", "MWChatUpdateMuteSettingMutation.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    var g;
    a = b("createCommitMutation").createCommitMutation(b("CometRelayEnvironment"), {mutation: g !== void 0 ? g : g = b("MWChatUpdateMuteSettingMutation.graphql")});
    f.commit = a
}), null);
__d("MessengerMuteUtils.bs", ["fbt", "formatDate", "DateStrings"], (function (a, b, c, d, e, f, g) {
    "use strict";

    function a(a) {
        if (a <= 0) if (a === -1) return g._("\u6c38\u4e45\u5173\u95ed"); else return;
        if (a < 86401) return;
        var c = new Date(a * 1e3).getDay(), d = c === new Date().getDay(), e = c === new Date().getDay() + 1;
        if (e) return g._("\u5173\u95ed\uff0c\u76f4\u5230\u660e\u5929{time}", [g._param("time", b("formatDate")(a, "g:ia"))]); else if (d) return g._("\u5173\u95ed\uff0c\u76f4\u5230{time}", [g._param("time", b("formatDate")(a, "g:ia"))]); else return g._("\u5173\u95ed\uff0c\u76f4\u5230{weekday name}{time}", [g._param("time", b("formatDate")(a, "g:ia")), g._param("weekday name", b("DateStrings").getWeekdayName(c))])
    }

    function c(a, b) {
        if (a) if (b) return g._("\u53d6\u6d88\u514d\u6253\u6270"); else return g._("\u6d88\u606f\u514d\u6253\u6270"); else if (b) return g._("\u53d6\u6d88\u6d88\u606f\u514d\u6253\u6270"); else return g._("\u6d88\u606f\u514d\u6253\u6270")
    }

    f.mutedUntilLabel = a;
    f.muteActionLabel = c
}), null);
__d("MessengerMuteUtils.re", ["bs_curry", "MessengerMuteUtils.bs"], (function (a, b, c, d, e, f) {
    a = b("MessengerMuteUtils.bs").mutedUntilLabel;
    f.mutedUntilLabel = a;
    c = function (a, c) {
        a = b("bs_curry")._2(b("MessengerMuteUtils.bs").muteActionLabel, a, c);
        return a
    };
    f.muteActionLabel = c
}), null);
__d("MWChatTabPolicy.bs", ["bs_curry", "gkx", "MWCount.bs", "bs_caml_obj", "MercuryIDs", "bs_belt_Option", "bs_caml_option", "CurrentUser", "MercuryViewer", "killswitch", "requireDeferred", "MessengerMessage.bs", "bs_js_null_undefined", "MercuryActionType", "MercuryThreadInfo", "MessengerWebEvent", "MWChatSettingsQuery", "MessengerWebStgTypedLoggerLite.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a, c, d) {
        if (d === 0) return b("bs_curry")._1(a, c)
    }

    var h = b("requireDeferred")("MessengerState.bs");

    function a(a, c, d) {
        var e = function (a) {
            return b("MessengerWebStgTypedLoggerLite.bs").log({
                event_name: b("MessengerWebEvent").SUPPRESS_NEW_MESSAGE,
                extra_data: {reason: a}
            })
        }, f = function (a) {
            if (b("killswitch")("MESSENGER_WEB_STOP_AUTOMATIC_CHAT_TAB_RAISING") || !b("gkx")("1812191")) {
                b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                return b("bs_curry")._1(a, 1)
            } else return b("bs_curry")._1(a, 0)
        }, i = function (a) {
            if (b("MessengerMessage.bs").isOutbound(c)) {
                e("message_outgoing");
                b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                return b("bs_curry")._1(a, 1)
            } else return b("bs_curry")._1(a, 0)
        }, j = function (a) {
            b("MWChatSettingsQuery").areChatTabsTurnedOff(function (c) {
                if (!(c == null) && c) {
                    e("turn_off_chat_tab");
                    b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                    return b("bs_curry")._1(a, 1)
                } else return b("bs_curry")._1(a, 0)
            })
        }, k = function (d) {
            if (!b("MercuryThreadInfo").isMuted(a)) return b("bs_curry")._1(d, 0);
            if (b("MercuryThreadInfo").areMentionsMuted(a)) {
                e("mention_muted");
                b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                return b("bs_curry")._1(d, 1)
            }
            var f = b("bs_js_null_undefined").fromOption(b("bs_belt_Option").map(b("bs_caml_option").nullable_to_opt(b("MercuryIDs").getUserIDFromParticipantID(b("MercuryViewer").getID())), function (a) {
                return a
            })), g = c.profile_ranges;
            g = g == null ? [] : g;
            if (g.some(function (a) {
                return b("bs_caml_obj").caml_equal(a.id, f)
            })) return b("bs_curry")._1(d, 0); else {
                e("message_thread_muted");
                b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                return b("bs_curry")._1(d, 1)
            }
        }, l = function (a) {
            if (c.action_type !== b("MercuryActionType").USER_GENERATED_MESSAGE) {
                e("message_non_user_generated");
                b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                return b("bs_curry")._1(a, 1)
            } else return b("bs_curry")._1(a, 0)
        }, m = function (c) {
            if (a.folder === "inbox") return b("bs_curry")._1(c, 0); else {
                e("message_no_inbox");
                b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                return b("bs_curry")._1(c, 1)
            }
        }, n = function (c) {
            var d = b("CurrentUser").getID();
            h.onReady(function (f) {
                return b("bs_curry")._2(f.compute, d, function (f) {
                    return b("requireDeferred")("MercuryIgnoredBlockedParticipants.bs").onReady(function (g) {
                        if (g.isPresentInGroupThread(d, f.blocked_ids, a)) {
                            e("message_blocked_participants");
                            b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                            return b("bs_curry")._1(c, 1)
                        } else return b("bs_curry")._1(c, 0)
                    })
                })
            })
        }, o = function (c) {
            if (a.is_canonical && a.other_user_fbid === null) return b("requireDeferred")("BanzaiODS").onReady(function (a) {
                a.bumpEntityKey("messenger-chat-tab-policy", "message_canonical_contact");
                e("message_canonical_contact");
                b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                return b("bs_curry")._1(c, 1)
            }); else return b("bs_curry")._1(c, 0)
        };
        f = {hd: f, tl: {hd: i, tl: {hd: j, tl: {hd: k, tl: {hd: l, tl: {hd: m, tl: {hd: n, tl: {hd: o, tl: 0}}}}}}}};
        if (!f) return;
        i = function a(c) {
            if (!c) return function (a) {
                return g(function (a) {
                    return b("bs_curry")._1(d, void 0)
                }, function (a) {
                }, a)
            };
            var e = c.hd, f = a(c.tl);
            return function (a) {
                return g(e, f, a)
            }
        };
        return b("bs_curry")._1(f.hd, i(f.tl))
    }

    f.proceedIfAllow = g;
    f.$MessengerState$Deferred = h;
    f.shouldMessageBeAllowed = a
}), null);
__d("MercuryNotificationRenderer", ["fbt", "CurrentUser", "MercuryAssert", "MercuryIDs", "MercuryViewer", "MessengerParticipants.bs", "MessengerState.bs"], (function (a, b, c, d, e, f, g) {
    f.renderDocumentTitle = a;
    var h = "source:messenger_growth:event_upcoming_bump";

    function a(a, c) {
        b("MercuryAssert").isThreadID(a), b("MessengerState.bs").getThreadMeta(b("CurrentUser").getID(), a, function (d) {
            b("MessengerState.bs").getThreadMessagesRange(b("CurrentUser").getID(), a, 0, 1, function (e) {
                e = e.length && e[e.length - 1];
                var f = [];
                e.tags !== void 0 && (f = f.concat(e.tags));
                e.log_message_data && (e.log_message_data.message_type == "confirm_friend_request" || e.log_message_data.message_type == "work_invite_claimed") ? c(g._("New contact added")) : f.indexOf(h) !== -1 ? c(g._("\u4f60\u8fd1\u671f\u6709\u6d3b\u52a8\u54e6\u3002")) : e && e.author != b("MercuryViewer").getID() && e.author != null ? b("MessengerParticipants.bs").get(e.author, function (e) {
                    var f = e.short_name, h = d.custom_nickname;
                    if (h) {
                        e = b("MercuryIDs").getUserIDFromParticipantID(e.id);
                        h[e] && (f = h[e])
                    }
                    d.name ? c(g._("{senderName}\u5411{groupName}\u53d1\u9001\u4e86\u6d88\u606f", [g._param("senderName", f), g._param("groupName", d.name)])) : b("MercuryIDs").isGroupChat(a) ? c(g._("{name}\u5728\u7fa4\u804a\u4e2d\u53d1\u4e86\u6d88\u606f", [g._param("name", f)])) : c(g._("{name}\u7ed9\u4f60\u53d1\u4e86\u6d88\u606f\u3002", [g._param("name", f)]))
                }) : c(g._("\u65b0\u6d88\u606f"))
            })
        })
    }
}), null);
__d("MWChatChatPopperUpper.bs", ["FBID.bs", "bs_curry", "React", "MWCount.bs", "MercuryIDs", "CurrentUser", "MWChatConfig.bs", "MWChatTabPolicy.bs", "requireDeferred", "MessengerMessage.bs", "MWChatSettingsQuery", "recoverableViolation", "MercuryThreadInformer", "MWChatThreadPingCounter.bs", "MercuryNotificationRenderer", "MWChatSubscribeToThreadReadCond"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React"), h = b("requireDeferred")("Sound");

    function i(a) {
        var c = b("MessengerMessage.bs").isInbound(a);
        if (c) return h.onReady(function (c) {
            c.play([b("MWChatConfig.bs").soundNotifOggUrl, b("MWChatConfig.bs").soundNotifMp3Url], a.timestamp, !1)
        })
    }

    var j = b("requireDeferred")("MessengerState.bs");

    function k(a, c, d, e, f) {
        j.onReady(function (g) {
            b("bs_curry")._4(g.getThreadMeta, b("CurrentUser").getID(), c, function (g) {
                return b("MWChatTabPolicy.bs").shouldMessageBeAllowed(g, d, function (h) {
                    b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.lift, void 0);
                    b("bs_curry")._1(a, b("bs_curry")._1(f, g));
                    b("MercuryNotificationRenderer").renderDocumentTitle(c, function (a) {
                        return b("bs_curry")._2(e, a, d.timestamp)
                    });
                    if (b("MWChatThreadPingCounter.bs").getCount(c) < 3) {
                        b("MWChatThreadPingCounter.bs").incrementCount(c);
                        b("MWChatSettingsQuery").areChatTabsSoundsOn(function (a) {
                            if (!(a == null) && a) return i(d)
                        });
                        return
                    }
                })
            }, null)
        })
    }

    function l(a, c, d) {
        var e = b("MercuryThreadInformer").getForFBID(b("CurrentUser").getID()),
            f = e.subscribe("new-message", function (a, e) {
                b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.$$process, void 0);
                if (e == null) return;
                a = e.threadID;
                e = e.message;
                a = b("MercuryIDs").tokenize(a);
                var f = b("FBID.bs").ofStringExn(a.value), g = a.type;
                switch (g) {
                    case"thread":
                        return k(c, b("MercuryIDs").getThreadIDFromThreadFBID(f), e, d, function (a) {
                            return {NAME: "Group", VAL: f}
                        });
                    case"user":
                        return k(c, b("MercuryIDs").getThreadIDFromUserID(f), e, d, function (a) {
                            if (a.is_other_recipient_page) return {NAME: "Page", VAL: f}; else return {
                                NAME: "User",
                                VAL: f
                            }
                        });
                    default:
                        b("bs_curry")._1(b("MWCount.bs").Comet.NewMessage.reject, void 0);
                        b("recoverableViolation")("Unknown id type " + a.type, "messenger_comet");
                        return
                }
            }), g = b("MWChatSubscribeToThreadReadCond").subscribe(e, d);
        a.current = function (a) {
            e.unsubscribe(f), b("bs_curry")._1(g, void 0)
        }
    }

    function a(a, c) {
        var d = g.useRef(void 0);
        g.useEffect(function () {
            l(d, c, a);
            return function (a) {
                a = d.current;
                if (a !== void 0) return b("bs_curry")._1(a, void 0)
            }
        }, [a, c])
    }

    c = 3;
    f.pingsMaxCount = c;
    f.soundDeferred = h;
    f.playSound = i;
    f.$MessengerState$Deferred = j;
    f.dispatchOpenTab = k;
    f.sub = l;
    f.usePopperUpper = a
}), null);
__d("AvailableListState", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({OFFLINE: 0, IDLE: 1, ACTIVE: 2, MOBILE: 3});
    e.exports = a
}), null);
__d("PresenceStatusProviderSubscription", ["AvailableListState", "CometHomeContactsConfig", "CometRelay", "CurrentUser", "WebPixelRatio", "promiseDone", "recoverableViolation", "relay-runtime", "requireDeferred", "PresenceStatusProviderSubscription_PresenceStatusChatVisibilityQuery.graphql", "PresenceStatusProviderSubscription_ContactProfilesQuery.graphql", "PresenceStatusProviderSubscription_rankings.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h, i, j = b("requireDeferred")("FBMqttChannel"), k = b("requireDeferred")("MessengerMQTTPresence"),
        l = Object.assign.apply(Object, [{}].concat(Object.entries(b("AvailableListState")).map(function (a) {
            var b, c = a[0];
            a = a[1];
            return b = {}, b[String(a)] = c, b
        }))),
        m = g !== void 0 ? g : g = b("PresenceStatusProviderSubscription_PresenceStatusChatVisibilityQuery.graphql"),
        n = h !== void 0 ? h : h = b("PresenceStatusProviderSubscription_ContactProfilesQuery.graphql");

    function o(a) {
        var b = null, c = j.onReady(function (c) {
            c.subscribe("/legacy_web", function (b) {
                var c = JSON.parse(b);
                c.type === "privacy_changed" && a.commitUpdate(function (a) {
                    a = a.getRoot();
                    if (a == null) return;
                    a = a.getLinkedRecord("viewer");
                    if (a == null) return;
                    a.setValue(((a = c.data) == null ? void 0 : a.visibility) === !0, "chat_visibility")
                })
            }), b = function () {
                return c.unsubscribeAll("/legacy_web")
            }
        });
        return {
            remove: function () {
                c.remove(), b != null && b()
            }
        }
    }

    function p(a, b, c, d, e) {
        var f = null, g = k.onReady(function (g) {
            g.subscribe({
                reset: function () {
                    var f = b.current, g = {};
                    Object.keys(f).forEach(function (a) {
                        delete g[a]
                    });
                    b.current = g;
                    v(a, b.current, c, d, e)
                }, setMultiFromMQTT: function (f) {
                    var g = b.current, h = babelHelpers["extends"]({}, g);
                    f.forEach(function (a) {
                        h[a.u] = {last_active_time: a.l, status: a.p}
                    });
                    b.current = h;
                    v(a, b.current, c, d, e)
                }
            }), f = function () {
                return g.unsubscribe()
            }
        });
        return {
            remove: function () {
                g.remove(), f != null && f()
            }
        }
    }

    function q(a, c, d, e, f) {
        var g, h = b("relay-runtime").getRequest(m);
        h = b("relay-runtime").createOperationDescriptor(h, {});
        h = a.lookup(h.fragment);
        g = (g = h.data) == null ? void 0 : g.viewer;
        var i = typeof g === "object" ? g == null ? void 0 : g.chat_visibility : null;
        e.current = !!i;
        g = a.subscribe(h, function (b) {
            b = b.data;
            b = b == null ? void 0 : b.viewer;
            if (typeof b !== "object" || b == null) return;
            var g = b == null ? void 0 : b.presence_view_side_settings;
            if (typeof g === "object" && g != null && g.has_converted_to_view_side_settings === !0) return;
            g = b.chat_visibility;
            i != null && g !== i && v(a, c.current, d, e, f);
            i = g
        });
        return g
    }

    var r = {height: 36, scale: b("WebPixelRatio").get(), width: 36}, s = function (a, c, d) {
        if (c.size === 0) return;
        b("promiseDone")(b("CometRelay").fetchQuery(d, n, {
            ids: Array.from(c),
            scale: b("WebPixelRatio").get()
        }).toPromise().then(function (c) {
            var e = (c == null ? void 0 : (c = c.viewer) == null ? void 0 : c.chat_sidebar_contact_nodes) || [];
            d.commitUpdate(function (c) {
                e.forEach(function (d) {
                    var e, f = d == null ? void 0 : d.id;
                    if (f == null) return;
                    var g = c.get(f);
                    g == null && (g = c.create(f, "User"));
                    var h = d == null ? void 0 : d.name;
                    if (h == null) return b("recoverableViolation")("ContactProfilesQuery return empty name for user " + f, "messenger_comet");
                    g.setValue(h, "name");
                    h = g.getOrCreateLinkedRecord("profile_picture", "Image", r);
                    e = d == null ? void 0 : (e = d.profile_picture) == null ? void 0 : e.uri;
                    if (e == null) return b("recoverableViolation")("ContactProfilesQuery return empty profileUri for user " + f, "messenger_comet");
                    h.setValue(d == null ? void 0 : (e = d.profile_picture) == null ? void 0 : e.uri, "uri");
                    g.setLinkedRecord(h, "profile_picture", r);
                    a.push(g)
                }), u(c, a)
            })
        }))
    }, t = function (a, c, d, e) {
        a.commitUpdate(function (f) {
            if (d == null) return;
            var g = new Set(Object.keys(c).filter(function (a) {
                return b("CurrentUser").getID() !== a && ((a = c[a]) == null ? void 0 : a.status) === 2
            })), h = d.filter(function (a) {
                var b = a.buddy_id;
                a = a.status;
                return a == null || b == null ? !1 : ((b = e.current ? (b = c[b]) == null ? void 0 : b.status : 0) != null ? b : 0) === a
            }).map(function (a) {
                a = (a = a.user) == null ? void 0 : a.id;
                if (a == null) return null;
                g["delete"](a);
                return f.get(a)
            }).filter(Boolean);
            g.size > 0 && (g.forEach(function (a) {
                var b = f.get(a);
                if (b != null && b.getValue("name") != null) {
                    var c = b.getLinkedRecord("profile_picture", r);
                    c != null && c.getValue("uri") != null && (h.push(b), g["delete"](a))
                }
            }), s(h, g, a));
            u(f, h)
        })
    };

    function u(a, c) {
        a = a.getRoot().getLinkedRecord("viewer");
        if (a == null) {
            b("recoverableViolation")("Viewer should not be null here, something has gone horribly wrong", "messenger_web_product");
            return
        }
        a.setLinkedRecords(c, "chat_sidebar_contacts", {count: b("CometHomeContactsConfig").numContactsToFetch})
    }

    function v(a, b, c, d, e) {
        a.commitUpdate(function (a) {
            var e = a.getRoot();
            if (e == null) return;
            e = e.getLinkedRecord("viewer");
            if (e == null) return;
            var f = e.getLinkedRecord("presence_view_side_settings"),
                g = f != null && f.getValue("has_converted_to_view_side_settings") === !0 || e.getValue("chat_visibility") === !0;
            f = e.getLinkedRecord("actor");
            f != null && g ? f.setValue("ACTIVE", "availability") : f != null && f.setValue("OFFLINE", "availability");
            d.current = g;
            e = Object.keys(b);
            e.forEach(function (c) {
                var d, e;
                d = (d = b[c]) == null ? void 0 : d.status;
                e = (e = b[c]) == null ? void 0 : e.last_active_time;
                d = d == null ? null : l[String(d)];
                var f = a.get(c);
                f == null && d === "ACTIVE" && (f = a.create(c, "User"));
                f != null && (f.setValue(d === "ACTIVE" && g ? d : null, "availability"), !g ? f.setValue(null, "last_active_time") : e !== 0 && e != null && f.setValue(e, "last_active_time"))
            });
            c()
        }), t(a, b, e, d)
    }

    a = {
        init: function (a, c, d, e, f) {
            f = f != null ? f.map(function (a) {
                return b("CometRelay").readInlineData(i !== void 0 ? i : i = b("PresenceStatusProviderSubscription_rankings.graphql"), a)
            }) : null;
            var g = o(a), h = p(a, c, d, e, f), j = q(a, c, d, e, f);
            return {
                remove: function () {
                    h.remove(), g.remove(), j.dispose()
                }
            }
        }
    };
    e.exports = a
}), null);
__d("PresenceStatusProviderSubscriptionComponent.react", ["CometRelay", "PresenceStatusProviderSubscription", "React", "WebPixelRatio", "PresenceStatusProviderSubscriptionComponentQuery.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h = b("React"), i = function () {
        return b("CometRelay").useLazyLoadQuery(g !== void 0 ? g : g = b("PresenceStatusProviderSubscriptionComponentQuery.graphql"), {scale: b("WebPixelRatio").get()})
    };

    function a(a) {
        var c = i(),
            d = (c = c == null ? void 0 : (c = c.viewer) == null ? void 0 : c.chat_sidebar_contact_rankings) != null ? c : null,
            e = b("CometRelay").useRelayEnvironment();
        h.useEffect(function () {
            var c = b("PresenceStatusProviderSubscription").init(e, a.presenceMap, a.presenceInformer, a.chatVisibilityRef, d);
            return function () {
                c.remove()
            }
        }, [e, a.presenceInformer, a.presenceMap, d, a.chatVisibilityRef]);
        return null
    }
}), null);
__d("MWMSRTCDisplayStatus.bs", ["gkx", "bs_js_dict", "bs_caml_obj", "MercuryIDs", "CurrentUser", "MWMSBlockStatus.bs", "MWMSThreadFolder.bs", "MWMSThreadHasThread.bs", "MWThread_DEPRECATED.bs", "MWMSLoadParticipants.bs", "MWChatIsMessageRequest.bs", "MWMSThreadCapabilities.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        a = b("MWMSThreadFolder.bs").useHook(void 0);
        var c = b("MWMSBlockStatus.bs").useIsThreadBlocked(void 0), d = b("MWMSThreadHasThread.bs").useHook(void 0),
            e = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        a = b("MWChatIsMessageRequest.bs").fn(a);
        var f = b("MWMSLoadParticipants.bs").useMercuryParticipants(e);
        f = f[0];
        var g = typeof e === "string" || e.NAME !== "Group" ? !1 : b("bs_js_dict").entries(f).some(function (a) {
            return b("bs_caml_obj").caml_equal(a[1].id, b("MercuryIDs").getParticipantIDFromUserID(b("CurrentUser").getID()))
        }), h = b("MWMSThreadCapabilities.bs").useCapabilities(void 0);
        h = b("MWMSThreadCapabilities.bs").canRtcVideoCall(h) && b("MWMSThreadCapabilities.bs").canRtcVoiceCall(h);
        if (c === void 0) return 2;
        if (!h) return 2;
        if (d && typeof e !== "string") {
            h = e.NAME;
            if (h === "User" || h === "Group") {
                if (a) return 1
            } else if (h === "Page") if (b("gkx")("1710932")) return 0; else return 2
        }
        if (!d) return 2;
        if (typeof e === "string") return 2;
        a = e.NAME;
        if (a === "Group") if (g && Object.keys(f).length >= 2) return 0; else return 2; else if (a === "User" && !c && b("bs_caml_obj").caml_notequal(e.VAL, b("CurrentUser").getID())) return 0; else return 2
    }

    f.useHook = a
}), null);
__d("bs_js_null", ["bs_caml_option"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        return a === null
    }

    function c(a) {
        if (a !== null) return a;
        throw new Error("Js.Null.getExn")
    }

    function d(a, b) {
        if (a !== null) return b(a); else return null
    }

    function e(a, b) {
        if (a !== null) return b(a)
    }

    function g(a) {
        if (a !== void 0) return b("bs_caml_option").valFromOption(a); else return null
    }

    var h = g;
    f.test = a;
    f.getExn = c;
    f.bind = d;
    f.iter = e;
    f.fromOption = g;
    f.from_opt = h
}), null);
__d("ZenonCallsModelTypes", ["immutable", "$InternalEnum"], (function (a, b, c, d, e, f) {
    "use strict";
    c = (a = b("$InternalEnum")).Mirrored(["Disconnected", "Precontacting", "Contacting", "Ringing", "PendingApproval", "Approved", "FailedApproval", "Connecting", "Connected", "Reconnecting", "ProvisionalRinging"]);
    f.ZenonCallParticipantState = c;
    d = a.Mirrored(["Facebook", "Instagram", "Messenger", "Guest", "WhatsApp", "Workplace"]);
    f.ZenonCallParticipantType = d;
    e = a.Mirrored(["New", "Connecting", "PendingApproval", "Connected", "Terminating", "Terminated"]);
    f.ZenonCallState = e;
    b = a.Mirrored(["Unknown", "IgnoreCall", "HangupCall", "InAnotherCall", "CallEndAcceptAfterHangUp", "NoAnswerTimeout", "IncomingTimeout", "OtherInstanceHandled", "SignalingMessageFailed", "ConnectionDropped", "ClientInterrupted", "WebRTCError", "ClientError", "NoPermission", "OtherNotCapable", "NoUIShown", "VersionUnsupported", "CallerNotVisible", "CarrierBlocked", "OtherCarrierBlocked", "ClientEncryptionError", "InactiveTimeout", "UnexpectedEndOfCall", "MaxAllowedParticipantsReached", "MicrophonePermissionDenied", "CameraPermissionDenied", "SessionMigrated", "RingMuted", "TxAckTimeout"]);
    f.ZenonEndCallReason = b;
    c = a.Mirrored(["Unknown", "CallsBlocked"]);
    f.ZenonEndCallSubreason = c;
    d = a.Mirrored(["PendingPeerFeedback", "Declined", "Cancelled", "TimedOut", "Accepted", "InitiatedFromPeer"]);
    f.ZenonVideoEscalationStatus = d;
    e = a.Mirrored(["Started", "Completed", "Cancelled"]);
    f.ZenonGroupEscalationStatus = e
}), null);
__d("useZenonCallInvite", ["React"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var b = g.useState(function () {
            return a ? a.getCurrentInvite() : null
        }), c = b[0], d = b[1];
        g.useEffect(function () {
            if (a) {
                var b = a.addListener("callInvite", d);
                return function () {
                    b.remove()
                }
            } else d(null)
        }, [a]);
        return c
    }
}), null);
__d("ZenonPreCallHookBuilder", ["Promise", "CometRelay", "FBLogger", "React", "ZenonCallsModelTypes", "ZenonPreCallHookBuilderHelper", "gkx", "useZenonCallInvite"], (function (a, b, c, d, e, f) {
    "use strict";
    f.createAcceptCallCallbackHook = a;
    f.createCallInviteHook = c;
    f.createInviteAndStartCallCallbackHookFactory = d;
    f.createNoAnswerTimeoutHook = e;
    f.createStartCallCallbackHook = i;
    f.createCreateMeetupCallbackHook = j;
    f.createJoinMeetupCallbackHook = k;
    var g = b("React"), h = 6e4;

    function a(a) {
        return function () {
            var c = g.useContext(a);
            return g.useCallback(function (a) {
                a = a.trigger;
                return b("ZenonPreCallHookBuilderHelper").acceptCall(c, a)
            }, [c])
        }
    }

    function c(a) {
        return function () {
            var c = g.useContext(a);
            c = b("useZenonCallInvite")(c ? c.callInviteModel : null);
            g.useDebugValue(c);
            return c
        }
    }

    function d(a, c) {
        return function (d, e) {
            return function () {
                var f = g.useContext(a), h = d(), i = e(), j = c();
                return g.useCallback(function (a) {
                    if (!b("gkx")("1811099")) return;
                    var c = a.existingCall, d = a.thread;
                    if (!f || !f.incomingRingSDK.isCallSupported({
                        threadType: d.type,
                        type: "thread"
                    })) i(a); else switch (d.type) {
                        case 1:
                            j(babelHelpers["extends"]({}, a, {invitees: [d.id]}));
                            break;
                        case 2:
                            c === null || c.call_state === "NO_ONGOING_CALL" ? h(a, function (b) {
                                j(babelHelpers["extends"]({}, a, {invitees: b}))
                            }) : j(babelHelpers["extends"]({}, a, {invitees: []}));
                            break;
                        default:
                            b("FBLogger")("rtc_www").blameToPreviousFrame().mustfix("Attempted to start RTC call for unsupported thread type %d", d.type)
                    }
                }, [f, h, i, j])
            }
        }
    }

    function e(a, c) {
        return function () {
            var d = g.useContext(a), e = c();
            g.useEffect(function () {
                if (d && e && e.type === "ringing") {
                    var a = window.setTimeout(function () {
                        d.callInviteModel.decline(b("ZenonCallsModelTypes").ZenonEndCallReason.NoAnswerTimeout)
                    }, h);
                    return function () {
                        window.clearTimeout(a)
                    }
                }
            }, [d, e])
        }
    }

    function i(a) {
        return function () {
            var c = g.useContext(a);
            return g.useCallback(function (a) {
                var d = a.existingCall, e = a.extra, f = a.invitees, g = a.mediaType, h = a.thread;
                a = a.trigger;
                return !b("gkx")("1811099") ? b("Promise").resolve() : b("ZenonPreCallHookBuilderHelper").startCall(c, {
                    existingCall: d,
                    extra: e,
                    invitees: f,
                    mediaType: g,
                    thread: h,
                    trigger: a
                })
            }, [c])
        }
    }

    function j(a) {
        return function () {
            var c = g.useContext(a), d = b("CometRelay").useRelayEnvironment();
            return g.useCallback(function (a, e, f, g) {
                return !b("gkx")("1811099") ? b("Promise").resolve(null) : b("ZenonPreCallHookBuilderHelper").createMeetup(c, d, a, e, f, g)
            }, [c, d])
        }
    }

    function k(a) {
        return function () {
            var c = g.useContext(a);
            return g.useCallback(function (a, d, e, f, g) {
                return !b("gkx")("1811099") ? b("Promise").resolve() : b("ZenonPreCallHookBuilderHelper").joinMeetup(c, a, d, e, f, !1, g)
            }, [c])
        }
    }
}), null);
__d("RTWebPreCallHooks", ["RTWebPreCallContext", "ZenonPreCallHookBuilder"], (function (a, b, c, d, e, f) {
    "use strict";
    d = (a = b("ZenonPreCallHookBuilder")).createAcceptCallCallbackHook(c = b("RTWebPreCallContext"));
    f.useAcceptCallCallback = d;
    e = a.createCallInviteHook(c);
    f.useCallInvite = e;
    b = a.createNoAnswerTimeoutHook(c, e);
    f.useNoAnswerTimeout = b;
    d = a.createStartCallCallbackHook(c);
    f.useStartCallCallback = d;
    e = a.createCreateMeetupCallbackHook(c);
    f.useCreateMeetupCallback = e;
    b = a.createJoinMeetupCallbackHook(c);
    f.useJoinMeetupCallback = b;
    e = a.createInviteAndStartCallCallbackHookFactory(c, d);
    f.createInviteAndStartCallCallbackHook = e
}), null);
__d("useRTWebOutgoingGroupCallDialog", ["JSResource", "React", "useCometLazyDialog"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React"),
        h = b("JSResource")("RTWebCometOutgoingGroupCallContent.react").__setRef("useRTWebOutgoingGroupCallDialog");

    function a() {
        var a = g.useRef(!1), c = b("useCometLazyDialog")(h), d = c[0];
        return g.useCallback(function (b) {
            var c = b.onCall, e = b.threadID;
            b = b.viewer;
            a.current || (a.current = !0, d({onCall: c, threadID: e, viewer: b}, function () {
                a.current = !1
            }))
        }, [a, d])
    }
}), null);
__d("useRTWebOutgoingUnsupportedBrowserDialog", ["JSResource", "React", "useCometLazyDialog"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React"),
        h = b("JSResource")("RTWebCometOutgoingUnsupportedDialog.react").__setRef("useRTWebOutgoingUnsupportedBrowserDialog");

    function a() {
        var a = b("useCometLazyDialog")(h), c = a[0];
        return g.useCallback(function (a) {
            c(a)
        }, [c])
    }
}), null);
__d("useRTWebCometStartCallCallback", ["Actor", "React", "RTWebPreCallHooks", "useRTWebOutgoingGroupCallDialog", "useRTWebOutgoingUnsupportedBrowserDialog"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");
    d = b("RTWebPreCallHooks").createInviteAndStartCallCallbackHook(a, c);
    e.exports = d;

    function a() {
        var a = b("Actor").useActor(), c = a[0], d = b("useRTWebOutgoingGroupCallDialog")();
        return g.useCallback(function (a, b) {
            a = a.thread.id;
            d({onCall: b, threadID: a, viewer: c})
        }, [d, c])
    }

    function c() {
        var a = b("Actor").useActor(), c = a[0], d = b("useRTWebOutgoingUnsupportedBrowserDialog")();
        return g.useCallback(function (a) {
            a = a.thread;
            var b = a.id;
            a = a.type;
            d({actorID: c, threadID: b, threadType: a})
        }, [c, d])
    }
}), null);
__d("MWMSStartPhoneCall.bs", ["React", "bs_js_null", "bs_belt_Map", "bs_caml_option", "CurrentUser", "MWChatThreadId.bs", "MessengerState.bs", "MWThread_DEPRECATED.bs", "MessagingThreadType", "useRTWebCometStartCallCallback"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        a = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        var c = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        c = b("bs_belt_Map").get(c.threads, b("MWChatThreadId.bs").getMercuryID(a));
        var d = c !== void 0 ? b("bs_js_null").fromOption(b("bs_caml_option").nullable_to_opt(b("bs_caml_option").valFromOption(c).rtc_call_data)) : null,
            e = b("useRTWebCometStartCallCallback")(),
            f = typeof a === "string" || a.NAME !== "Group" ? b("MessagingThreadType").ONE_TO_ONE : b("MessagingThreadType").GROUP;
        c = g.useCallback(function (a) {
            return function (b, c) {
                return e({existingCall: d, mediaType: a ? "video" : "audio", thread: {id: b, type: f}, trigger: c})
            }
        }, [e, f, d]);
        var h;
        if (d !== null) {
            a = d.call_state;
            if (a == null) h = void 0; else switch (a) {
                case"AUDIO_GROUP_CALL":
                    h = 1;
                    break;
                case"VIDEO_GROUP_CALL":
                    h = 0;
                    break;
                default:
                    h = void 0
            }
        } else h = void 0;
        return [c, h]
    }

    f.useMakeRTCCall = a
}), null);
__d("MWUIRTCDisplayStatus.bs", ["requireCond", "cr:1621386"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1621386").useHook;
    f.useHook = a
}), null);
__d("MWUIRTCDisplayStatus.re", ["MWUIRTCDisplayStatus.bs"], (function (a, b, c, d, e, f) {
    var g = {0: "RtcEnabled", 1: "RtcDisabled", 2: "RtcHidden"};
    a = function () {
        var a = b("MWUIRTCDisplayStatus.bs").useHook();
        return g[a]
    };
    f.useHook = a
}), null);
__d("MWUIStartPhoneCall.bs", ["requireCond", "cr:1461099"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1461099").useMakeRTCCall;
    f.useMakeRTCCall = a
}), null);
__d("MWUIStartPhoneCall.re", ["bs_curry", "MWUIStartPhoneCall.bs"], (function (a, b, c, d, e, f) {
    var g = {0: "OngoingVideoCall", 1: "OngoingAudioCall"};
    a = function () {
        var a = b("MWUIStartPhoneCall.bs").useMakeRTCCall();
        return [function (c, d, e) {
            c = b("bs_curry")._3(a[0], c, d, e);
            return c
        }, a[1] == null ? a[1] : g[a[1]]]
    };
    f.useMakeRTCCall = a
}), null);
__d("MWChatSearchResultType", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = Object.freeze({GROUP: "group", PAGE: "page", USER: "user"});
    e.exports = a
}), null);
__d("MWChatSearchTypeaheadDataEntry", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a, b) {
            this.$1 = a, this.$3 = b
        }

        var b = a.prototype;
        b.getServerSearchResult = function () {
            return this.$3
        };
        b.getKey = function () {
            return this.$1.id
        };
        b.getLabel = function () {
            return this.$1.displayName
        };
        b.getMetaData = function () {
            return this.$2
        };
        b.getRawData = function () {
            return this.$1
        };
        b.getResultType = function () {
            return this.$1.resultType
        };
        b.getIsInstagramAccount = function () {
            var a;
            return (a = this.$1.isInstagramAccount) != null ? a : !1
        };
        b.getIsInteropIneligible = function () {
            return this.$1.isInteropEligible === !1
        };
        b.setMetaData = function (a) {
            this.$2 = a;
            return this
        };
        a.fromSearchResult = function (b) {
            var c;
            return new a({
                displayName: b.displayName,
                id: b.id,
                imageUrl: b.imageUrl,
                isContact: b.isContact,
                isInstagramAccount: b.isInstagramAccount,
                isInteropEligible: b.isInteropEligible,
                resultType: b.resultType,
                secondaryImageUrl: (c = b.secondaryImageUrl) != null ? c : "",
                section: b.section,
                subtext: b.subtext,
                verificationStatus: b.isVerified ? "BLUE_VERIFIED" : "NOT_VERIFIED"
            }, b.serverSearchResult)
        };
        return a
    }();
    e.exports = a
}), null);
__d("MWChatFriendsDataSource.query", ["CometRelay", "MWChatSearchResultType", "MWChatSearchTypeaheadDataEntry", "compactArray", "MWChatFriendsDataSourceQuery.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    f.normalize = a;
    var g;
    c = g !== void 0 ? g : g = b("MWChatFriendsDataSourceQuery.graphql");
    f.query = c;

    function a(a, c) {
        c = a == null ? void 0 : (c = a.viewer) == null ? void 0 : (c = c.messenger_contacts) == null ? void 0 : c.nodes;
        if (!c) return [];
        var d = a == null ? void 0 : (a = a.viewer) == null ? void 0 : (a = a.actor) == null ? void 0 : a.id;
        return b("compactArray")(c.map(function (a) {
            var c;
            c = a == null ? void 0 : (c = a.messaging_profile) == null ? void 0 : c.id;
            var e = a == null ? void 0 : a.name;
            a = a == null ? void 0 : (a = a.profile_picture) == null ? void 0 : a.uri;
            return c === d || c == null || e == null || a == null ? null : new (b("MWChatSearchTypeaheadDataEntry"))({
                displayName: e,
                id: c,
                imageUrl: a,
                isContact: !0,
                resultType: b("MWChatSearchResultType").USER,
                secondaryImageUrl: "",
                subtext: ""
            })
        }))
    }
}), null);
__d("mwChatFriendsQueryVariablesBuilder", [], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;

    function a(a) {
        return function (b) {
            return babelHelpers["extends"]({}, a)
        }
    }
}), null);
__d("MWChatFriendsDataSource", ["CometSearchTypeaheadBaseDataProvider", "CometSearchTypeaheadBaseDataProviderQueryVariablesBuilder", "CometSearchTypeaheadBaseNetworkCacheDataSource", "CometSearchTypeaheadBaseQueryDataCacheProvider", "MWChatFriendsDataSource.query", "WebPixelRatio", "gkx", "mwChatFriendsQueryVariablesBuilder"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a) {
            var c = a.limit;
            a = a.relayEnvironment;
            c = new (b("CometSearchTypeaheadBaseDataProviderQueryVariablesBuilder"))(b("mwChatFriendsQueryVariablesBuilder")).setDefaultVariables({
                limit: c,
                order_by: b("gkx")("1217157") ? ["PHAT"] : b("gkx")("1697145") ? ["CFPHAT"] : ["communication"],
                scale: b("WebPixelRatio").get()
            });
            var d = new (b("CometSearchTypeaheadBaseQueryDataCacheProvider"))();
            c = new (b("CometSearchTypeaheadBaseDataProvider"))({
                query: b("MWChatFriendsDataSource.query").query,
                queryVariablesBuilder: c,
                relayEnvironment: a
            });
            this.$1 = new (b("CometSearchTypeaheadBaseNetworkCacheDataSource"))(c, d, {normalizeFunc: b("MWChatFriendsDataSource.query").normalize})
        }

        var c = a.prototype;
        c.fetchCache = function (a) {
            return this.$1.fetchCache(a)
        };
        c.fetchNetwork = function (a) {
            return this.$1.fetchNetwork(a)
        };
        return a
    }();
    e.exports = a
}), null);
__d("mwChatSearchDataUtils", [], (function (a, b, c, d, e, f) {
    "use strict";
    f.interleaveArrays = a;

    function a(a, b, c, d, e) {
        d === void 0 && (d = 1);
        e === void 0 && (e = 1);
        var f = 0, g = 0, h = [], i = !0, j = 0;
        while (f < a.length || g < b.length) {
            if (f + g >= c) break;
            f === a.length && (i = !1, j = 0);
            g === b.length && (i = !0, j = 0);
            f < a.length && i ? (h.push(a[f]), f += 1, j += 1, j === d && (j = 0, i = !1)) : g < b.length && !i && (h.push(b[g]), g += 1, j += 1, j === e && (j = 0, i = !0))
        }
        return h
    }
}), null);
__d("MWChatKeywordDataSource.query", ["fbt", "CometRelay", "MWChatSearchResultType", "MWChatSearchTypeaheadDataEntry", "intlList", "mwChatSearchDataUtils", "MWChatKeywordDataSourceQuery.graphql", "MWChatKeywordDataSourceQuery_thread.graphql"], (function (a, b, c, d, e, f, g) {
    "use strict";
    f.normalize = a;
    f.blendResultTypes = l;
    f.getTitleSubtextAndImageFromGroup = m;
    f.getParticipantTextFromGroup = n;
    var h, i, j = 2, k = g._("Facebook \u7528\u6237");
    c = h !== void 0 ? h : h = b("MWChatKeywordDataSourceQuery.graphql");
    f.query = c;
    i !== void 0 ? i : i = b("MWChatKeywordDataSourceQuery_thread.graphql");

    function a(a, c) {
        a = a == null ? void 0 : (a = a.messenger_search) == null ? void 0 : (a = a.result_modules) == null ? void 0 : a.nodes;
        if (!a) return [];
        var d = [], e = [], f = [], g = [];
        a = ((a = (a = a[0].search_results) == null ? void 0 : a.edges) != null ? a : []).filter(Boolean);
        a.map(function (a) {
            var h = a.node, i = a.subtext;
            if (!h) return;
            switch (h.__typename) {
                case"User":
                case"InstagramMessagingUser":
                    var j, k;
                    j = new (b("MWChatSearchTypeaheadDataEntry"))({
                        displayName: (j = a.display_name) != null ? j : "",
                        id: (j = h.id) != null ? j : "",
                        imageUrl: (j = (j = h.profile_picture) == null ? void 0 : j.uri) != null ? j : "",
                        isContact: (j = h == null ? void 0 : (j = h.messenger_contact) == null ? void 0 : j.is_on_viewer_contact_list) != null ? j : !1,
                        isInstagramAccount: h.__typename === "InstagramMessagingUser",
                        resultType: b("MWChatSearchResultType").USER,
                        secondaryImageUrl: "",
                        subtext: (j = i) != null ? j : ""
                    }).setMetaData({query: c.query});
                    Boolean((k = h.messenger_contact) == null ? void 0 : k.is_on_viewer_contact_list) ? d.push(j) : e.push(j);
                    break;
                case"MessengerViewerGroupThread":
                    k = m(a);
                    if (!k) return null;
                    g.push(new (b("MWChatSearchTypeaheadDataEntry"))({
                        displayName: k.title,
                        id: (j = (j = h.thread_key) == null ? void 0 : j.thread_fbid) != null ? j : "",
                        imageUrl: k.image_uri,
                        isContact: !1,
                        resultType: b("MWChatSearchResultType").GROUP,
                        secondaryImageUrl: (j = k.secondary_image_uri) != null ? j : "",
                        subtext: k.subtext
                    }).setMetaData({query: c.query}));
                    break;
                case"Page":
                    f.push(new (b("MWChatSearchTypeaheadDataEntry"))({
                        displayName: (j = a.display_name) != null ? j : "",
                        id: (k = h.page_id) != null ? k : "",
                        imageUrl: (j = (a = h.page_profile_picture) == null ? void 0 : a.uri) != null ? j : "",
                        isContact: !1,
                        resultType: b("MWChatSearchResultType").PAGE,
                        secondaryImageUrl: "",
                        subtext: (k = i) != null ? k : "",
                        verificationStatus: h.verification_status
                    }).setMetaData({query: c.query}));
                    break;
                default:
                    break
            }
        });
        return l(d, e, g, f)
    }

    function l(a, c, d, e) {
        a = b("mwChatSearchDataUtils").interleaveArrays(a, d, a.length + d.length, 3, 1);
        return [].concat(a, e, c)
    }

    function m(a) {
        var b, c = a.node;
        if (!c || c.__typename !== "MessengerViewerGroupThread") return;
        b = (b = (b = c.image) == null ? void 0 : b.uri) != null ? b : "";
        var d = null, e = c.other_participants;
        if (b.length === 0) {
            var f = e ? e.nodes.slice(0, 2) : [];
            f = f.map(function (a) {
                return (a = (a = a.messaging_actor) == null ? void 0 : (a = a.profile_picture) == null ? void 0 : a.uri) != null ? a : ""
            });
            f.length > 1 && (d = f[1]);
            b = f[0]
        }
        f = (f = c.thread_name) != null ? f : null;
        var g = 0;
        e = e ? e.nodes.map(function (a) {
            a = (a = a.messaging_actor) == null ? void 0 : a.name;
            if (a == null || a === "") {
                g++;
                return null
            }
            return a
        }).filter(Boolean).concat(Array(g).fill(k)) : [];
        c = (c = c.other_participants) == null ? void 0 : c.count;
        e = n(e, c, 2);
        e = e != null ? e.toString() : "";
        if (f == null) {
            f = (c = e) != null ? c : "";
            a = (c = a.subtext) != null ? c : ""
        } else a = e;
        return {image_uri: b, secondary_image_uri: d, subtext: a, title: f}
    }

    function n(a, c, d) {
        d === void 0 && (d = j);
        if (!a) return null;
        if (c == null) return null;
        a = a.slice(0, d);
        d = c - a.length;
        return d < 1 ? b("intlList")(a) : g._("{name of the first n participants}\u548c\u5176\u4ed6{number of other participants}\u4f4d\u6210\u5458", [g._param("name of the first n participants", b("intlList")(a, b("intlList").CONJUNCTIONS.NONE)), g._param("number of other participants", d)])
    }
}), null);
__d("mwChatKeywordQueryVariablesBuilder", [], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;

    function a(a) {
        return function (b) {
            b = b.query;
            return babelHelpers["extends"]({}, a, {query: b})
        }
    }
}), null);
__d("MWChatKeywordDataSource", ["CometSearchTypeaheadBaseDataProvider", "CometSearchTypeaheadBaseDataProviderQueryVariablesBuilder", "CometSearchTypeaheadBaseNetworkCacheDataSource", "CometSearchTypeaheadBaseQueryDataCacheProvider", "MWChatKeywordDataSource.query", "WebPixelRatio", "mwChatKeywordQueryVariablesBuilder"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a) {
            var c = a.limit, d = a.relayEnvironment;
            a = a.supportedTypes;
            a = new (b("CometSearchTypeaheadBaseDataProviderQueryVariablesBuilder"))(b("mwChatKeywordQueryVariablesBuilder")).setDefaultVariables({
                query: "",
                scale: b("WebPixelRatio").get(),
                supportedTypes: a != null ? a.map(function (a) {
                    return {limit: c, result_type: a}
                }) : [{limit: c, result_type: "USER"}, {limit: c, result_type: "GROUP"}, {
                    limit: c,
                    result_type: "PAGE"
                }]
            });
            var e = new (b("CometSearchTypeaheadBaseQueryDataCacheProvider"))();
            a = new (b("CometSearchTypeaheadBaseDataProvider"))({
                query: b("MWChatKeywordDataSource.query").query,
                queryVariablesBuilder: a,
                relayEnvironment: d
            });
            this.$1 = new (b("CometSearchTypeaheadBaseNetworkCacheDataSource"))(a, e, {normalizeFunc: b("MWChatKeywordDataSource.query").normalize})
        }

        var c = a.prototype;
        c.fetchCache = function (a) {
            return this.$1.fetchCache(a)
        };
        c.fetchNetwork = function (a) {
            return this.$1.fetchNetwork(a)
        };
        return a
    }();
    e.exports = a
}), null);
__d("mwChatSearchPayloadDecoratorRemoveDuplicates", ["MWChatSearchResultType"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;

    function a(a) {
        return function (c) {
            var d = c.entries;
            c = babelHelpers.objectWithoutPropertiesLoose(c, ["entries"]);
            var e = a.some(function (a) {
                return a.getResultType() === b("MWChatSearchResultType").USER
            }), f = a.some(function (a) {
                return !a.getIsInstagramAccount()
            });
            d = d.filter(function (c) {
                if (e && c.getResultType() !== b("MWChatSearchResultType").USER) return !1;
                return f && c.getIsInstagramAccount() ? !1 : !a.some(function (a) {
                    return a.getKey() === c.getKey()
                })
            });
            return babelHelpers["extends"]({entries: d}, c)
        }
    }
}), null);
__d("mwChatSearchPayloadDecoratorRemoveExcluded", [], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;

    function a(a) {
        return function (b) {
            var c = b.entries;
            b = babelHelpers.objectWithoutPropertiesLoose(b, ["entries"]);
            return babelHelpers["extends"]({
                entries: c.filter(function (b) {
                    return !a.includes(b.getKey())
                })
            }, b)
        }
    }
}), null);
__d("MWChatSearchTypeaheadDataSource", ["Promise", "MWChatFriendsDataSource", "MWChatKeywordDataSource", "mwChatSearchPayloadDecoratorRemoveDuplicates", "mwChatSearchPayloadDecoratorRemoveExcluded"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a) {
            var c = a.excludedIDs;
            c = c === void 0 ? [] : c;
            var d = a.limit, e = a.relayEnvironment, f = a.suggestionsLimit, g = a.supportedTypes;
            a = a.includeRecommendations;
            a = a === void 0 ? !0 : a;
            this.$3 = [];
            this.$4 = [];
            this.$1 = new (b("MWChatFriendsDataSource"))({limit: (f = f) != null ? f : d, relayEnvironment: e});
            this.$2 = new (b("MWChatKeywordDataSource"))({limit: d, relayEnvironment: e, supportedTypes: g});
            this.$4 = c;
            this.$5 = a
        }

        var c = a.prototype;
        c.fetchCache = function (a) {
            var c = a.query, d = b("mwChatSearchPayloadDecoratorRemoveDuplicates")(this.$3),
                e = b("mwChatSearchPayloadDecoratorRemoveExcluded")(this.$4);
            if (c.length > 0) {
                c = this.$2.fetchCache(a);
                return e(d(c))
            }
            c = this.$1.fetchCache(a);
            return e(d(c))
        };
        c.fetchNetwork = function (a) {
            var c = a.query, d = b("mwChatSearchPayloadDecoratorRemoveDuplicates")(this.$3),
                e = b("mwChatSearchPayloadDecoratorRemoveExcluded")(this.$4);
            return c.length === 0 ? this.$5 === !1 ? b("Promise").resolve({
                entries: [],
                params: a
            }) : this.$1.fetchNetwork(a).then(function (a) {
                return e(d(a))
            }) : this.$2.fetchNetwork(a).then(function (a) {
                return e(d(a))
            })
        };
        c.setTokens = function (a) {
            this.$3 = a
        };
        return a
    }();
    e.exports = a
}), null);
__d("MWUIThreadProfileLink.bs", ["requireCond", "cr:1610375"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("cr:1610375").useHook;
    f.useHook = a
}), null);
__d("MWUIThreadProfileLink.re", ["MWUIThreadProfileLink.bs"], (function (a, b, c, d, e, f) {
    a = b("MWUIThreadProfileLink.bs").useHook;
    f.useHook = a
}), null);
__d("FBRTCConsoleLogger", ["nullthrows", "requireCond", "Log", "LogHistory", "cr:1112656"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = null;
    a = function () {
        a.getInstance = function () {
            g || (g = new a());
            return g
        };

        function a() {
            this.$1 = b("LogHistory").getInstance(a.MODULE_NAME)
        }

        var c = a.prototype;
        c.getLogHistory = function () {
            return this.$1
        };
        c.log = function (a, b, c, d, e) {
            d === void 0 && (d = "Console");
            e === void 0 && (e = "DEBUG");
            e = " " + JSON.stringify({conferenceName: b, callID: c});
            this.$1.log(d || "Console", a + e);
            return this
        };
        return a
    }();
    e.exports = a;
    a.MODULE_NAME = "webrtc"
}), null);
__d("RtcWebUserActionsDebugFalcoEvent", ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("getFalcoLogPolicy_DO_NOT_USE")("1744337");
    c = b("FalcoLoggerInternal").create("rtc_web_user_actions_debug", a);
    e.exports = c
}), null);
__d("RtcWebUserActionsFalcoEvent", ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("getFalcoLogPolicy_DO_NOT_USE")("1744338");
    c = b("FalcoLoggerInternal").create("rtc_web_user_actions", a);
    e.exports = c
}), null);
__d("ZenonSDESKeyDetector", [], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = /inline:\s*[0-9a-zA-z+/]{40}(\b|\s|$)/;

    function a(a) {
        return g.test(JSON.stringify(a))
    }
}), null);
__d("ZenonUserActionLogger", ["FBRTCConsoleLogger", "RtcWebUserActionsDebugFalcoEvent", "RtcWebUserActionsFalcoEvent", "ZenonSDESKeyDetector", "gkx", "unrecoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = new Map(),
        h = window.location.hostname.search("facebook") !== -1 ? "facebook" : window.location.hostname.search("messenger") !== -1 ? "messenger_dot_com" : null,
        i = h === "facebook" && b("gkx")("708253") ? "Comet" : h === "messenger_dot_com" && b("gkx")("1105821") ? "ZenonOnMercury" : void 0,
        j = {
            logCheckpoint: function (a) {
                j.logEvent(babelHelpers["extends"]({}, a, {event: "checkpoint"}))
            }, logClick: function (a) {
                j.logEvent(babelHelpers["extends"]({}, a, {event: "tap"}))
            }, logError: function (a) {
                j.logEvent(babelHelpers["extends"]({}, a, {event: "error"}))
            }, logEvent: function (a) {
                var c;
                if (b("ZenonSDESKeyDetector")(a)) throw b("unrecoverableViolation")("ZenonUserActionLogger event contains SDES crypto key! This log entry must be removed!", "rtc_www");
                c = babelHelpers["extends"]({}, a, {codebase_version: i, page: (c = a.page) != null ? c : h});
                var d = babelHelpers["extends"]({}, c, {client_time: Date.now().toString()});
                b("RtcWebUserActionsDebugFalcoEvent").log(function () {
                    return d
                });
                b("RtcWebUserActionsFalcoEvent").log(function () {
                    return d
                });
                b("FBRTCConsoleLogger").getInstance().getLogHistory().log((a = a.event) != null ? a : "null", JSON.stringify(c))
            }, logImpression: function (a) {
                j.logEvent(babelHelpers["extends"]({}, a, {event: "impression"}))
            }, logPreCallClick: function (a) {
                j.logEvent(babelHelpers["extends"]({}, a, {event: "tap"}))
            }, logPreCallImpression: function (a) {
                j.logEvent(babelHelpers["extends"]({}, a, {event: "impression"}))
            }, startTimer: function (a) {
                var b = Date.now();
                g = g.set(a, b);
                j.logCheckpoint({checkpoint: a + "_timerStart"})
            }, stopTimer: function (a) {
                var b = a.checkpointName === void 0 ? a.timerName : a.checkpointName, c = a.event || {},
                    d = function (a) {
                        var b = g.get(a);
                        if (b != null) {
                            g["delete"](a);
                            return parseInt(Date.now() - b, 10)
                        }
                        return null
                    };
                d = d(a.timerName);
                j.logCheckpoint(babelHelpers["extends"]({}, c, {
                    checkpoint: b + "_timerEnd",
                    event_time_elapsed: d == null ? void 0 : d.toString()
                }));
                return parseInt(d, 10)
            }
        };
    e.exports = j
}), null);
__d("RTWebJoinOngoingCallMenuItem.react", ["ix", "fbt", "CometMenuItem.react", "React", "ZenonUserActionLogger", "fbicon", "useRTWebCometStartCallCallback"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React");

    function a(a) {
        var c = a.callData, d = a.fbid, e = b("useRTWebCometStartCallCallback")();
        a = (a = c == null ? void 0 : c.call_state) != null ? a : "NO_ONGOING_CALL";
        var f, j, k;
        switch (a) {
            case"AUDIO_GROUP_CALL":
                f = b("fbicon")._(g("558161"), 20);
                j = h._("\u52a0\u5165\u901a\u8bdd");
                k = "audio";
                break;
            case"VIDEO_GROUP_CALL":
                f = b("fbicon")._(g("493174"), 20);
                j = h._("\u52a0\u5165\u89c6\u9891\u804a\u5929");
                k = "video";
                break;
            default:
                return null
        }
        return i.jsx(b("CometMenuItem.react"), {
            icon: f, onClick: function () {
                c != null && (b("ZenonUserActionLogger").logClick({
                    component: "join_call_button",
                    surface: "messages_jewel"
                }), e({
                    existingCall: c,
                    mediaType: k,
                    thread: {id: d, type: 2},
                    trigger: "multiway_thread_list_join_call_button"
                }))
            }, primaryText: j
        })
    }
}), null);
__d("MWThreadListHoverButtonDropdownMenu_DEPRECATED.react", ["ix", "fbt", "CometLazyDialogTrigger.react", "CometMenu.react", "CometMenuItem.react", "JSResource", "MessengerMuteUtils.re", "MWChatThreadId.re", "MWChatUpdateMuteSettingMutation", "MWThread_DEPRECATED.re", "MWUIMarkThreadAsRead.re", "MWUIMarkThreadAsUnread.re", "MWUIThreadProfileLink.re", "React", "RTWebJoinOngoingCallMenuItem.react", "XCometMessengerControllerRouteBuilder", "fbicon", "gkx", "requireCond", "cr:1621796", "cr:1617152"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React"),
        j = b("JSResource")("MWChatMuteConversationDialogForJSResource.react").__setRef("MWThreadListHoverButtonDropdownMenu_DEPRECATED.react");

    function a(a) {
        var c = a.callData, d = a.fbid, e = a.isUnread, f = a.mutedUntil;
        a = a.onCloseJewel;
        var k = b("MWThread_DEPRECATED.re").useIdExn();
        k = b("MWChatThreadId.re").isPage(k);
        var l = b("MWUIMarkThreadAsRead.re").useHook(), m = b("MWUIMarkThreadAsUnread.re").useHook(),
            n = b("MWUIThreadProfileLink.re").useHook(), o = b("MessengerMuteUtils.re").muteActionLabel(k, f !== 0);
        k = b("cr:1617152").useMakeRTCCall();
        var p = k[0];
        k = k[1];
        var q = b("cr:1621796").useHook();
        q = q === "RtcEnabled" && k === void 0;
        return i.jsxs(b("CometMenu.react"), {
            withArrow: !0,
            children: [i.jsx(b("CometMenuItem.react"), {
                icon: b("fbicon")._(g("477820"), 20), onClick: function () {
                    e ? l() : m()
                }, primaryText: e ? h._("\u6807\u8bb0\u4e3a\u5df2\u8bfb") : h._("\u6807\u8bb0\u4e3a\u672a\u8bfb")
            }), i.jsx(b("CometMenuItem.react"), {
                href: b("XCometMessengerControllerRouteBuilder").buildURL({thread_key: d}),
                icon: b("fbicon")._(g("505620"), 20),
                onClick: a,
                primaryText: h._("\u5728 Messenger \u4e2d\u6253\u5f00")
            }), typeof n === "string" ? i.jsx(b("CometMenuItem.react"), {
                href: n,
                icon: b("fbicon")._(g("558623"), 20),
                onClick: a,
                primaryText: h._("\u67e5\u770b\u4e2a\u4eba\u4e3b\u9875")
            }) : null, f !== 0 ? i.jsx(b("CometMenuItem.react"), {
                icon: b("fbicon")._(g("652791"), 20),
                onClick: function () {
                    b("MWChatUpdateMuteSettingMutation").commit({mute_duration: 0, thread_fbid: d})
                },
                primaryText: o,
                secondaryText: b("MessengerMuteUtils.re").mutedUntilLabel(f)
            }) : i.jsx(b("CometLazyDialogTrigger.react"), {
                dialogProps: {
                    onUpdateMute: function (a) {
                        b("MWChatUpdateMuteSettingMutation").commit({mute_duration: a, thread_fbid: d})
                    }, title: o
                }, dialogResource: j, children: function (a, c) {
                    return i.jsx(b("CometMenuItem.react"), {
                        icon: b("fbicon")._(g("532356"), 20),
                        onClick: a,
                        primaryText: o,
                        ref: c
                    })
                }
            }), b("gkx")("1611062") && q ? i.jsx(b("CometMenuItem.react"), {
                icon: b("fbicon")._(g("558164"), 20),
                onClick: function () {
                    return p(!1, d, "comet_chat_tab_call_option")
                },
                primaryText: h._("\u8bed\u97f3\u901a\u8bdd")
            }) : null, b("gkx")("1611062") && q ? i.jsx(b("CometMenuItem.react"), {
                icon: b("fbicon")._(g("493176"), 20),
                onClick: function () {
                    return p(!0, d, "comet_chat_tab_call_option")
                },
                primaryText: h._("\u89c6\u9891\u804a\u5929")
            }) : null, i.jsx(b("RTWebJoinOngoingCallMenuItem.react"), {callData: c, fbid: d})]
        })
    }
}), null);
__d("MWMSThreadName.bs", ["React", "bs_belt_Map", "bs_belt_Option", "CurrentUser", "MWChatThreadId.bs", "MessengerState.bs", "MWThread_DEPRECATED.bs"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("React");

    function a(a) {
        var c = b("MWThread_DEPRECATED.bs").useIdExn(void 0);
        a = b("MessengerState.bs").useHook(b("CurrentUser").getID());
        var d = a.threads;
        return g.useMemo(function () {
            var a = b("MWChatThreadId.bs").getMercuryID(c);
            a = b("bs_belt_Map").get(d, a);
            return b("bs_belt_Option").map(a, function (a) {
                return a.name
            })
        }, [d, c])
    }

    f.useHook = a
}), null);
__d("RTWebCallBlockedSettingSubscription", ["CometRelay", "RelayRTIGraphQLSubscriptionTopicProvider", "relay-runtime", "RTWebCallBlockedSettingSubscription_CallBlockSettingSubscription.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    f.subscribe = a;
    var g, h = g !== void 0 ? g : g = b("RTWebCallBlockedSettingSubscription_CallBlockSettingSubscription.graphql");
    c = b("relay-runtime").getRequest(h);
    d = c.params.id;
    d != null && b("RelayRTIGraphQLSubscriptionTopicProvider").registerProvider(d, function (a) {
        a = (a = a.input) == null ? void 0 : a.viewer_id;
        return a == null ? null : "gqls/rtweb_call_blocked_setting_subscribe/viewer_id_" + a
    });

    function a(a, c, d) {
        return b("CometRelay").requestSubscription(a, {onNext: d, subscription: h, variables: {input: c}})
    }
}), null);
__d("RTWebCallBlockSettingHooks", ["CometRelay", "DateConsts", "React", "RTWebCallBlockedSettingSubscription", "RTWebPreCallContext", "ServerTime", "promiseDone", "RTWebCallBlockSettingHooksQuery.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    f.useCallBlockSettingValue = m;
    f.useHasCallsBlocked = n;
    f.useCallBlockSetting = a;
    var g, h = b("React"), i = 6e4, j = g !== void 0 ? g : g = b("RTWebCallBlockSettingHooksQuery.graphql"),
        k = function (a, b) {
            return function (c) {
                c = c.getRoot();
                if (c == null) return;
                c = c.getLinkedRecord("viewer");
                if (c == null) return;
                c.setValue(b, a)
            }
        };

    function l(a) {
        return a === -1 ? a : (a || 0) * b("DateConsts").MS_PER_SEC
    }

    function m() {
        var a = b("CometRelay").useRelayEnvironment(), c = b("CometRelay").getActorID(a), d = h.useState(-1), e = d[0],
            f = d[1];
        h.useEffect(function () {
            var d = b("CometRelay").fetchQuery(a, j, {}).toPromise().then(function (a) {
                a = a == null ? void 0 : a.viewer;
                a != null && f(l(a.call_blocked_until))
            });
            b("promiseDone")(d);
            var e = b("RTWebCallBlockedSettingSubscription").subscribe(a, {viewer_id: c}, function (b) {
                b = b == null ? void 0 : b.rtweb_call_blocked_setting_subscribe;
                b != null && (f(l(b.call_blocked_until)), a.commitUpdate(k("call_blocked_until", b.call_blocked_until)))
            });
            return function () {
                e.dispose()
            }
        }, [a, c]);
        return e
    }

    function n() {
        var a = m(), c = b("ServerTime").getMillis(), d = a < 0, e = a > c;
        c = h.useState(d || e);
        var f = c[0], g = c[1];
        (d || e) !== f && g(d || e);
        h.useEffect(function () {
            if (e) {
                var c = window.setInterval(function () {
                    a <= b("ServerTime").getMillis() && (g(!1), window.clearInterval(c))
                }, i);
                return function () {
                    window.clearInterval(c)
                }
            }
        }, [a, e]);
        return f
    }

    function a() {
        var a = h.useContext(b("RTWebPreCallContext")), c = n();
        h.useEffect(function () {
            a != null && a.callInviteModel.startListening({callsBlocked: c})
        }, [a, c])
    }
}), null);
__d("ZenonUsers", ["Promise", "MercuryIDs", "MessengerParticipants.re", "immutable", "isStringNullOrEmpty", "memoizeWithArgs", "nullthrows", "$InternalEnum"], (function (a, b, c, d, e, f) {
    "use strict";
    f.getMulti = a;
    f.getMultiEager = c;
    f.get = d;
    f.getNow = e;
    var g = b("$InternalEnum").Mirrored(["Guest", "User", "Page"]);
    f.ZenonUserType = g;
    var h = b("memoizeWithArgs")(function (a) {
        var b = a.big_image_src, c = a.fbid, d = a.href, e = a.image_src, f = a.name, g = a.short_name, h = a.user_type;
        a = a.vanity;
        return Object.freeze({
            id: c,
            name: f,
            profilePictureUrl: (f = (c = b) != null ? c : e) != null ? f : null,
            profileUrl: (b = d) != null ? b : null,
            shortName: g,
            userType: i(h),
            vanity: (c = a) != null ? c : null
        })
    }, function (a) {
        a = a.fbid;
        return a
    }), i = function (a) {
        a = a;
        if (a === "guest") return g.Guest; else if (a === "page") return g.Page;
        return g.User
    }, j = function (a) {
        var c = a[0];
        a = a[1];
        return [b("nullthrows")(b("MercuryIDs").getUserIDFromParticipantID(c)), h(a)]
    };

    function a(a) {
        return new (b("Promise"))(function (c) {
            var d = a.map(function (a) {
                return b("MercuryIDs").getParticipantIDFromUserID(a)
            });
            b("MessengerParticipants.re").getMulti(d, function (a) {
                c(b("immutable").Map(a).mapEntries(j))
            })
        })
    }

    function c(a) {
        a = a.map(function (a) {
            return b("MercuryIDs").getParticipantIDFromUserID(a)
        });
        var c = null, d = null;
        a = b("MessengerParticipants.re").getMultiEagerMap(a, function (a) {
            a = a.mapEntries(j);
            c ? c(a) : d = a
        });
        var e = a[0];
        a = a[1];
        return [e.mapEntries(j), a != null ? new (b("Promise"))(function (a) {
            d ? a(d) : c = a
        }) : null]
    }

    function d(a) {
        return b("isStringNullOrEmpty")(a) ? b("Promise").resolve(null) : new (b("Promise"))(function (c) {
            b("MessengerParticipants.re").get(b("MercuryIDs").getParticipantIDFromUserID(a), function (a) {
                c(a ? h(a) : null)
            })
        })
    }

    function e(a) {
        if (b("isStringNullOrEmpty")(a)) return null;
        a = b("MessengerParticipants.re").getNow(b("MercuryIDs").getParticipantIDFromUserID(a));
        return a ? h(a) : null
    }
}), null);
__d("ZenonUsersHooks", ["React", "ZenonUsers", "immutable", "promiseDone"], (function (a, b, c, d, e, f) {
    "use strict";
    f.useZenonUsers = a;
    f.useZenonUser = c;
    var g = b("React");

    function a(a) {
        var c = g.useRef(a), d = g.useState(b("immutable").Map()), e = d[0], f = d[1];
        g.useEffect(function () {
            return function () {
                c.current = null
            }
        }, []);
        g.useLayoutEffect(function () {
            c.current = a;
            var d = b("ZenonUsers").getMultiEager(a), e = d[0];
            d = d[1];
            f(e);
            d && b("promiseDone")(d, function (a) {
                var b = c.current;
                b && f(function (c) {
                    return c.withMutations(function (c) {
                        b.forEach(function (b) {
                            var d = a.get(b);
                            d && c.set(b, d)
                        })
                    })
                })
            })
        }, [a]);
        g.useDebugValue(e);
        return e
    }

    function c(a) {
        var c = g.useRef(a), d = g.useState(function () {
            return b("ZenonUsers").getNow(a)
        }), e = d[0], f = d[1];
        g.useEffect(function () {
            c.current = a
        }, [a]);
        g.useEffect(function () {
            return function () {
                c.current = null
            }
        }, []);
        g.useLayoutEffect(function () {
            var d = b("ZenonUsers").getNow(a);
            if (d !== e) {
                f(d);
                return
            }
            b("promiseDone")(b("ZenonUsers").get(a), function (b) {
                c.current === a && f(b)
            })
        }, [a, e]);
        g.useDebugValue(e);
        return e
    }
}), null);
__d("showDesktopNotification", ["MessengerDesktopNotificationPermissions", "MessengerDesktopNotifications", "ZenonUserActionLogger"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = 8e3;

    function a() {
        return function (a) {
            var c = a.acceptCall, d = a.body, e = a.icon;
            a = a.title;
            var f = {
                body: d, closeTime: g, icon: e, onClick: function () {
                    b("ZenonUserActionLogger").logClick({
                        component: "browser_notification",
                        surface: "desktop_notification"
                    }), window.focus(), c({trigger: "desktop_notification"})
                }, onShow: function () {
                    b("ZenonUserActionLogger").logImpression({
                        component: "browser_notification",
                        surface: "desktop_notification"
                    })
                }, title: a
            };
            if (b("MessengerDesktopNotifications").checkPermission() === b("MessengerDesktopNotificationPermissions").DEFAULT) {
                b("MessengerDesktopNotifications").requestPermission(function () {
                    b("MessengerDesktopNotifications").showNotification(f)
                });
                return
            }
            b("MessengerDesktopNotifications").showNotification(f)
        }
    }
}), null);
__d("RTWebCallInviteDesktopNotification.react", ["fbt", "React", "RTWebPreCallHooks", "ZenonUsersHooks", "showDesktopNotification", "usePrevious"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function a(a) {
        a = a.invite;
        return (a == null ? void 0 : a.type) === "ringing" ? h.jsx(i, {invite: a}) : null
    }

    function i(a) {
        a = a.invite;
        var c = b("showDesktopNotification")(), d = b("usePrevious")(a.ringID),
            e = b("RTWebPreCallHooks").useAcceptCallCallback(), f = b("ZenonUsersHooks").useZenonUser(a.inviterID),
            g = a.requestingVideo, h = a.participants.length > 1;
        if (d !== a.ringID && f != null) {
            c({acceptCall: e, body: k(f.shortName), icon: (d = f.profilePictureUrl) != null ? d : null, title: j(g, h)})
        }
        return null
    }

    function j(a, b) {
        if (!b) return a ? g._("\u89c6\u9891\u6765\u7535") : g._("\u6765\u7535"); else return a ? g._("\u89c6\u9891\u7fa4\u804a\u6765\u7535") : g._("\u7fa4\u804a\u6765\u7535")
    }

    function k(a) {
        return g._("{caller name}\u6765\u7535\uff0c\u70b9\u51fb\u63a5\u542c\u3002", [g._param("caller name", a)])
    }
}), null);
__d("StartVideoChatLinkCall", ["FBLogger", "RelayFBDefaultEnvironment", "RTWebPreCallContextSingleton", "URI", "XGroupCallController", "randomZenonCallID", "randomZenonNonce", "gkx"], (function (a, b, c, d, e, f) {
    "use strict";
    f.startCall = a;
    var g, h = b("RTWebPreCallContextSingleton").create({relayEnvironment: b("RelayFBDefaultEnvironment")});

    function a(a, c, d, e) {
        c === void 0 && (c = !1);
        d === void 0 && (d = !1);
        e === void 0 && (e = "");
        if (!b("gkx")("1811099")) return null;
        if (h) {
            var f = h.callWindowController, g = h.incomingRingSDK, j = "", k = a, l = b("randomZenonCallID")();
            if (c) {
                c = i(a);
                j = b("randomZenonNonce")();
                c != null && (k = b("XGroupCallController").getURIBuilder().setString("call_context", "LINK:" + c).setString("funnel_session_id", e).setString("nonce", j).setBool("auto_join", d ? !0 : null).getURI().getQualifiedURI().toString())
            }
            a = f.initCall({
                context: {callID: l, intent: "start or join", invitees: [], existingCall: null},
                mediaType: "video",
                nonce: j,
                joinContext: {linkUrl: k, type: "link"}
            });
            c = a[0];
            a[1];
            g.startCallIntent(j, {
                callID: l,
                callTrigger: "meetup_join",
                isPopupBlocked: c === null,
                isVideo: !0,
                peerID: "MW_PEER_ID",
                protocol: "mw"
            });
            return c
        } else return null
    }

    function i(a) {
        var c = new (g || (g = b("URI")))(a), d = c.getDomain();
        c = c.stripTrailingSlash().getPath();
        if (d === "msngr.com") return c.substring(1);
        if (d === "m.me" && /^\/v(id)?\//.test(c)) return c.replace(/^\/v(id)?\//, "");
        b("FBLogger")("rtc_www").mustfix('Could not extract LinkHash from Video Chat Link. Link = "%s"', a);
        return null
    }
}), null);
__d("ZenonDialogContext", ["React", "emptyFunction"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("React");
    d = a.createContext({hide: c = b("emptyFunction"), hideAll: c, hideByID: c, show: c, showByID: c, toggle: c});
    f = d;
    e.exports = f
}), null);
__d("useRTWebIncomingCallDialog", ["ix", "fbt", "React", "RTWebPreCallContext", "ZenonDialogContext", "ZenonUserActionLogger", "deferredLoadComponent", "emptyFunction", "fbicon", "requireCond", "requireDeferred", "cr:1568669"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React"), j = b("deferredLoadComponent")(b("requireDeferred")("RTWebCometIncomingCallContent.react")),
        k = b("deferredLoadComponent")(b("requireDeferred")("RTWebCometCallDialog.react")),
        l = b("cr:1568669") ? b("cr:1568669").addPoint : b("emptyFunction");

    function a() {
        var a = i.useContext(b("ZenonDialogContext")), c = a.hide, d = a.show;
        a = i.useContext(b("RTWebPreCallContext"));
        var e = a ? a.callInviteModel : null;
        return i.useCallback(function (a) {
            var f, n = a.inviterID, o = a.isVideoCall, p = a.onAccept, q = a.onDecline;
            a = a.participantIDs;
            b("ZenonUserActionLogger").logImpression({surface: "incoming_call_dialog"});
            l(64225282, "render_dialog", {instanceKey: +(e == null ? void 0 : (f = e.getCurrentInvite()) == null ? void 0 : f.ringID)});
            d(i.jsx(k, {
                acceptIcon: o ? b("fbicon")._(g("493173"), 16) : b("fbicon")._(g("558160"), 16),
                acceptLabel: h._("\u63a5\u542c"),
                acceptTestid: "answerCallButton",
                body: i.jsx(j, {inviterID: n, isVideoCall: o, participantIDs: a}),
                declineLabel: h._("\u62d2\u63a5"),
                onClose: function (a) {
                    b("ZenonUserActionLogger").logClick({
                        component: a ? "accept_button" : "decline_button",
                        surface: "incoming_call_dialog"
                    });
                    c();
                    return a ? p() : q()
                },
                title: m(o, a.length > 1)
            }));
            return {dismiss: c}
        }, [e, c, d])
    }

    function m(a, b) {
        if (!b) return a ? h._("\u89c6\u9891\u6765\u7535") : h._("\u6765\u7535"); else return a ? h._("\u89c6\u9891\u7fa4\u804a\u6765\u7535") : h._("\u7fa4\u804a\u6765\u7535")
    }
}), null);
__d("useRTWebIncomingUnsupportedBrowserDialog", ["fbt", "CometCardedDialogLoadingState.react", "CometPlaceholder.react", "JSResource", "MessengerDesktopUpsellLinks", "React", "TetraContextRowExternalLink.react", "ZenonDialogContext", "ZenonUserActionLogger", "lazyLoadComponent", "requireCond", "cr:1453546"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React"),
        i = b("lazyLoadComponent")(b("JSResource")("RTWebCometUnsupportedBrowserContent.react").__setRef("useRTWebIncomingUnsupportedBrowserDialog")),
        j = b("lazyLoadComponent")(b("JSResource")("RTWebCometCallDialog.react").__setRef("useRTWebIncomingUnsupportedBrowserDialog"));

    function k(a) {
        var c = a.hide, d = a.inviterID, e = a.isVideoCall, f = a.onClose, k = a.participantIDs;
        a = a.threadType;
        var n = b("MessengerDesktopUpsellLinks").getDesktopUpsellLinkIfEnabledForCalls();
        return n != null && b("cr:1453546") != null ? h.jsx(b("cr:1453546"), {
            desktopAppstoreLink: n,
            hideDialog: function () {
                c(), f()
            },
            incomingUserID: d,
            isGroupCall: a === 2,
            onUnmount: function (a) {
                a || (c(), f())
            }
        }) : h.jsx(b("CometPlaceholder.react"), {
            fallback: h.jsx(b("CometCardedDialogLoadingState.react"), {}),
            children: h.jsx(j, {
                acceptLabel: g._("\u5b89\u88c5 Chrome"),
                body: h.jsx(i, {
                    inviterID: d,
                    mainMessage: g._("\u5b89\u88c5 Chrome \u6765\u52a0\u5165\u5bf9\u8bdd"),
                    participantIDs: k,
                    subMessage: g._("\u4f60\u7684\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u6b64\u529f\u80fd\u3002\u5b89\u88c5{link to install chrome}\u5373\u53ef\u4f7f\u7528\u6240\u6709 Messenger \u8bed\u97f3\u901a\u8bdd\u548c\u89c6\u9891\u804a\u5929\u529f\u80fd\u3002", [g._param("link to install chrome", l(f))])
                }),
                declineLabel: g._("\u4ee5\u540e\u518d\u8bf4"),
                onClose: function (a) {
                    a && window.open("https://www.google.com/chrome/index.html", "_blank"), c(), f()
                },
                title: g._("{Unsupported feature name}\u65e0\u6cd5\u63a5\u901a", [g._param("Unsupported feature name", m(a, e))])
            })
        })
    }

    function a() {
        var a = h.useContext(b("ZenonDialogContext")), c = a.hide, d = a.show;
        return h.useCallback(function (a) {
            b("ZenonUserActionLogger").logImpression({surface: "unsupported_browser_dialog"});
            a = babelHelpers["extends"]({}, a, {hide: c});
            d(h.jsx(k, babelHelpers["extends"]({}, a)));
            return {dismiss: c}
        }, [c, d])
    }

    function l(a) {
        return h.jsx(b("TetraContextRowExternalLink.react"), {
            linkProps: {
                target: "_blank",
                url: "https://www.google.com/chrome/index.html"
            }, onPress: a, children: g._("Chrome")
        })
    }

    function m(a, b) {
        if (a === 2) return b ? "Group Video Chat" : "Group Audio Call"; else return b ? "Video Chat" : "Audio Call"
    }
}), null);
__d("useRTWebMissedCallDialog", ["ix", "fbt", "CometCardedDialogLoadingState.react", "CometPlaceholder.react", "JSResource", "React", "ZenonDialogContext", "ZenonUserActionLogger", "lazyLoadComponent", "fbicon"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React"),
        j = b("lazyLoadComponent")(b("JSResource")("RTWebCometMissedCallContent.react").__setRef("useRTWebMissedCallDialog")),
        k = b("lazyLoadComponent")(b("JSResource")("RTWebCometCallDialog.react").__setRef("useRTWebMissedCallDialog"));

    function a() {
        var a = i.useContext(b("ZenonDialogContext")), c = a.hide, d = a.show;
        return i.useCallback(function (a) {
            var e = a.inviterID, f = a.isVideoCall, m = a.onCallback, n = a.participantIDs;
            a = a.timeMissed;
            b("ZenonUserActionLogger").logImpression({surface: "missed_call_dialog"});
            d(i.jsx(b("CometPlaceholder.react"), {
                fallback: i.jsx(b("CometCardedDialogLoadingState.react"), {}),
                children: i.jsx(k, {
                    acceptIcon: f ? b("fbicon")._(g("493173"), 16) : b("fbicon")._(g("558160"), 16),
                    acceptLabel: h._("\u56de\u7535"),
                    body: i.jsx(j, {inviterID: e, isVideoCall: f, participantIDs: n, timeMissed: a}),
                    declineLabel: h._("\u5173\u95ed"),
                    onClose: function (a) {
                        b("ZenonUserActionLogger").logClick({
                            component: a ? "call_back" : "close_dialog",
                            surface: "missed_call_dialog"
                        });
                        a && b("ZenonUserActionLogger").logClick({
                            component: "start_call_button",
                            surface: "missed_call_dialog"
                        });
                        c();
                        return a ? m() : void 0
                    },
                    title: l(f, n.length > 1)
                })
            }));
            return {dismiss: c}
        }, [c, d])
    }

    function l(a, b) {
        if (!b) return a ? h._("\u672a\u63a5\u89c6\u9891\u804a\u5929") : h._("\u672a\u63a5\u6765\u7535"); else return a ? h._("\u9519\u8fc7\u7684\u89c6\u9891\u7fa4\u804a") : h._("\u672a\u63a5\u7fa4\u6765\u7535")
    }
}), null);
__d("RTWebCometRoomIncomingCallDialog.entrypoint", ["JSResourceForInteraction", "RTWebCometRoomIncomingCallDialog_DisclaimerQuery$Parameters"], (function (a, b, c, d, e, f) {
    "use strict";
    a = {
        getPreloadProps: function () {
            return {
                queries: {
                    queryReference: {
                        parameters: b("RTWebCometRoomIncomingCallDialog_DisclaimerQuery$Parameters"),
                        variables: {nuxID: 8259}
                    }
                }
            }
        },
        root: b("JSResourceForInteraction")("RTWebCometRoomIncomingCallDialogContainer.react").__setRef("RTWebCometRoomIncomingCallDialog.entrypoint")
    };
    e.exports = a
}), null);
__d("useRoomIncomingCallDialog", ["CometPlaceholder.react", "CometRelay", "React", "RTWebCometRoomIncomingCallDialog.entrypoint", "VideoChatLinksUserActionsMultiplexLogger", "ZenonDialogContext", "useCometRelayEntrypointContextualEnvironmentProvider"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a() {
        var a = g.useContext(b("ZenonDialogContext")), c = a.hide, d = a.show,
            e = b("useCometRelayEntrypointContextualEnvironmentProvider")();
        return g.useCallback(function (a) {
            var f = a.inviterID, h = a.linkUrl, i = a.onAccept, j = a.onDecline, k = a.roomName;
            a = a.sender;
            new (b("VideoChatLinksUserActionsMultiplexLogger"))().setSurface("vcl_meetups_notification").setEvent("room_ringback_received").setVideoCallLinkURLRaw(h).log();
            var l = b("CometRelay").loadEntryPoint(e, b("RTWebCometRoomIncomingCallDialog.entrypoint"), {});
            d(g.jsx(b("CometPlaceholder.react"), {
                fallback: null,
                children: g.jsx(b("CometRelay").EntryPointContainer, {
                    entryPointReference: l,
                    props: {inviterID: f, linkUrl: h, onAccept: i, onDecline: j, roomName: k, sender: a}
                })
            }));
            return {dismiss: c}
        }, [e, c, d])
    }
}), null);
__d("useZenonDialogController", ["React", "usePrevious"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a, c) {
        var d = g.useState(null), e = d[0], f = d[1], h = b("usePrevious")(a);
        g.useEffect(function () {
            if ((a == null ? void 0 : a.ringID) === (h == null ? void 0 : h.ringID) && (a == null ? void 0 : a.type) === (h == null ? void 0 : h.type)) return;
            e && (e.dismiss(), f(null));
            if (a === null) return;
            f(c())
        }, [e, a, h, c]);
        return e
    }
}), null);
__d("RTWebCometCallInviteDialogs.react", ["Actor", "React", "RTWebPreCallContext", "RTWebPreCallHooks", "ServerTime", "StartVideoChatLinkCall", "ZenonCallsModelTypes", "useRoomIncomingCallDialog", "useRTWebIncomingCallDialog", "useRTWebIncomingUnsupportedBrowserDialog", "useRTWebMissedCallDialog", "useZenonDialogController"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var c = a.invite;
        a = b("Actor").useActor();
        var d = a[0];
        a = g.useContext(b("RTWebPreCallContext"));
        var e = b("useRTWebIncomingCallDialog")(), f = b("useRoomIncomingCallDialog")(),
            h = b("useRTWebMissedCallDialog")(), i = b("useRTWebIncomingUnsupportedBrowserDialog")(),
            j = b("RTWebPreCallHooks").useAcceptCallCallback(), k = b("RTWebPreCallHooks").useStartCallCallback(),
            l = a ? a.callInviteModel : null;
        b("useZenonDialogController")(c, function () {
            if (c === null || l == null) return null;
            if (c.context.type === "room") {
                var a = c.context.room;
                return f({
                    inviterID: c.inviterID, linkUrl: a.linkHash, onAccept: function () {
                        b("StartVideoChatLinkCall").startCall(a.linkHash, !0, !0)
                    }, onDecline: function () {
                        l.decline(b("ZenonCallsModelTypes").ZenonEndCallReason.IgnoreCall)
                    }, roomName: a.roomName, sender: c.context.room.sender
                })
            }
            switch (c.type) {
                case"ringing":
                    return e({
                        inviterID: c.inviterID, isVideoCall: c.requestingVideo, onAccept: function () {
                            j({trigger: "comet_incoming_dialog_accept_button"})
                        }, onDecline: function () {
                            l.decline(b("ZenonCallsModelTypes").ZenonEndCallReason.IgnoreCall)
                        }, participantIDs: c.participants
                    });
                case"missed":
                    if (c.context.type === "thread") {
                        var g = c.context.thread;
                        return h({
                            inviterID: c.inviterID, isVideoCall: c.requestingVideo, onCallback: function () {
                                k({
                                    existingCall: null,
                                    invitees: [c.inviterID].concat(c.participants.filter(function (a) {
                                        return a !== d
                                    })),
                                    mediaType: c.requestingVideo ? "video" : "audio",
                                    thread: g,
                                    trigger: "comet_missed_call_dialog"
                                }), l.dismiss()
                            }, participantIDs: c.participants, timeMissed: new Date(b("ServerTime").getMillis())
                        })
                    }
                    return null;
                case"unsupported_browser":
                    return i({
                        inviterID: c.inviterID,
                        isVideoCall: c.requestingVideo,
                        onClose: function () {
                            l.dismiss()
                        },
                        participantIDs: c.participants,
                        threadType: c.context.type === "thread" ? c.context.thread.type : 2
                    });
                default:
                    return null
            }
        });
        return null
    }
}), null);
__d("SoundPlayer", ["BanzaiODS", "URI", "createArrayFromMixed"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = new Map();

    function i(a) {
        var c = new (g || (g = b("URI")))(a);
        return c.getDomain() ? a : new (g || (g = b("URI")))(window.location.href).setPath(c.getPath()).toString()
    }

    function j(a) {
        a = new (g || (g = b("URI")))(a).getPath();
        if (/\.mp3$/.test(a)) return "audio/mpeg";
        return /\.og[ga]$/.test(a) ? "audio/ogg" : ""
    }

    var k = function (a, c) {
        for (var a = b("createArrayFromMixed")(a), d = Array.isArray(a), e = 0, a = d ? a : a[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); ;) {
            var f;
            if (d) {
                if (e >= a.length) break;
                f = a[e++]
            } else {
                e = a.next();
                if (e.done) break;
                f = e.value
            }
            f = f;
            if (h.has(f)) return;
            var g = document.createElement("audio");
            if (!g || !g.canPlayType || !g.canPlayType(j(f))) continue;
            g.preload = "auto";
            g.src = i(f);
            document.body && document.body.appendChild(g);
            h.set(f, g);
            (c == null ? void 0 : c.onPreload) != null && c.onPreload(g);
            return
        }
    };
    f.preload = k;
    a = function (a, c) {
        c === void 0 && (c = {});
        for (var a = b("createArrayFromMixed")(a), d = Array.isArray(a), e = 0, a = d ? a : a[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); ;) {
            var f;
            if (d) {
                if (e >= a.length) break;
                f = a[e++]
            } else {
                e = a.next();
                if (e.done) break;
                f = e.value
            }
            f = f;
            h.has(f) || k(f, c.callbacks);
            f = h.get(f);
            if (!f) continue;
            c.loop && f.setAttribute("loop", "");
            c.volume && (f.volume = c.volume);
            f = f.play();
            f != null && typeof f.then === "function" ? f.then(function (a) {
                b("BanzaiODS").bumpEntityKey(2966, "sound_player", "play.success")
            })["catch"](function (a) {
                b("BanzaiODS").bumpEntityKey(2966, "sound_player", "play.error")
            }) : b("BanzaiODS").bumpEntityKey(2966, "sound_player", "non_promise");
            return
        }
    };
    f.play = a;
    c = function (a) {
        for (var a = b("createArrayFromMixed")(a), c = Array.isArray(a), d = 0, a = c ? a : a[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); ;) {
            var e;
            if (c) {
                if (d >= a.length) break;
                e = a[d++]
            } else {
                d = a.next();
                if (d.done) break;
                e = d.value
            }
            e = e;
            e = h.get(e);
            if (e) {
                e.pause();
                return
            }
        }
    };
    f.pause = c;
    d = function (a) {
        for (var a = b("createArrayFromMixed")(a), c = Array.isArray(a), d = 0, a = c ? a : a[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); ;) {
            var e;
            if (c) {
                if (d >= a.length) break;
                e = a[d++]
            } else {
                d = a.next();
                if (d.done) break;
                e = d.value
            }
            e = e;
            var f = h.get(e);
            f && (f.pause(), f.removeAttribute("src"), f.src = i(e))
        }
    };
    f.stop = d
}), null);
__d("SecurePostMessage", ["invariant"], (function (a, b, c, d, e, f, g) {
    "use strict";
    var h = "*";
    a = {
        sendMessageToSpecificOrigin: function (a, b, c, d) {
            c !== h || g(0, 21157), a.postMessage(b, c, d)
        }, sendMessageForCurrentOrigin: function (a, b) {
            a.postMessage(b)
        }, sendMessageAllowAnyOrigin_UNSAFE: function (a, b, c) {
            a.postMessage(b, h, c)
        }
    };
    e.exports = a
}), null);
__d("SoundSynchronizer", ["SoundPlayer", "WebStorage", "createArrayFromMixed"], (function (a, b, c, d, e, f) {
    var g, h = "fb_sounds_playing3";

    function i() {
        var a = (g || (g = b("WebStorage"))).getLocalStorage();
        if (a) try {
            a = a[h];
            if (a) {
                a = JSON.parse(a);
                if (Array.isArray(a)) return a
            }
        } catch (a) {
        }
        return []
    }

    function j(a) {
        var c = (g || (g = b("WebStorage"))).getLocalStorage();
        if (c) {
            var d = i();
            d.push(a);
            while (d.length > 5) d.shift();
            try {
                c[h] = JSON.stringify(d)
            } catch (a) {
            }
        }
    }

    function k(a) {
        return i().some(function (b) {
            return b === a
        })
    }

    a = {
        play: function (a, c, d, e) {
            a = b("createArrayFromMixed")(a);
            c = c || a[0] + Math.floor(Date.now() / 1e3);
            if (k(c)) return;
            b("SoundPlayer").play(a, {loop: !!d, callbacks: e});
            j(c)
        }, isSupported: function () {
            return !!(g || (g = b("WebStorage"))).getLocalStorage()
        }
    };
    e.exports = a
}), null);
__d("SoundRPC", ["FBJSON", "SecurePostMessage", "SoundSynchronizer", "requireCond", "cr:950105"], (function (a, b, c, d, e, f) {
    f.playLocal = g;
    f.playRemote = a;
    f.supportsRPC = c;
    f._listen = d;

    function g(a, c, d, e) {
        b("SoundSynchronizer").play(a, c, d, e)
    }

    function a(a, c, d, e) {
        c = {name: "SoundRPC", data: {paths: c, sync: d, loop: e}};
        b("SecurePostMessage").sendMessageAllowAnyOrigin_UNSAFE(a, b("FBJSON").stringify(c))
    }

    function c() {
        return !!window.postMessage
    }

    function d() {
        var a = function (a) {
            if (!/\.facebook.com$/.test(a.origin)) return;
            var c = {};
            try {
                a = a.data;
                typeof a === "string" && (c = b("FBJSON").parse(a))
            } catch (a) {
            }
            a = c;
            c = a.name;
            a = a.data;
            c === "SoundRPC" && a != null && typeof a === "object" && g(a.paths, a.sync, a.loop)
        };
        b("cr:950105") != null ? b("cr:950105").listen(window, "message", a) : window.addEventListener("message", a)
    }
}), null);
__d("Sound", ["SoundInitialData", "SoundPlayer", "SoundRPC", "SoundSynchronizer", "URI", "UserAgent_DEPRECATED", "Visibility", "isFacebookURI"], (function (a, b, c, d, e, f) {
    f.init = a;
    f.play = c;
    f.hasPlayedSoundBefore = d;
    f.playOnlyIfImmediate = e;
    f.stop = j;
    var g, h = null, i = !1;

    function a(a) {
    }

    function c(a, c, d, e) {
        h ? b("SoundRPC").playRemote(h.contentWindow, a, c, !1) : b("SoundRPC").playLocal(a, c, d, e), i = !0
    }

    function d() {
        return i
    }

    function e(a, c, d) {
        if (!i && b("Visibility").isHidden()) return;
        this.play(a, c, d)
    }

    function j(a) {
        h || b("SoundPlayer").stop(a)
    }

    a = new (g || b("URI"))(location.href);
    a.getSubdomain() && a.getSubdomain() !== "comet" && a.getSubdomain() !== "www" && a.setSubdomain("www");
    c = a.getDomain();

    function k() {
        if (b("UserAgent_DEPRECATED").ie() < 9) return !1;
        return b("SoundInitialData").RPC_DISABLED ? !1 : b("SoundSynchronizer").isSupported() && b("SoundRPC").supportsRPC()
    }

    b("isFacebookURI")(a) && location.host !== c && k() && (h = document.createElement("iframe"), h.setAttribute("src", "//" + c + "/sound_iframe.php"), h.style.display = "none", document.body && document.body.appendChild(h))
}), null);
__d("useZenonRingTone", ["React", "RTCSounds", "Sound"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React"), h = [b("RTCSounds").ringtone_mp3_url, b("RTCSounds").ringtone_ogg_url];

    function a(a) {
        a === void 0 && (a = !1), g.useEffect(function () {
            if (a) {
                b("Sound").play(h, null, !0);
                return function () {
                    b("Sound").stop(h)
                }
            }
        }, [a])
    }
}), null);
__d("ZenonCallInviteRingtone.react", ["useZenonRingTone"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;

    function a(a) {
        a = a.invite;
        b("useZenonRingTone")((a == null ? void 0 : a.type) === "ringing");
        return null
    }
}), null);
__d("DocumentTitle", ["Arbiter"], (function (a, b, c, d, e, f) {
    var g = 1500, h = null, i = !1, j = 0, k = [], l = null, m = document.title, n = 0;

    function o() {
        k.length > 0 ? !i ? (p(k[j].title), j = ++j % k.length) : q() : (clearInterval(h), h = null, q())
    }

    function p(a) {
        document.title = a, i = !0
    }

    function q() {
        r.set(l || m, !0), i = !1
    }

    var r = function () {
        function a(a) {
            this.$1 = a
        }

        a.get = function () {
            return m
        };
        a.set = function (a, c) {
            var d = a.toString();
            document.title = d;
            !c ? (m = d, l = null, b("Arbiter").inform("update_title", a)) : l = d
        };
        a.blink = function (b) {
            b = {title: b.toString()};
            k.push(b);
            h === null && (h = setInterval(o, g));
            return new a(b)
        };
        var c = a.prototype;
        c.stop = function () {
            var a = k.indexOf(this.$1);
            a >= 0 && (k.splice(a, 1), j > a ? j-- : j == a && j == k.length && (j = 0))
        };
        a.badge = function (c) {
            var d = a.get();
            d = c ? "(" + c + ") " + d : d;
            a.set(d, !0);
            b("Arbiter").inform("update_title_badge", c, "state");
            n = c
        };
        a.preserveBadgeAndSet = function (c) {
            a.set(c, !1), b("Arbiter").inform("update_title", c), a.badge(n)
        };
        return a
    }();
    e.exports = r
}), null);
__d("useDocumentTitleBlink", ["DocumentTitle", "React"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        g.useEffect(function () {
            if (a == null) return;
            var c = b("DocumentTitle").blink(a);
            return function () {
                c.stop()
            }
        }, [a])
    }
}), null);
__d("ZenonCallInviteTitleBlinking.react", ["fbt", "React", "ZenonUsersHooks", "useDocumentTitleBlink"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React");

    function a(a) {
        a = a.invite;
        return a !== null && a.type === "ringing" && a.inviterID != null ? h.jsx(i, {inviterID: a.inviterID}) : null
    }

    function i(a) {
        a = a.inviterID;
        a = b("ZenonUsersHooks").useZenonUser(a);
        b("useDocumentTitleBlink")(a ? g._("{name}\u6765\u7535", [g._param("name", a.shortName)]) : null);
        return null
    }
}), null);
__d("useZenonDialogSetters", ["React"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a, b) {
        return g.useMemo(function () {
            return {
                hide: function () {
                    a(null)
                }, hideAll: function () {
                    a(null), b([])
                }, hideByID: function (a) {
                    b(function (b) {
                        return b.filter(function (b) {
                            return b.key !== a
                        })
                    })
                }, show: a, showByID: function (a, c) {
                    b(function (b) {
                        var d = b.findIndex(function (b) {
                            return b.key === a
                        }), e = {key: a, node: c};
                        if (d === -1) return [].concat(b, [e]); else return [].concat(b.slice(0, d), b.slice(d + 1), [e])
                    })
                }, toggle: function (b) {
                    b === void 0 && (b = !1), b || a(null)
                }
            }
        }, [a, b])
    }
}), null);
__d("ZenonDialogProvider.react", ["React", "ZenonDialogContext", "useZenonDialogSetters"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        a = a.children;
        var c = g.useState(null), d = c[0];
        c = c[1];
        var e = g.useState([]), f = e[0];
        e = e[1];
        c = b("useZenonDialogSetters")(c, e);
        return g.jsxs(b("ZenonDialogContext").Provider, {
            value: c, children: [a, d, f.map(function (a) {
                a = a.node;
                return a
            })]
        })
    }
}), null);
__d("RTWebCometCallInviteController.react", ["React", "RTWebCallBlockSettingHooks", "RTWebCallInviteDesktopNotification.react", "RTWebCometCallInviteDialogs.react", "RTWebPreCallHooks", "ZenonCallInviteRingtone.react", "ZenonCallInviteTitleBlinking.react", "ZenonDialogProvider.react", "requireDeferred"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");
    c = b("requireDeferred")("FBRTCCallSummaryUploader");
    c.onReady(function (a) {
        a.init()
    });

    function a() {
        b("RTWebCallBlockSettingHooks").useCallBlockSetting();
        b("RTWebPreCallHooks").useNoAnswerTimeout();
        var a = b("RTWebPreCallHooks").useCallInvite();
        return g.jsxs(b("ZenonDialogProvider.react"), {children: [g.jsx(b("RTWebCometCallInviteDialogs.react"), {invite: a}), g.jsx(b("RTWebCallInviteDesktopNotification.react"), {invite: a}), g.jsx(b("ZenonCallInviteRingtone.react"), {invite: a}), g.jsx(b("ZenonCallInviteTitleBlinking.react"), {invite: a})]})
    }
}), null);
__d("RTWebCallWindowOpener", ["requireCond", "cr:1099565"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = b("cr:1099565")
}), null);
__d("RTWebCometCallMessageLayout.react", ["CometEntityHeaderFacepile.react", "CometImageIcon.react", "React", "stylex"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React"), h = "/images/chat/webrtc/no_profile_pic.png";

    function a(a) {
        var c = a.caller, d = a.mainMessage, e = a.participants;
        a = a.subMessage;
        var f = i(e);
        e = e.length > 1;
        return g.jsxs("div", {
            className: "jifvfom9 btwxx1t3 j83agx80",
            children: [g.jsx(b("CometImageIcon.react"), {
                size: 60,
                src: j(c),
                style: "circle"
            }), g.jsxs("div", {
                className: "gu00c43d taijpn5t cbu4d94t j83agx80",
                children: [g.jsx("div", {
                    className: "qzhwtbm6 n3ffmt46 a5q79mjw oo9gr5id",
                    children: d
                }), g.jsxs("div", {
                    className: "linoseic e9vueds3 m9osqain",
                    children: [e ? g.jsx(b("CometEntityHeaderFacepile.react"), {profiles: f}) : null, g.jsx("div", {children: a})]
                })]
            })]
        })
    }

    function i(a) {
        return a.length > 0 ? a.map(function (a) {
            return {name: a.name, pictureURI: j(a), profileURL: "#", size: 32}
        }) : []
    }

    function j(a) {
        return (a = a.profilePictureUrl) != null ? a : h
    }
}), null);
__d("RTWebCometIncomingCallContent.react", ["fbt", "CometProgressIndicator.react", "React", "RTWebCometCallMessageLayout.react", "ZenonUsersHooks", "emptyFunction", "gkx", "requireCond", "cr:1568669", "cr:1568670"], (function (a, b, c, d, e, f, g) {
    "use strict";
    e.exports = a;
    var h = b("React"), i = b("cr:1568669") ? b("cr:1568669").addPoint : b("emptyFunction"),
        j = b("cr:1568670") ? b("cr:1568670").useCallInvite : b("emptyFunction"),
        k = b("gkx")("1536863") ? c : b("emptyFunction");

    function a(a) {
        var c = a.inviterID, d = a.isVideoCall;
        a = a.participantIDs;
        c = b("ZenonUsersHooks").useZenonUser(c);
        var e = b("ZenonUsersHooks").useZenonUsers(a).valueSeq().toArray();
        k(e, a, 64225282);
        a = a.length > 1;
        var f = a ? d ? g._("{caller name}\u9080\u8bf7\u4f60\u52a0\u5165\u89c6\u9891\u7fa4\u804a\u3002", [g._param("caller name", c == null ? void 0 : c.name)]) : g._("{caller name}\u9080\u8bf7\u4f60\u52a0\u5165\u7fa4\u901a\u8bdd\u3002", [g._param("caller name", c == null ? void 0 : c.name)]) : g._("{caller name}\u6b63\u5728\u547c\u53eb\u4f60\u3002", [g._param("caller name", c == null ? void 0 : c.name)]);
        a = a ? d ? g._("\u63a5\u542c\u5373\u53ef\u5206\u4eab\u89c6\u9891") : g._("\u63a5\u542c\u5373\u53ef\u901a\u8bdd\u3002") : g._("\u63a5\u542c\u5373\u53ef\u901a\u8bdd\u3002");
        return c === null ? h.jsx(b("CometProgressIndicator.react"), {}) : h.jsx(b("RTWebCometCallMessageLayout.react"), {
            caller: c,
            mainMessage: f,
            participants: e,
            subMessage: a
        })
    }

    function c(a, b, c) {
        var d = l();
        h.useEffect(function () {
            a.length === 0 && i(c, "fetching_participants", {instanceKey: d}), a.length === b.length && i(c, "fetched_participants", {instanceKey: d})
        }, [d, b.length, a, c])
    }

    function l() {
        var a = j();
        return (a = +(a == null ? void 0 : a.ringID)) != null ? a : 0
    }
}), null);
__d("RTWebCometCallDialog.react", ["CometControlledUserBlockingDialog.react", "React", "TetraButtonGroup.react", "TetraText.react", "stylex"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var c = a.acceptIcon, d = a.acceptLabel, e = a.acceptTestid, f = a.body, h = a.declineLabel;
        h = h === void 0 ? null : h;
        var i = a.onClose;
        a = a.title;
        a = a === void 0 ? null : a;
        var j = function () {
            i(!0)
        }, k = function () {
            i(!1)
        };
        return g.jsxs(b("CometControlledUserBlockingDialog.react"), {
            disableClosingWithMask: !0,
            onDismiss: k,
            withCloseButton: !0,
            children: [a != null ? g.jsx("div", {
                className: "dati1w0a jbae33se hv4rvrfc bjjx79mm",
                children: g.jsx(b("TetraText.react"), {numberOfLines: 1, type: "headlineEmphasized2", children: a})
            }) : null, g.jsx("div", {
                className: "dati1w0a f10w8fjw hv4rvrfc pybr56ya taijpn5t cbu4d94t",
                children: f
            }), g.jsx("div", {
                className: "a8nywdso ihqw7lf3 dflh9lhu jb3vyjys",
                children: g.jsx(b("TetraButtonGroup.react"), {
                    align: "end",
                    direction: "backward",
                    primary: {icon: c, label: d, onPress: j, testid: e, type: "primary"},
                    secondary: h !== null ? {label: h, onPress: k, reduceEmphasis: !0} : null
                })
            })]
        })
    }
}), null);
__d("ZenonCallInviteModelTypes", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = {missed: "missed", ringing: "ringing", unsupported_browser: "unsupported_browser"};
    f.CallInviteModelType = a
}), null);
__d("ZenonIncomingRingSDKTypes", ["$InternalEnum"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored(["Hangup", "OtherDismiss"]);
    f.ZenonCancelReason = a
}), null);
__d("ZenonCallInviteModel", ["BaseEventEmitter", "FBLogger", "ZenonCallInviteModelTypes", "ZenonCallsModelTypes", "ZenonIncomingRingSDKTypes", "gkx"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function (a) {
        babelHelpers.inheritsLoose(c, a);

        function c(c) {
            var d;
            d = a.call(this) || this;
            d.$ZenonCallInviteModel3 = function (a) {
                b("FBLogger")("rtc_www").info("Received cancel for: ", a.ringID);
                if (d.__currentRequest && d.__currentRequest.model && d.__currentRequest.model.ringID === a.ringID) switch (a.reason) {
                    case b("ZenonIncomingRingSDKTypes").ZenonCancelReason.Hangup:
                        a = ((a = d.__currentRequest) == null ? void 0 : (a = a.model) == null ? void 0 : a.type) !== b("ZenonCallInviteModelTypes").CallInviteModelType.unsupported_browser;
                        d.__currentRequest.model = babelHelpers["extends"]({}, d.__currentRequest.model, {type: "missed"});
                        a && d.emit("callInvite", d.__currentRequest.model);
                        break;
                    case b("ZenonIncomingRingSDKTypes").ZenonCancelReason.OtherDismiss:
                        d.dismiss();
                        break
                }
            };
            d.$ZenonCallInviteModel2 = function (a) {
                var c;
                b("FBLogger")("rtc_www").info("Receiving ring: ", a.ringID);
                if (((c = d.__currentRequest) == null ? void 0 : (c = c.model) == null ? void 0 : c.type) === "ringing") {
                    if (((c = d.__currentRequest) == null ? void 0 : (c = c.model) == null ? void 0 : c.ringID) !== a.ringID && b("gkx")("1434282")) {
                        a.onDecline(b("ZenonCallsModelTypes").ZenonEndCallReason.InAnotherCall);
                        b("FBLogger")("rtc_www").info("Sending InAnotherCall to ring: ", a.ringID, "Current ring: ", (c = d.__currentRequest) == null ? void 0 : (c = c.model) == null ? void 0 : c.ringID)
                    }
                } else d.__currentRequest = {
                    model: {
                        context: a.context,
                        controllerParams: a.controllerParams,
                        inviterID: a.inviterID,
                        participants: a.otherParticipants,
                        requestingVideo: a.requestingVideo,
                        ringID: a.ringID,
                        type: a.isClientPermissableRing ? "ringing" : "unsupported_browser"
                    }, ringPayload: a
                }, d.emit("callInvite", d.__currentRequest.model), a.isClientPermissableRing || a.onDecline(b("ZenonCallsModelTypes").ZenonEndCallReason.VersionUnsupported)
            };
            d.__eventSource = c;
            d.__currentRequest = null;
            return d
        }

        var d = c.prototype;
        d.getCurrentInvite = function () {
            var a;
            return (a = (a = this.__currentRequest) == null ? void 0 : a.model) != null ? a : null
        };
        d.startListening = function (a) {
            a = a.callsBlocked;
            this.__currentRequest && this.dismiss();
            this.stopListening();
            a ? this.__eventSource.addListener("incomingRing", this.$ZenonCallInviteModel1) : (this.__eventSource.addListener("incomingRing", this.$ZenonCallInviteModel2), this.__eventSource.addListener("ringCancel", this.$ZenonCallInviteModel3))
        };
        d.stopListening = function () {
            this.__eventSource.removeAllListeners("incomingRing"), this.__eventSource.removeAllListeners("ringCancel"), this.__currentRequest = null
        };
        d.dismiss = function () {
            var a;
            b("FBLogger")("rtc_www").info("Dismissing ring: ", (a = this.__currentRequest) == null ? void 0 : (a = a.model) == null ? void 0 : a.ringID);
            this.__currentRequest = null;
            this.emit("callInvite", Object.freeze(null))
        };
        d.accept = function (a, c) {
            var d = this.__currentRequest;
            if (d) {
                var e;
                b("FBLogger")("rtc_www").info("Accepting ring: ", (e = d.model) == null ? void 0 : e.ringID);
                ((e = d.model) == null ? void 0 : e.type) === "ringing" && d.ringPayload.onAccept(a, c);
                this.dismiss()
            }
        };
        d.decline = function (a, c) {
            a === void 0 && (a = b("ZenonCallsModelTypes").ZenonEndCallReason.IgnoreCall);
            var d = this.__currentRequest;
            if (d) {
                var e;
                b("FBLogger")("rtc_www").info("Declining ring: ", (e = d.model) == null ? void 0 : e.ringID);
                d.ringPayload.onDecline(a, c);
                this.dismiss();
                return
            }
        };
        d.$ZenonCallInviteModel1 = function (a) {
            b("FBLogger")("rtc_www").info("Blocking ring: ", a.ringID), a.onDecline(b("ZenonCallsModelTypes").ZenonEndCallReason.IgnoreCall, b("ZenonCallsModelTypes").ZenonEndCallSubreason.CallsBlocked)
        };
        return c
    }(b("BaseEventEmitter"));
    e.exports = a
}), null);
__d("delegateZenonCallInviteModel", [], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;

    function a(a, b) {
        a.getCurrentInvite = b.getCurrentInvite.bind(b), a.startListening = b.startListening.bind(b), a.stopListening = b.stopListening.bind(b), a.dismiss = b.dismiss.bind(b), a.accept = b.accept.bind(b), a.decline = b.decline.bind(b), b.addListener("callInvite", function (b) {
            a.emit("callInvite", b)
        })
    }
}), null);
__d("ZenonCallWindowController", ["Promise", "FBLogger", "ZenonCallWindowErrors"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a, b) {
            var c = b.callWindowInitializerResource, d = b.callWindowOpener;
            b = b.uriBuilderResource;
            this.$2 = null;
            this.$3 = !1;
            this.$5 = null;
            this.$1 = a;
            this.$7 = b;
            this.$4 = c;
            this.$6 = d
        }

        var c = a.prototype;
        c.initCall = function (a) {
            var c = this;
            if (this.$3) throw new (b("ZenonCallWindowErrors").OpeningAnotherCallError)();
            try {
                if (this.$2 && !this.$2.closed && a.joinContext.type === "thread" && this.$2.inCallWith === a.joinContext.thread.id) {
                    this.$2.focus();
                    return [this.$2, b("Promise").resolve({alohaEscalatedMW: !1})]
                }
            } catch (a) {
                b("FBLogger")("rtc_www").catching(a).warn("Failed to access inCallWith on call window")
            }
            var d = this.$6.openWindow(a);
            try {
                this.$2 && (this.$2.closed || this.$2.close(), this.$2 = null)
            } catch (a) {
                b("FBLogger")("rtc_www").catching(a).warn("Failed to access close on call window")
            }
            this.$2 = d;
            this.$3 = !0;
            return [d, b("Promise").all([this.$7.load(), this.$4.load()]).then(function (b) {
                var d = b[0];
                b = b[1];
                c.$5 === null && (c.$5 = new b(c.$1, new d(c.$1)));
                return c.$5.initCall(c.$2, a)
            })["finally"](function () {
                c.$3 = !1
            })]
        };
        return a
    }();
    e.exports = a
}), null);
__d("ZenonCallWindowOpener_Popup", ["ZenonUserActionLogger", "qex"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = 1280, h = {
        LargeForGroup: {height: 772, width: 1100},
        LargeForP2P: {height: 720, width: 1280},
        Small: {height: 540, width: 960}
    }, i = ["menubar=no", "location=no", "scrollbars=no", "status=no", "personalbar=no"];
    a = function () {
        function a() {
        }

        var c = a.prototype;
        c.openWindow = function (a) {
            a = this.$1(a.joinContext);
            var c = this.$2(a), d = c.left;
            c = c.top;
            b("ZenonUserActionLogger").logCheckpoint({checkpoint: "Opening_Popup: left=" + d + ",top=" + c + ",width=" + a.width + ",height=" + a.height});
            return window.open("", "", [].concat(i, ["height=" + a.height, "width=" + a.width, "left=" + d, "top=" + c]).join(","))
        };
        c.$1 = function (a) {
            if (screen && screen.width > g) if (a.type === "link" || a.thread.type === 2) {
                a = b("qex")._("1704108");
                return {height: a != null && a > 0 ? a : h.LargeForGroup.height, width: h.LargeForGroup.width}
            } else {
                a = b("qex")._("1704109");
                var c = b("qex")._("1704110");
                return {
                    height: a != null && a > 0 ? a : h.LargeForP2P.height,
                    width: c != null && c > 0 ? c : h.LargeForP2P.width
                }
            } else {
                a = b("qex")._("1704111");
                c = b("qex")._("1704112");
                return {height: a != null && a > 0 ? a : h.Small.height, width: c != null && c > 0 ? c : h.Small.width}
            }
        };
        c.$2 = function (a) {
            var b = a.height;
            a = a.width;
            return {
                left: Math.floor(window.innerWidth / 2 - a / 2 + ((a = window.screenLeft) != null ? a : window.screenX)),
                top: Math.floor(window.innerHeight / 2 - b / 2 + ((a = window.screenTop) != null ? a : window.screenY))
            }
        };
        return a
    }();
    e.exports = a
}), null);
__d("XRefererFrameController", ["XController"], (function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/common/referer_frame.php", {})
}), null);
__d("getRequestConstUri", ["ConstUriUtils", "unrecoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;

    function a() {
        var a = b("ConstUriUtils").getUri(window.location.href);
        if (a == null) throw b("unrecoverableViolation")("Cannot create ConstUriImpl of current request", "comet_infra");
        return a
    }
}), null);
__d("ControlledReferer", ["Bootloader", "DeferredCookie", "XRefererFrameController", "getRequestConstUri", "isMessengerDotComURI", "isOculusDotComURI", "isWorkplaceDotComURI", "lowerFacebookDomain"], (function (a, b, c, d, e, f) {
    f.shouldUseFacebookReferer = g;
    f.useFacebookRefererHtml = a;

    function g(a, c, d) {
        if (!b("DeferredCookie").canEmbedThirdPartyPixel()) {
            b("Bootloader").loadModules(["BanzaiODS"], function (a) {
                a.bumpEntityKey(2966, "defer_cookies", "block_controlled_referer_iframe")
            }, "ControlledReferer");
            return
        }
        var e = !1;

        function f() {
            if (e) return;
            var b = a.contentWindow.location.pathname;
            if (b !== "/intern/common/referer_frame.php" && b !== "/common/referer_frame.php") return;
            e = !0;
            a.contentWindow.document.body.style.margin = 0;
            c()
        }

        var g;
        b("isMessengerDotComURI")(b("getRequestConstUri")()) ? g = b("XRefererFrameController").getURIBuilder().getURI().toString() : b("isOculusDotComURI")(b("getRequestConstUri")()) ? g = "/common/referer_frame.php" : !b("lowerFacebookDomain").isValidDocumentDomain() ? g = "/intern/common/referer_frame.php" : g = b("XRefererFrameController").getURIBuilder().getURI().toString();
        d == null && b("isWorkplaceDotComURI")(b("getRequestConstUri")()) && (d = "workplace");
        d && (g += "?fb_source=" + d);
        a.onload = f;
        a.src = g
    }

    function a(a, b, c) {
        g(a, function () {
            a.contentWindow.document.body.innerHTML = b
        }, c)
    }
}), null);
__d("StaticContainer.react", ["React"], (function (a, b, c, d, e, f) {
    var g = b("React");
    a = function (a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }

        var c = b.prototype;
        c.shouldComponentUpdate = function (a) {
            return !!a.shouldUpdate
        };
        c.render = function () {
            var a = this.props.children;
            return a === null || a === !1 ? null : g.Children.only(a)
        };
        return b
    }(g.Component);
    e.exports = a
}), null);
__d("ControlledRefererIFrame.react", ["ControlledReferer", "ControlledRefererIFrameConfig", "React", "SecurePostMessage", "StaticContainer.react", "URI"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = b("React");
    a = function (a) {
        babelHelpers.inheritsLoose(c, a);

        function c() {
            return a.apply(this, arguments) || this
        }

        var d = c.prototype;
        d.mountFrameRef = function (a) {
            this.frame = a
        };
        d.updateFrame = function () {
            var a = this, c = this.frame;
            if (!c) return;
            this.props.onBeforeFrameRender && this.props.onBeforeFrameRender(this.props);
            b("ControlledReferer").shouldUseFacebookReferer(c, function () {
                var d = c.contentWindow.document;
                d.body.innerHTML = '\n        <form method="GET" id="theform"></form>\n        ' + b("ControlledRefererIFrameConfig").additional_markup + "\n      ";
                var e = new (g || (g = b("URI")))(a.props.src).qualify(), f = d.getElementById("theform");
                f.action = e.toString();
                e = e.getQueryData();
                for (var h in e) if (Object.prototype.hasOwnProperty.call(e, h)) {
                    var i = d.createElement("input");
                    i.name = h;
                    i.setAttribute("value", e[h]);
                    i.autocomplete = "off";
                    i.type = "hidden";
                    f.appendChild(i)
                }
                d.body.innerHTML += '\n        <iframe\n          frameborder="0"\n          width="1"\n          height="1"\n          onload="document.getElementById(\'theform\').submit()"\n        />\n      ';
                a.props.onFrameRender && a.props.onFrameRender(a.props)
            })
        };
        d.componentDidMount = function () {
            this.updateFrame()
        };
        d.componentDidUpdate = function (a) {
            a.src !== this.props.src && this.updateFrame()
        };
        d.UNSAFE_componentWillReceiveProps = function (a) {
            var b = this.frame;
            b && (a.width !== this.props.width || a.height !== this.props.height) && (a.width != null && (b.width = "" + a.width), a.height != null && (b.height = "" + a.height))
        };
        d.render = function () {
            var a = this, c = this.props;
            c.src;
            c.onFrameRender;
            c.onBeforeFrameRender;
            c = babelHelpers.objectWithoutPropertiesLoose(c, ["src", "onFrameRender", "onBeforeFrameRender"]);
            return h.jsx(b("StaticContainer.react"), {
                children: h.jsx("iframe", babelHelpers["extends"]({}, c, {
                    ref: function (b) {
                        return a.mountFrameRef(b)
                    }
                }))
            })
        };
        d.postMessage = function (a, c) {
            this.frame && b("SecurePostMessage").sendMessageToSpecificOrigin(this.frame.contentWindow, a, c)
        };
        return c
    }(h.PureComponent);
    e.exports = a
}), null);
__d("CometJSSemPixelsContainer.react", ["BanzaiODS", "CometRelay", "ControlledRefererIFrame.react", "React", "gkx", "CometJSSemPixelsContainerQuery.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h = b("React"), i = g !== void 0 ? g : g = b("CometJSSemPixelsContainerQuery.graphql");

    function j(a) {
        b("BanzaiODS").bumpEntityKey(3423, "paid_ads.pixel", a)
    }

    function a() {
        var a = b("CometRelay").useLazyLoadQuery(i, {});
        if (a == null || a.sem_universal_pixels == null) return null;
        var c = b("gkx")("1763940");
        return h.jsx("div", {
            children: a.sem_universal_pixels.map(function (a) {
                var d = a.name;
                return d == null || a.url == null ? null : h.jsx(b("ControlledRefererIFrame.react"), {
                    hidden: !0,
                    onBeforeFrameRender: c ? function () {
                        return j("before_fire." + d)
                    } : void 0,
                    onFrameRender: c ? function () {
                        return j("after_fire." + d)
                    } : void 0,
                    src: a.url
                }, a.url)
            })
        })
    }
}), null);
__d("CometWatchAndScrollContextSection.react", ["CometLink.react", "CometRelay", "React", "TetraProfilePhoto.react", "TetraText.react", "XCometVideoHomePlaylistControllerRouteBuilder", "stylex", "CometWatchAndScrollContextSection_video.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h = b("React");

    function a(a) {
        var c;
        a = a.video;
        a = b("CometRelay").useFragment(g !== void 0 ? g : g = b("CometWatchAndScrollContextSection_video.graphql"), a);
        var d = a == null ? void 0 : a.owner;
        if (a == null || d == null) return null;
        var e = d.id, f = d.name, i = d.url;
        c = (c = d.profile_picture) == null ? void 0 : c.uri;
        var j = "#";
        d.has_professional_features_for_watch === !0 ? j = b("XCometVideoHomePlaylistControllerRouteBuilder").buildURL({idorvanity: e}) : i != null && (j = i);
        return h.jsxs("div", {
            className: "j83agx80 bp9cbjyn",
            children: [h.jsx("div", {
                className: "oi9244e8",
                children: h.jsx(b("TetraProfilePhoto.react"), {
                    "aria-label": f != null && f !== "" ? f : j,
                    linkProps: {url: j},
                    size: 32,
                    source: {uri: c || ""}
                })
            }), h.jsxs("div", {
                className: "hpfvmrgz",
                children: [f != null && f !== "" && h.jsx(b("CometLink.react"), {
                    color: "secondary",
                    href: j,
                    children: h.jsx(b("TetraText.react"), {
                        color: "secondary",
                        numberOfLines: 1,
                        type: "meta4",
                        children: f
                    })
                }), h.jsx("div", {
                    className: "aahdfvyu",
                    children: h.jsx(b("TetraText.react"), {
                        color: "primary",
                        numberOfLines: 1,
                        type: "headlineEmphasized4",
                        children: a == null ? void 0 : a.title_with_fallback
                    })
                })]
            })]
        })
    }
}), null);
__d("CometWatchAndScrollActionButton.react", ["CometPressable.react", "React", "TetraIcon.react", "TetraText.react", "stylex"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var c = a.icon, d = a.label, e = a.onPress, f = a.testid;
        f = a.url;
        return g.jsxs("div", {
            className: "etr7akla l9j0dhe7 ozuftl9m n851cfcs tvfksri0 n1l5q3vz taijpn5t cbu4d94t j83agx80 bp9cbjyn",
            "data-testid": void 0,
            children: [g.jsx("div", {
                className: "h4z51re5 osnr6wyh rv4hoivh jktsbyx5 n851cfcs spb7xbtv bkmhp75w emlxlaya s45kfl79 kozd3uwk moy3fgm5 jsrkvy3z gag4i7dh",
                children: g.jsx(b("CometPressable.react"), {
                    "aria-label": d,
                    linkProps: {url: f},
                    onPress: e,
                    children: g.jsx(b("TetraIcon.react"), {
                        "aria-label": d,
                        color: "white",
                        hideHoverOverlay: !0,
                        icon: c
                    })
                })
            }), g.jsx(b("CometPressable.react"), {
                linkProps: {url: f},
                onPress: e,
                children: g.jsx(b("TetraText.react"), {align: "center", color: "white", type: "bodyLink4", children: d})
            })]
        })
    }
}), null);
__d("CometWatchAndScrollFallbackCTAScreen.react", ["ix", "fbt", "CometRelay", "CometSetWatchAndScrollVideoContext", "CometWatchAndScrollActionButton.react", "React", "VideoPlayerHooks", "VideoPlayerReshareButton.react", "XCometWatchControllerRouteBuilder", "fbicon", "stylex", "useCometRouterMainTabKey", "CometWatchAndScrollFallbackCTAScreen_video.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React");

    function a(a) {
        a = a.video;
        a = b("CometRelay").useFragment(i !== void 0 ? i : i = b("CometWatchAndScrollFallbackCTAScreen_video.graphql"), a);
        var c = b("VideoPlayerHooks").useController(), d = b("useCometRouterMainTabKey")();
        d = d !== "watch";
        var e = j.useContext(b("CometSetWatchAndScrollVideoContext"));
        return j.jsx("div", {
            className: "fl8dtwsd gbhij3x4 tkv8g59h dsae2hpk taijpn5t j83agx80 kzizifcz c6a7hszh bp9cbjyn kr520xx4 j9ispegn pmk7jnqg n7fi1qx3 rq0escxv i09qtzwb",
            children: j.jsxs("div", {
                className: "taijpn5t btwxx1t3 j83agx80 ll8tlv6m",
                children: [d && j.jsx(b("CometWatchAndScrollActionButton.react"), {
                    icon: b("fbicon")._(g("607168"), 16),
                    label: h._("\u66f4\u591a\u7cbe\u5f69\u89c6\u9891\u5c3d\u5728 Watch"),
                    onPress: function () {
                        e(null)
                    },
                    url: b("XCometWatchControllerRouteBuilder").buildURL({})
                }), j.jsx(b("CometWatchAndScrollActionButton.react"), {
                    icon: b("fbicon")._(g("534218"), 16),
                    label: h._("\u91cd\u64ad"),
                    onPress: function () {
                        return c.play("user_initiated")
                    }
                }), a != null && j.jsx(b("VideoPlayerReshareButton.react"), {
                    renderActionButton: function (a) {
                        a = a.onPress;
                        return j.jsx(b("CometWatchAndScrollActionButton.react"), {
                            icon: b("fbicon")._(g("484394"), 16),
                            label: h._("\u5206\u4eab"),
                            onPress: a
                        })
                    }, video: a
                })]
            })
        })
    }
}), null);
__d("CometWatchAndScrollChaining.react", ["ix", "fbt", "CometBackgroundImage.react", "CometPressable.react", "CometRelay", "CometSetWatchAndScrollVideoContext", "CometTahoeEndScreenProgressCircle.react", "CometTheme.react", "CometWatchAndScrollContextSection.react", "CometWatchAndScrollFallbackCTAScreen.react", "CometWatchAndScrollSetStoryViewabilityLoggerContext", "CometWatchAndScrollVideoContext", "React", "TetraIcon.react", "TetraText.react", "VideoPlayerHooks", "WebPixelRatio", "fbicon", "qex", "stylex", "CometWatchAndScrollChainingQuery.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React"), k = 6;

    function a(a) {
        var c = a.hidden, d = a.routeTracePolicy, e = a.seedVideoID, f = a.subOrigin;
        a = j.useContext(b("CometWatchAndScrollVideoContext"));
        a = a == null ? void 0 : a.chainingCursor;
        a = b("CometRelay").useLazyLoadQuery(i !== void 0 ? i : i = b("CometWatchAndScrollChainingQuery.graphql"), {
            caller: "WNS",
            chainingCursor: a,
            channelEntryPoint: "WNS",
            count: 1,
            scale: b("WebPixelRatio").get(),
            seedVideoID: e
        });
        var l = j.useState(!1), m = l[0], n = l[1], o = b("VideoPlayerHooks").useController(),
            p = j.useContext(b("CometSetWatchAndScrollVideoContext"));
        l = (l = a.video) == null ? void 0 : (l = l.video_channel) == null ? void 0 : (l = l.video_channel_feed) == null ? void 0 : (l = l.edges) == null ? void 0 : l[0];
        var q = l == null ? void 0 : l.cursor, r = l == null ? void 0 : l.node;
        l = r == null ? void 0 : (l = r.attachments) == null ? void 0 : (l = l[0]) == null ? void 0 : l.media;
        var s = l != null && l.__typename === "Video" ? l == null ? void 0 : l.id : null,
            t = j.useContext(b("CometWatchAndScrollSetStoryViewabilityLoggerContext")), u = j.useCallback(function () {
                p({
                    chainingCursor: q,
                    chainingSeedVideoID: e,
                    routeTracePolicy: d,
                    subOrigin: f,
                    videoID: s
                }), t({
                    clientViewConfig: r == null ? void 0 : r.client_view_config,
                    encryptedTracking: r == null ? void 0 : r.encrypted_tracking,
                    trackingCode: {
                        click_tracking_linkshim_cb: (r == null ? void 0 : r.click_tracking_linkshim_cb) || "",
                        encrypted_click_tracking: (r == null ? void 0 : r.encrypted_click_tracking) || "",
                        encrypted_tracking: (r == null ? void 0 : r.encrypted_tracking) || ""
                    },
                    videoID: s,
                    viewabilityConfig: r == null ? void 0 : r.viewability_config
                })
            }, [s, q, d, e, t, p, r == null ? void 0 : r.click_tracking_linkshim_cb, r == null ? void 0 : r.client_view_config, r == null ? void 0 : r.encrypted_click_tracking, r == null ? void 0 : r.encrypted_tracking, r == null ? void 0 : r.viewability_config, f]);
        if (m) return j.jsx(b("CometWatchAndScrollFallbackCTAScreen.react"), {video: a == null ? void 0 : a.video});
        if (l == null || l.__typename !== "Video") return j.jsx(b("CometWatchAndScrollFallbackCTAScreen.react"), {video: a == null ? void 0 : a.video});
        a = (m = l.image) == null ? void 0 : m.uri;
        m = (m = b("qex")._("1795765")) != null ? m : k;
        var v = function () {
            n(!0)
        }, w = function () {
            o.play("user_initiated")
        }, x = h._("\u91cd\u64ad");
        return j.jsx(b("CometTheme.react"), {
            theme: "dark", children: j.jsxs("div", {
                className: "kr520xx4 j9ispegn pmk7jnqg n7fi1qx3 rq0escxv i09qtzwb",
                children: [j.jsx("div", {
                    className: "kr520xx4 j9ispegn pmk7jnqg n7fi1qx3 rq0escxv i09qtzwb",
                    children: a != null && j.jsx(b("CometBackgroundImage.react"), {src: a})
                }), j.jsxs("div", {
                    className: "h4z51re5 osnr6wyh rv4hoivh jktsbyx5 cbu4d94t j83agx80 c6a7hszh kr520xx4 j9ispegn pmk7jnqg n7fi1qx3 rq0escxv i09qtzwb",
                    children: [j.jsx("div", {
                        className: "oud54xpy",
                        children: j.jsx(b("TetraText.react"), {
                            color: "white",
                            type: "body3",
                            children: h._("Watch \u5373\u5c06\u64ad\u653e")
                        })
                    }), j.jsx(b("CometWatchAndScrollContextSection.react"), {video: l}), j.jsxs("div", {
                        className: "km676qkl j83agx80 bp9cbjyn",
                        children: [j.jsx("div", {
                            className: "oi9244e8",
                            children: j.jsx(b("TetraIcon.react"), {
                                "aria-label": x,
                                color: "white",
                                icon: b("fbicon")._(g("534219"), 20),
                                onPress: w
                            })
                        }), j.jsx(b("CometPressable.react"), {
                            onPress: w,
                            children: j.jsx(b("TetraText.react"), {color: "white", type: "bodyLink4", children: x})
                        })]
                    })]
                }), j.jsx("div", {
                    className: "hzruof5a taijpn5t cbu4d94t j83agx80 bp9cbjyn kr520xx4 j9ispegn pmk7jnqg n7fi1qx3 rq0escxv i09qtzwb",
                    children: j.jsxs("div", {
                        className: "oqq733wu jei6r52m",
                        children: [!c && j.jsx(b("CometPressable.react"), {
                            "aria-label": h._("\u64ad\u653e\u4e0b\u4e00\u89c6\u9891"),
                            onPress: u,
                            children: j.jsx(b("CometTahoeEndScreenProgressCircle.react"), {
                                circleDiameter: 44,
                                circleStrokeColor: "var(--base-blue)",
                                circleStrokeWidth: 3,
                                iconSize: 20,
                                isMakingProgress: !c,
                                onProgressDone: u,
                                timeoutSec: m
                            })
                        }), j.jsx("div", {
                            className: "ku2m03ct",
                            children: j.jsx(b("CometPressable.react"), {
                                onPress: v,
                                children: j.jsx(b("TetraText.react"), {
                                    color: "secondary",
                                    type: "bodyLink4",
                                    children: h._("\u53d6\u6d88")
                                })
                            })
                        })]
                    })
                })]
            })
        })
    }
}), null);
__d("VideoPlayerWithWatchAndScrollChaining.react", ["CometLoadingAnimation.react", "CometPlaceholder.react", "CometWatchAndScrollChaining.react", "CometWatchAndScrollVideoContext", "React", "stylex"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React");

    function a(a) {
        var c = a.hidden, d = a.routeTracePolicy;
        a = a.subOrigin;
        var e = g.useContext(b("CometWatchAndScrollVideoContext"));
        e = e == null ? void 0 : e.chainingSeedVideoID;
        return e == null ? null : g.jsx(b("CometPlaceholder.react"), {
            fallback: g.jsx("div", {
                className: "taijpn5t j83agx80 c6a7hszh bp9cbjyn kr520xx4 j9ispegn pmk7jnqg n7fi1qx3 rq0escxv i09qtzwb",
                children: g.jsx("div", {
                    className: "thwo4zme l9j0dhe7 tv7at329",
                    children: g.jsx(b("CometLoadingAnimation.react"), {size: 36})
                })
            }),
            children: g.jsx(b("CometWatchAndScrollChaining.react"), {
                hidden: c,
                routeTracePolicy: d,
                seedVideoID: e,
                subOrigin: a
            })
        })
    }
}), null);
__d("useVideoPlayerWithWatchAndScrollChaining.react", ["CometPrerenderer.react", "React", "VideoPlayerHooks", "VideoPlayerWithWatchAndScrollChaining.react", "qex", "stylex", "useVideoPlayerControllerSubscription"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g = b("React"), h = .8, i = 0;

    function a(a) {
        var c = a.isVideoHomeEligible, d = a.routeTracePolicy, e = a.subOrigin, f = b("VideoPlayerHooks").useIsLive();
        a = b("useVideoPlayerControllerSubscription")(function (a, b) {
            var c, d;
            if (f) c = !1, d = !1; else {
                var e = a.getCurrentState().ended, g = a.getPlayheadPosition();
                a = a.getCurrentState();
                var j = a.duration, k = a.loopCount;
                a = a.loopCurrent;
                j = Math.min(j * h, j - i);
                c = a >= k && e;
                d = b != null && b.shouldPrerender || g > j
            }
            return b != null && b.isVisible === c && b.shouldPrerender === d ? b : {isVisible: c, shouldPrerender: d}
        });
        if (!c || !b("qex")._("1795751")) return {
            isWatchAndScrollChainingComponentRendered: !1,
            watchAndScrollChainingComponent: null
        };
        c = g.jsx(b("CometPrerenderer.react"), {
            prerenderingProps: a, children: function (a) {
                return g.jsx("div", {
                    className: a.hidden === !0 ? "mkhogb32" : "",
                    children: g.jsx(b("VideoPlayerWithWatchAndScrollChaining.react"), babelHelpers["extends"]({
                        routeTracePolicy: d,
                        subOrigin: e
                    }, a))
                })
            }
        });
        return {isWatchAndScrollChainingComponentRendered: a.isVisible, watchAndScrollChainingComponent: c}
    }
}), null);
__d("CometWatchAndScrollCloseButton.react", ["ix", "fbt", "CometPressable.react", "CometRelay", "CometSetWatchAndScrollVideoContext", "React", "TetraIcon.react", "fbicon", "qex", "stylex", "useVideoPlayerDefaultControlsVisibility", "CometWatchAndScrollCloseButton_video.graphql"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i, j = b("React");

    function a(a) {
        a = a.video;
        a = b("CometRelay").useFragment(i !== void 0 ? i : i = b("CometWatchAndScrollCloseButton_video.graphql"), a);
        var c = j.useContext(b("CometSetWatchAndScrollVideoContext")),
            d = b("useVideoPlayerDefaultControlsVisibility")(), e = d.isControlsVisible, f = d.onUserInteraction;
        a = !!(a == null ? void 0 : (d = a.owner) == null ? void 0 : d.has_professional_features_for_watch);
        d = a && !!b("qex")._("1766142");
        return j.jsx("i", {
            className: (d ? "" : "ntk8zc1u pmk7jnqg agsi23a0") + " tkr6xdv7" + (!d && !e ? " kr9hpln1 b5wmifdl" : ""),
            children: j.jsx(b("CometPressable.react"), {
                display: "inline",
                label: h._("\u5173\u95ed\u6eda\u52a8\u5c0f\u5c4f"),
                onPress: function () {
                    c(null), f({name: "exit_watch_and_scroll_video", type: "happened"})
                },
                overlayDisabled: !0,
                children: j.jsx(b("TetraIcon.react"), {
                    color: d ? "primary" : "white",
                    icon: b("fbicon")._(g("478233"), 20)
                })
            })
        })
    }
}), null);
__d("VideoPlayerCometWatchInjectionControl.react", ["ix", "fbt", "React", "VideoPlayerControlIcon.react", "XCometWatchControllerRouteBuilder", "fbicon", "useVideoPlayerPortalingPassthroughProps"], (function (a, b, c, d, e, f, g, h) {
    "use strict";
    e.exports = a;
    var i = b("React");

    function a(a) {
        var c = a.routeTracePolicy, d = a.subOrigin;
        a = a.videoID;
        var e = b("useVideoPlayerPortalingPassthroughProps")();
        e = e.portableVideoID;
        a = b("XCometWatchControllerRouteBuilder").buildURL({v: a});
        var f = h._("\u5728 Watch \u6253\u5f00");
        return i.jsx(b("VideoPlayerControlIcon.react"), {
            icon: b("fbicon")._(g("517763"), 20),
            label: f,
            linkProps: {
                passthroughProps: {portableVideoID: e, portalingRouteTracePolicy: c, portalingSubOrigin: d},
                url: a
            },
            tooltip: f
        })
    }
}), null);
__d("CometWatchAndScroll.react", ["CometInteractionSourceContext", "CometObjectFitContainer.react", "CometPlaceholder.react", "CometRelay", "CometRouterPushViewStackContext", "CometSetWatchAndScrollVideoContext", "CometTrackingCodeProvider.react", "CometUFIVideoPlayerUtils", "CometWarningScreenContext", "CometWatchAndScrollCloseButton.react", "CometWatchAndScrollSoundContext", "CometWatchAndScrollStoryViewabilityLoggerContext", "CometWatchAndScrollVideoContext", "HiddenSubtreeContext", "HiddenSubtreeContextProvider.react", "Locale", "MWChatOpenTabCount.re", "React", "VideoAutoplayLocalScopeProvider.react", "VideoPlayerAutoplayRulesProvider", "VideoPlayerCometWatchInjectionControl.react", "VideoPlayerDefaultControls.react", "VideoPlayerHooks", "VideoPlayerNavigateToTahoeOrFullScreenControl.react", "VideoPlayerRelay.react", "VideoPlayerSurface.react", "VideoPlayerWithLiveVideoIndicator.react", "VideoPlayerWithWatchAndScrollSoundContext.react", "VideoPlayerWithWatchAndScrollWarningScreen.react", "WebPixelRatio", "isRouteTransparent", "qex", "requireCond", "stylex", "useCometRouterMainTabKey", "useStoryViewabilityLogger", "useVideoOriginalDimensionsRelay", "useVideoPlayerDefaultControlsVisibility", "useVideoPlayerWithWatchAndScrollChaining.react", "cr:1767238", "cr:1767834", "CometWatchAndScrollVideoQuery.graphql", "CometWatchAndScrollContainer_video.graphql"], (function (a, b, c, d, e, f) {
    "use strict";
    e.exports = a;
    var g, h, i = b("React"), j = b("VideoPlayerAutoplayRulesProvider").provideAutoplayRules("wns");

    function k() {
        var a = b("MWChatOpenTabCount.re").useHook();
        a = a[0];
        var c = 338, d = 80;
        a = a * c + d;
        return a
    }

    function a() {
        var a = i.useContext(b("CometRouterPushViewStackContext")),
            c = i.useContext(b("CometWatchAndScrollVideoContext")),
            d = i.useContext(b("CometSetWatchAndScrollVideoContext")),
            e = i.useContext(b("CometWatchAndScrollSoundContext"));
        a = (a || []).some(function (a) {
            a = a.route;
            return !b("isRouteTransparent")(a)
        });
        var f = c == null ? void 0 : c.portableVideoID, g = c == null ? void 0 : c.routeTracePolicy,
            h = c == null ? void 0 : c.subOrigin, j = c == null ? void 0 : c.videoID,
            k = c == null ? void 0 : c.chainingSeedVideoID;
        i.useEffect(function () {
            c != null && j != null && k == null && d(babelHelpers["extends"]({}, c, {chainingSeedVideoID: j}))
        }, [k, d, j, c]);
        i.useEffect(function () {
            j == null && (e.setMuted(null), e.setVolume(null))
        }, [e, j]);
        if (j != null && h != null && g != null) return i.jsx(b("HiddenSubtreeContextProvider.react"), {
            isHidden: a,
            children: i.jsx(l, {portableVideoID: f, routeTracePolicy: g, subOrigin: h, videoID: j})
        }); else return null
    }

    function l(a) {
        var c = a.portableVideoID, d = a.routeTracePolicy, e = a.subOrigin;
        a = a.videoID;
        var f = b("CometRelay").useLazyLoadQuery(g !== void 0 ? g : g = b("CometWatchAndScrollVideoQuery.graphql"), {
            scale: b("WebPixelRatio").get(),
            videoID: a
        });
        f = f.video;
        return f == null ? null : i.jsx(b("CometInteractionSourceContext").Provider, {
            value: 54,
            children: i.jsx(b("VideoAutoplayLocalScopeProvider.react"), {
                autoplayLocalRules: j,
                children: i.jsx(b("CometUFIVideoPlayerUtils").CometUFIVideoPlayerStateAndControllerContextProvider, {
                    children: i.jsx(b("CometWarningScreenContext").CometWarningScreenContextProvider, {
                        overlayExists: !1,
                        children: i.jsx(m, {
                            video: f,
                            videoID: a,
                            children: i.jsx(b("VideoPlayerRelay.react"), {
                                initialTracePolicy: d,
                                playerFormat: "watch_scroll",
                                portalingEnabled: !0,
                                portalingFromVideoID: c,
                                portalingPlaceMetaData: {placeDescription: "watch_and_scroll"},
                                subOrigin: e,
                                video: f,
                                children: i.jsx(o, {
                                    isVideoHomeEligible: !!((c = f.owner) == null ? void 0 : c.has_professional_features_for_watch),
                                    routeTracePolicy: d,
                                    subOrigin: e,
                                    video: f,
                                    videoID: a
                                })
                            })
                        })
                    })
                })
            })
        })
    }

    function m(a) {
        var c = a.children, d = a.video;
        a = a.videoID;
        d = b("CometRelay").useFragment(h !== void 0 ? h : h = b("CometWatchAndScrollContainer_video.graphql"), d);
        d = b("useVideoOriginalDimensionsRelay")(d);
        d = d.originalAspectRatio;
        var e = k(), f = i.useContext(b("CometWatchAndScrollStoryViewabilityLoggerContext"));
        a = (f == null ? void 0 : f.videoID) === a;
        var g = b("useStoryViewabilityLogger")({
            clientViewConfig: f == null ? void 0 : f.clientViewConfig,
            encryptedTracking: f == null ? void 0 : f.encryptedTracking,
            position: 0,
            viewabilityConfig: f == null ? void 0 : f.viewabilityConfig
        }), j = g.debuggingInfoLoggers;
        g = g.ref;
        g = i.jsxs("div", {
            className: "a9ndjppc poy2od1o k3cnv2bo esma6hys j83agx80 h0eh6jkb k01i5q8h tqsryivl",
            ref: a ? g : null,
            style: b("Locale").isRTL() ? {left: e} : {right: e},
            children: [j, i.jsx(b("CometObjectFitContainer.react"), {
                contentAspectRatio: d,
                maxHeight: 300,
                objectFitMode: "CONTAINER_WIDTH_BASED_ASPECT_RATIO",
                children: c
            })]
        });
        e = f == null ? void 0 : f.trackingCode;
        return e != null && a ? i.jsx(b("CometTrackingCodeProvider.react"), {trackingCode: e, children: g}) : g
    }

    function n() {
        var a = b("VideoPlayerHooks").useController(), c = i.useContext(b("HiddenSubtreeContext")).hidden;
        i.useEffect(function () {
            c || a.play("user_initiated")
        }, [a, c])
    }

    function o(a) {
        var c = a.isVideoHomeEligible, d = a.routeTracePolicy, e = a.subOrigin, f = a.video, g = a.videoID;
        n();
        a = b("useVideoPlayerDefaultControlsVisibility")();
        a = a.isControlsVisible;
        var h = b("useCometRouterMainTabKey")(), j = b("CometWarningScreenContext").useHasOverlay(),
            k = c && !!b("qex")._("1766142");
        h = h !== "watch" && c && !j;
        j = h && !!b("qex")._("1766142");
        var l = h && !!b("qex")._("1806845");
        h = b("useVideoPlayerWithWatchAndScrollChaining.react")({
            isVideoHomeEligible: c,
            routeTracePolicy: d,
            subOrigin: e
        });
        c = h.isWatchAndScrollChainingComponentRendered;
        h = h.watchAndScrollChainingComponent;
        c = !c;
        var m = f.url, o = i.useMemo(function () {
            return {subOrigin: e, videoTahoeUrl: m}
        }, [e, m]);
        return i.jsxs(b("VideoPlayerSurface.react"), {
            children: [k && b("cr:1767238") && i.jsx(b("cr:1767238"), {
                routeTracePolicy: d,
                subOrigin: e,
                video: f
            }), i.jsx("div", {className: (!c || !a ? "kr9hpln1" : "") + " k4urcfbm ocubwz8y datstx6m d6rk862h"}), c && i.jsx(b("VideoPlayerDefaultControls.react"), {
                renderExpandControl: function (a) {
                    a = a.onUserInteraction;
                    return l ? i.jsx(b("VideoPlayerCometWatchInjectionControl.react"), {
                        routeTracePolicy: d,
                        subOrigin: e,
                        videoID: g
                    }) : i.jsx(b("VideoPlayerNavigateToTahoeOrFullScreenControl.react"), {
                        onUserInteraction: a,
                        subOrigin: "watch_scroll",
                        videoTahoeUrl: m
                    })
                }, subOrigin: "watch_scroll"
            }), k && j && b("cr:1767834") && i.jsx(b("cr:1767834"), {
                routeTracePolicy: d,
                subOrigin: e,
                videoID: g
            }), !k && i.jsx(b("CometWatchAndScrollCloseButton.react"), {video: f}), i.jsx(b("VideoPlayerWithLiveVideoIndicator.react"), {
                hasCometNavOverlay: !1,
                video: f
            }), h, i.jsx(b("CometPlaceholder.react"), {
                fallback: null,
                children: i.jsx(b("VideoPlayerWithWatchAndScrollWarningScreen.react"), {video: f})
            }), i.jsx(b("CometUFIVideoPlayerUtils").CometUFIVideoPlayerStateAndControllerExtractor, {data: o}), i.jsx(b("VideoPlayerWithWatchAndScrollSoundContext.react"), {})]
        })
    }
}), null);
__d("FBRTCConstants", ["keyMirror"], (function (a, b, c, d, e, f) {
    f.convertFromUploadLogLevel = a;
    f.convertToUploadLogLevel = c;
    f.uploadLogLevelString = d;
    f.endCallReasonFromString = e;
    f.callEndReasonString = i;
    f.fullCallEndReasonString = j;
    a = Object.freeze({
        OFFER: "offer",
        ANSWER: "answer",
        ICE_CANDIDATE: "ice_candidate",
        OK: "ok",
        PING: "ping",
        PING_ACK: "ping_ack",
        HANGUP: "hang_up",
        OTHER_DISMISS: "other_dismiss",
        MSG_ACK: "msg_ack",
        PRANSWER: "pranswer",
        ICERESTART_OFFER: "icerestart_offer",
        ICERESTART_ANSWER: "icerestart_answer",
        PCRESTART_OFFER: "pcrestart_offer",
        PCRESTART_ANSWER: "pcrestart_answer",
        SDP_UPDATE: "sdp_update",
        OFFER_ACK: "offer_ack",
        OFFER_NACK: "offer_nack",
        ANSWER_ACK: "answer_ack",
        SET_VIDEO: "set_video",
        VIDEO_REQUEST: "video_request",
        ACK: "ack",
        SWITCH_TO_MULTIWAY: "switch_to_multiway",
        CLIENT_REPORTED_EVENT: "client_reported_event"
    });
    f.PayloadType = a;
    c = Object.freeze({
        CHILD_WINDOW_READY: "rtc_child_window_ready",
        CHILD_WINDOW_START_CALL: "rtc_child_window_start_call",
        CHILD_WINDOW_MESSAGE: "rtc_child_window_message"
    });
    f.ChildWindowMessageType = c;
    d = Object.freeze({
        DIRECT_VIDEO: "direct_video",
        ESCALATED: "escalated",
        ESCALATION_DECLINED: "escalation_declined",
        VOIP: "voip"
    });
    f.CallType = d;
    e = b("keyMirror")({SCREEN: null, CAMERA: null});
    f.MediaContentTypes = e;
    var g = Object.freeze({LL_NIL: 0, LL_BASIC: 1, LL_DEBUG: 2, LL_WARNING: 3, LL_INFO: 4, LL_VERBOSE: 5});
    f.UploadLogLevel = g;
    i = Object.freeze({AUDIO_ONLY: "audio_only", AUDIO_VIDEO: "audio_video", SCREEN_CONTENT: "screen"});
    f.StreamType = i;
    j = Object.freeze({
        CUSTOM_VIDEO_STREAM_SIZE: "CUSTOM_VIDEO_STREAM_SIZE",
        CUSTOM_VIDEO: "CUSTOM_VIDEO",
        FHD_VIDEO: "FHD_VIDEO",
        HD_VIDEO: "HD_VIDEO",
        LQ_VIDEO: "LQ_VIDEO",
        SD_VIDEO: "SD_VIDEO",
        HD_IDEAL_LQ_REQUIRED_VIDEO: "HD_IDEAL_LQ_REQUIRED_VIDEO",
        FHD_IDEAL_LQ_REQUIRED_VIDEO: "FHD_IDEAL_LQ_REQUIRED_VIDEO"
    });
    f.VideoQuality = j;
    a = Object.freeze({
        FHD_HEIGHT: 1080,
        HD_HEIGHT: 720,
        LQ_HEIGHT: 180,
        SD_HEIGHT: 480,
        FHD_WIDTH: 1920,
        HD_WIDTH: 1280,
        LQ_WIDTH: 320,
        SD_WIDTH: 848,
        VLQ_FRAME_RATE: 5,
        LQ_FRAME_RATE: 15,
        FRAME_RATE: 30
    });
    f.RTCConstraints = a;
    c = Object.freeze({
        UNKNOWN: -1,
        IGNORE_CALL: 0,
        HANGUP_CALL: 1,
        IN_ANOTHER_CALL: 2,
        ACCEPT_AFTER_HANGUP: 3,
        NO_ANSWER_TIMEOUT: 4,
        INCOMING_TIMEOUT: 5,
        OTHER_INSTANCE_HANDLED: 6,
        SIGNALING_MESSAGE_FAILED: 7,
        CONNECTION_DROPPED: 8,
        CLIENT_INTERRUPTED: 9,
        WEBRTC_ERROR: 10,
        CLIENT_ERROR: 11,
        NO_PERMISSION: 12,
        OTHER_NOT_CAPABLE: 13,
        NO_UI_ERROR: 14,
        UNSUPPORTED_VERSION: 15,
        CALLER_NOT_VISIBLE: 16,
        CARRIER_BLOCKED: 17,
        OTHER_CARRIER_BLOCKED: 18,
        CLIENT_ENCRYPTION_ERROR: 19,
        INACTIVE_TIMEOUT: 20,
        KILLED: 21,
        TX_ACK_TIMEOUT: 22
    });
    f.CallEndReason = c;
    var h = ["IgnoreCall", "HangupCall", "InAnotherCall", "CallEndAcceptAfterHangUp", "NoAnswerTimeout", "IncomingTimeout", "OtherInstanceHandled", "SignalingMessageFailed", "ConnectionDropped", "ClientInterrupted", "WebRTCError", "ClientError", "NoPermission", "OtherNotCapable", "NoUIShown", "VersionUnsupported", "CallerNotVisible", "CarrierBlocked", "OtherCarrierBlocked", "ClientEncryptionError", "InactiveTimeout", "Killed", "TxAckTimeout"];
    d = Object.freeze({
        CALL_INITIALIZATION_FAILED: "CollabCallInitializationFailed",
        CLOSED_AS_STALE: "CollabClosedAsStale",
        CLOSED_BY_MCU: "CollabClosedByMcu",
        INVALID_MEETING_ID: "CollabInvalidMeetingId",
        LOST_MCU_CONNECTION: "CollabLostMcuConnection",
        LOST_MCU_THRIFT_CONNECTION: "CollabLostMcuThriftConnection",
        LOST_SIP_ADAPTER_CONNECTION: "CollabLostSipAdapterConnection",
        MCU_INVALID_STREAM_CONFIGURATION: "CollabMcuInvalidStreamConfiguration",
        MCU_NO_AUDIO_STREAM: "CollabMcuNoAudioStream",
        REMOTE_PEER_HANGUP: "CollabRemotePeerHangup",
        REMOTE_PEER_REJECT: "CollabRemotePeerReject",
        SIP_CONNECTION_INITIALIZATION_FAILED: "CollabSipConnectionInitializationFailed",
        AUDIO_ONLY_DISALLOWED: "CollabAudioOnlyDisallowed",
        UNKNOWN: "CollabUnknown",
        KILLED_VIA_THRIFT_API: "CollabKilledViaThriftApi"
    });
    f.CollabCallEndSubreason = d;
    e = Object.freeze({
        TOGGLE_SELF_VIEW: 5,
        SUBMIT_STAR_RATING: 6,
        SUBMIT_FEEDBACK: 7,
        START_CALL: 9,
        OPEN_SCREEN_IN_NEW: 10
    });
    f.UIEventType = e;
    i = Object.freeze({ONE_HOUR: "1hour", UNTIL_EIGHT_AM: "8am", ALWAYS: "always"});
    f.CallBlockingConstants = i;
    j = b("keyMirror")({AUDIO: null, VIDEO: null});
    f.IncomingCallDialogTypes = j;
    a = Object.freeze({CUSTOM: "custom", MULTIWAY: "multiway", P2P: "p2p"});
    f.SignalingProtocol = a;
    c = Object.freeze({DOMINANT_SPEAKER: "DOMINANT_SPEAKER", GRID: "GRID"});
    f.GroupVideoViewLayout = c;
    d = Object.freeze({LANDSCAPE: "LANDSCAPE", PORTRAIT: "PORTRAIT"});
    f.Orientation = d;
    e = Object.freeze({UNKNOWN: 0, MEDIA_CONNECTED: 1});
    f.ClientReportedEventType = e;
    i = Object.freeze({PLAN_B: "plan-b", UNIFIED_PLAN: "unified-plan"});
    f.SDPSemantics = i;

    function a(a) {
        switch (a) {
            case g.LL_DEBUG:
                return "d";
            case g.LL_BASIC:
                return "b";
            case g.LL_WARNING:
                return "w";
            case g.LL_INFO:
                return "i";
            case g.LL_VERBOSE:
                return "v";
            case g.LL_NIL:
            default:
                return null
        }
    }

    function c(a) {
        switch (a) {
            case"d":
                return g.LL_DEBUG;
            case"b":
                return g.LL_BASIC;
            case"w":
                return g.LL_WARNING;
            case"i":
                return g.LL_INFO;
            case"v":
                return g.LL_VERBOSE;
            default:
                return g.LL_NIL
        }
    }

    function d(a) {
        switch (a) {
            case g.LL_BASIC:
                return "basic";
            case g.LL_DEBUG:
                return "debug";
            case g.LL_WARNING:
                return "warning";
            case g.LL_INFO:
                return "info";
            case g.LL_VERBOSE:
                return "verbose";
            default:
                return ""
        }
    }

    function e(a) {
        return h.indexOf(a)
    }

    function i(a) {
        a = h[a];
        return !a ? "Unknown" : a
    }

    function j(a, b) {
        return this.callEndReasonString(a) + "_" + (b ? "remote" : "local")
    }
}), null);
__d("FBRTCExperiment", ["FBRTCExperimentsConfig", "QE2Logger"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        a.gen = function (c) {
            var d = {params: {}, auto_exposure: !1, in_experiment: !1};
            d = b("FBRTCExperimentsConfig")[c] || d;
            c = new a(c, d);
            return c
        };
        a.getIncomingCallExperiments = function () {
            return a.gen("rtweb_incoming_call_experiments")
        };
        a.getMediaQualityExperiments = function () {
            return a.gen("rtc_www_media_quality_h2_2018")
        };
        a.getUpsellMessengerDesktopUnsupportedBrowser = function () {
            return a.gen("upsell_messenger_desktop_unsupported_browser_universe")
        };

        function a(a, b) {
            this.$1 = a, this.$2 = b
        }

        var c = a.prototype;
        c.$3 = function () {
            this.$2.auto_exposure && this.logExposure()
        };
        c.logExposure = function () {
            this.$2.in_experiment && b("QE2Logger").logExposureForUser(this.$1)
        };
        c.getParam = function (a, b) {
            if (this.$2.in_experiment) {
                this.$3();
                a = this.$2.params[a];
                if (a !== void 0) return String(a)
            }
            return b
        };
        c.getInt = function (a, b) {
            if (this.$2.in_experiment) {
                this.$3();
                if (this.$2.params[a] !== void 0) return parseInt(this.$2.params[a], 10)
            }
            return b
        };
        c.getBool = function (a, b, c) {
            c === void 0 && (c = !0);
            var d = this.$2.params;
            if (this.$2.in_experiment) {
                c && this.$3();
                if (d[a] !== void 0) return d[a] === "1" || d[a] === 1 || d[a] === "true" || d[a] === !0
            }
            return b
        };
        return a
    }();
    e.exports = a
}), null);
__d("FBRTCIceStatsParser", [], (function (a, b, c, d, e, f) {
    var g = null;
    a = function () {
        function a() {
        }

        a.getInstance = function () {
            g || (g = new a());
            return g
        };
        var b = a.prototype;
        b.extractIceInfo = function (a) {
            var b = [];
            a = a.split("\r\n");
            for (var c = 0; c < a.length; c++) {
                var d = a[c];
                this.$1(d) && b.push({gen: this.$2(d), type: this.$3(d)})
            }
            return b
        };
        b.$1 = function (a) {
            return a.indexOf("candidate:") > -1
        };
        b.$2 = function (a) {
            var b = 0;
            a = a.match(/generation (\d+)/);
            a && (b = parseInt(a[1], 10));
            return b
        };
        b.$3 = function (a) {
            a = a.match(/typ (host|relay|srflx|prflx)/);
            if (a) return a[1]; else return "unknown"
        };
        return a
    }();
    e.exports = a
}), null);
__d("FBRTCLocalUploadLogLevel", ["CurrentUser", "FBRTCConstants"], (function (a, b, c, d, e, f) {
    "use strict";
    f.getUploadLogLevel = a;
    f.getLocalUploadLogLevel = g;

    function a(a) {
        return Math.max(g(), a)
    }

    function g() {
        return b("CurrentUser").isEmployee() || b("CurrentUser").isTestUser() ? b("FBRTCConstants").UploadLogLevel.LL_DEBUG : b("FBRTCConstants").UploadLogLevel.LL_NIL
    }
}), null);
__d("FBRTCMessageType", [], (function (a, b, c, d, e, f) {
    e.exports = Object.freeze({
        JOIN: 0,
        SERVER_MEDIA_UPDATE: 1,
        HANGUP: 2,
        ICE_CANDIDATE: 3,
        RING: 4,
        DISMISS: 5,
        CONFERENCE_STATE: 6,
        ADD_PARTICIPANTS: 7,
        SUBSCRIPTION: 8,
        CLIENT_MEDIA_UPDATE: 9,
        DATA_MESSAGE: 10,
        REMOVE_PARTICIPANTS: 11,
        PING: 18,
        P2P_PROTOCOL: 19,
        UPDATE: 20,
        NOTIFY: 21,
        CONNECT: 22,
        CLIENT_EVENT: 23,
        UNSUBSCRIBE: 25,
        APPROVAL: 26
    })
}), null);
__d("FBRTCRtcResponseStatusCode", [], (function (a, b, c, d, e, f) {
    e.exports = Object.freeze({
        OK: 200,
        BAD_REQUEST: 400,
        UNAUTHORIZED: 401,
        NOT_FOUND: 404,
        METHOD_NOT_ALLOWED: 406,
        CONFLICT: 409,
        CONDITIONAL_REQUEST_FAILED: 412,
        SERVER_INTERNAL_ERROR: 500,
        SERVICE_UNAVAILABLE: 503
    })
}), null);
__d("RTWebLoggingSharedInstance", ["ChannelClientID"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a() {
            this.$1 = b("ChannelClientID").getID()
        }

        var c = a.prototype;
        c.getDeviceID = function () {
            return this.$1
        };
        return a
    }();
    c = new a();
    e.exports = c
}), null);
__d("FBRTCSupport", ["UserAgent", "gkx", "qex"], (function (a, b, c, d, e, f) {
    var g = {
        isWebrtcSupported: function () {
            return b("UserAgent").isBrowser("Chrome >= 28") || b("UserAgent").isBrowser("Firefox >= 25") || b("UserAgent").isBrowser("Edge >= 15.15042") && b("gkx")("1341692") && !b("gkx")("1680228") || b("UserAgent").isBrowser("Edge (Chromium Based) >= 74.1") || b("UserAgent").isBrowser("Opera >= 20") || g.isSupportedSafariVersion() && b("gkx")("875718") || b("UserAgent").isBrowser("Oculus Browser >= 6") && b("gkx")("1188589") || this.isUnifiedEnabledForCallsExperimentation()
        }, isGroupCallWebtrcSupported: function () {
            return b("UserAgent").isBrowser("Chrome >= 28") || b("UserAgent").isBrowser("Edge (Chromium Based) >= 74.1") || b("UserAgent").isBrowser("Opera >= 20") || g.isSupportedSafariVersion() && b("gkx")("875718") || this.isUnifiedEnabledForCallsExperimentation()
        }, isUnifiedEnabledForCallsExperimentation: function () {
            return b("qex")._("1265876") || !1
        }, isCollabSupported: function () {
            return g.isWebrtcSupported() && (!!b("gkx")("1738376") || b("UserAgent").isBrowser("Chrome >= " + 65))
        }, canUseUnifiedPlan: function (a) {
            var c = b("UserAgent").isBrowser("Chrome >= 73") || b("UserAgent").isBrowser("Safari >= 12.2");
            if (a) return c;
            a = b("gkx")("919244") && c;
            return a || b("UserAgent").isBrowser("Mobile Safari >= 12.1.1")
        }, isSupportedSafariVersion: function () {
            return b("UserAgent").isBrowser("Safari >= 12.1") || b("UserAgent").isBrowser("Mobile Safari >= 12.1")
        }, isMobileDevice: function () {
            return b("UserAgent").isPlatform("Android") || b("UserAgent").isPlatform("iOS")
        }, isVideoFilterEffectSupported: function () {
            return !g.isMobileDevice() && (b("UserAgent").isBrowser("Chrome >= 51") || b("UserAgent").isBrowser("Opera >= 36"))
        }, videoEscalationByUnmuteWorkaround: function () {
            return b("UserAgent").isBrowser("Firefox < 60") || b("UserAgent").isBrowser("Edge")
        }, isChromiumBased: function () {
            return b("UserAgent").isBrowser("Chrome") || b("UserAgent").isBrowser("Opera") || b("UserAgent").isBrowser("Edge (Chromium Based) >= 74.1")
        }
    };
    e.exports = g
}), null);
__d("RTWebUserActionLogger", ["CurrentUser", "FBRTCConsoleLogger", "FBRTCSupport", "RtcWebUserActionsDebugFalcoEvent", "RtcWebUserActionsFalcoEvent", "RTWebLoggingSharedInstance", "ZenonSDESKeyDetector", "immutable", "performanceNow", "unrecoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = b("immutable").Map;
    a = function () {
        function a() {
            this.$2 = h(), this.$3 = new Set(), this.$4 = new Set(), this.$5 = b("RTWebLoggingSharedInstance").getDeviceID(), this.$6 = this.$7(), this.clearCache()
        }

        var c = a.prototype;
        c.clearCache = function () {
            this.$1 = {
                callID: void 0,
                callType: void 0,
                mediaType: void 0,
                conferenceName: void 0,
                conferenceState: void 0
            }
        };
        c.logImpression = function (a) {
            this.logEvent(babelHelpers["extends"]({eventName: "impression"}, a))
        };
        c.logPreCallImpression = function (a) {
            this.clearCache(), this.logImpression(a)
        };
        c.logPreCallClick = function (a) {
            this.clearCache(), this.logClick(a)
        };
        c.logClick = function (a) {
            this.logEvent(babelHelpers["extends"]({eventName: "tap"}, a))
        };
        c.logError = function (a) {
            this.logEvent(babelHelpers["extends"]({eventName: "error"}, a))
        };
        c.startTimer = function (a) {
            var c = (g || (g = b("performanceNow")))();
            this.$2 = this.$2.set(a, c);
            this.logCheckpoint({checkpoint: a + "_timerStart"});
            this.$8(a, {startTime: c})
        };
        c.logStopTimer = function (a) {
            var b = a.checkpointName === void 0 ? a.timerName : a.checkpointName, c = a.event || {};
            c.timeElapsed = this.$9(a.timerName);
            this.logCheckpoint(babelHelpers["extends"]({checkpoint: b + "_timerEnd"}, c));
            return c.timeElapsed
        };
        c.logCheckpoint = function (a) {
            this.logEvent(babelHelpers["extends"]({eventName: "checkpoint"}, a))
        };
        c.$10 = function (a) {
            return a === null || a === void 0
        };
        c.logEvent = function (a) {
            if (b("ZenonSDESKeyDetector")(a)) throw b("unrecoverableViolation")("RTWebUserActionLogger event contains SDES crypto key! This log entry must be removed!", "rtc_www");
            var c = this.$1;
            c.callID = this.$10(a.callID) ? c.callID : a.callID;
            c.callType = a.callType || c.callType;
            c.conferenceState = a.conferenceState || c.conferenceState;
            c.conferenceName = this.$10(a.conferenceName) ? c.conferenceName : a.conferenceName;
            c.isCaller = a.isCaller == null ? c.isCaller : a.isCaller;
            c.mediaType = a.mediaType || c.mediaType;
            this.$11(a, c);
            c = this.$12(a, c);
            this.$8(a.eventName, c)
        };
        c.$12 = function (a, c) {
            var d = {
                call_type: c.callType,
                client_time: Date.now().toString(),
                device_id: this.$5,
                error_domain: a.errorDomain,
                error_type: a.errorType,
                component: a.component,
                conference_state: c.conferenceState,
                event: a.eventName,
                media_type: c.mediaType,
                page: this.$6,
                call_id: c.callID,
                conference_name: c.conferenceName,
                surface: a.surface,
                checkpoint: a.checkpoint,
                event_time_elapsed: (a = a.timeElapsed) == null ? void 0 : a.toString(),
                is_caller: c.isCaller,
                codebase_version: "Old Codebase"
            };
            b("RtcWebUserActionsFalcoEvent").log(function () {
                return d
            });
            return d
        };
        c.$11 = function (a, c) {
            var d = {
                call_type: c.callType,
                client_time: Date.now().toString(),
                device_id: this.$5,
                error_domain: a.errorDomain,
                error_type: a.errorType,
                component: a.component,
                conference_state: c.conferenceState,
                event: a.eventName,
                media_type: c.mediaType,
                page: this.$6,
                call_id: c.callID,
                conference_name: c.conferenceName,
                surface: a.surface,
                checkpoint: a.checkpoint,
                event_time_elapsed: (a = a.timeElapsed) == null ? void 0 : a.toString(),
                is_caller: c.isCaller,
                codebase_version: "Old Codebase"
            };
            b("RtcWebUserActionsDebugFalcoEvent").log(function () {
                return d
            });
            return d
        };
        c.getCallType = function (a, b) {
            b === void 0 && (b = !1);
            if (a === null || a === void 0) return null;
            if (a) return "mw"; else if (b) return "escalated"; else return "p2p"
        };
        c.getAudioVideoComponent = function (a) {
            return a === null || a === void 0 ? null : a ? "audio_button" : "video_button"
        };
        c.getMediaType = function (a, b) {
            b === void 0 && (b = !1);
            if (b) return "escalated"; else if (a) return "audio"; else return "video"
        };
        c.logErrorOnceforDomain = function (a, b) {
            this.$3.has(a) || (this.$3.add(a), this.logError({errorDomain: a, errorType: b.toString()}))
        };
        c.logCheckpointOnceForDomain = function (a) {
            var b = a.checkpoint;
            this.$4.has(b) || (this.$4.add(b), this.logCheckpoint(a))
        };
        c.clearLoggedDomains = function () {
            this.$3.clear(), this.$4.clear()
        };
        c.getWebLoggerInfoFromStore = function (a) {
            a = a.callInfo;
            var b = a.callID, c = a.conferenceName;
            a = a.conferenceState;
            return {callID: b, conferenceName: c, conferenceState: a}
        };
        c.$7 = function () {
            if (b("FBRTCSupport").isMobileDevice()) return "mweb"; else if (b("CurrentUser").isWorkUser()) return "workplace";
            var a = window.location.hostname;
            if (a.search("facebook") !== -1) return "facebook"; else if (a.search("messenger") !== -1) return "messenger_dot_com";
            return a
        };
        c.$9 = function (a) {
            var c = this.$2.get(a);
            if (c) {
                this.$2 = this.$2.remove(a);
                return parseInt((g || (g = b("performanceNow")))() - c, 10)
            }
            return null
        };
        c.$8 = function (a, c) {
            a = a == null ? "null" : a;
            b("FBRTCConsoleLogger").getInstance().getLogHistory().log(a, JSON.stringify(c))
        };
        return a
    }();
    c = new a();
    e.exports = c
}), null);
__d("RtcCallActionFalcoEvent", ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("getFalcoLogPolicy_DO_NOT_USE")("1744335");
    c = b("FalcoLoggerInternal").create("rtc_call_action", a);
    e.exports = c
}), null);
__d("RtcInfraReliabilityFalcoEvent", ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("getFalcoLogPolicy_DO_NOT_USE")("1744336");
    c = b("FalcoLoggerInternal").create("rtc_infra_reliability", a);
    e.exports = c
}), null);
__d("FBRTCLogger", ["BanzaiODS", "CurrentUser", "FacebookAppIDs", "FBLogger", "FBRTCConsoleLogger", "FBRTCMessageType", "FBRTCRtcResponseStatusCode", "MarauderLogger", "P2PReliabilityTypedLogger", "RtcCallActionFalcoEvent", "RtcInfraReliabilityFalcoEvent", "RTWebLoggingSharedInstance", "RTWebUserActionLogger", "UserAgentData", "gkx", "pageID", "requireCond", "cr:1440831"], (function (a, b, c, d, e, f) {
    var g = "rtc_client_call_summary", h = "client_error", i = "client_event", j = "info", k = "received_message",
        l = "send_failed", m = "send_succeeded", n = "sent_message", o = "rtc_tslog", p = "RECEIVED_RESPONSE",
        q = "RECEIVED_REQUEST", r = "PROCESSING_REQUEST", s = "PROCESSED_REQUEST", t = "PROCESSING_REQUEST_FAILED",
        u = "PROCESSED_RESPONSE", v = "START_PROCESSING_RESPONSE", w = "SENDING_RESPONSE", x = "RELAY_CONNECTED",
        y = "SET_REMOTE_DESCRIPTION", z = "SENDING_REQUEST", A = "SENT_REQUEST", B = "SENT_RESPONSE",
        C = "SEND_REQUEST_FAILED", D = "SEND_RESPONSE_FAILED", E = null;
    a = function () {
        a.getInstance = function () {
            E == null && (E = new a());
            return E
        };
        a.multiwayMessageTypeName = function (a) {
            switch (a) {
                case b("FBRTCMessageType").JOIN:
                    return "JOIN";
                case b("FBRTCMessageType").SERVER_MEDIA_UPDATE:
                    return "SERVER_MEDIA_UPDATE";
                case b("FBRTCMessageType").HANGUP:
                    return "HANGUP";
                case b("FBRTCMessageType").ICE_CANDIDATE:
                    return "ICE_CANDIDATE";
                case b("FBRTCMessageType").RING:
                    return "RING";
                case b("FBRTCMessageType").DISMISS:
                    return "DISMISS";
                case b("FBRTCMessageType").CONFERENCE_STATE:
                    return "CONFERENCE_STATE";
                case b("FBRTCMessageType").ADD_PARTICIPANTS:
                    return "ADD_PARTICIPANTS";
                case b("FBRTCMessageType").SUBSCRIPTION:
                    return "SUBSCRIPTION";
                case b("FBRTCMessageType").CLIENT_MEDIA_UPDATE:
                    return "CLIENT_MEDIA_UPDATE";
                case b("FBRTCMessageType").DATA_MESSAGE:
                    return "DATA_MESSAGE";
                case b("FBRTCMessageType").REMOVE_PARTICIPANTS:
                    return "REMOVE_PARTICIPANTS";
                case b("FBRTCMessageType").CONNECT:
                    return "CONNECT";
                case b("FBRTCMessageType").PING:
                    return "PING";
                case b("FBRTCMessageType").P2P_PROTOCOL:
                    return "P2P_PROTOCOL";
                case b("FBRTCMessageType").UPDATE:
                    return "UPDATE";
                case b("FBRTCMessageType").NOTIFY:
                    return "NOTIFY";
                case b("FBRTCMessageType").CLIENT_EVENT:
                    return "CLIENT_EVENT";
                case b("FBRTCMessageType").UNSUBSCRIBE:
                    return "UNSUBSCRIBE"
            }
            return a.toString()
        };

        function a() {
            var a;
            this.$2 = JSON.stringify({
                version: 2,
                device: (a = b("UserAgentData")).deviceName,
                os: a.platformName,
                os_version: a.platformFullVersion,
                browser: a.browserName,
                browser_version: a.browserFullVersion
            });
            this.$3 = JSON.stringify({
                version: 2,
                device: a.deviceName,
                os: a.platformName,
                os_version: a.platformFullVersion,
                browser: a.browserName,
                browser_version: a.browserFullVersion,
                msg_source: "web"
            });
            this.$1 = b("RTWebLoggingSharedInstance").getDeviceID();
            this.$4 = b("FacebookAppIDs").MQTT_WEB
        }

        var c = a.prototype;
        c.logToConsole = function (a) {
            this.$5(null, null, "Console", a)
        };
        c.$6 = function (a) {
            return new (b("P2PReliabilityTypedLogger"))().setExtra(this.$2).setDeviceID(this.$1).setRawTime(Date.now()).setServiceName("WEB_CLIENT").setMsgType(a.toUpperCase()).setAppID(this.$4.toString())
        };
        c.logMultiwayMessageReceived = function (b, c) {
            var d = a.multiwayMessageTypeName(b.type());
            this.$5(b.conferenceName(), c, "Received MW", d + ", " + b.transactionId(), d === "EXPERIMENT" ? "DEBUG" : "INFO");
            b.isRequest() && this.$7(q, b.conferenceName(), b.serverInfoData(), b.transactionId(), a.multiwayMessageTypeName(b.type()), b.header().retryCount, c ? c.toString() : null)
        };
        c.$8 = function (b, c, d, e) {
            if (!c.isRequest()) return;
            this.$7(b, c.conferenceName(), c.serverInfoData(), c.transactionId(), a.multiwayMessageTypeName(c.type()), c.header().retryCount, d ? d.toString() : null, e ? e : null)
        };
        c.logServerRequestStartProcessing = function (a, b) {
            this.$8(r, a, b)
        };
        c.logServerRequestDoneProcessing = function (a, b) {
            this.$8(s, a, b)
        };
        c.logServerRequestFailedProcessing = function (a, b, c) {
            this.$8(t, a, b, c)
        };
        c.logMultiwayResponseReceived = function (c, d) {
            try {
                var e = c.header.responseStatusCode;
                e === b("FBRTCRtcResponseStatusCode").OK && this.$7(p, c.header.conferenceName, c.header.serverInfoData, c.header.transactionId, a.multiwayMessageTypeName(c.header.type), c.header.retryCount, d)
            } catch (a) {
                this.logErrorWithoutID(a)
            }
        };
        c.logMultiwayResponseStartProcessing = function (b, c, d) {
            this.$7(v, b.conferenceName, b.serverInfoData, b.transactionId, a.multiwayMessageTypeName(b.type), b.retryCount, c, d)
        };
        c.logMultiwayResponseProcessed = function (c, d, e) {
            try {
                var f = c.responseStatusCode;
                f === b("FBRTCRtcResponseStatusCode").OK && this.$7(u, c.conferenceName, c.serverInfoData, c.transactionId, a.multiwayMessageTypeName(c.type), c.retryCount, d, e)
            } catch (a) {
                this.logErrorWithoutID(a)
            }
        };
        c.logMultiwayResponseProcessedFromResponsePayload = function (a, c, d) {
            try {
                var e = a.header.responseStatusCode;
                e === b("FBRTCRtcResponseStatusCode").OK && this.logMultiwayResponseProcessed(a.header, c, d)
            } catch (a) {
                this.logErrorWithoutID(a)
            }
        };
        c.logSendingMultiwayMessage = function (b) {
            this.$7(b.isRequest() ? z : w, b.conferenceName(), b.serverInfoData(), b.transactionId(), a.multiwayMessageTypeName(b.type()), b.header().retryCount, b.header().clientSessionId)
        };
        c.logSentMultiwayMessage = function (b) {
            this.$7(b.isRequest() ? A : B, b.conferenceName(), b.serverInfoData(), b.transactionId(), a.multiwayMessageTypeName(b.type()), b.header().retryCount, b.header().clientSessionId)
        };
        c.logSendMultiwayMessageFailed = function (b) {
            this.$7(b.isRequest() ? C : D, b.conferenceName(), b.serverInfoData(), b.transactionId(), a.multiwayMessageTypeName(b.type()), b.header().retryCount, b.header().clientSessionId)
        };
        c.logSendMultiwayMessageFailure = function (a) {
            b("BanzaiODS").bumpEntityKey(4083, "scotch_multiway", "send_message_failure"), b("BanzaiODS").flush(), b("RTWebUserActionLogger").logCheckpoint({checkpoint: "Failed to send MW message, error: " + a})
        };
        c.logMultiwayRelayConnected = function (a, b, c) {
            this.$7(x, a, b, null, null, null, c)
        };
        c.logMultiwaySetRemoteDescription = function (b) {
            this.$7(y, b.conferenceName, b.serverInfoData, b.transactionId, a.multiwayMessageTypeName(b.type), b.retryCount, b.clientSessionId)
        };
        c.$7 = function (a, c, d, e, f, g, h, i) {
            var j = this;
            b("RtcInfraReliabilityFalcoEvent").log(function () {
                return {
                    event_name: a,
                    client_session_id: h,
                    data: {extra_data: i},
                    tc: Date.now(),
                    conference_name: c,
                    server_info_data: d,
                    message_type: f,
                    transaction_id: e,
                    retry_count: g,
                    web_device_id: j.$1,
                    web_app_id: j.$4,
                    version: "0"
                }
            })
        };
        c.logReceivedMessage = function (a, c, d) {
            var e = c ? c.toString() : null, f = {call_id: c, from: a, msg_id: d.msg_id, type: d.type};
            d.sdp && (f.content = d.sdp);
            d.ack_id && (f.ack_msg_id = d.ack_id);
            var g = d.type || d.msgType;
            this.$6(g).setEventName("CLIENT_RECEIVED_MESSAGE").setCallID(e).setMsgID(d.msg_id).setSenderID(a).setReceiverID(b("CurrentUser").getID()).setExtra(this.$3).log();
            this.$9(k, f);
            this.$5(a, c, "Received P2P", d.type + ", " + d.msg_id)
        };
        c.logSentMessage = function (a, c, d) {
            var e = c ? c.toString() : null, f = {call_id: c, msg_id: d.msg_id, to: a, type: d.type};
            d.sdp && (f.content = d.sdp);
            d.ack_id && (f.ack_msg_id = d.ack_id);
            this.$6(d.type).setEventName("CLIENT_SENDING_MESSAGE").setCallID(e).setMsgID(d.msg_id).setSenderID(b("CurrentUser").getID()).setReceiverID(a).log();
            this.$9(n, f);
            this.$5(a, c, "Sent", d.type + ", " + d.msg_id)
        };
        c.logSentMessageSuccess = function (a, c, d, e) {
            var f = {call_id: c, msg_id: e, peer_id: a, type: d};
            c = c ? c.toString() : null;
            this.$6(d).setEventName("CLIENT_TRANSPORT_SUCCESS").setCallID(c).setMsgID(e.toString()).setSenderID(b("CurrentUser").getID()).setReceiverID(a).log();
            this.$9(m, f)
        };
        c.logSentMessageFailure = function (a, c, d, e, f) {
            var g = {call_id: c, error_code: f, msg_id: e, peer_id: a, type: d}, h = c ? c.toString() : null;
            this.$6(d).setEventName("CLIENT_TRANSPORT_ERROR").setCallID(h).setMsgID(e.toString()).setSenderID(a).setSenderID(b("CurrentUser").getID()).setReceiverID(a).setResultCode(f).log();
            this.$9(l, g);
            this.$5(a, c, "Send Failed", d + ", " + f)
        };
        c.logCallAction = function (a, c, d, e, f) {
            var g = {call_action: d, call_id: c, content: e, peer_id: a};
            f && (g.trigger = f);
            b("RtcCallActionFalcoEvent").logImmediately(function () {
                return {
                    action_name: d,
                    call_id: "",
                    audio_output_name: "UNKNOWN",
                    rownum: -1,
                    logging_instance_id: -1,
                    logger_schema_version: -1,
                    caller_id: "",
                    call_type: "UNKNOWN",
                    session_type: "UNKNOWN",
                    seconds_since_call_start: -1,
                    ms_since_epoch: -1,
                    ms_steady: -1,
                    device_orientation: "UNKNOWN",
                    interface_orientation: "UNKNOWN",
                    battery_level: -1,
                    battery_plugged_state: "UNKNOWN",
                    battery_charge_state: "UNKNOWN",
                    battery_mode: "UNKNOWN",
                    camera_facing: "UNKNOWN"
                }
            });
            this.$5(a, c, "CallAction", d + ", " + JSON.stringify(e))
        };
        c.logEvent = function (a, b, c) {
            var d = {call_id: b, content: c, peer_id: a};
            this.$9(i, d);
            this.$5(a, b, "Event", JSON.stringify(c))
        };
        c.logInfo = function (a, b, c) {
            var d = {call_id: b, content: c, peer_id: a};
            this.$9(j, d);
            this.$5(a, b, "Info", JSON.stringify(c))
        };
        c.logError = function (a, c, d) {
            var e, f = {call_id: c, content: d, peer_id: a};
            e = b("FBLogger")("rtweb").addMetadata("RT_WEB", "CALL_ID", "" + ((e = c) != null ? e : "null")).addMetadata("RT_WEB", "PEER_ID", "" + ((e = a) != null ? e : "null"));
            if (typeof d === "string") e.warn(d); else {
                var g = JSON.stringify(d);
                e.warn((e = g) != null ? e : "Unknown error")
            }
            this.$9(h, f);
            this.$5(a, c, "Error", JSON.stringify(d))
        };
        c.logErrorWithoutID = function (a) {
            this.logError(null, null, a)
        };
        c.logEndCallSummary = function (a, c) {
            c === void 0 && (c = !1);
            if (!a) return;
            b("RTWebUserActionLogger").logCheckpoint({
                checkpoint: "Attempting to upload CallSummary",
                callID: a.callID
            });
            var d = {
                call_id: a.callID,
                channel_session_id: a.deviceID,
                content: a.toString(),
                local_call_id: a.localCallID,
                peer_id: a.peerID,
                tag: "endcallstats"
            }, e = babelHelpers["extends"]({}, d, a.getExtraInfo());
            b("cr:1440831") && b("cr:1440831").logCallSummaryHeartbeat(a, "ecs_logged");
            this.$9(g, e, c);
            this.$5(a.peerID, a.callID, "Call Summary", JSON.stringify(d));
            b("RTWebUserActionLogger").logCheckpoint({checkpoint: "Complete uploading CallSummary", callID: a.callID})
        };
        c.logTsLogData = function (a, c, d, e, f) {
            f === void 0 && (f = null);
            if (!c || !d || a.streams.length === 0) return;
            b("RTWebUserActionLogger").logCheckpoint({checkpoint: "Attempting to upload tslog", callID: d});
            var g = c;
            f && (g = null);
            this.$9(o, {call_id: d, conf_name: e, time_series1: JSON.stringify(a), serv_info: f, peer_id: g}, !0);
            this.$5(c, d, "TSLog Data", JSON.stringify(a));
            b("RTWebUserActionLogger").logCheckpoint({checkpoint: "Complete uploading tslog", callID: d})
        };
        c.doesContainSensitiveData = function (a) {
            return String(a).indexOf("crypto") > -1
        };
        c.redactSensitiveData = function (a, b) {
            if (a !== g) {
                a = JSON.stringify(b);
                if (this.doesContainSensitiveData(a)) return {redacted: !0}
            }
            return b
        };
        c.$9 = function (a, c, d) {
            d === void 0 && (d = !1);
            var e = "basic";
            d && (e = b("gkx")("1488912") ? "vital" : "signal");
            b("gkx")("1784971") && (e = "vital");
            c.page_id = b("pageID");
            d = this.redactSensitiveData(a, c);
            b("FBRTCConsoleLogger").getInstance().getLogHistory().log(a, d);
            b("MarauderLogger").log(a, b("FBRTCConsoleLogger").MODULE_NAME, d, void 0, void 0, void 0, void 0, e)
        };
        c.$5 = function (a, c, d, e, f) {
            f === void 0 && (f = "DEBUG"), b("FBRTCConsoleLogger").getInstance().log(this.doesContainSensitiveData(e) ? "redacted" : e, a, c, d, f)
        };
        return a
    }();
    e.exports = a;
    a.CallAction = Object.freeze({
        ANSWER_CALL: "answer_call",
        AUTO_DISABLE_VIDEO: "auto_disable_video",
        DENIED_PERMISSION: "denied_permission",
        END_CALL: "end_call",
        FAILED_GETTING_URI: "failed_getting_uri",
        OLD_URI: "old_uri",
        OPEN_POPUP: "open_popup",
        POPUP_OPENED: "popup_opened",
        RECEIVED_CALL: "received_call",
        SET_FULLSCREEN_ON: "set_fullscreen_on",
        SET_MUTE: "set_mute",
        SET_SELF_VIEW_ON: "set_self_view_on",
        SET_VIDEO_ON: "set_video_on",
        START_CALL: "start_call",
        START_SKYPE: "start_skype",
        TRY_NEW: "try_new",
        USER_SETTINGS_CHANGED: "user_settings_changed"
    });
    a.Trigger = Object.freeze({
        ADMIN_MESSAGE: "admin_message",
        CHAT_TAB_ICON_TOUR: "chat_tab_icon_tour",
        CHAT_TAB_ICON: "chat_tab_icon",
        CHAT_TAB_VOICE_ICON: "chat_tab_voice_icon",
        MULTIWAY_ADMIN_MESSAGE_JOIN_AUDIO_CALL_BUTTON: "multiway_admin_message_join_audio_call_button",
        MULTIWAY_ADMIN_MESSAGE_JOIN_VIDEO_CALL_BUTTON: "multiway_admin_message_join_video_call_button",
        MULTIWAY_ADMIN_MESSAGE_START_AUDIO_CALL_BUTTON: "multiway_admin_message_start_audio_call_button",
        MULTIWAY_ADMIN_MESSAGE_START_VIDEO_CALL_BUTTON: "multiway_admin_message_start_video_call_button",
        MULTIWAY_CHAT_TAB_SHEET_JOIN_CALL_BUTTON: "multiway_chat_tab_sheet_join_call_button",
        MULTIWAY_POPUP_START_CALL_BUTTON: "multiway_popup_start_call_button",
        MULTIWAY_THREAD_HEADER_AUDIO_BUTTON: "multiway_thread_header_audio_button",
        MULTIWAY_THREAD_HEADER_JOIN_AUDIO_CALL_AUDIO_BUTTON: "multiway_thread_header_join_audio_call_audio_button",
        MULTIWAY_THREAD_HEADER_JOIN_AUDIO_CALL_VIDEO_BUTTON: "multiway_thread_header_join_audio_call_video_button",
        MULTIWAY_THREAD_HEADER_JOIN_VIDEO_CALL_AUDIO_BUTTON: "multiway_thread_header_join_video_call_audio_button",
        MULTIWAY_THREAD_HEADER_JOIN_VIDEO_CALL_VIDEO_BUTTON: "multiway_thread_header_join_video_call_video_button",
        MULTIWAY_THREAD_HEADER_VIDEO_BUTTON: "multiway_thread_header_video_button",
        MULTIWAY_THREAD_LIST_JOIN_CALL_BUTTON: "multiway_thread_list_join_call_button",
        POPUP_CALL_START_BUTTON: "popup_start_call_button",
        REDIAL_BUTTON: "redial_button",
        RESET_CALL: "install_screen_sharing_ext_dialog",
        RETURN_CALL: "return_call",
        SKYPE_DEPRECATION_DIALOG: "skype_deprecation_dialog",
        TIMELINE_PROFILE: "timeline_profile",
        VC_PRECALL_SETUP: "vc_precall_setup",
        WORKPLACE_GROUP_CALL: "workplace_group_call",
        WORKPLACE_P2P_CALL: "workplace_p2p_call",
        UNKNOWN: "unknown",
        WEB_MESSENGER: "web_messenger",
        TEAMWORK_USER_VIDEO_CALL_ITEM: "teamwork_user_video_call_item",
        TEAMWORK_USER_AUDIO_CALL_ITEM: "teamwork_user_audio_call_item"
    });
    a.Key = Object.freeze({
        BATTERY_START: "battery_start",
        BATTERY_END: "battery_end",
        CALL_TYPE: "call_type",
        CONNECTION_EFFECTIVE_TYPE: "conn_effective_type",
        CPU_CORES: "cpu_cores",
        DEVICE_INFO: "device_info",
        DEVICE_MEMORY: "device_memory",
        DEVICE_PIXEL_RATIO: "device_pixel_ratio",
        INITIATED_BY_PAGE_ID: "initiated_by_page_id",
        INITIATED_BY_APP_ID: "initiated_by_app_id",
        PEER_IS_MOBILE: "peer_is_mobile",
        RATING_SHOWN: "rating_shown",
        RATING: "rating5",
        EFFECT_COUNT: "rtc_effect_count",
        EFFECT_TOTAL_DURATION: "rtc_effect_total_duration",
        VIDEO_DURATION_WITH_FILTER: "rtc_video_duration_with_filter_enabled",
        SCREEN_DURATION: "screen_duration",
        SURVEY_CHOICE: "survey_choice",
        SURVEY_DETAILS: "survey_details",
        SURVEY_SHOWN: "survey_shown",
        MEDIA_INPUTS: "media_inputs",
        VIDEO_CAPABILITIES: "video_capabilities",
        CB_ACTIVE: "cb_active",
        YEAR_CLASS: "year_class",
        DESKTOP_DEVICE_CLASS: "desktop_device_class",
        IS_BACKGROUNDED: "is_backgrounded",
        APPLICATION_STATE: "application_state",
        MAX_CONCURRENT_CONNECTED_PARTICIPANTS: "max_concurrent_connected_participants"
    })
}), null);
__d("FBRTCMediaMetricTracker", ["performanceNow"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = {
        count: 0,
        current: -1,
        first: -1,
        min: -1,
        max: -1,
        mean: -1,
        median: -1,
        startedTime: -1,
        total: -1,
        updatedTime: -1
    };
    a = function () {
        function a() {
            this.$2 = {}, this.$3 = {}, this.$4 = {}, this.$1 = {}, this.$5 = null
        }

        var c = a.prototype;
        c.updateVideoSender = function (a, b, c) {
            if (b === "video" && this.$5 !== null && this.$5 !== c && this.$4[a]) {
                b = a + ((b = this.$5) != null ? b : "");
                this.$4[b] = babelHelpers["extends"]({}, this.$4[a]);
                delete this.$4[a]
            }
            this.$5 = c
        };
        c.getVideoStreamReportKeys = function () {
            return Object.keys(this.$4)
        };
        c.getJitterStreamReportKey = function () {
            return Object.keys(this.$2)
        };
        c.getAudioStreamReportKeys = function () {
            return Object.keys(this.$3)
        };
        c.addJitterBufferDelay = function (a, b) {
            b !== null && b !== void 0 && (this.$2[a] || (this.$2[a] = []), this.$2[a].push(b))
        };
        c.setHistResScale = function (a, b, c) {
            this.$1[a] || (this.$1[a] = {contentType: b, histogram: []}), this.$1[a] = {contentType: b, histogram: c}
        };
        c.getHistResScale = function (a) {
            return this.$1[a] ? {contentType: this.$1[a].contentType, histogram: this.$1[a].histogram} : null
        };
        c.setVideoContentType = function (a, b) {
            this.$4[a] || (this.$4[a] = {}), this.$4[a].contentType = b
        };
        c.getVideoContentType = function (a) {
            return this.$4[a].contentType
        };
        c.setVideoMetric = function (a, b, c) {
            c !== null && c !== void 0 && (this.$4[a] || (this.$4[a] = {}), this.$4[a][b] = this.$6(this.$4[a][b], c))
        };
        c.$6 = function (a, c) {
            if (a !== null && a !== void 0) {
                a.current = c;
                a.updatedTime = (g || (g = b("performanceNow")))();
                a.total += c;
                a.count += 1;
                a.min = Math.min(a.min, c);
                a.max = Math.max(a.max, c);
                a.mean = a.total / a.count;
                return a
            } else return {
                min: c,
                max: c,
                total: c,
                count: 1,
                mean: c,
                first: c,
                startedTime: (g || (g = b("performanceNow")))(),
                current: c,
                updatedTime: g()
            }
        };
        c.getVideoStreamDuration = function (a, b) {
            return this.$4[a] != null && this.$4[a][b] != null ? this.$4[a][b].count : 0
        };
        c.getAudioStreamDuration = function (a, b) {
            return this.$3[a] != null && this.$3[a][b] != null ? this.$3[a][b].count : 0
        };
        c.getVideoMetric = function (a, b) {
            return this.$4[a] ? this.$4[a][b] : null
        };
        c.addMetricStat = function (a, b, c) {
            c !== null && c !== void 0 && (this.$3[a] || (this.$3[a] = {}), this.$3[a][b] = this.$6(this.$3[a][b], c))
        };
        c.getMetricStats = function (a, b) {
            return !this.$3[a] ? null : this.$3[a][b]
        };
        c.getJitterBufferStats = function (a) {
            if (!this.$2[a]) return h;
            var b = this.$2[a].length;
            if (b === 0) return h;
            this.$2[a].sort(function (a, b) {
                return a - b
            });
            var c = this.$2[a].reduce(function (a, b) {
                return a + b
            });
            if (b % 2 === 0) {
                var d = Math.floor((b - 1) / 2), e = Math.ceil((b - 1) / 2);
                d = (this.$2[a][d] + this.$2[a][e]) / 2
            } else d = this.$2[a][(b - 1) / 2];
            return {
                max: this.$2[a][b - 1],
                min: this.$2[a][0],
                mean: c / b,
                median: d,
                total: c,
                count: b,
                first: -1,
                startedTime: -1,
                current: -1,
                updatedTime: -1
            }
        };
        c.toJsonString = function () {
            return JSON.stringify({
                stats: this.$3,
                jitterBufferDelays: this.$2,
                videoMetric: this.$4,
                histResScale: this.$1
            })
        };
        a.getPercentMediaKey = function (a, b, c) {
            return a.concat("_", b, "_p", String(c))
        };
        a.getAvgMediaKey = function (a, b) {
            return a.concat("_", b, "_avg")
        };
        a.fromJsonString = function (b) {
            var c = new a();
            try {
                b = JSON.parse(b), b = b
            } catch (a) {
                return c
            }
            b.stats && (c.$3 = b.stats);
            b.jitterBufferDelays && (c.$2 = b.jitterBufferDelays);
            b.videoMetric && (c.$4 = b.videoMetric);
            b.histResScale && (c.$1 = b.histResScale);
            return c
        };
        return a
    }();
    e.exports = a
}), null);
__d("FBRTCMediaMetricsConst", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = "jitter";
    f.JITTER = a;
    b = "accelerate_rate";
    f.ACCELERATE_RATE = b;
    c = "decoding_cng";
    f.DECODING_CNG = c;
    d = "decoding_normal";
    f.DECODING_NORMAL = d;
    e = "decoding_plc";
    f.DECODING_PLC = e;
    a = "decoding_plc_cng";
    f.DECODING_PLC_CNG = a;
    b = "decoding_neteq_call";
    f.DECODING_NETEQ_CALL = b;
    c = "discard_rate";
    f.DISCARD_RATE = c;
    d = "encode_bitrate";
    f.ENCODE_BITRATE = d;
    e = "expand_rate";
    f.EXPAND_RATE = e;
    a = "speech_expand_rate";
    f.SPEECH_EXPAND_RATE = a;
    b = "preemptive_rate";
    f.PREEMPTIVE_RATE = b;
    c = "audio_send_total_energy";
    f.AUDIO_SEND_TOTAL_ENERGY = c;
    d = "audio_receive_total_energy";
    f.AUDIO_RECEIVE_TOTAL_ENERGY = d;
    e = "audio_send_log_level";
    f.AUDIO_SEND_LOG_LEVEL = e;
    a = "audio_send_log_level_count";
    f.AUDIO_SEND_LOG_LEVEL_COUNT = a;
    b = "audio_receive_log_level";
    f.AUDIO_RECEIVE_LOG_LEVEL = b;
    c = "audio_receive_log_level_count";
    f.AUDIO_RECEIVE_LOG_LEVEL_COUNT = c;
    d = "audio_packets_received";
    f.AUDIO_PACKETS_RECEIVED = d;
    e = "audio_fec_packets_received";
    f.AUDIO_FEC_PACKETS_RECEIVED = e;
    a = "audio_fec_packets_discarded";
    f.AUDIO_FEC_PACKETS_DISCARDED = a;
    b = "audio_packets_received_lost";
    f.AUDIO_PACKETS_RECEIVED_LOST = b;
    c = "audio_packets_sent";
    f.AUDIO_PACKETS_SENT = c;
    d = "audio_packets_sent_lost";
    f.AUDIO_PACKETS_SENT_LOST = d;
    e = "video_bytes_received";
    f.VIDEO_BYTES_RECEIVED = e;
    a = "video_bytes_sent";
    f.VIDEO_BYTES_SENT = a;
    b = "inbound_qp";
    f.INBOUND_QP = b;
    c = "outbound_qp";
    f.OUTBOUND_QP = c;
    d = "frames_encoded";
    f.FRAMES_ENCODED = d;
    e = "frames_decoded";
    f.FRAMES_DECODED = e;
    a = "frames_received";
    f.FRAMES_RECEIVED = a;
    b = "frames_sent";
    f.FRAMES_SENT = b;
    c = "keyframes_decoded";
    f.KEYFRAMES_DECODED = c;
    d = "picture_less_indication_received";
    f.PICTURE_LOSS_INDICAION_RECEIVED = d;
    e = "full_intra_request_received";
    f.FULL_INTRA_REQUEST_RECEIVED = e;
    a = "videobwe_send_bandwidth";
    f.VIDEOBWE_SEND_BANDWIDTH = a;
    b = "videobwe_transmit_bitrate";
    f.VIDEOBWE_TRANSMIT_BITRATE = b;
    c = "videobwe_retransmit_bitrate";
    f.VIDEOBWE_RETRANSMIT_BITRATE = c;
    d = "audio_bytes_sent";
    f.AUDIO_BYTES_SENT = d;
    e = "audio_bytes_received";
    f.AUDIO_BYTES_RECEIVED = e;
    a = "video_pkts_sent";
    f.VIDEO_PKTS_SENT = a;
    b = "video_pkts_send_lost";
    f.VIDEO_PKTS_SEND_LOST = b;
    c = "video_pkts_received";
    f.VIDEO_PKTS_RECEIVED = c;
    d = "video_fec_pkts_received";
    f.VIDEO_FEC_PKTS_RECEIVED = d;
    e = "video_fec_pkts_discarded";
    f.VIDEO_FEC_PKTS_DISCARDED = e;
    a = "video_pkts_receive_lost";
    f.VIDEO_PKTS_RECV_LOST = a;
    b = "audio_rtt_received";
    f.AUDIO_RTT_RECEIVED = b;
    c = "audio_rtt_sent";
    f.AUDIO_RTT_SENT = c;
    d = "audio_dev_rec_stalls";
    f.AUDIO_DEV_REC_STALLS = d;
    e = "audio_dev_total_stalls";
    f.AUDIO_DEV_TOTAL_STALLS = e;
    a = "audio_dev_is_stalled";
    f.AUDIO_DEV_IS_STALLED = a;
    b = "audio_dev_stall_duration";
    f.AUDIO_DEV_STALL_DURATION = b;
    c = "video_freeze_cnt";
    f.VIDEO_FREEZE_COUNT = c;
    d = "video_freeze_duration";
    f.VIDEO_FREEZE_DURATION = d;
    e = "video_pause_cnt";
    f.VIDEO_PAUSE_COUNT = e;
    a = "video_pause_duration";
    f.VIDEO_PAUSE_DURATION = a;
    b = "video_capture_width";
    f.VIDEO_CAPTURE_WIDTH = b;
    c = "video_capture_height";
    f.VIDEO_CAPTURE_HEIGHT = c;
    d = "video_sum_capture_pixel";
    f.VIDEO_SUM_CAPTURE_PIXEL = d;
    e = "video_capture_frame_count";
    f.VIDEO_CAPTURE_FRAME_COUNT = e;
    a = "video_decoded_width";
    f.VIDEO_DECODED_WIDTH = a;
    b = "video_decoded_height";
    f.VIDEO_DECODED_HEIGHT = b;
    c = "video_encoded_width";
    f.VIDEO_ENCODED_WIDTH = c;
    d = "video_encoded_height";
    f.VIDEO_ENCODED_HEIGHT = d;
    e = "audio_total_packet_send_delay";
    f.AUDIO_TOTAL_PACKET_SEND_DELAY = e;
    a = "video_total_packet_send_delay";
    f.VIDEO_TOTAL_PACKET_SEND_DELAY = a;
    b = "audio_total_encode_time";
    f.AUDIO_TOTAL_ENCODE_TIME = b;
    c = "video_total_encode_time";
    f.VIDEO_TOTAL_ENCODE_TIME = c;
    d = "audio_total_decode_time";
    f.AUDIO_TOTAL_DECODE_TIME = d;
    e = "video_total_decode_time";
    f.VIDEO_TOTAL_DECODE_TIME = e;
    a = "audio_jitter_buffer_delay";
    f.AUDIO_JITTER_BUFFER_DELAY = a;
    b = "video_jitter_buffer_delay";
    f.VIDEO_JITTER_BUFFER_DELAY = b;
    c = "audio_jitter_buffer_emitted_count";
    f.AUDIO_JITTER_BUFFER_EMITTED_COUNT = c;
    d = "video_jitter_buffer_emitted_count";
    f.VIDEO_JITTER_BUFFER_EMITTED_COUNT = d;
    e = "audio_e2e_latency";
    f.AUDIO_E2E_LATENCY = e;
    a = "video_e2e_latency";
    f.VIDEO_E2E_LATENCY = a;
    b = "av_sync";
    f.AV_SYNC = b;
    c = "av_sync_abs";
    f.AV_SYNC_ABS = c;
    d = "av_sync_count";
    f.AV_SYNC_COUNT = d;
    e = "av_sync_oob";
    f.AV_SYNC_OOB = e;
    a = "video_sum_decoded_pixel";
    f.VIDEO_SUM_DECODED_PIXEL = a;
    b = "video_sum_encoded_pixel";
    f.VIDEO_SUM_ENCODED_PIXEL = b;
    c = "video_debugFPS";
    f.VIDEO_DEBUGFPS = c;
    d = "video_debuglastUpdate";
    f.VIDEO_DEBUGLASTUPDATE = d;
    e = "video_debugtracktimestamp";
    f.VIDEO_DEBUGTRACKTIMESTAMP = e;
    a = "audio_neteq_wait_time";
    f.AUDIO_NETEQ_WAIT_TIME = a;
    b = "audio_packet_loss_rate";
    f.AUDIO_PACKET_LOSS_RATE = b;
    c = "audio_plc_cng_rate";
    f.AUDIO_PLC_CNG_RATE = c;
    d = "audio_plc_rate";
    f.AUDIO_PLC_RATE = d;
    e = "global_audio_bitrate";
    f.GLOBAL_AUDIO_BITRATE = e;
    a = "global_battery_usage";
    f.GLOBAL_BATTERY_USAGE = a;
    b = "global_cpu_usage";
    f.GLOBAL_CPU_USAGE = b;
    c = "global_video_bitrate";
    f.GLOBAL_VIDEO_BITRATE = c;
    d = "video_av_sync_abs";
    f.VIDEO_AV_SYNC_ABS = d;
    e = "video_av_sync_oob";
    f.VIDEO_AV_SYNC_OOB = e;
    a = "video_frame_rate";
    f.VIDEO_FRAME_RATE = a;
    b = "video_freeze_count_per_min";
    f.VIDEO_FREEZE_COUNT_PER_MIN = b;
    c = "video_freeze_duration_per_min";
    f.VIDEO_FREEZE_DURATION_PER_MIN = c;
    d = "video_neteq_wait_time";
    f.VIDEO_NETEQ_WAIT_TIME = d;
    e = "video_packet_loss_rate";
    f.VIDEO_PACKET_LOSS_RATE = e;
    a = "video_render_scale_ratio";
    f.VIDEO_RENDER_SCALE_RATIO = a;
    b = "video_cropping_ratio";
    f.VIDEO_CROPPING_RATIO = b;
    c = "video_rtt_received";
    f.VIDEO_RTT_RECEIVED = c;
    d = "video_rtt_sent";
    f.VIDEO_RTT_SENT = d;
    e = "simulcast_layer_changes";
    f.SIMULCAST_LAYER_CHANGES = e;
    a = "video_quality_sent";
    f.VIDEO_QUALITY_SENT = a;
    b = "video_encoded_frame_rate";
    f.VIDEO_ENCODED_FRAME_RATE = b;
    c = "video_qp_sent";
    f.VIDEO_QP_SENT = c;
    d = "video_decode_time";
    f.VIDEO_DECODE_TIME = d
}), null);
__d("FBRTCCallSummary", ["ChannelClientID", "ErrorMetadata", "FBRTCConstants", "FBRTCExperiment", "FBRTCIceStatsParser", "FBRTCLocalUploadLogLevel", "FBRTCLogger", "FBRTCMediaMetricsConst", "FBRTCMediaMetricTracker", "RTWebUserActionLogger", "SiteData", "URI", "UserAgentData", "WebPerformanceDeviceInfo", "gkx", "performanceNow", "requireCond", "uuid", "cr:1440831"], (function (a, b, c, d, e, f) {
    var g, h, i = 5 * 60 * 1e3, j = 1e5, k = [5, 50, 95], l = {
            CALL_STARTED: "started",
            SENT_OFFER: "s_o",
            RECV_OFFER: "r_o",
            SENT_OFFER_ACK: "s_oack",
            RECV_OFFER_ACK: "r_oack",
            SENT_RETRIED_OFFER: "s_o2",
            RECV_RETRIED_OFFER: "r_o2",
            SENT_RETRIED_OFFER_ACK: "s_oack2",
            RECV_RETRIED_OFFER_ACK: "r_oack2",
            SENT_PRANSWER: "s_pr",
            RECV_PRANSWER: "r_pr",
            NETWORK_READY: "network_ready",
            SENT_ANSWER: "s_a",
            RECV_ANSWER: "r_a",
            SENT_ANSWER_ACK: "s_aack",
            RECV_ANSWER_ACK: "r_aack",
            SENT_RETRIED_ANSWER: "s_a2",
            RECV_RETRIED_ANSWER: "r_a2",
            SENT_RETRIED_ANSWER_ACK: "s_aack2",
            RECV_RETRIED_ANSWER_ACK: "r_aack2",
            SENT_OK: "s_ok",
            RECV_OK: "r_ok",
            CALL_CONNECTED: "connected",
            CALL_ENDED: "ended",
            SENT_JOIN_REQUEST: "s_jreq",
            RECV_JOIN_RESPONSE: "r_jresp",
            PROC_JOIN_RESPONSE: "p_jresp",
            RECV_RING_REQUEST: "r_rreq",
            SENT_RING_RESPONSE: "s_rresp"
        }, m = {
            FELLBACK_TO_AUDIO: "f_a",
            MEDIA_REQUESTED: "m_r",
            MEDIA_SUCCEEDED: "m_s",
            POPUP_OPENED: "opened",
            PRESSED_ANSWER: "p_a"
        }, n = {
            ESCALATION_IS_AVAILABLE: "esc_available",
            USER_INITIATED_REQUEST: "out_started",
            RECEIVED_INCOMING_REQUEST: "inc_started",
            REJECTED_INVALID_P2P_STATE: "rej_invalid_state",
            CONNECTING_TO_MULTIWAY: "u_connecting_mw",
            CONNECTED_TO_MULTIWAY: "u_connected_mw",
            PEER_CONNECTING_TO_MULTIWAY: "p_connecting_mw",
            PEER_CONNECTED_TO_MULTIWAY: "p_connected_mw",
            READY_TO_ESCALATE: "ready_esc",
            PEER_FAILED_TO_CONNECT_TO_MULTIWAY: "p_fail_conn",
            MULTIWAY_CALL_ENDED: "mw_call_ended",
            TIMED_OUT: "timed_out",
            PEER_ABORTED: "p_aborted",
            INTERNAL_ERROR: "internal_err"
        }, o = {
            ESCALATION_INITIATION_BUTTON_CLICKED: "esc_init_button",
            ESCALATION_APPROVED_BUTTON_CLICKED: "esc_appr_button",
            ESCALATION_DECLINED_BUTTON_CLICKED: "esc_decl_button",
            USERMEDIA_REQUEST: "media_req",
            USERMEDIA_SUCCESS: "media_success",
            USERMEDIA_FAILURE: "media_fail",
            SENT_ESC_REQUEST: "s_esc_req",
            RECV_ESC_REQUEST: "r_esc_req",
            SENT_ESC_REQUEST_ACK: "s_esc_req_ack",
            RECV_ESC_REQUEST_ACK: "s_esc_req_ack",
            SENT_ESC_RESPONSE: "s_esc_rep",
            RECV_ESC_ACCEPT: "r_esc_accept",
            RECV_ESC_DECLINE: "r_esc_decl",
            RECV_ESC_TIMEOUT: "r_esc_timeout"
        },
        p = [(a = b("FBRTCMediaMetricsConst")).ACCELERATE_RATE, a.DISCARD_RATE, a.EXPAND_RATE, a.PREEMPTIVE_RATE, a.SPEECH_EXPAND_RATE],
        q = [{key: a.AUDIO_NETEQ_WAIT_TIME, field: "nwt", scale: 1}, {
            key: a.AUDIO_PACKET_LOSS_RATE,
            field: "plr",
            scale: 1e4
        }, {key: a.AUDIO_PLC_CNG_RATE, field: "plccngr", scale: 1e4}, {
            key: a.AUDIO_PLC_RATE,
            field: "plcr",
            scale: 1e4
        }], r = [{key: a.VIDEO_AV_SYNC_ABS, field: "avabs", scale: 1}, {
            key: a.VIDEO_FRAME_RATE,
            field: "fr",
            scale: 1
        }, {key: a.VIDEO_NETEQ_WAIT_TIME, field: "nwt", scale: 1}, {
            key: a.VIDEO_PACKET_LOSS_RATE,
            field: "plr",
            scale: 1e4
        }, {key: a.VIDEO_RENDER_SCALE_RATIO, field: "rsr", scale: 100}, {
            key: a.VIDEO_CROPPING_RATIO,
            field: "cr",
            scale: 100
        }], s = [{key: a.VIDEO_FREEZE_COUNT_PER_MIN, field: "vfmin", scale: 1}, {
            key: a.VIDEO_FREEZE_DURATION_PER_MIN,
            field: "vfdur",
            scale: 1
        }, {key: a.VIDEO_AV_SYNC_OOB, field: "avoob", scale: 1e4}],
        t = [{key: a.GLOBAL_CPU_USAGE, field: "proc", scale: 100}, {
            key: a.GLOBAL_BATTERY_USAGE,
            field: "bat",
            scale: 1
        }, {key: a.GLOBAL_AUDIO_BITRATE, field: "tadb", scale: 1}, {
            key: a.GLOBAL_VIDEO_BITRATE,
            field: "tvdb",
            scale: 1
        }], u = [{key: a.AUDIO_RTT_SENT, field: "artt", scale: 1}],
        v = [{key: a.VIDEO_RTT_SENT, field: "vrtt", scale: 1}, {
            key: a.VIDEO_QUALITY_SENT,
            field: "vqs",
            scale: 1
        }, {key: a.VIDEO_ENCODED_FRAME_RATE, field: "efr", scale: 1}, {key: a.VIDEO_QP_SENT, field: "qp", scale: 1}],
        w = "globalStatsTrackId", x = "grid", y = "pinned", z = "thumbnail", A = "pinnedAudioStatsTrackId",
        B = "pinnedVideoStatsTrackId", C = "outboundAudioStatsTrackId", D = "outboundScreenStatsTrackId",
        E = "outboundVideoStatsTrackId";

    function F(a) {
        var c = new (g || (g = b("URI")))(window.location).getPath().includes("/videocall/");
        if (a === "MW_PEER_ID" && !c) {
            a = b("FBRTCExperiment").gen("rtweb_zenon_platform");
            c = a.getBool("use_zenon_platform", !1, !1);
            a = b("FBRTCExperiment").gen("rpweb_zenon_platform_workplace");
            a = a.getBool("use_zenon_platform_wp", !1, !1);
            c = c || a;
            if (c) return "ZenonPlatform"
        }
        a = b("gkx")("1341692");
        c = b("gkx")("1680228");
        return !a && !c ? "ZenonScotch" : "Old Codebase"
    }

    c = function () {
        a.nullSummary = function () {
            return new a({peerID: "0", callID: "0", isCaller: !1, callTrigger: "NULL_SUMMARY"})
        };

        function a(c) {
            var d;
            this.$41 = {};
            this.peerID = String(c.peerID);
            this.callID = String(c.callID);
            this.localCallID = (d = c.localCallID) != null ? d : b("uuid")();
            this.deviceID = b("ChannelClientID").getID();
            this.$2 = c.isCaller;
            this.$1 = c.version || a.CURRENT_SUMMARY_VERSION;
            this.$3 = b("FBRTCLocalUploadLogLevel").getLocalUploadLogLevel();
            this.$15 = new Date().valueOf();
            this.$43 = {};
            this.$4 = c.callTrigger || null;
            this.$6 = {};
            this.$8 = {};
            this.$9 = {};
            this.$14 = {};
            this.$34 = null;
            this.$35 = null;
            this.$36 = null;
            this.$17 = 0;
            this.$18 = 0;
            this.$33 = !1;
            this.$10 = {};
            this.$11 = {};
            this.$12 = {};
            this.$13 = {};
            this.$39 = null;
            this.$38 = null;
            this.$37 = null;
            this.$5 = F(this.peerID);
            this.$20 = (h || (h = b("performanceNow")))();
            this.$16 = 0;
            this.$7 = {};
            this.$19 = this.$20;
            this.$21 = 0;
            this.$22 = {};
            this.addExtraInfo(b("FBRTCLogger").Key.DEVICE_INFO, this.$55());
            this.$56();
            this.$57();
            this.$58();
            this.$59();
            this.$24 = b("FBRTCIceStatsParser").getInstance();
            this.$50 = new (b("FBRTCMediaMetricTracker"))();
            this.$23 = b("FBRTCLogger").getInstance()
        }

        var c = a.prototype;
        c.toJsonString = function () {
            this.$18 = new Date().valueOf();
            return JSON.stringify({
                version: this.$1,
                peerID: this.peerID,
                callID: this.callID,
                localCallID: this.localCallID,
                deviceID: this.deviceID,
                isCaller: this.$2,
                uploadLogLevel: this.$3,
                callType: this.$29,
                conferenceName: this.$26,
                joinWithSID: this.$27,
                activeConn: this.$25,
                escP2PCallID: this.$28,
                serverInfoData: this.$30,
                localVideoDuration: this.$31,
                remoteVideoDuration: this.$32,
                startTime: this.$15,
                trigger: this.$4,
                signalingTime: this.$6,
                escStateTimes: this.$8,
                applicationEventTime: this.$9,
                videoEscTimes: this.$14,
                endCallReason: this.$34,
                endCallSubreason: this.$35,
                isRemoteEnded: this.$36,
                lastUpdatedTime: this.$17,
                lastSerializedTime: this.$18,
                unsetOnRetrieve: this.$33,
                openCount: this.$21,
                extraInfo: this.$22,
                gen0IceSentCount: this.$10,
                gen0IceReceivedCount: this.$11,
                iceSentCount: this.$12,
                iceReceivedCount: this.$13,
                connectionType: this.$39,
                mediaMetricStats: this.$50.toJsonString(),
                newSignalingTime: this.$7,
                accumulatedCallTime: this.$60(),
                deviceCharged: this.$42,
                ehist: this.getEhist(),
                videoReceivedCodec: this.$44,
                videoSentCodec: this.$45,
                videoDevice: this.$46,
                audioDevice: this.$47,
                audioDeviceHist: this.$48,
                audioSentCodec: this.$49,
                relayIP: this.$40,
                clientVersion: this.$5,
                pcConnectionStates: this.$41,
                pcIsConnected: this.$37,
                endIsConnected: this.$38,
                maxTotalDecodeTime: this.$51,
                totalDecodeTime: this.$52,
                totalEncodeTime: this.$53,
                keyFramesEncoded: this.$54
            })
        };
        a.fromJsonString = function (c) {
            var d;
            try {
                c = JSON.parse(c)
            } catch (a) {
                return null
            }
            if (c.version < a.OLDEST_SUPPORTED_SUMMARY_VERSION) return null;
            if (!Object.prototype.hasOwnProperty.call(c, "peerID") || !Object.prototype.hasOwnProperty.call(c, "callID") || !Object.prototype.hasOwnProperty.call(c, "isCaller") || !Object.prototype.hasOwnProperty.call(c, "startTime") || !Object.prototype.hasOwnProperty.call(c, "trigger") || !Object.prototype.hasOwnProperty.call(c, "signalingTime") || !Object.prototype.hasOwnProperty.call(c, "endCallReason") || !Object.prototype.hasOwnProperty.call(c, "isRemoteEnded") || !Object.prototype.hasOwnProperty.call(c, "lastUpdatedTime") || !Object.prototype.hasOwnProperty.call(c, "lastSerializedTime")) return null;
            var e = new a({peerID: c.peerID, callID: c.callID, isCaller: c.isCaller, localCallID: c.localCallID});
            e.deviceID = c.deviceID;
            e.$1 = c.version;
            e.$3 = c.uploadLogLevel;
            e.$15 = c.startTime;
            e.$4 = c.trigger;
            e.$5 = c.clientVersion;
            e.$6 = c.signalingTime;
            e.$34 = c.endCallReason;
            e.$35 = c.endCallSubreason;
            e.$36 = c.isRemoteEnded;
            e.$17 = c.lastUpdatedTime;
            e.$18 = c.lastSerializedTime;
            e.$27 = c.joinWithSID;
            e.$38 = (d = c.endIsConnected) != null ? d : null;
            e.$37 = (d = c.pcIsConnected) != null ? d : null;
            c.callType && (e.$29 = c.callType);
            c.conferenceName && (e.$26 = c.conferenceName);
            c.escP2PCallID && (e.$28 = c.escP2PCallID);
            c.activeConn && (e.$25 = c.activeConn);
            c.serverInfoData && (e.$30 = c.serverInfoData);
            c.localVideoDuration && (e.$31 = c.localVideoDuration);
            c.remoteVideoDuration && (e.$32 = c.remoteVideoDuration);
            c.unsetOnRetrieve && (e.$33 = c.unsetOnRetrieve);
            c.openCount && (e.$21 = c.openCount);
            c.extraInfo && (e.$22 = c.extraInfo);
            c.gen0IceSentCount && (e.$10 = c.gen0IceSentCount);
            c.gen0IceReceivedCount && (e.$11 = c.gen0IceReceivedCount);
            c.iceSentCount && (e.$12 = c.iceSentCount);
            c.iceReceivedCount && (e.$13 = c.iceReceivedCount);
            c.newSignalingTime && (e.$7 = c.newSignalingTime);
            c.pcConnectionStates && (e.$41 = c.pcConnectionStates);
            c.accumulatedCallTime && (e.$16 = c.accumulatedCallTime);
            c.escStateTimes && (e.$8 = c.escStateTimes);
            c.applicationEventTime && (e.$9 = c.applicationEventTime);
            c.videoEscTimes && (e.$14 = c.videoEscTimes);
            c.mediaMetricStats && (e.$50 = b("FBRTCMediaMetricTracker").fromJsonString(c.mediaMetricStats));
            c.connectionType && (e.$39 = c.connectionType);
            c.deviceCharged && (e.$42 = c.deviceCharged);
            c.ehist !== null && (e.$43 = c.ehist);
            c.videoReceivedCodec !== null && (e.$44 = c.videoReceivedCodec);
            c.videoSentCodec !== null && (e.$45 = c.videoSentCodec);
            c.videoDevice !== null && (e.$46 = c.videoDevice);
            c.audioDevice !== null && (e.$47 = c.audioDevice);
            c.audioDeviceHist !== null && (e.$48 = c.audioDeviceHist);
            c.audioSentCodec !== null && (e.$49 = c.audioSentCodec);
            c.relayIP !== null && c.relayIP !== void 0 && (e.$40 = c.relayIP);
            c.maxTotalDecodeTime !== null && c.maxTotalDecodeTime !== void 0 && (e.$51 = c.maxTotalDecodeTime);
            c.totalDecodeTime != null && (e.$52 = c.totalDecodeTime);
            c.totalEncodeTime != null && (e.$53 = c.totalEncodeTime);
            c.keyFramesEncoded != null && (e.$54 = c.keyFramesEncoded);
            return e
        };
        a.restoreOrInitialize = function (c, d, e, f, g, h) {
            d = String(d);
            e = String(e);
            c = c.retrieveCallSummary(d, e);
            !c ? (c = new a({
                peerID: d,
                callID: e,
                isCaller: f
            }), g ? (c.onFullMessageReceived({msg: g}), c.onOfferAckSent(g)) : c.onCallStarted(h || b("FBRTCLogger").Trigger.UNKNOWN), h !== b("FBRTCLogger").Trigger.REDIAL_BUTTON && b("FBRTCLogger").getInstance().logError(d, e, "Missing call summary from storage")) : c.$33 && (c.$38 = null, c.$34 = null, c.$35 = null, c.$36 = null, delete c.$6[l.CALL_ENDED], delete c.$7[l.CALL_ENDED], c.$20 = 0, c.$33 = null);
            return c
        };
        a.logSavedSummaries = function (a) {
            var c = a.getLoggableSummaries(), d = c.length;
            if (d <= 0) return;
            var e = b("FBRTCLogger").getInstance(), f = [];
            for (var g = 0; g < d; g++) {
                var h = c[g];
                e.logEndCallSummary(h);
                f.push({peerID: h.peerID, callID: h.callID})
            }
            a.removeCallSummaries(f);
            e.logToConsole("Logged pending summaries: " + d)
        };
        c.logThisSummary = function (a, c) {
            c === void 0 && (c = !1);
            var d = b("FBRTCLogger").getInstance();
            a.retrieveCallSummary(this.peerID, this.callID) != null ? (d.logEndCallSummary(this, c), a.removeCallSummary(this.peerID, this.callID), d.logToConsole("Logged active summary"), b("RTWebUserActionLogger").logCheckpoint({
                checkpoint: "FBRTCCallSummary_logThisSummary: Logged call summary " + JSON.stringify({
                    peerID: this.peerID,
                    callID: this.callID
                })
            })) : b("RTWebUserActionLogger").logCheckpoint({
                checkpoint: "FBRTCCallSummary_logThisSummary: Unable to retrieve call summary " + JSON.stringify({
                    peerID: this.peerID,
                    callID: this.callID
                })
            })
        };
        c.isNull = function () {
            var b = a.CANONICAL_NULL_SUMMARY;
            return this.peerID === b.peerID && this.callID === b.callID && this.isCaller() === b.isCaller() && this.getCallTrigger() === b.getCallTrigger()
        };
        c.save = function (a) {
            var c = (h || (h = b("performanceNow")))(), d = c - this.$19;
            if (d > i) {
                this.$23.logInfo(this.peerID, this.callID, "Summary too old: " + d);
                return
            }
            b("cr:1440831") && b("cr:1440831").logCallSummaryHeartbeat(this, "interval");
            a.storeCallSummary(this.peerID, this.callID, this);
            this.$19 = c
        };
        c.getVersion = function () {
            return this.$1
        };
        c.getLastUpdatedTime = function () {
            return this.$17
        };
        c.setLastUpdatedTime = function (a) {
            this.$17 = a
        };
        c.getExtraInfo = function () {
            return this.$22
        };
        c.getCallTrigger = function () {
            return this.$4
        };
        c.addExtraInfo = function (a, b) {
            this.$22[a] = b, this.$59()
        };
        c.isCaller = function () {
            return this.$2
        };
        c.isNetworkReady = function () {
            if (this.$6[l.NETWORK_READY]) return !0; else return !1
        };
        c.isAnswerReceived = function () {
            if (this.$6[l.RECV_ANSWER]) return !0; else return !1
        };
        c.onCallStarted = function (a) {
            this.$4 = a, this.$61(l.CALL_STARTED), this.$59(), b("ErrorMetadata").addGlobalMetadata("RT_WEB", "TYPE", "CallStarted")
        };
        c.setCallTrigger = function (a) {
            this.$4 = a, this.$59()
        };
        c.setPCIsConnected = function (a) {
            this.$37 !== a && (this.$37 = a, this.$41[this.$60()] = a)
        };
        c.onPopupOpened = function () {
            this.deviceID = b("ChannelClientID").getID(), this.$62(m.POPUP_OPENED), this.$21++, this.$59()
        };
        c.onPressedAnswer = function () {
            this.$62(m.PRESSED_ANSWER), this.$59()
        };
        c.onMediaRequested = function () {
            this.$62(m.MEDIA_REQUESTED), this.$59()
        };
        c.onMediaSucceeded = function () {
            this.$62(m.MEDIA_SUCCEEDED), this.$59()
        };
        c.onFellbackToAudio = function () {
            this.$62(m.FELLBACK_TO_AUDIO), this.$59()
        };
        c.setConnectionType = function (a) {
            this.$39 = a, this.$59()
        };
        c.setUploadLogLevel = function (a) {
            this.$3 = a, this.$59()
        };
        c.getCallType = function () {
            return this.$29
        };
        c.setCallType = function (a) {
            this.$29 = a, this.addExtraInfo(b("FBRTCLogger").Key.CALL_TYPE, a), this.$59()
        };
        c.setVideoDurations = function (a, b) {
            this.$31 = a, this.$32 = b, this.$59()
        };
        c.setAudioDevice = function (a) {
            var b;
            this.$47 = a;
            this.$48 = (b = this.$48) != null ? b : new Array(0);
            this.$48.length === 0 ? this.$48.push(a) : a !== this.$48[this.$48.length - 1] && this.$48.push(a)
        };
        c.setVideoDevice = function (a) {
            this.$46 = a
        };
        c.setScreenDuration = function (a) {
            this.addExtraInfo(b("FBRTCLogger").Key.SCREEN_DURATION, a)
        };
        c.setConferenceName = function (a) {
            this.$26 = a, this.$59()
        };
        c.setTotalVideoFilterDuration = function (a) {
            this.addExtraInfo(b("FBRTCLogger").Key.VIDEO_DURATION_WITH_FILTER, Math.ceil(a).toString())
        };
        c.setCoExperienceEffectDuration = function (a) {
            this.addExtraInfo(b("FBRTCLogger").Key.EFFECT_TOTAL_DURATION, Math.ceil(a).toString())
        };
        c.setEffectCount = function (a) {
            this.addExtraInfo(b("FBRTCLogger").Key.EFFECT_COUNT, a.toString())
        };
        c.setJoinWithSID = function (a) {
            this.$27 = a, this.$59()
        };
        c.setServerInfoData = function (a) {
            this.$30 = a, this.$59()
        };
        c.setActiveConnection = function (a) {
            this.$25 = a, this.$59()
        };
        c.setEscalationP2PCallID = function (a) {
            this.$28 = a, this.$59()
        };
        c.onOfferAckSent = function (a) {
            this.onMessageSent({type: b("FBRTCConstants").PayloadType.OFFER_ACK, flag: a.flag})
        };
        c.onMessageSent = function (a) {
            var c = a.flag === 1;
            switch (a.type) {
                case b("FBRTCConstants").PayloadType.OFFER:
                    this.$63(c, l.SENT_OFFER, l.SENT_RETRIED_OFFER);
                    this.$64(a, this.$10, this.$12);
                    break;
                case b("FBRTCConstants").PayloadType.ANSWER:
                    this.$63(c, l.SENT_ANSWER, l.SENT_RETRIED_ANSWER);
                    this.$64(a, this.$10, this.$12);
                    break;
                case b("FBRTCConstants").PayloadType.OK:
                    this.$61(l.SENT_OK);
                    break;
                case b("FBRTCConstants").PayloadType.PRANSWER:
                    this.$61(l.SENT_PRANSWER);
                    break;
                case b("FBRTCConstants").PayloadType.OFFER_ACK:
                    this.$63(c, l.SENT_OFFER_ACK, l.SENT_RETRIED_OFFER_ACK);
                    break;
                case b("FBRTCConstants").PayloadType.ANSWER_ACK:
                    this.$63(c, l.SENT_ANSWER_ACK, l.SENT_RETRIED_ANSWER_ACK);
                    break;
                case b("FBRTCConstants").PayloadType.ICE_CANDIDATE:
                    this.$64(a, this.$10, this.$12);
                    break;
                case b("FBRTCConstants").PayloadType.ACK:
                    a.ack_type === b("FBRTCConstants").PayloadType.VIDEO_REQUEST && this.$65(o.SENT_ESC_REQUEST_ACK);
                    break;
                case b("FBRTCConstants").PayloadType.VIDEO_REQUEST:
                    a.ack_id ? this.$65(o.SENT_ESC_RESPONSE) : this.$65(o.SENT_ESC_REQUEST);
                    break;
                default:
            }
            this.$59()
        };
        c.$64 = function (a, b, c) {
            var d, e = null;
            a = this.$24.extractIceInfo(a.sdp);
            for (var f = 0; f < a.length; f++) d = a[f].gen, e = a[f].type, d === 0 && this.$66(b, e), this.$66(c, e)
        };
        c.$66 = function (a, b) {
            !a[b] ? a[b] = 1 : a[b] += 1
        };
        c.$67 = function (a) {
            this.addExtraInfo(b("FBRTCLogger").Key.PEER_IS_MOBILE, a.isFromMobile() ? "1" : "0")
        };
        c.onFullMessageReceived = function (a) {
            var c = a.msg, d = c.flag === 1;
            switch (c.type) {
                case b("FBRTCConstants").PayloadType.OFFER:
                    this.$67(a);
                    this.$63(d, l.RECV_OFFER, l.RECV_RETRIED_OFFER);
                    this.$64(c, this.$11, this.$13);
                    break;
                case b("FBRTCConstants").PayloadType.ANSWER:
                    this.$67(a);
                    this.$63(d, l.RECV_ANSWER, l.RECV_RETRIED_ANSWER);
                    this.$64(c, this.$11, this.$13);
                    break;
                case b("FBRTCConstants").PayloadType.OK:
                    this.$61(l.RECV_OK);
                    break;
                case b("FBRTCConstants").PayloadType.PRANSWER:
                    this.$61(l.RECV_PRANSWER);
                    break;
                case b("FBRTCConstants").PayloadType.OFFER_ACK:
                    this.$63(d, l.RECV_OFFER_ACK, l.RECV_RETRIED_OFFER_ACK);
                    break;
                case b("FBRTCConstants").PayloadType.ANSWER_ACK:
                    this.$63(d, l.RECV_ANSWER_ACK, l.RECV_RETRIED_ANSWER_ACK);
                    break;
                case b("FBRTCConstants").PayloadType.ICE_CANDIDATE:
                    this.$64(c, this.$11, this.$13);
                    break;
                case b("FBRTCConstants").PayloadType.ACK:
                    c.ack_type === b("FBRTCConstants").PayloadType.VIDEO_REQUEST && this.$65(o.RECV_ESC_REQUEST_ACK);
                    break;
                case b("FBRTCConstants").PayloadType.VIDEO_REQUEST:
                    c.ack_id ? c.videoon || c.reqVideoOn ? this.$65(o.RECV_ESC_ACCEPT) : this.$65(o.RECV_ESC_DECLINE) : c.videoon || c.reqVideoOn ? this.$65(o.RECV_ESC_REQUEST) : this.$65(o.RECV_ESC_TIMEOUT);
                    break;
                default:
            }
            this.$59()
        };
        c.onMsgAckReceived = function (a, b) {
            a = a.msg.flag === 1;
            b ? this.$63(a, l.RECV_OFFER_ACK, l.RECV_RETRIED_OFFER_ACK) : this.$63(a, l.RECV_ANSWER_ACK, l.RECV_RETRIED_ANSWER_ACK)
        };
        c.onNetworkReady = function () {
            this.$61(l.NETWORK_READY), this.$59()
        };
        c.onCallConnected = function () {
            this.$61(l.CALL_CONNECTED), this.$59()
        };
        c.onCallEnded = function (a, b, c, d) {
            this.$33 = c, this.$34 = a, this.$35 = d, this.$36 = b, this.$38 === null && (this.$38 = this.$37), this.$61(l.CALL_ENDED), this.$59()
        };
        c.setOfferSentTime = function () {
            this.$61(l.SENT_OFFER)
        };
        c.setOfferAckReceivedTime = function () {
            this.$61(l.RECV_OFFER_ACK)
        };
        c.setAnswerSentTime = function () {
            this.$61(l.SENT_ANSWER)
        };
        c.setAnswerReceivedTime = function () {
            this.$61(l.RECV_ANSWER)
        };
        c.setJoinRequestSent = function () {
            this.$61(l.SENT_JOIN_REQUEST), this.$59()
        };
        c.setJoinResponseReceived = function () {
            this.$61(l.RECV_JOIN_RESPONSE), this.$59()
        };
        c.setJoinResponseProcessed = function () {
            this.$61(l.PROC_JOIN_RESPONSE), this.$59()
        };
        c.setRingRequestReceived = function () {
            this.$61(l.RECV_RING_REQUEST), this.$59()
        };
        c.setRingResponseSent = function () {
            this.$61(l.SENT_RING_RESPONSE), this.$59()
        };
        c.setEscalationAvailable = function () {
            this.$68(n.ESCALATION_IS_AVAILABLE)
        };
        c.setEscalationInitiated = function () {
            this.$68(n.USER_INITIATED_REQUEST)
        };
        c.setReceivedEscalationRequest = function () {
            this.$68(n.RECEIVED_INCOMING_REQUEST)
        };
        c.setInvalidP2PEscalationState = function () {
            this.$68(n.REJECTED_INVALID_P2P_STATE)
        };
        c.setEscalationConnectingToMultiway = function () {
            this.$68(n.CONNECTING_TO_MULTIWAY)
        };
        c.setEscalationConnectedToMultiway = function () {
            this.$68(n.CONNECTED_TO_MULTIWAY)
        };
        c.setEscalationPeerConnectingToMultiway = function () {
            this.$68(n.PEER_CONNECTING_TO_MULTIWAY)
        };
        c.setEscalationPeerConnectedToMultiway = function () {
            this.$68(n.PEER_CONNECTED_TO_MULTIWAY)
        };
        c.setReadyToEscalate = function () {
            this.$68(n.READY_TO_ESCALATE)
        };
        c.setEscalationPeerFailedToConnectToMultiway = function () {
            this.$68(n.PEER_FAILED_TO_CONNECT_TO_MULTIWAY)
        };
        c.setEscalationTimedOut = function () {
            this.$68(n.TIMED_OUT)
        };
        c.setVidEscalationInitClick = function () {
            this.$65(o.ESCALATION_INITIATION_BUTTON_CLICKED)
        };
        c.setVidEscalationAcceptedClick = function () {
            this.$65(o.ESCALATION_APPROVED_BUTTON_CLICKED)
        };
        c.setVidEscalationDeclinedClick = function () {
            this.$65(o.ESCALATION_DECLINED_BUTTON_CLICKED)
        };
        c.setVidEscalationMediaRequested = function () {
            this.$65(o.USERMEDIA_REQUEST)
        };
        c.setVidEscalationMediaSuccess = function () {
            this.$65(o.USERMEDIA_SUCCESS)
        };
        c.setVidEscalationMediaFailed = function () {
            this.$65(o.USERMEDIA_FAILURE)
        };
        c.setVideoCapabilities = function (a) {
            this.addExtraInfo(b("FBRTCLogger").Key.VIDEO_CAPABILITIES, a)
        };
        c.setMediaInputs = function (a) {
            this.addExtraInfo(b("FBRTCLogger").Key.MEDIA_INPUTS, a)
        };
        c.getVideoReceivedCodec = function () {
            return this.$44
        };
        c.setVideoReceivedCodec = function (a) {
            this.$44 = a
        };
        c.getVideoSentCodec = function () {
            return this.$45
        };
        c.setVideoSentCodec = function (a) {
            this.$45 = a
        };
        c.getEhist = function () {
            return this.$43
        };
        c.setEhist = function (a) {
            this.$43 = a
        };
        c.getAudioSentCodec = function () {
            return this.$49
        };
        c.setAudioSentCodec = function (a) {
            this.$49 = a
        };
        c.setVideoMaxTotalDecodeTime = function (a) {
            var b;
            this.$51 = Math.max((b = this.$51) != null ? b : 0, a)
        };
        c.getTotalDecodeTime = function () {
            return this.$52
        };
        c.setTotalDecodeTime = function (a) {
            this.$52 = a
        };
        c.getTotalEncodeTime = function () {
            return this.$53
        };
        c.setTotalEncodeTime = function (a) {
            this.$53 = a
        };
        c.getKeyFramesEncoded = function () {
            return this.$54
        };
        c.setKeyFramesEncoded = function (a) {
            this.$54 = a
        };
        c.toString = function () {
            var a = {};
            a.core_metrics = this.$69();
            a.time_series = null;
            return JSON.stringify(a)
        };
        c.$69 = function () {
            var a = {};
            a.ver = this.$1;
            a.log_level = b("FBRTCConstants").uploadLogLevelString(this.$3);
            a.caller = this.$2;
            a.call_type = this.$29;
            a.active_conn = this.$25;
            a.app_event_times = this.$9;
            a.conf_name = this.$26;
            a.CoreAudioMetrics = this.$70();
            a.join_with_sid = this.$27;
            a.esc_p2p_call_id = this.$28;
            a.esc_state_times = this.$8;
            a.vid_esc_times = this.$14;
            a.serv_info = this.$30;
            a.conn = this.$71();
            a.peer_id = this.peerID;
            a.has_video = !0;
            a.open_count = this.$21;
            a.signaling = this.$72();
            a.sender = this.$73();
            a.receiver = this.$74();
            a.end = this.$75();
            a.video = this.$76();
            a.push_phase = b("SiteData").push_phase;
            a.DebugAudioMetrics = this.$77();
            a.device_charged = this.$42;
            a.client_version = this.$5;
            a.perf = this.$78();
            a.grid = this.$79();
            a.pinned = this.$80();
            a.thumbnail = this.$81();
            a.sys_pct = this.$82();
            a.sender_pct = this.$83();
            return a
        };
        c.$77 = function () {
            return {NetworkReceive: {jb_nm: this.$84()}}
        };
        c.$85 = function (a, b, c) {
            var d = this, e = 0, f = 0;
            b == null && (b = 1);
            var g = this.$50.getVideoStreamReportKeys();
            g.forEach(function (b) {
                if (c == null || d.$50.getVideoContentType(b) === c) {
                    b = d.$50.getVideoMetric(b, a);
                    b && (e += b.total, f += b.count)
                }
            });
            return f === 0 ? null : Math.round(e * b / f)
        };
        c.$86 = function (a, b, c) {
            var d = this, e = 0, f = 0;
            b == null && (b = 1);
            var g = this.$50.getVideoStreamReportKeys();
            g.forEach(function (b) {
                if (c == null || d.$50.getVideoContentType(b) === c) {
                    b = d.$50.getVideoMetric(b, a);
                    b && (e += b.current, f += 1)
                }
            });
            return f === 0 ? null : Math.round(e * b)
        };
        c.$87 = function (a, b) {
            var c = this, d = 0, e = 0, f = this.$50.getVideoStreamReportKeys();
            f.forEach(function (f) {
                if (b == null || c.$50.getVideoContentType(f) === b) {
                    f = c.$50.getVideoMetric(f, a);
                    f && e === 0 && (d = f.current, e++)
                }
            });
            return e === 0 ? null : d
        };
        c.$88 = function (a, b) {
            var c = this, d = 0, e = 0;
            b == null && (b = 1);
            var f = this.$50.getAudioStreamReportKeys();
            f.forEach(function (b) {
                b = c.$50.getMetricStats(b, a);
                b && (d += b.current, e += 1)
            });
            return e === 0 ? null : Math.round(d * b)
        };
        c.$84 = function () {
            var a = this, b = {}, c = this.$50.getAudioStreamReportKeys();
            if (c.length < 1) return b;
            p.forEach(function (d) {
                var e = 0, f = 0, g = -Infinity, h = Infinity;
                c.forEach(function (b) {
                    b = a.$50.getMetricStats(b, d);
                    b != null && b.mean != null && (e += b.count, f += b.count * b.mean, g = Math.max(g, b.max), h = Math.min(h, b.min))
                });
                e > 0 && (b[d] = {m: Math.round(1e4 * h), M: Math.round(1e4 * g), avg: Math.round(f * 1e4 / e)})
            });
            b.neteq = {meanWait: this.$89()};
            return b
        };
        c.$89 = function () {
            var a = this.$88(b("FBRTCMediaMetricsConst").AUDIO_JITTER_BUFFER_DELAY),
                c = this.$88(b("FBRTCMediaMetricsConst").AUDIO_JITTER_BUFFER_EMITTED_COUNT);
            return a != null && c != null && c > 0 ? Math.round(a * 1e3 / c) : -1
        };
        c.$70 = function () {
            var a = this, c = this.$50.getAudioStreamReportKeys();
            c = c.reduce(function (c, d) {
                d = a.$50.getMetricStats(d, b("FBRTCMediaMetricsConst").AUDIO_DEV_IS_STALLED);
                return !d || d.updatedTime == null || d.current == null ? c : d.updatedTime > c.timeStamp ? {
                    val: d.current,
                    timeStamp: d.updatedTime
                } : c
            }, {val: -1, timeStamp: -Infinity}).val > 0 ? 1 : 0;
            var d = this.$88(b("FBRTCMediaMetricsConst").AUDIO_DEV_REC_STALLS),
                e = this.$88(b("FBRTCMediaMetricsConst").AUDIO_DEV_TOTAL_STALLS),
                f = this.$88(b("FBRTCMediaMetricsConst").AUDIO_DEV_STALL_DURATION), g = this.$90();
            g = g.count === 0 ? 0 : Math.round(g.levelSum / g.count);
            e = {
                astall: e,
                audio_device: this.$47,
                audio_device_hist: this.$48,
                isstall: c,
                rstall: d,
                rx_chan_proc_lvl: g,
                sdur: f
            };
            return e
        };
        c.$71 = function () {
            var a = {dtls: 1}, b = this.$73();
            b.avgrtt && (a.avgrtt = b.avgrtt, a.maxrtt = b.maxrtt, a.minrtt = b.minrtt);
            this.$40 !== null && (a.relay_ip = this.$40);
            a.ctd = this.$41;
            return a
        };
        c.$72 = function () {
            var a = {};
            this.$4 && (a.trigger = this.$4);
            a.start_time = this.$15;
            a.time_from_start = this.$6;
            a.new_time_from_start = this.$7;
            var b = this.$91();
            b > 0 && (a.duration = b);
            return a
        };
        c.$91 = function (a) {
            var b = this.$7[l.CALL_CONNECTED] || this.$7[l.NETWORK_READY];
            if (!b) return 0;
            a = this.$7[l.CALL_ENDED] || !(a == null ? void 0 : a.assumeOngoing) && this.$16 || this.$60();
            return Math.max(0, a - b)
        };
        c.$73 = function () {
            var a = this, c = {}, d = this.$50.getAudioStreamReportKeys(), e = 0, f = 0, g = 0;
            d.forEach(function (c) {
                c = a.$50.getMetricStats(c, b("FBRTCMediaMetricsConst").AUDIO_BYTES_SENT);
                c != null && (e += c.current, f += c.current - c.first, g += c.updatedTime - c.startedTime)
            });
            g > 0 && (c.ube_avg = Math.round(f * 8e3 / g));
            c.bytes = e;
            c.plost = this.$88(b("FBRTCMediaMetricsConst").AUDIO_PACKETS_SENT_LOST);
            c.psent = this.$88(b("FBRTCMediaMetricsConst").AUDIO_PACKETS_SENT);
            var h = 0, i = 0, j = null, k = null;
            d.forEach(function (c) {
                c = a.$50.getMetricStats(c, b("FBRTCMediaMetricsConst").AUDIO_RTT_SENT);
                c && (i += c.count, h += c.total, j = j == null ? c.min : Math.min(j, c.min), k = k == null ? c.max : Math.max(k, c.max))
            });
            i > 0 && (c.avgrtt = Math.round(h / i), c.maxrtt = k, c.minrtt = j);
            this.$10 && (c.ice_g0 = this.$10);
            this.$12 && (c.ice = this.$12);
            this.$49 != null && this.$49 !== "" && (c.codec = {www: this.$49});
            return c
        };
        c.$74 = function () {
            var a = this, c, d = {}, e = this.$50.getAudioStreamReportKeys();
            d.jbd = this.$88((c = b("FBRTCMediaMetricsConst")).AUDIO_JITTER_BUFFER_DELAY, 1e3);
            d.jbec = this.$88(c.AUDIO_JITTER_BUFFER_EMITTED_COUNT);
            var f = 0, g = 0, h = 0, i = 0, k = 0;
            e.forEach(function (d) {
                var c, e = a.$50.getMetricStats(d, (c = b("FBRTCMediaMetricsConst")).DECODING_PLC),
                    j = a.$50.getMetricStats(d, c.DECODING_PLC_CNG), l = a.$50.getMetricStats(d, c.DECODING_CNG),
                    m = a.$50.getMetricStats(d, c.DECODING_NORMAL);
                d = a.$50.getMetricStats(d, c.DECODING_NETEQ_CALL);
                l != null && m != null && e != null && j != null && d != null && (f += e.current, g += j.current, h += l.current, i += m.current, k += d.current)
            });
            d.dec_plc = f;
            d.dec_plc_cng = g;
            d.dec_cng = h;
            d.dec_normal = i;
            d.neteq_calls = k;
            var l = this.$90();
            d.rx_sum_lvl = Math.round(l.levelSum);
            d.taulc = Math.round(l.count);
            d.fecpd = this.$88(c.AUDIO_FEC_PACKETS_DISCARDED);
            d.fecpr = this.$88(c.AUDIO_FEC_PACKETS_RECEIVED);
            var m = 0;
            e.forEach(function (c) {
                c = a.$50.getMetricStats(c, b("FBRTCMediaMetricsConst").AUDIO_BYTES_RECEIVED);
                c && (m += c.current)
            });
            d.bytes = m;
            var n = 0, o = 0;
            e.forEach(function (c) {
                c = a.$50.getMetricStats(c, b("FBRTCMediaMetricsConst").AUDIO_BYTES_RECEIVED);
                if (c) {
                    var d = c.updatedTime - c.startedTime;
                    d > 0 && (n += c.current - c.first, o += d)
                }
            });
            o > 0 && (d.dbe_avg = Math.round(n * 8e3 / o));
            var p = 0;
            e.forEach(function (c) {
                c = a.$50.getMetricStats(c, b("FBRTCMediaMetricsConst").AUDIO_PACKETS_RECEIVED_LOST);
                c && (p += c.current)
            });
            d.plost = p;
            var q = 0, r, s, t, u = 0, v = 0;
            e.forEach(function (c) {
                var d = a.$50.getMetricStats(c, b("FBRTCMediaMetricsConst").AUDIO_PACKETS_RECEIVED),
                    e = a.$50.getMetricStats(c, b("FBRTCMediaMetricsConst").AUDIO_RTT_RECEIVED);
                c = a.$50.getMetricStats(c, b("FBRTCMediaMetricsConst").AUDIO_RECEIVE_TOTAL_ENERGY);
                c != null && (u += c.current, v += c.updatedTime - c.startedTime);
                d != null && (q += d.current, e != null && e.mean != null && (r = r == null ? d.current * e.mean : r + d.current * e.mean, t = t == null ? e.max : Math.max(t, e.max), s = s == null ? e.min : Math.min(s, e.min)))
            });
            d.taue = Math.round(u * j);
            d.taut = Math.round(v);
            q > 0 && r != null && (d.avgrtt = Math.round(r / q), d.maxrtt = t, d.minrtt = s);
            d.precv = q;
            this.$11 && (d.ice_g0 = this.$11);
            this.$13 && (d.ice = this.$13);
            return d
        };
        c.$75 = function () {
            var a = {};
            this.$34 != null && (a.end_call_reason_string = b("FBRTCConstants").callEndReasonString(this.$34), this.$35 !== null && (a.end_call_subreason_string = this.$35), a.remote_ended = this.$36, a.end_ctd = this.$38);
            this.$39 && (a.conn_type = this.$39);
            return a
        };
        c.$76 = function () {
            var a;
            a = {
                ch: null,
                cw: null,
                ah: null,
                aw: null,
                efrate: this.$92(),
                ehist: this.getEhist(),
                eipxl: null,
                ename: this.$45,
                eopxl: null,
                fcap: this.$86((a = b("FBRTCMediaMetricsConst")).VIDEO_CAPTURE_FRAME_COUNT),
                eqps: this.$86(a.OUTBOUND_QP),
                frames: this.$86(a.FRAMES_ENCODED),
                kframes: this.$54,
                fcsn: this.$86(a.FRAMES_SENT),
                histResScale: null,
                psent: this.$86(a.VIDEO_PKTS_SENT),
                plost: this.$86(a.VIDEO_PKTS_SEND_LOST),
                ss: {
                    avbr: null,
                    avbw: this.$85(a.VIDEOBWE_SEND_BANDWIDTH, 1, "screen"),
                    debug: {debugFPS: null, debuglastUpdate: null, debugtracktimestamp: null},
                    dur: null,
                    eiframes: null,
                    eipxl: null,
                    eopxl: null,
                    eqps: this.$86(a.OUTBOUND_QP, 1, "screen"),
                    frames: this.$86(a.FRAMES_ENCODED, 1, "screen")
                },
                sim_l_chg: this.$86(a.SIMULCAST_LAYER_CHANGES, 1),
                tet: this.$86(a.VIDEO_TOTAL_ENCODE_TIME, 1e3),
                tpsd: this.$86(a.VIDEO_TOTAL_PACKET_SEND_DELAY, 1e3),
                video_device: this.$46
            };
            return {sender: this.$93(a), receiver: this.$94(), ld: this.$31, rd: this.$32, bwe: this.$95()}
        };
        c.$92 = function () {
            var a = this.$31, c = this.$86(b("FBRTCMediaMetricsConst").FRAMES_ENCODED);
            if (a != null && a > 0 && c != null && c > 0) return Math.round(c * 1e3 / a)
        };
        c.$78 = function () {
            var a, b = this.$91() / 1e3;
            if (b <= 0) return;
            a = ((a = this.$52) != null ? a : 0) + ((a = this.$53) != null ? a : 0);
            a = Math.round(100 * (a / b));
            return {cpu: {proc: {avg: a}}}
        };
        c.$90 = function () {
            var a = this, c = this.$50.getAudioStreamReportKeys();
            c = c.reduce(function (c, d) {
                var e = a.$50.getMetricStats(d, b("FBRTCMediaMetricsConst").AUDIO_RECEIVE_LOG_LEVEL);
                d = a.$50.getMetricStats(d, b("FBRTCMediaMetricsConst").AUDIO_RECEIVE_LOG_LEVEL_COUNT);
                return !e || !d ? c : {count: c.count + d.current, levelSum: c.levelSum + e.current}
            }, {count: 0, levelSum: 0});
            return c
        };
        c.$95 = function () {
            var a = this, c = {
                avg_enc_bitrate: this.$96(),
                avg_send_bw: this.$97(),
                avg_trans_bitrate: null,
                avg_retrans_bitrate: null
            }, d = this.$50.getVideoStreamReportKeys();
            d.some(function (d) {
                var e = a.$50.getVideoMetric(d, b("FBRTCMediaMetricsConst").VIDEOBWE_TRANSMIT_BITRATE);
                d = a.$50.getVideoMetric(d, b("FBRTCMediaMetricsConst").VIDEOBWE_RETRANSMIT_BITRATE);
                if (e && d) {
                    c.avg_trans_bitrate = e.mean;
                    c.avg_retrans_bitrate = d.mean;
                    return !0
                }
                return !1
            });
            return c
        };
        c.$96 = function () {
            var a = this, c = this.$50.getVideoStreamReportKeys(), d = 0, e = 0;
            c.forEach(function (c) {
                c = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").ENCODE_BITRATE);
                c && (d += c.total, e += c.count)
            });
            return e === 0 ? null : Math.round(d / e)
        };
        c.$97 = function () {
            var a = this, c = this.$50.getVideoStreamReportKeys(), d = null;
            c.some(function (c) {
                d = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").VIDEOBWE_SEND_BANDWIDTH);
                return d ? !0 : !1
            });
            d && (d = d.mean);
            return d
        };
        c.$83 = function () {
            var a = this.$98(u, C, x), b = this.$99(v, D, x), c = this.$99(v, E, x);
            return {audio: a, screen: b, video: c}
        };
        c.$98 = function (a, c, d) {
            var e = this, f = {};
            a.forEach(function (a) {
                var g, h = a.field, i = a.key;
                a = a.scale;
                var j = [];
                g = (g = e.$50.getMetricStats(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(i, d))) == null ? void 0 : g.current;
                k.forEach(function (a) {
                    a = (a = (a = e.$50.getMetricStats(c, b("FBRTCMediaMetricTracker").getPercentMediaKey(i, d, a))) == null ? void 0 : a.current) != null ? a : 0;
                    j.push(a)
                });
                g != null && (f[h] = e.$100(g, j, a, k))
            });
            return Object.keys(f).length > 0 ? f : null
        };
        c.$99 = function (a, c, d) {
            var e = this, f = {};
            a.forEach(function (a) {
                var g, h = a.field, i = a.key;
                a = a.scale;
                var j = [];
                g = (g = e.$50.getVideoMetric(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(i, d))) == null ? void 0 : g.current;
                k.forEach(function (a) {
                    a = (a = (a = e.$50.getVideoMetric(c, b("FBRTCMediaMetricTracker").getPercentMediaKey(i, d, a))) == null ? void 0 : a.current) != null ? a : 0;
                    j.push(a)
                });
                g != null && (f[h] = e.$100(g, j, a, k))
            });
            return Object.keys(f).length > 0 ? f : null
        };
        c.$82 = function () {
            return this.$98(t, w, x)
        };
        c.$79 = function () {
            var a = this, b = {audio: {avg: {}, max: {}, min: {}}, video: {avg: {}, max: {}, min: {}}},
                c = this.$50.getAudioStreamReportKeys(), d = this.$50.getVideoStreamReportKeys();
            q.forEach(function (d) {
                var e = d.field, f = d.key;
                d = d.scale;
                f = a.$101(f, c, d, !0, k);
                f != null && (b.audio.avg[e] = f.avg, b.audio.max[e] = f.max, b.audio.min[e] = f.min)
            });
            r.forEach(function (c) {
                var e = c.field, f = c.key;
                c = c.scale;
                f = a.$101(f, d, c, !1, k);
                f != null && (b.video.avg[e] = f.avg, b.video.max[e] = f.max, b.video.min[e] = f.min)
            });
            s.forEach(function (c) {
                var e = c.field, f = c.key;
                c = c.scale;
                f = a.$101(f, d, c, !1, []);
                f != null && (b.video.avg[e] = f.avg.avg, b.video.max[e] = f.max.avg, b.video.min[e] = f.min.avg)
            });
            return b
        };
        c.$102 = function (a, c, d, e, f) {
            var g = this, h = 0, i = new Array(f.length).fill(0), j = 0, k = 0;
            c.forEach(function (c) {
                var d = null, l = [];
                if (e) {
                    var m;
                    j = g.$50.getAudioStreamDuration(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(a, z));
                    d = (m = g.$50.getMetricStats(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(a, z))) == null ? void 0 : m.current;
                    f.forEach(function (d) {
                        d = (d = g.$50.getMetricStats(c, b("FBRTCMediaMetricTracker").getPercentMediaKey(a, z, d))) == null ? void 0 : d.current;
                        l.push(d)
                    })
                } else {
                    j = g.$50.getVideoStreamDuration(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(a, z));
                    d = (m = g.$50.getVideoMetric(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(a, z))) == null ? void 0 : m.current;
                    f.forEach(function (d) {
                        d = (d = g.$50.getVideoMetric(c, b("FBRTCMediaMetricTracker").getPercentMediaKey(a, z, d))) == null ? void 0 : d.current;
                        l.push(d)
                    })
                }
                d != null && (h += d * j, i = l.map(function (a, b) {
                    return a != null ? a * j + i[b] : i[b]
                }), k += j)
            });
            if (k === 0) return null;
            c = h / k;
            var l = i.map(function (a) {
                return a / k
            });
            return this.$100(c, l, d, f)
        };
        c.$101 = function (a, c, d, e, f) {
            var g = this, h = 0, i = new Array(f.length).fill(0), j = 0, k = new Array(f.length).fill(0), l = 0,
                m = new Array(f.length).fill(0), n = 0, o = 0;
            c.forEach(function (c) {
                var d = null, p = [];
                if (e) {
                    var q;
                    n = g.$50.getAudioStreamDuration(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(a, x));
                    d = (q = g.$50.getMetricStats(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(a, x))) == null ? void 0 : q.current;
                    f.forEach(function (d) {
                        d = (d = g.$50.getMetricStats(c, b("FBRTCMediaMetricTracker").getPercentMediaKey(a, x, d))) == null ? void 0 : d.current;
                        p.push(d)
                    })
                } else {
                    n = g.$50.getVideoStreamDuration(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(a, x));
                    d = (q = g.$50.getVideoMetric(c, b("FBRTCMediaMetricTracker").getAvgMediaKey(a, x))) == null ? void 0 : q.current;
                    f.forEach(function (d) {
                        d = (d = g.$50.getVideoMetric(c, b("FBRTCMediaMetricTracker").getPercentMediaKey(a, x, d))) == null ? void 0 : d.current;
                        p.push(d)
                    })
                }
                d != null && n > 0 && (h += d * n, i = p.map(function (a, b) {
                    return a != null ? a * n + i[b] : i[b]
                }), o === 0 ? (j = d, l = d, k = p, m = p) : d > j ? (j = d, k = p) : d < l && (l = d, m = p), o += n)
            });
            if (o === 0) return null;
            c = h / o;
            var p = i.map(function (a) {
                return a / o
            });
            c = {avg: this.$100(c, p, d, f), min: this.$100(l, m, d, f), max: this.$100(j, k, d, f)};
            return c
        };
        c.$100 = function (a, b, c, d) {
            var e = {};
            e.avg = Math.round(a * c);
            d.forEach(function (a, d) {
                a = "p".concat(String(a));
                e[a] = Math.round(b[d] * c)
            });
            return e
        };
        c.$81 = function () {
            var a = this, b = {audio: {}, video: {}}, c = this.$50.getAudioStreamReportKeys(),
                d = this.$50.getVideoStreamReportKeys(), e = !1;
            q.forEach(function (d) {
                var f = d.field, g = d.key;
                d = d.scale;
                g = a.$102(g, c, d, !0, k);
                g != null && (b.audio[f] = g, e = !0)
            });
            r.forEach(function (c) {
                var f = c.field, g = c.key;
                c = c.scale;
                g = a.$102(g, d, c, !1, k);
                g != null && (b.video[f] = g, e = !0)
            });
            s.forEach(function (c) {
                var f = c.field, g = c.key;
                c = c.scale;
                g = a.$102(g, d, c, !1, []);
                g != null && (b.video[f] = g.avg, e = !0)
            });
            return !e ? null : b
        };
        c.$80 = function () {
            var a = this, c = this.$50.getAudioStreamReportKeys(), d = this.$50.getVideoStreamReportKeys();
            if (!c.includes(A) && !d.includes(B)) return null;
            var e = {audio: {}, video: {}};
            q.forEach(function (c) {
                var d, f = c.field, g = c.key;
                c = c.scale;
                var h = [];
                d = (d = a.$50.getMetricStats(A, b("FBRTCMediaMetricTracker").getAvgMediaKey(g, y))) == null ? void 0 : d.current;
                k.forEach(function (c) {
                    c = (c = (c = a.$50.getMetricStats(A, b("FBRTCMediaMetricTracker").getPercentMediaKey(g, y, c))) == null ? void 0 : c.current) != null ? c : 0;
                    h.push(c)
                });
                d != null && (e.audio[f] = a.$100(d, h, c, k))
            });
            r.forEach(function (c) {
                var d, f = c.field, g = c.key;
                c = c.scale;
                var h = [];
                d = (d = a.$50.getVideoMetric(B, b("FBRTCMediaMetricTracker").getAvgMediaKey(g, y))) == null ? void 0 : d.current;
                k.forEach(function (c) {
                    c = (c = (c = a.$50.getVideoMetric(B, b("FBRTCMediaMetricTracker").getPercentMediaKey(g, y, c))) == null ? void 0 : c.current) != null ? c : 0;
                    h.push(c)
                });
                d != null && (e.video[f] = a.$100(d, h, c, k))
            });
            s.forEach(function (c) {
                var d = c.field, f = c.key;
                c = c.scale;
                var g = [];
                f = (f = a.$50.getVideoMetric(B, b("FBRTCMediaMetricTracker").getAvgMediaKey(f, y))) == null ? void 0 : f.current;
                f != null && (e.video[d] = a.$100(f, g, c, []).avg)
            });
            return e
        };
        c.$93 = function (a) {
            var c = this, d = this.$50.getVideoStreamReportKeys(), e = new Array(5).fill(0), f = 0;
            d.forEach(function (a) {
                a = c.$50.getHistResScale(a);
                a && (f += 1, a.histogram.forEach(function (a, b) {
                    e[b] += a
                }))
            });
            a.histResScale = f === 0 ? null : e;
            d.reverse().some(function (d) {
                var e, f = c.$50.getVideoMetric(d, (e = b("FBRTCMediaMetricsConst")).VIDEO_CAPTURE_WIDTH),
                    g = c.$50.getVideoMetric(d, e.VIDEO_CAPTURE_HEIGHT),
                    h = c.$50.getVideoMetric(d, e.VIDEO_ENCODED_WIDTH);
                d = c.$50.getVideoMetric(d, e.VIDEO_ENCODED_HEIGHT);
                f && g && (a.cw = f.current, a.ch = g.current);
                if (h && d) {
                    a.aw = h.current;
                    a.ah = d.current;
                    return !0
                }
                return !1
            });
            this.$22[b("FBRTCLogger").Key.SCREEN_DURATION] != null && typeof this.$22[b("FBRTCLogger").Key.SCREEN_DURATION] === "number" && (a.ss.dur = this.$22[b("FBRTCLogger").Key.SCREEN_DURATION]);
            d = this.$86(b("FBRTCMediaMetricsConst").VIDEO_BYTES_SENT, 1, "screen");
            d != null && a.ss.dur != null && a.ss.dur > 0 && (a.ss.avbr = Math.round(1e3 * 8 * d / a.ss.dur));
            d = this.$86(b("FBRTCMediaMetricsConst").VIDEO_SUM_ENCODED_PIXEL, 1, "screen");
            var g = this.$86(b("FBRTCMediaMetricsConst").FRAMES_ENCODED, 1, "screen");
            d != null && g != null && g > 0 && (a.ss.eopxl = Math.round(d / g));
            d = this.$86(b("FBRTCMediaMetricsConst").VIDEO_SUM_CAPTURE_PIXEL, 1, "screen");
            g = this.$86(b("FBRTCMediaMetricsConst").VIDEO_CAPTURE_FRAME_COUNT, 1, "screen");
            d != null && g != null && g > 0 && (a.ss.eiframes = g, a.ss.eipxl = Math.round(d / g));
            d = this.$87(b("FBRTCMediaMetricsConst").VIDEO_DEBUGFPS, "screen");
            d != null && (a.ss.debug.debugFPS = d);
            g = this.$87(b("FBRTCMediaMetricsConst").VIDEO_DEBUGLASTUPDATE, "screen");
            g != null && (a.ss.debug.debuglastUpdate = g);
            d = this.$87(b("FBRTCMediaMetricsConst").VIDEO_DEBUGTRACKTIMESTAMP, "screen");
            d != null && (a.ss.debug.debugtracktimestamp = d);
            g = this.$86(b("FBRTCMediaMetricsConst").VIDEO_SUM_ENCODED_PIXEL, 1);
            d = this.$86(b("FBRTCMediaMetricsConst").FRAMES_ENCODED, 1);
            g != null && d != null && d > 0 && (a.eopxl = Math.round(g / d));
            g = this.$86(b("FBRTCMediaMetricsConst").VIDEO_SUM_CAPTURE_PIXEL, 1);
            d = this.$86(b("FBRTCMediaMetricsConst").VIDEO_CAPTURE_FRAME_COUNT, 1);
            g != null && d != null && d > 0 && (a.eipxl = Math.round(g / d));
            return a
        };
        c.$94 = function () {
            var a = this, c = this.$50.getVideoStreamReportKeys(), d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0,
                k = 0;
            c.forEach(function (c) {
                var l = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").VIDEO_PKTS_RECEIVED),
                    m = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").VIDEO_PKTS_RECV_LOST);
                l && m && (f += l.current, g += m.current);
                l = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").VIDEO_BYTES_RECEIVED);
                l && (d += l.current);
                m = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").FRAMES_DECODED);
                m && (h += m.current);
                l = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").KEYFRAMES_DECODED);
                l && (i += l.current);
                m = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").PICTURE_LOSS_INDICAION_RECEIVED);
                m && (j += m.current);
                l = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").FULL_INTRA_REQUEST_RECEIVED);
                l && (k += l.current);
                m = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").VIDEO_DECODE_TIME);
                m && (e += m.current)
            });
            var l = {
                    jtkey: i,
                    pli: j,
                    fir: k,
                    dec_bytes: d,
                    dec_frame: h,
                    dec_time: this.$51 ? Math.round(this.$51) : null,
                    dec_time_all_streams: Math.round(e),
                    dname: this.$44,
                    dpxl: null,
                    frd: h,
                    frcnt: null,
                    jtasb: null,
                    precv: f,
                    plost: g,
                    qps: this.$86(b("FBRTCMediaMetricsConst").INBOUND_QP),
                    rh: null,
                    rw: null,
                    tdt: this.$86(b("FBRTCMediaMetricsConst").VIDEO_TOTAL_DECODE_TIME, 1e3),
                    jbd: null,
                    jbec: null,
                    recjbl: null,
                    e2el: null,
                    av: null,
                    avabs: null,
                    avoob: null
                }, m = this.$86(b("FBRTCMediaMetricsConst").VIDEO_JITTER_BUFFER_DELAY, 1e3),
                n = this.$86(b("FBRTCMediaMetricsConst").VIDEO_JITTER_BUFFER_EMITTED_COUNT);
            l.jbd = m;
            l.jbec = n;
            m != null && n != null && n > 0 && (l.recjbl = Math.round(m / n));
            var o = 0, p = 0, q = 0, r = 0, s = 0;
            c.forEach(function (c) {
                var d, e = a.$50.getVideoMetric(c, (d = b("FBRTCMediaMetricsConst")).AV_SYNC),
                    f = a.$50.getVideoMetric(c, d.AV_SYNC_ABS), g = a.$50.getVideoMetric(c, d.AV_SYNC_OOB),
                    h = a.$50.getVideoMetric(c, d.AV_SYNC_COUNT);
                c = a.$50.getVideoMetric(c, d.FRAMES_DECODED);
                c != null && e != null && f != null && e.mean != null && f.mean != null && (q += c.current, o += e.mean * c.current, p += f.mean * c.current);
                g != null && h != null && (s += h.current, r += g.current)
            });
            q > 0 && (l.av = Math.round(o / q), l.avabs = Math.round(p / q));
            s > 0 && (l.avoob = Math.round(r * 1e4 / s));
            var t = 0, u = 0;
            c.forEach(function (c) {
                var d = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").VIDEO_E2E_LATENCY);
                c = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").FRAMES_DECODED);
                d != null && d.mean != null && c != null && (t += c.current, u += d.mean * c.current)
            });
            t > 0 && (l.e2el = Math.round(u / t));
            l.frcnt = c.reduce(function (c, d) {
                d = a.$50.getVideoMetric(d, b("FBRTCMediaMetricsConst").VIDEO_FREEZE_COUNT);
                return c + (d ? d.current : 0)
            }, 0);
            l.frdur = c.reduce(function (c, d) {
                d = a.$50.getVideoMetric(d, b("FBRTCMediaMetricsConst").VIDEO_FREEZE_DURATION);
                return c + (d ? d.current : 0)
            }, 0);
            l.frdur = Math.round(l.frdur);
            l.pact = c.reduce(function (c, d) {
                d = a.$50.getVideoMetric(d, b("FBRTCMediaMetricsConst").VIDEO_PAUSE_COUNT);
                return c + (d ? d.current : 0)
            }, 0);
            l.padur = c.reduce(function (c, d) {
                d = a.$50.getVideoMetric(d, b("FBRTCMediaMetricsConst").VIDEO_PAUSE_DURATION);
                return c + (d ? d.current : 0)
            }, 0);
            l.padur = Math.round(l.padur);
            var v = 0;
            c.forEach(function (c) {
                var d = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").VIDEO_DECODED_HEIGHT);
                c = a.$50.getVideoMetric(c, b("FBRTCMediaMetricsConst").VIDEO_DECODED_WIDTH);
                c && d && c.updatedTime > v && (l.rw = c.current, l.rh = d.current, v = c.updatedTime)
            });
            l.jtasb = c.reduce(function (c, d) {
                d = a.$50.getVideoMetric(d, b("FBRTCMediaMetricsConst").FRAMES_RECEIVED);
                return c + (d ? d.current : 0)
            }, 0);
            m = this.$86(b("FBRTCMediaMetricsConst").VIDEO_SUM_DECODED_PIXEL, 1);
            n = this.$86(b("FBRTCMediaMetricsConst").FRAMES_DECODED, 1);
            m != null && n != null && n > 0 && (l.dpxl = Math.round(m / n));
            return l
        };
        c.$103 = function () {
            return new Date().valueOf() - this.$15
        };
        c.$60 = function () {
            var a = (h || (h = b("performanceNow")))() - this.$20;
            return Math.floor(this.$16 + a)
        };
        c.$61 = function (a) {
            if (this.$6[a]) return;
            this.$6[a] = this.$103();
            this.$7[a] = this.$60()
        };
        c.$68 = function (a) {
            if (this.$8[a]) return;
            this.$8[a] = this.$103()
        };
        c.$62 = function (a) {
            if (this.$9[a]) return;
            this.$9[a] = this.$103()
        };
        c.$65 = function (a) {
            if (this.$14[a]) return;
            this.$14[a] = this.$103()
        };
        c.setDeviceCharged = function (a) {
            this.$42 !== !0 && (this.$42 = a)
        };
        c.$63 = function (a, b, c) {
            a ? this.$61(c) : this.$61(b)
        };
        c.$59 = function () {
            this.$17 = new Date().valueOf()
        };
        c.$55 = function () {
            var a = b("UserAgentData").browserName, c = b("UserAgentData").platformName;
            window.navigator.userAgent.toLowerCase().includes("mobile") && (c += " Mobile", a === "Chrome" && (a = "Mobile " + a));
            return {
                device: b("UserAgentData").deviceName,
                os: c,
                os_version: b("UserAgentData").platformFullVersion,
                browser: a,
                browser_version: b("UserAgentData").browserFullVersion,
                screen_height: window.screen.availHeight,
                screen_width: window.screen.availWidth,
                user_agent: window.navigator.userAgent
            }
        };
        c.$56 = function () {
            window.navigator.connection != null && window.navigator.connection.effectiveType != null && this.addExtraInfo(b("FBRTCLogger").Key.CONNECTION_EFFECTIVE_TYPE, window.navigator.connection.effectiveType)
        };
        c.$58 = function () {
            var a = b("WebPerformanceDeviceInfo").getMobileYearClass();
            a != null && a > 0 ? this.addExtraInfo(b("FBRTCLogger").Key.YEAR_CLASS, a) : this.addExtraInfo(b("FBRTCLogger").Key.DESKTOP_DEVICE_CLASS, b("WebPerformanceDeviceInfo").getDeviceLevel())
        };
        c.$57 = function () {
            navigator.hardwareConcurrency != null && this.addExtraInfo(b("FBRTCLogger").Key.CPU_CORES, navigator.hardwareConcurrency), window.navigator.deviceMemory != null && this.addExtraInfo(b("FBRTCLogger").Key.DEVICE_MEMORY, window.navigator.deviceMemory), this.addExtraInfo(b("FBRTCLogger").Key.DEVICE_PIXEL_RATIO, window.devicePixelRatio)
        };
        c.getCallDuration = function () {
            var a = b("gkx")("707989");
            return this.$91({assumeOngoing: a})
        };
        c.getConnectedStartTime = function () {
            return this.$6[l.CALL_CONNECTED] ? this.$6[l.CALL_CONNECTED] + this.$15 : 0
        };
        c.getCurrentTimeFromCallConnected = function () {
            var a = this.$7[l.CALL_CONNECTED];
            return this.$60() - a
        };
        c.getMediaMetricTracker = function () {
            return this.$50
        };
        c.getEndCallReason = function () {
            return this.$34 != null ? b("FBRTCConstants").callEndReasonString(this.$34) : "Unknown"
        };
        c.getRelayIP = function () {
            return this.$40
        };
        c.setRelayIP = function (a) {
            this.$40 = a
        };
        c.getClientVersion = function () {
            return this.$5
        };
        c.getHeartbeatData = function () {
            return this.$69()
        };
        c.wasCallEnded = function () {
            return this.$6[l.CALL_ENDED] != null
        };
        return a
    }();
    e.exports = c;
    c.CANONICAL_NULL_SUMMARY = Object.freeze(c.nullSummary());
    c.OLDEST_SUPPORTED_SUMMARY_VERSION = 19;
    c.CURRENT_SUMMARY_VERSION = 24;
    c.REPORT_KEY = "reportID"
}), null);
__d("FBRTCCallSummaryStore", ["CacheStorage", "FBLogger", "FBRTCCallSummary", "FBRTCLogger", "RTWebUserActionLogger", "areEqual", "setTimeout"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = "localstorage", i = "RTC_CALL_SUMMARY_", j = "summary", k = 2e3, l = 3, m = 3 * 60 * 1e3, n = null;
    a = function () {
        a.getInstance = function () {
            n || (n = new a());
            return n
        };

        function a() {
            this.$1 = new (b("CacheStorage"))(h, i), this.$2 = b("FBRTCLogger").getInstance()
        }

        var c = a.prototype;
        c.storeCallSummary = function (a, c, d) {
            if (d.isNull()) {
                b("RTWebUserActionLogger").logError({
                    errorDomain: "FBRTCCallSummaryStore_storeCallSummary",
                    errorType: "FBRTCCallSummaryStore Storing invalid FBRTCCallSummary!",
                    callID: c,
                    userID: a
                });
                b("FBLogger")("rtweb").mustfix("Storing invalid FBRTCCallSummary!");
                return
            }
            var e = this;
            this.$3(function (b) {
                b[a] || (b[a] = {});
                var f = b[a][c];
                if (f) {
                    f = e.$4(f);
                    if (f && f.getLastUpdatedTime() > d.getLastUpdatedTime()) {
                        e.$2.logToConsole("Outdated summaries");
                        return null
                    }
                }
                b[a][c] = e.$5(d);
                return b
            }, e.$2.logError.bind(e.$2, a, c))
        };
        c.retrieveCallSummary = function (a, b) {
            var c = this.getCallSummaries(), d = null;
            c[a] && (d = c[a][b]);
            if (d) return this.$4(d); else return null
        };
        c.removeCallSummary = function (a, b) {
            this.removeCallSummaries([{peerID: a, callID: b}])
        };
        c.removeCallSummaries = function (a) {
            var b = this;
            this.$3(function (c) {
                var d = a.length;
                for (var e = 0; e < d; e++) {
                    var f = a[e].peerID, g = a[e].callID;
                    c[f] && c[f][g] && (delete c[f][g], b.$6(c[f]) && delete c[f])
                }
                return c
            }, this.$2.logError.bind(this.$2, null, null))
        };
        c.getLoggableSummaries = function () {
            var a = this.getCallSummaries(), b = [];
            for (var c in a) if (Object.prototype.hasOwnProperty.call(a, c)) for (var d in a[c]) if (Object.prototype.hasOwnProperty.call(a[c], d)) {
                var e = this.$4(a[c][d], m);
                e && b.push(e)
            }
            return b
        };
        c.$6 = function (a) {
            for (var b in a) if (Object.prototype.hasOwnProperty.call(a, b)) return !1;
            return !0
        };
        c.$5 = function (a) {
            a = {__t: Date.now(), __d: a.toJsonString()};
            return a
        };
        c.$4 = function (a, c) {
            return a && (!c || Date.now() - a.__t >= c) ? b("FBRTCCallSummary").fromJsonString(a.__d) : null
        };
        c.getCallSummaries = function () {
            var a = this.$1.get(j) || {};
            return a
        };
        c.$3 = function (a, c, d, e) {
            d === void 0 && (d = l);
            (d === void 0 || d === null) && (d = l);
            var f = this.getCallSummaries(), h = this.getCallSummaries();
            f = a(f);
            if (f === null) return;
            var i = this.getCallSummaries();
            if ((g || (g = b("areEqual")))(h, i)) this.$1.set(j, f); else if (d > 0) {
                c("Retry lock");
                if (e) {
                    var m = this;
                    b("setTimeout")(function () {
                        m.$3(a, c, d - 1, !0)
                    }, k)
                } else this.$3(a, c, d - 1, !0)
            } else c("Failed to lock")
        };
        return a
    }();
    e.exports = a
}), null);
__d("ZenonDeviceInfoHelper", ["regeneratorRuntime"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = -1, h = !1, i = {
        getBatteryStats: function () {
            var a, c;
            return b("regeneratorRuntime").async(function (d) {
                while (1) switch (d.prev = d.next) {
                    case 0:
                        d.next = 2;
                        return b("regeneratorRuntime").awrap(i.internalGetWindow().navigator.getBattery);
                    case 2:
                        a = d.sent;
                        if (!(typeof a !== "function")) {
                            d.next = 5;
                            break
                        }
                        return d.abrupt("return", {level: g, placeholder: !0, wasCharged: !1});
                    case 5:
                        d.next = 7;
                        return b("regeneratorRuntime").awrap(a.call(navigator));
                    case 7:
                        c = d.sent;
                        c.charging ? h = !0 : c.onchargingchange = function (a) {
                            a.target.charging && (h = !0), a.target.onchargingchange = null
                        };
                        return d.abrupt("return", {level: c.level * 100, placeholder: !1, wasCharged: h});
                    case 10:
                    case"end":
                        return d.stop()
                }
            }, null, this)
        }, internalGetWindow: function () {
            return window
        }
    };
    a = i;
    e.exports = a
}), null);
__d("ZenonDeviceInfoUtils", ["UserAgentData"], (function (a, b, c, d, e, f) {
    "use strict";
    f.getDeviceSoftwareInfo = a;

    function a() {
        var a = b("UserAgentData").browserName, c = b("UserAgentData").platformName;
        window.navigator.userAgent.toLowerCase().includes("mobile") && (c += " Mobile", a === "Chrome" && (a = "Mobile " + a));
        window.external && window.external.pinPage && (a === "Chrome" && (a += " Edge"));
        return {
            browser: a,
            browser_version: b("UserAgentData").browserFullVersion,
            device: b("UserAgentData").deviceName,
            os: c,
            os_version: b("UserAgentData").platformFullVersion,
            screen_height: window.screen.availHeight,
            screen_width: window.screen.availWidth,
            user_agent: window.navigator.userAgent
        }
    }
}), null);
__d("fbwebrtc_ClientStack", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        OLD_CLIENT_PLATFORM_STACK: 0,
        RSYS_X: 1,
        IG_OLD_STACK: 2,
        MLITE_OLD_STACK: 3,
        SCOTCH: 4,
        ZENON: 5
    });
    e.exports = a
}), null);
__d("multiway_ApprovalStatus", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({DENIED: 0, APPROVED: 1});
    e.exports = a
}), null);
__d("multiway_Capability", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        SUPPORT_AUDIO_DEPRECATED: 0,
        SUPPORT_VIDEO_DEPRECATED: 1,
        SUPPORT_EXPERIMENTS_IN_JOIN_RESPONSE: 2,
        SUPPORT_NEW_PARTICIPANT_STATES: 3,
        SUPPORT_SDP_RENEGOTIATION: 4,
        SUPPORT_MWPP: 5,
        REQUIRE_FULL_SDP_IN_SMU: 6,
        SUPPORT_PRECONNECT: 7,
        SUPPORT_MWPP_DEESCALATION: 8,
        SUPPORT_PARTICIPANT_STATE_UNCALLABLE: 9,
        SUPPORT_MULTIPLE_VIDEO_STREAMS: 10
    });
    e.exports = a
}), null);
__d("multiway_ClientEventType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({UNKNOWN: 0, MEDIA_CONNECTED: 1});
    e.exports = a
}), null);
__d("multiway_DeviceStatus", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({OK: 0, NOT_SUPPORTED: 1, IN_ANOTHER_CALL: 10});
    e.exports = a
}), null);
__d("multiway_DismissReason", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        CALL_ENDED: 0,
        ANSWERED_ON_ANOTHER_DEVICE: 1,
        IN_ANOTHER_CALL: 2,
        CONNECTION_DROPPED: 3,
        REJECTED_ON_ANOTHER_DEVICE: 4,
        REMOVED_BY_PARTICIPANT: 5,
        REJECTED_BY_CALLEE: 6,
        INTERNAL_ERROR: 7,
        CALL_ENDED_BY_PRODUCT: 9,
        JOIN_APPROVAL_DENIED: 10,
        JOIN_APPROVAL_TIMEDOUT: 11,
        UNSUPPORTED_VERSION: 12,
        LIVE_NOT_ACKED: 13,
        TX_ACK_TIMEDOUT: 14
    });
    e.exports = a
}), null);
__d("multiway_EndpointServiceType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({UNKNOWN: 0, COMPOSITING_SERVICE: 1});
    e.exports = a
}), null);
__d("multiway_HangupReason", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        IGNORE_CALL: 0,
        HANGUP_CALL: 1,
        NO_ANSWER_TIMEOUT: 2,
        CLIENT_ERROR: 3,
        IN_ANOTHER_CALL: 4,
        CLIENT_INTERRUPTED: 5,
        SESSION_MIGRATED: 6
    });
    e.exports = a
}), null);
__d("multiway_MediaPauseStatus", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({NotPaused: 0, Paused: 1});
    e.exports = a
}), null);
__d("multiway_MessageType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        JOIN: 0,
        SERVER_MEDIA_UPDATE: 1,
        HANGUP: 2,
        ICE_CANDIDATE: 3,
        RING: 4,
        DISMISS: 5,
        CONFERENCE_STATE: 6,
        ADD_PARTICIPANTS: 7,
        SUBSCRIPTION: 8,
        CLIENT_MEDIA_UPDATE: 9,
        DATA_MESSAGE: 10,
        REMOVE_PARTICIPANTS: 11,
        PING: 18,
        P2P_PROTOCOL: 19,
        UPDATE: 20,
        NOTIFY: 21,
        CONNECT: 22,
        CLIENT_EVENT: 23,
        UNSUBSCRIBE: 25,
        APPROVAL: 26
    });
    e.exports = a
}), null);
__d("multiway_ParticipantCallState", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        UNKNOWN: 0,
        DISCONNECTED: 1,
        NO_ANSWER: 2,
        REJECTED: 3,
        UNREACHABLE: 4,
        CONNECTION_DROPPED: 5,
        CONTACTING: 6,
        RINGING: 7,
        CONNECTING: 8,
        CONNECTED: 9,
        PARTICIPANT_LIMIT_REACHED: 10,
        IN_ANOTHER_CALL: 11,
        RING_TYPE_UNSUPPORTED: 12,
        PENDING_APPROVAL: 13,
        APPROVED: 14,
        FAILED_APPROVAL: 15,
        HANGUP_IN_WAITING_ROOM: 16,
        UNCALLABLE: 17
    });
    e.exports = a
}), null);
__d("multiway_RingType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        GROUP_AUDIO_CALL: 0,
        PEER_VIDEO_CALL: 1,
        PEER_AUDIO_CALL: 2,
        GROUP_VIDEO_CALL: 3,
        LIVE_STREAM: 4,
        PEER_ESCALATED_VIDEO_CALL: 5,
        PEER_ESCALATED_AUDIO_CALL: 6
    });
    e.exports = a
}), null);
__d("multiway_RtcResponseStatusCode", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        OK: 200,
        BAD_REQUEST: 400,
        UNAUTHORIZED: 401,
        NOT_FOUND: 404,
        METHOD_NOT_ALLOWED: 406,
        CONFLICT: 409,
        CONDITIONAL_REQUEST_FAILED: 412,
        SERVER_INTERNAL_ERROR: 500,
        SERVICE_UNAVAILABLE: 503
    });
    e.exports = a
}), null);
__d("multiway_RtcResponseSubCode", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        UNKNOWN: 1e3,
        EXCEEDED_MAX_ALLOWED_PARTICIPANTS: 1001,
        MEMBERSHIP_CHECK_FAIL: 1002,
        CONFERENCE_THROTTLED: 1003,
        ENDPOINT_THROTTLED: 1004,
        MWS_MESSAGE_SENT_TO_INCORRECT_REGION: 1005,
        UNSUPPORTED_REQUEST_TYPE: 2e3,
        CLIENT_REQUEST_UNACCEPTABLE: 2001,
        CLIENT_RESPONSE_UNACCEPTABLE: 2002,
        RING_RESPONSE_BODY_NOT_SET: 2004,
        SERVER_MEDIA_UPDATE_RESPONSE_BODY_NOT_SET: 2005,
        INVALID_SDP: 2006,
        INVALID_CONFERENCE_NAME: 2007,
        SERVER_INFO_CONFERENCE_NAME_MISMATCH: 2008,
        INVALID_USER_ID: 2009,
        INCORRECT_VERSION_RANGE: 2010,
        SENDER_ID_MISMATCH: 2011,
        RECIPIENT_NOT_SPECIFIED: 2012,
        FIELD_NOT_ALLOWED: 2013,
        USERS_NOT_SPECIFIED: 2015,
        REQUEST_UNACCEPTABLE_FOR_ENDPOINT_STATE: 2016,
        INVALID_CALL_ID: 2017,
        SESSION_DESCRIPTION_ID_MISMATCH: 2018,
        EMPTY_CLIENT_MEDIA_UPDATES: 2019,
        INVALID_SERVER_INFO_DATA: 2020,
        INCORRECT_STATE_VERSION: 2021,
        MISMATCHED_STATE_FOR_VERSION: 2022,
        INVALID_STATE_VERSION: 2023,
        NO_RESOLVER_FOUND: 2024,
        MISSING_APPROVERLIST: 2025,
        FULL_SDP_REQUIRED_IN_APPROVED_STATE: 2026,
        INVALID_BROADCAST_ID: 2027,
        INVALID_ENDPOINT_CONFIG: 2028,
        MISSING_BODY_ENDPOINT: 2101,
        MISSING_BODY_HEADER: 2102,
        MISSING_BODY_BODY: 2103,
        MISSING_BODY_PARAMS: 2104,
        MISSING_BODY_REMOVE_PARTICIPANTS_REQUEST: 2105,
        MISSING_BODY_DATA_MESSAGE_REQUEST: 2106,
        MISSING_BODY_CLIENT_MEDIA_UPDATE_REQUEST: 2107,
        MISSING_BODY_ADD_PARTICIPANTS_REQUEST: 2108,
        MISSING_BODY_SUBSCRIPTION_REQUEST: 2110,
        MISSING_BODY_JOIN_REQUEST: 2111,
        MISSING_BODY_HANGUP_REQUEST: 2112,
        MISSING_BODY_ICE_CANDIDATE_REQUEST: 2113,
        MISSING_BODY_P2P_MESSAGE_REQUEST: 2114,
        MISSING_BODY_UPDATE_REQUEST: 2115,
        MISSING_BODY_CLIENT_EVENT_REQUEST: 2116,
        MISSING_BODY_CONNECT_REQUEST: 2117,
        MISSING_BODY_UNSUBSCRIBE_REQUEST: 2118,
        MISSING_BODY_APPROVAL_REQUEST: 2119,
        MISSING_BODY_GENERIC: 2199,
        REQUESTOR_NOT_MEMBER_CONFERENCE: 3002,
        NOT_BROADCAST_OWNER: 3003,
        GUEST_NOT_INVITED: 3004,
        GUEST_DISCONNECTED: 3005,
        GUEST_INVITATION_EXPIRED: 3006,
        SHOULD_USE_NEW_SIGNALING_PATH: 3007,
        PARTICIPANT_IN_PENDING_APPROVAL_STATE: 3008,
        BROADCAST_ALREADY_STOPPED: 4002,
        FAILED_TO_GENERATE_SDP_ANSWER: 4003,
        FAILED_GENERATE_SESSION_DESCRIPTION: 4004,
        SDP_SESSION_ID_MISMATCH: 4005,
        MEDIA_ENDPOINT_GONE: 4007,
        MEDIA_ENDPOINT_ALREADY_EXISTS: 4008,
        MEDIA_ENDPOINT_EXISTS_DIFFERENT_SESSION_ID: 4009,
        LEGACY_MESSENGER_SENDER_UNSET: 4010,
        FAILED_TO_SET_TRANSPORT_INFO: 4011,
        NON_PRIMARY_MULTIWAY_SERVER: 4012,
        FAILED_TO_GET_REMOTE_DESCRIPTION: 4013,
        LOCAL_DESCRIPTION_NOT_SET: 4014,
        INVALID_SDP_TYPE: 4015,
        CLIENT_MEDIA_UPDATE_WITHOUT_REMOTE_SDP_INFO: 4016,
        SDP_UNSET_ON_P2P_ANSWER: 4017,
        MISSING_ICE_CANDIDATE_PAYLOAD: 4018,
        P2P_PROTOCOL_UNSET: 4019,
        CREATE_ACK_FOR_INVALID_MESSAGE_TYPE: 4020,
        LEGACY_CLIENT_CANNOT_JOIN_SFU_MODE: 4021,
        CONNECT_UNSUPPORTED_IN_SFU_MODE: 4022,
        CONNECT_UNSUPPORTED_FOR_JOINED_ENDPOINTS: 4023,
        RESOLVE_STATE_API_ERROR: 4024,
        EXTERNAL_RESOLUTION_ERROR: 4025,
        INTERNAL_RESOLUTION_ERROR: 4026,
        RESOLUTION_DISABLED: 4027,
        BROADCAST_ID_MISSING: 4028,
        SDP_UNSET_ON_P2P_OFFER: 4029,
        CONFERENCE_NOT_FOUND: 5001,
        CONFERENCE_IS_TERMINATING: 5002,
        CONFERENCE_IS_TERMINATED: 5003,
        CONFERENCE_NAME_EMPTY: 5004,
        NONCE_EMPTY: 5005,
        NONCE_MISMATCH: 5006,
        CONFERENCE_HAS_GONE: 5007,
        PARTICIPANT_HAS_GONE: 5008,
        MEDIA_SERVER_NOT_FOUND: 5009,
        MEDIA_CODECS_UNSUPPORTED_BY_CONFERENCE: 6001,
        CONFERENCE_INCAPABLE_RENEGOTIATION: 6002,
        REJECTING_CMU_WHEN_SMU_PENDING: 6003,
        PARTICIPANT_NOT_SUBSCRIBED_TO_TOPIC: 6004,
        PARTICIPANT_ALREADY_IN_WAITING_ROOM: 6005,
        PARTICIPANT_NOT_IN_PENDING_APPROVAL: 6006,
        USER_NOT_APPROVER_FOR_TARGET_USER: 6007,
        OK: 9e3
    });
    e.exports = a
}), null);
__d("multiway_VideoQuality", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({LOW: 0, MEDIUM: 1, HIGH: 2, HD: 3, NUM_QUALITIES: 4});
    e.exports = a
}), null);
__d("ZenonMWMessageTypes", ["$InternalEnum", "multiway_ApprovalStatus", "multiway_Capability", "fbwebrtc_ClientStack", "multiway_DeviceStatus", "multiway_DismissReason", "multiway_EndpointServiceType", "multiway_HangupReason", "multiway_MediaPauseStatus", "multiway_ParticipantCallState", "multiway_RingType", "multiway_RtcResponseStatusCode", "multiway_RtcResponseSubCode", "multiway_MessageType", "multiway_VideoQuality", "multiway_ClientEventType"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum")({DEFAULT_AUDIO: 0, DEFAULT_VIDEO: 1, SCREEN_AUDIO: 2, SCREEN_VIDEO: 3});
    e.exports = {
        ZenonMWApprovalStatus: b("multiway_ApprovalStatus"),
        ZenonMWCapability: b("multiway_Capability"),
        ZenonMWClientEventType: b("multiway_ClientEventType"),
        ZenonMWClientStack: b("fbwebrtc_ClientStack"),
        ZenonMWDeviceStatus: b("multiway_DeviceStatus"),
        ZenonMWDismissReason: b("multiway_DismissReason"),
        ZenonMWEndpointServiceType: b("multiway_EndpointServiceType"),
        ZenonMWHangupReason: b("multiway_HangupReason"),
        ZenonMWMediaPauseStatus: b("multiway_MediaPauseStatus"),
        ZenonMWParticipantCallState: b("multiway_ParticipantCallState"),
        ZenonMWResponseStatusCode: b("multiway_RtcResponseStatusCode"),
        ZenonMWResponseSubCode: b("multiway_RtcResponseSubCode"),
        ZenonMWRingType: b("multiway_RingType"),
        ZenonMWSignalingPayloadType: b("multiway_MessageType"),
        ZenonMWTrackLabel: a,
        ZenonMWVideoQuality: b("multiway_VideoQuality")
    }
}), null);
__d("ZenonMediaError", ["$InternalEnum"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored(["IceDisconnected", "IceFailure", "SetLocalSdpFailed", "SetRemoteSdpFailed", "UnknownError"]);
    f.ZenonMediaError = a
}), null);
__d("ZenonDismissReason", ["FBLogger", "ZenonCallsModelTypes", "ZenonIncomingRingSDKTypes", "ZenonMediaError", "ZenonMWMessageTypes", "$InternalEnum"], (function (a, b, c, d, e, f) {
    "use strict";
    f.endCallToDismissReason = a;
    f.dismissToEndCallReason = c;
    f.dismissReasonToCancelReason = d;
    f.mediaErrorToDismissReason = e;
    f.mwDismissToDmissReason = h;
    var g = b("$InternalEnum")({
        IgnoreCall: 0,
        HangupCall: 1,
        InAnotherCall: 2,
        AcceptAfterHangUp: 3,
        NoAnswerTimeout: 4,
        IncomingTimeout: 5,
        OtherInstanceHandled: 6,
        SignalingMessageFailed: 7,
        ConnectionDropped: 8,
        ClientInterrupted: 9,
        WebRTCError: 10,
        ClientError: 11,
        NoPermission: 12,
        OtherNotCapable: 13,
        NoUIShown: 14,
        VersionUnsupported: 15,
        CallerNotVisible: 16,
        CarrierBlocked: 17,
        OtherCarrierBlocked: 18,
        ClientEncryptionError: 19,
        MicrophonePermissionDenied: 20,
        CameraPermissionDenied: 21,
        SessionMigrated: 22,
        RingMuted: 23,
        JoinApprovalDenied: 24,
        RejectedByCallee: 25,
        CallEndedByProduct: 26,
        CallEnded: 27,
        AnsweredOnAnotherDevice: 28,
        RejectedOnAnotherDevice: 29,
        CallCollision: 30,
        MaxAllowedParticipantsReached: 31,
        UnexpectedEndOfCall: 32,
        TxAckTimeout: 33
    });
    f.ZenonDismissReason = g;

    function a(a) {
        switch (a) {
            case b("ZenonCallsModelTypes").ZenonEndCallReason.CallEndAcceptAfterHangUp:
                return g.AcceptAfterHangUp;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.CallerNotVisible:
                return g.CallerNotVisible;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.CarrierBlocked:
                return g.CarrierBlocked;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.ClientEncryptionError:
                return g.ClientEncryptionError;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.ClientError:
                return g.ClientError;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.ClientInterrupted:
                return g.ClientInterrupted;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.ConnectionDropped:
                return g.ConnectionDropped;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.HangupCall:
                return g.HangupCall;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.IgnoreCall:
                return g.IgnoreCall;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.InAnotherCall:
                return g.InAnotherCall;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.InactiveTimeout:
                return g.CallEnded;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.IncomingTimeout:
                return g.IncomingTimeout;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.MaxAllowedParticipantsReached:
                return g.MaxAllowedParticipantsReached;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.NoAnswerTimeout:
                return g.NoAnswerTimeout;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.NoPermission:
                return g.NoPermission;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.NoUIShown:
                return g.NoUIShown;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.OtherCarrierBlocked:
                return g.OtherCarrierBlocked;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.OtherInstanceHandled:
                return g.OtherInstanceHandled;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.OtherNotCapable:
                return g.OtherNotCapable;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.SignalingMessageFailed:
                return g.SignalingMessageFailed;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.UnexpectedEndOfCall:
                return g.UnexpectedEndOfCall;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.Unknown:
                return g.CallEnded;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.VersionUnsupported:
                return g.VersionUnsupported;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.WebRTCError:
                return g.WebRTCError;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.MicrophonePermissionDenied:
                return g.MicrophonePermissionDenied;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.CameraPermissionDenied:
                return g.CameraPermissionDenied;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.SessionMigrated:
                return g.SessionMigrated;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.RingMuted:
                return g.RingMuted;
            case b("ZenonCallsModelTypes").ZenonEndCallReason.TxAckTimeout:
                return g.TxAckTimeout
        }
    }

    function c(a) {
        switch (a) {
            case g.CallEnded:
            case g.CallEndedByProduct:
            case g.HangupCall:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.HangupCall;
            case g.IgnoreCall:
            case g.JoinApprovalDenied:
            case g.RejectedByCallee:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.IgnoreCall;
            case g.InAnotherCall:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.InAnotherCall;
            case g.AcceptAfterHangUp:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.CallEndAcceptAfterHangUp;
            case g.NoAnswerTimeout:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.NoAnswerTimeout;
            case g.IncomingTimeout:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.IncomingTimeout;
            case g.AnsweredOnAnotherDevice:
            case g.CallCollision:
            case g.RejectedOnAnotherDevice:
            case g.OtherInstanceHandled:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.OtherInstanceHandled;
            case g.SignalingMessageFailed:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.SignalingMessageFailed;
            case g.ConnectionDropped:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.ConnectionDropped;
            case g.ClientInterrupted:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.ClientInterrupted;
            case g.WebRTCError:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.WebRTCError;
            case g.ClientError:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.ClientError;
            case g.NoPermission:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.NoPermission;
            case g.OtherNotCapable:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.OtherNotCapable;
            case g.NoUIShown:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.NoUIShown;
            case g.VersionUnsupported:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.VersionUnsupported;
            case g.CallerNotVisible:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.CallerNotVisible;
            case g.CarrierBlocked:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.CarrierBlocked;
            case g.OtherCarrierBlocked:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.OtherCarrierBlocked;
            case g.ClientEncryptionError:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.ClientEncryptionError;
            case g.UnexpectedEndOfCall:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.UnexpectedEndOfCall;
            case g.MaxAllowedParticipantsReached:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.MaxAllowedParticipantsReached;
            case g.MicrophonePermissionDenied:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.MicrophonePermissionDenied;
            case g.CameraPermissionDenied:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.CameraPermissionDenied;
            case g.SessionMigrated:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.SessionMigrated;
            case g.RingMuted:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.RingMuted;
            case g.TxAckTimeout:
                return b("ZenonCallsModelTypes").ZenonEndCallReason.TxAckTimeout
        }
        b("FBLogger")("rtc_www").mustfix("Unknown dismiss reason: %s", a);
        return b("ZenonCallsModelTypes").ZenonEndCallReason.Unknown
    }

    function d(a) {
        switch (a) {
            case g.OtherInstanceHandled:
            case g.AnsweredOnAnotherDevice:
            case g.RejectedOnAnotherDevice:
                return b("ZenonIncomingRingSDKTypes").ZenonCancelReason.OtherDismiss;
            default:
                return b("ZenonIncomingRingSDKTypes").ZenonCancelReason.Hangup
        }
    }

    function e(a) {
        switch (a) {
            case b("ZenonMediaError").ZenonMediaError.IceDisconnected:
                return g.ConnectionDropped;
            case b("ZenonMediaError").ZenonMediaError.IceFailure:
            case b("ZenonMediaError").ZenonMediaError.SetLocalSdpFailed:
            case b("ZenonMediaError").ZenonMediaError.SetRemoteSdpFailed:
                return g.WebRTCError;
            case b("ZenonMediaError").ZenonMediaError.UnknownError:
                return g.ClientError
        }
    }

    function h(a) {
        return i[a]
    }

    var i = Object.freeze((a = {}, a[(c = b("ZenonMWMessageTypes")).ZenonMWDismissReason.CALL_ENDED] = g.CallEnded, a[c.ZenonMWDismissReason.ANSWERED_ON_ANOTHER_DEVICE] = g.AnsweredOnAnotherDevice, a[c.ZenonMWDismissReason.IN_ANOTHER_CALL] = g.InAnotherCall, a[c.ZenonMWDismissReason.CONNECTION_DROPPED] = g.ConnectionDropped, a[c.ZenonMWDismissReason.REJECTED_ON_ANOTHER_DEVICE] = g.RejectedOnAnotherDevice, a[c.ZenonMWDismissReason.REJECTED_BY_CALLEE] = g.RejectedByCallee, a[c.ZenonMWDismissReason.CALL_ENDED_BY_PRODUCT] = g.CallEndedByProduct, a[c.ZenonMWDismissReason.INTERNAL_ERROR] = g.SignalingMessageFailed, a[c.ZenonMWDismissReason.REMOVED_BY_PARTICIPANT] = g.HangupCall, a[c.ZenonMWDismissReason.TX_ACK_TIMEDOUT] = g.TxAckTimeout, a))
}), null);
__d("ZenonVCSTypes", ["$InternalEnum"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum")({
        DIRECT_VIDEO: "direct_video",
        ESCALATED: "escalated",
        ESCALATION_DECLINED: "escalation_declined",
        MWS: "mws",
        VOIP: "voip"
    });
    f.ZenonCallType = a;
    c = b("$InternalEnum")({LL_BASIC: 1, LL_DEBUG: 2, LL_INFO: 4, LL_NIL: 0, LL_VERBOSE: 5, LL_WARNING: 3});
    f.ZenonUploadLogLevel = c
}), null);
__d("ZenonCallSummary", ["regeneratorRuntime", "ChannelClientID", "FBRTCExperiment", "FBRTCLocalUploadLogLevel", "SiteData", "WebPerformanceDeviceInfo", "ZenonCallSummaryStore", "ZenonCallSummaryUploader", "ZenonDeviceInfoHelper", "ZenonDeviceInfoUtils", "ZenonDismissReason", "ZenonVCSTypes", "gkx", "performanceNow", "uuid"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = {PRESSED_ANSWER: "p_a"};

    function i(a) {
        var c = b("FBRTCExperiment").gen("rtweb_zenon_platform");
        c = c.getBool("use_zenon_platform", !1, !1);
        var d = b("FBRTCExperiment").gen("rpweb_zenon_platform_workplace");
        d = d.getBool("use_zenon_platform_wp", !1, !1);
        c = c || d;
        if ((a === "mw" || a === "mw++") && c) return "ZenonPlatform";
        d = b("gkx")("1341692");
        a = b("gkx")("1680228");
        return !d && !a ? "ZenonScotch" : "Old Codebase"
    }

    var j = 19, k = 24, l = {
        CALL_CONNECTED: "connected",
        CALL_ENDED: "ended",
        CALL_STARTED: "started",
        NETWORK_READY: "network_ready",
        PROC_JOIN_RESPONSE: "p_jresp",
        RECV_ANSWER: "r_a",
        RECV_ANSWER_ACK: "r_aack",
        RECV_JOIN_RESPONSE: "r_jresp",
        RECV_OFFER: "r_o",
        RECV_OFFER_ACK: "r_oack",
        RECV_OK: "r_ok",
        RECV_PRANSWER: "r_pr",
        RECV_RETRIED_ANSWER: "r_a2",
        RECV_RETRIED_ANSWER_ACK: "r_aack2",
        RECV_RETRIED_OFFER: "r_o2",
        RECV_RETRIED_OFFER_ACK: "r_oack2",
        RECV_RING_REQUEST: "r_rreq",
        SENT_ANSWER: "s_a",
        SENT_ANSWER_ACK: "s_aack",
        SENT_JOIN_REQUEST: "s_jreq",
        SENT_OFFER: "s_o",
        SENT_OFFER_ACK: "s_oack",
        SENT_OK: "s_ok",
        SENT_PRANSWER: "s_pr",
        SENT_RETRIED_ANSWER: "s_a2",
        SENT_RETRIED_ANSWER_ACK: "s_aack2",
        SENT_RETRIED_OFFER: "s_o2",
        SENT_RETRIED_OFFER_ACK: "s_oack2",
        SENT_RING_RESPONSE: "s_rresp"
    }, m = {
        BATTERY_END: "battery_end",
        BATTERY_START: "battery_start",
        DESKTOP_DEVICE_CLASS: "desktop_device_class",
        DEVICE_INFO: "device_info",
        INITIATED_BY_APP_ID: "initiated_by_app_id",
        INITIATED_BY_PAGE_ID: "initiated_by_page_id",
        MAX_CONCURRENT_CONNECTED_PARTICIPANTS: "max_concurrent_connected_participants",
        PEER_IS_MOBILE: "peer_is_mobile",
        RATING: "rating5",
        RATING_SHOWN: "rating_shown",
        SURVEY_CHOICE: "survey_choice",
        SURVEY_DETAILS: "survey_details",
        SURVEY_SHOWN: "survey_shown",
        YEAR_CLASS: "year_class"
    };
    a = function () {
        function a(a) {
            var c = a.callID, d = a.callTrigger, e = a.isCaller, f = a.isVideo, h = a.localCallID, j = a.peerID,
                l = a.protocol;
            a = a.uploadLogLevel;
            this.$25 = 0;
            this.$26 = 0;
            this.$31 = {};
            this.$32 = {};
            this.$33 = {};
            this.$34 = {};
            this.$35 = !1;
            this.$37 = 0;
            this.$38 = !1;
            this.$39 = {};
            this.$40 = {};
            this.$41 = {};
            this.$42 = {};
            this.$48 = {
                CoreAudioMetrics: {isstall: 0},
                DebugAudioMetrics: {NetworkReceive: {}},
                extraInfo: {},
                receiver: {},
                sender: {},
                video: {}
            };
            this.$50 = {};
            this.$51 = {};
            this.$52 = "sfu";
            this.$54 = {};
            this.$1 = j;
            this.$2 = c;
            this.localCallID = (j = h) != null ? j : b("uuid")();
            this.$3 = b("ChannelClientID").getID();
            this.$5 = e;
            this.$4 = k;
            this.$8 = i(l);
            this.$6 = (c = a) != null ? c : b("FBRTCLocalUploadLogLevel").getLocalUploadLogLevel();
            this.$7 = d;
            this.$28 = new Date().valueOf();
            this.$9 = l !== "p2p" ? "mws" : l;
            this.$21 = null;
            this.$20 = null;
            this.$36 = this.$1 === "MW_PEER_ID";
            this.$16 = b("SiteData").push_phase;
            this.$9 === "p2p" ? this.setCallType(f ? b("ZenonVCSTypes").ZenonCallType.DIRECT_VIDEO : b("ZenonVCSTypes").ZenonCallType.VOIP) : this.setCallType(b("ZenonVCSTypes").ZenonCallType.MWS);
            this.$30 = (g || (g = b("performanceNow")))();
            this.$29 = 0;
            this.$27 = this.$30;
            this.$53 = 0;
            this.$54[m.DEVICE_INFO] = b("ZenonDeviceInfoUtils").getDeviceSoftwareInfo();
            this.updateBatteryStart();
            this.$56();
            this.$57()
        }

        a.$58 = function (a) {
            try {
                return JSON.parse(a)
            } catch (a) {
                return null
            }
        };
        a.fromJsonString = function (c) {
            var d;
            c = this.$58(c);
            if (c == null) return null;
            if (c.version < j) return null;
            if (!Object.prototype.hasOwnProperty.call(c, "peerID") || !Object.prototype.hasOwnProperty.call(c, "callID") || !Object.prototype.hasOwnProperty.call(c, "isCaller") || !Object.prototype.hasOwnProperty.call(c, "startTime") || !Object.prototype.hasOwnProperty.call(c, "trigger") || !Object.prototype.hasOwnProperty.call(c, "signalingTime") || !Object.prototype.hasOwnProperty.call(c, "lastUpdatedTime") || !Object.prototype.hasOwnProperty.call(c, "lastSerializedTime")) return null;
            var e = c.activeConn === "p2p" ? c.activeConn : "mw";
            e = new a({
                callID: c.callID,
                isCaller: c.isCaller,
                isVideo: c.callType === b("ZenonVCSTypes").ZenonCallType.DIRECT_VIDEO,
                localCallID: c.localCallID,
                peerID: c.peerID,
                protocol: e
            });
            e.$3 = c.deviceID;
            e.$4 = c.version;
            e.$6 = c.uploadLogLevel;
            e.$28 = c.startTime;
            e.$7 = c.trigger;
            e.$52 = c.mediaMode;
            e.$36 = c.isUsingMultiway;
            e.$35 = c.hasOfferInRingRequest;
            e.$37 = (d = c.renegotiationCmuRequestSent) != null ? d : 0;
            e.$8 = c.clientVersion;
            e.$31 = c.signalingTime;
            e.$17 = c.endCallReason;
            e.$18 = c.endCallSubreason;
            e.$19 = c.isRemoteEnded;
            e.$25 = c.lastUpdatedTime;
            e.$26 = c.lastSerializedTime;
            e.$11 = c.joinWithSID;
            e.$21 = (d = c.endIsConnected) != null ? d : null;
            e.$20 = (d = c.pcIsConnected) != null ? d : null;
            e.$38 = c.hasAnswerInJoinResponse;
            c.conferenceName != null && (e.$10 = c.conferenceName);
            c.escP2PCallID != null && (e.$12 = c.escP2PCallID);
            c.activeConn != null && (e.$9 = c.activeConn);
            c.serverInfoData != null && (e.$14 = c.serverInfoData);
            c.localVideoDuration != null && (e.$43 = c.localVideoDuration);
            c.remoteVideoDuration != null && (e.$44 = c.remoteVideoDuration);
            c.unsetOnRetrieve != null && (e.$24 = c.unsetOnRetrieve);
            c.openCount != null && (e.$53 = c.openCount);
            c.extraInfo && (e.$54 = c.extraInfo);
            c.gen0IceSentCount && (e.$39 = c.gen0IceSentCount);
            c.gen0IceReceivedCount && (e.$40 = c.gen0IceReceivedCount);
            c.iceConnections && (e.$50 = c.iceConnections);
            c.iceSentCount && (e.$41 = c.iceSentCount);
            c.iceReceivedCount && (e.$42 = c.iceReceivedCount);
            c.pcConnectionStates && (e.$51 = c.pcConnectionStates);
            c.accumulatedCallTime != null && (e.$29 = c.accumulatedCallTime);
            c.escStateTimes && (e.$32 = c.escStateTimes);
            c.applicationEventTime && (e.$33 = c.applicationEventTime);
            c.videoEscTimes && (e.$34 = c.videoEscTimes);
            c.mediaStats && (e.$48 = c.mediaStats);
            c.connectionType !== void 0 && (e.$22 = c.connectionType);
            c.deviceCharged != null && (e.$55 = c.deviceCharged);
            c.videoReceivedCodec !== null && (e.$45 = c.videoReceivedCodec);
            c.videoSentCodec !== null && (e.$46 = c.videoSentCodec);
            c.audioSentCodec !== null && (e.$47 = c.audioSentCodec);
            c.relayIP !== null && c.relayIP !== void 0 && (e.$23 = c.relayIP);
            c.startReach != null && (e.$49 = c.startReach);
            c.sdpFormat != null && (e.$15 = c.sdpFormat);
            return e
        };
        var c = a.prototype;
        c.toJsonString = function () {
            var a;
            this.$26 = new Date().valueOf();
            a = {
                accumulatedCallTime: this.$59(),
                activeConn: (a = this.$9) != null ? a : "p2p",
                applicationEventTime: this.$33,
                audioSentCodec: this.$47,
                callID: this.$2,
                callType: this.$13,
                clientVersion: this.$8,
                conferenceName: this.$10,
                connectionType: this.$22,
                deviceCharged: this.$55,
                deviceID: this.$3,
                endCallReason: this.$17,
                endCallSubreason: this.$18,
                endIsConnected: this.$21,
                escP2PCallID: this.$12,
                escStateTimes: this.$32,
                extraInfo: this.$54,
                gen0IceReceivedCount: this.$40,
                gen0IceSentCount: this.$39,
                hasAnswerInJoinResponse: this.$38,
                hasOfferInRingRequest: this.$35,
                iceConnections: this.$50,
                iceReceivedCount: this.$42,
                iceSentCount: this.$41,
                isCaller: this.$5,
                isRemoteEnded: this.$19,
                isUsingMultiway: this.$36,
                joinWithSID: this.$11,
                lastSerializedTime: this.$26,
                lastUpdatedTime: this.$25,
                localCallID: this.localCallID,
                localVideoDuration: this.$43,
                mediaMode: this.$52,
                mediaStats: this.$48,
                pcConnectionStates: this.$51,
                pcIsConnected: this.$20,
                peerID: this.$1,
                relayIP: this.$23,
                remoteVideoDuration: this.$44,
                renegotiationCmuRequestSent: this.$37,
                sdpFormat: this.$15,
                serverInfoData: this.$14,
                signalingTime: this.$31,
                startReach: this.$49,
                startTime: this.$28,
                trigger: this.$7,
                unsetOnRetrieve: this.$24,
                uploadLogLevel: this.$6,
                version: this.$4,
                videoEscTimes: this.$34,
                videoReceivedCodec: this.$45,
                videoSentCodec: this.$46
            };
            return JSON.stringify(a)
        };
        c.unsetEndCallFields = function () {
            this.$17 = null, this.$18 = null, this.$19 = null, this.$21 = null, delete this.$31[l.CALL_ENDED], this.$30 = 0, this.$24 = null
        };
        c.isNull = function () {
            return this.$1 === "0" && this.$2 === "0" && !this.$5 && this.$7 === "NULL_SUMMARY"
        };
        c.getExtraInfo = function () {
            return this.$54
        };
        c.getLastUpdatedTime = function () {
            return this.$25
        };
        c.getDeviceID = function () {
            return this.$3
        };
        c.setDeviceID = function (a) {
            this.$3 = a
        };
        c.getSdpFormat = function () {
            return this.$15
        };
        c.setSdpFormat = function (a) {
            this.$15 = a
        };
        c.getLoggingArgs = function () {
            var a;
            return {
                call_id: this.$2,
                conf_name: (a = this.$10) != null ? a : "",
                peer_id: isNaN(this.$1) ? null : this.$1,
                serv_info: (a = this.$14) != null ? a : "",
                web_device_id: this.$3
            }
        };
        c.getDeviceCharged = function () {
            return this.$55
        };
        c.setDeviceCharged = function (a) {
            this.$55 !== !0 && (this.$55 = a)
        };
        c.save = function (a) {
            a.storeCallSummary(this.$1, this.$2, this), this.$27 = (g || (g = b("performanceNow")))()
        };
        c.onCallAccepted = function (a) {
            this.$33[h.PRESSED_ANSWER] = this.$59(), this.$7 = a, this.$57()
        };
        c.onCallJoinRequest = function (a) {
            this.$35 = a, this.$36 = this.$1 === "MW_PEER_ID", this.$57()
        };
        c.onCallConnected = function (a) {
            this.$60(l.CALL_CONNECTED), this.$52 = a, this.$57()
        };
        c.onCallEscalated = function (a) {
            this.$52 === "p2p" && a === "sfu" ? this.$52 = "p2p_sfu_escalated" : this.$52 = a, this.$37 = this.$59(), this.$57()
        };
        c.onCallEnded = function (a, b, c, d) {
            this.$24 = c, this.$17 = a, this.$18 = d, this.$19 = b, this.$60(l.CALL_ENDED), this.$21 === null && (this.$21 = this.$20), this.$57()
        };
        c.setPCIsConnected = function (a) {
            this.$20 !== a && (this.$20 = a, this.$51[this.$59()] = a)
        };
        c.onInviteResponded = function () {
            var a = this.$9 === "p2p" ? l.SENT_OFFER_ACK : l.SENT_RING_RESPONSE;
            this.$60(a);
            this.$57()
        };
        c.onInviteReceived = function () {
            var a = this.$9 === "p2p" ? l.RECV_OFFER : l.RECV_RING_REQUEST;
            this.$60(a);
            this.$57()
        };
        c.onInviteSent = function () {
            this.$60(l.SENT_JOIN_REQUEST), this.$57()
        };
        c.onInviteResponseReceived = function () {
            this.$60(l.RECV_JOIN_RESPONSE), this.$57()
        };
        c.onInviteResponseProcessed = function () {
            this.$60(l.PROC_JOIN_RESPONSE), this.$57()
        };
        c.onMediaConnected = function () {
            this.$60(l.NETWORK_READY), this.$57()
        };
        c.setIsPeerMobile = function (a) {
            this.$54[m.PEER_IS_MOBILE] = a ? "1" : "0", this.$57()
        };
        c.setCallType = function (a) {
            this.$13 = a, this.$57()
        };
        c.setConferenceName = function (a) {
            this.$10 = a, this.$57()
        };
        c.setConnectionType = function (a) {
            this.$22 = a, this.$57()
        };
        c.setInitByPageID = function (a) {
            this.$54[m.INITIATED_BY_PAGE_ID] = a, this.$57()
        };
        c.setInitByAppID = function (a) {
            a != null && (this.$54[m.INITIATED_BY_APP_ID] = a, this.$57())
        };
        c.setJoinWithSID = function (a) {
            this.$11 = a, this.$57()
        };
        c.setMediaStats = function (a) {
            this.$48 = a;
            this.$39 && (this.$48.sender.ice_g0 = this.$39);
            this.$41 && (this.$48.sender.ice = this.$41);
            this.$40 && (this.$48.receiver.ice_g0 = this.$40);
            this.$42 && (this.$48.receiver.ice = this.$42);
            a = a.extraInfo;
            var b = a.localIceCandidate;
            a = a.remoteIceCandidate;
            if (b) {
                (this.$49 == null || this.$49 === "") && (this.$49 = b.networkType);
                if (a) {
                    var c = b.candidateType;
                    b = b.protocol;
                    var d = a.candidateType;
                    a = a.protocol;
                    if (c != null && b != null && d != null && a != null) {
                        c = "l:" + c + "-" + b + ";r:" + d + "-" + a;
                        this.$50[c] == null && (this.$50[c] = this.$59())
                    }
                }
            }
            this.updateBatteryEnd();
            this.$57()
        };
        c.setServerInfoData = function (a) {
            this.$14 = a, this.$57()
        };
        c.setRating = function (a) {
            this.$54[m.RATING] = a, this.$57()
        };
        c.setFeedback = function (a) {
            this.$54[m.SURVEY_DETAILS] = a, this.$57()
        };
        c.setSurveyChoice = function (a) {
            this.$54[m.SURVEY_CHOICE] = a, this.$57()
        };
        c.setMaxConnectedParticipants = function (a) {
            this.$54[m.MAX_CONCURRENT_CONNECTED_PARTICIPANTS] = a, this.$57()
        };
        c.setHasAnswerInJoinResponse = function (a) {
            this.$38 = a, this.$57()
        };
        c.$60 = function (a) {
            if (this.$31[a] != null) return;
            this.$31[a] = this.$59()
        };
        c.$59 = function () {
            var a = (g || (g = b("performanceNow")))() - this.$30;
            return Math.floor(this.$29 + a)
        };
        c.$57 = function () {
            this.$25 = new Date().valueOf()
        };
        c.$56 = function () {
            var a = b("WebPerformanceDeviceInfo").getMobileYearClass();
            a != null && a > 0 ? this.$54[m.YEAR_CLASS] = a : this.$54[m.DESKTOP_DEVICE_CLASS] = b("WebPerformanceDeviceInfo").getDeviceLevel()
        };
        c.updateBatteryStart = function () {
            var a, c, d;
            return b("regeneratorRuntime").async(function (e) {
                while (1) switch (e.prev = e.next) {
                    case 0:
                        e.next = 2;
                        return b("regeneratorRuntime").awrap(b("ZenonDeviceInfoHelper").getBatteryStats());
                    case 2:
                        a = e.sent, c = a.level, d = a.placeholder, d !== !0 && (this.$54[m.BATTERY_START] = c);
                    case 6:
                    case"end":
                        return e.stop()
                }
            }, null, this)
        };
        c.updateBatteryEnd = function () {
            var a, c, d, e;
            return b("regeneratorRuntime").async(function (f) {
                while (1) switch (f.prev = f.next) {
                    case 0:
                        f.next = 2;
                        return b("regeneratorRuntime").awrap(b("ZenonDeviceInfoHelper").getBatteryStats());
                    case 2:
                        a = f.sent, c = a.level, d = a.placeholder, e = a.wasCharged, d !== !0 && (this.$54[m.BATTERY_END] = c, this.setDeviceCharged(e));
                    case 7:
                    case"end":
                        return f.stop()
                }
            }, null, this)
        };
        c.toString = function () {
            var a = {core_metrics: this.$61(), time_series: null};
            return JSON.stringify(a)
        };
        c.$61 = function () {
            return {
                CoreAudioMetrics: this.$48.CoreAudioMetrics,
                DebugAudioMetrics: this.$48.DebugAudioMetrics,
                active_conn: this.$9,
                answer_in_join_resp: this.$38,
                app_event_times: this.$33,
                call_type: this.$13,
                caller: this.$5,
                client_version: this.$8,
                conf_name: this.$10,
                conn: this.$62(),
                device_charged: this.$55,
                end: this.$63(),
                esc_p2p_call_id: this.$12,
                esc_state_times: this.$32,
                is_using_multiway: this.$36,
                join_with_sid: this.$11,
                log_level: this.$64(b("ZenonVCSTypes").ZenonUploadLogLevel.cast(this.$6)),
                offer_in_ring_req: this.$35,
                open_count: this.$53,
                peer_id: isNaN(this.$1) ? null : this.$1,
                perf: this.$65(),
                push_phase: this.$16,
                receiver: this.$48.receiver,
                sdp_reneg_times: [{crs: this.$37}],
                sender: this.$48.sender,
                serv_info: this.$14,
                signaling: this.$66(),
                ver: this.$4,
                vid_esc_times: this.$34,
                video: this.$48.video
            }
        };
        c.$64 = function (a) {
            if (a == null) return "";
            switch (a) {
                case b("ZenonVCSTypes").ZenonUploadLogLevel.LL_BASIC:
                    return "basic";
                case b("ZenonVCSTypes").ZenonUploadLogLevel.LL_DEBUG:
                    return "debug";
                case b("ZenonVCSTypes").ZenonUploadLogLevel.LL_WARNING:
                    return "warning";
                case b("ZenonVCSTypes").ZenonUploadLogLevel.LL_INFO:
                    return "info";
                case b("ZenonVCSTypes").ZenonUploadLogLevel.LL_VERBOSE:
                    return "verbose";
                default:
                    return ""
            }
        };
        c.$62 = function () {
            var a = {}, b = this.$48.sender, c = b.avgrtt, d = b.maxrtt;
            b = b.minrtt;
            c != null && (a.avgrtt = c, a.maxrtt = d, a.minrtt = b);
            this.$23 != null && (a.relay_ip = this.$23);
            this.$49 != null && this.$49 !== "" && (a.start_reach = this.$49);
            var e = {};
            Object.entries(this.$50).forEach(function (a) {
                var b = a[0];
                a = a[1];
                typeof a === "number" && (e[a] = b)
            });
            a.types = e;
            a.ctd = this.$51;
            return a
        };
        c.$66 = function () {
            var a = {start_time: this.$28, time_from_start: this.$31};
            this.$7 != null && (a.trigger = this.$7);
            var b = this.$67();
            b > 0 && (a.duration = b);
            return a
        };
        c.$67 = function (a) {
            var b = this.$31[l.CALL_CONNECTED] || this.$31[l.NETWORK_READY];
            if (!b) return 0;
            a = this.$31[l.CALL_ENDED] || !(a == null ? void 0 : a.assumeOngoing) && this.$29 || this.$59();
            return Math.max(0, a - b)
        };
        c.$63 = function () {
            var a, c = {};
            this.$17 != null && (c.end_call_reason_string = b("ZenonDismissReason").dismissToEndCallReason(this.$17), this.$18 !== null && (c.end_call_subreason_string = this.$18), c.remote_ended = this.$19, c.end_ctd = this.$21);
            this.$22 != null && (c.conn_type = this.$22);
            a = (a = this.$48.extraInfo) != null ? a : {};
            a = a.localIceCandidate;
            a && a.networkType !== "" && (c.reach = a.networkType);
            return c
        };
        c.$65 = function () {
            var a, b, c = this.$67();
            if (c <= 0) return;
            a = (a = (a = this.$48.video.receiver) == null ? void 0 : a.tdt) != null ? a : 0;
            b = (b = (b = this.$48.video.sender) == null ? void 0 : b.tet) != null ? b : 0;
            a = a + b;
            b = Math.round(100 * (a / c));
            return {cpu: {proc: {avg: b}}}
        };
        c.uploadLog = function () {
            b("ZenonCallSummaryUploader").logCallSummary({callID: this.$2, callSummary: this, peerID: this.$1})
        };
        return a
    }();
    e.exports = a
}), null);
__d("ZenonGenericCallSummaryStore", ["CacheStorage", "areEqual", "setTimeout"], (function (a, b, c, d, e, f) {
    "use strict";
    var g, h = 2e3, i = 3;
    a = function () {
        function a(a, c, d) {
            this.$1 = a, this.$2 = new (b("CacheStorage"))(c, d)
        }

        var c = a.prototype;
        c.getCallSummaries = function () {
            return this.$2.get(this.$1) || {}
        };
        c.removeCallSummaries = function (a) {
            this.mutateCallSummaries(function (b) {
                a.forEach(function (a) {
                    var c = a.callID;
                    a = a.peerID;
                    b[a] && b[a][c] && (delete b[a][c], Object.entries(b[a]).length === 0 && delete b[a])
                });
                return b
            })
        };
        c.mutateCallSummaries = function (a, c, d) {
            var e = this;
            c === void 0 && (c = i);
            d === void 0 && (d = !1);
            var f = this.getCallSummaries(), j = this.getCallSummaries();
            f = a(f);
            var k = this.getCallSummaries();
            (g || (g = b("areEqual")))(j, k) ? this.$2.set(this.$1, f) : c > 0 && (d ? b("setTimeout")(function () {
                e.mutateCallSummaries(a, c - 1, !0)
            }, h) : this.mutateCallSummaries(a, c - 1, !0))
        };
        return a
    }();
    e.exports = a
}), null);
__d("ZenonCallSummaryStore", ["FBLogger", "ZenonCallSummary", "ZenonGenericCallSummaryStore"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = "localstorage", h = "RTC_CALL_SUMMARY_", i = "summary";
    a = function (a) {
        babelHelpers.inheritsLoose(c, a);

        function c() {
            return a.call(this, i, g, h) || this
        }

        var d = c.prototype;
        d.retrieveCallSummary = function (a, c) {
            var d = this.getCallSummaries();
            d = d[a] ? d[a][c] : null;
            if (d) return b("ZenonCallSummary").fromJsonString(d.__d); else return null
        };
        d.storeCallSummary = function (a, c, d) {
            if (d.isNull()) {
                b("FBLogger")("rtweb").mustfix("Storing invalid ZenonCallSummary!");
                return
            }
            this.mutateCallSummaries(function (b) {
                b[a] || (b[a] = {});
                b[a][c] = {__d: d.toJsonString(), __t: Date.now(), __z: !0};
                return b
            })
        };
        return c
    }(b("ZenonGenericCallSummaryStore"));
    c = new a();
    f.ZenonCallSummaryStoreInstance = c
}), null);
__d("ScotchRTWebLoggingSharedInstance", ["ChannelClientID"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a() {
            this.$1 = b("ChannelClientID").getID()
        }

        var c = a.prototype;
        c.getDeviceID = function () {
            return this.$1
        };
        return a
    }();
    c = new a();
    e.exports = c
}), null);
__d("ScotchRTWebUserActionLogger", ["CurrentUser", "FBRTCConsoleLogger", "FBRTCSupport", "RtcWebUserActionsDebugFalcoEvent", "RtcWebUserActionsFalcoEvent", "ScotchRTWebLoggingSharedInstance", "ZenonSDESKeyDetector", "immutable", "performanceNow", "unrecoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    var g;
    a = function () {
        function a() {
            this.$1 = {
                callID: void 0,
                callType: void 0,
                mediaType: void 0,
                conferenceName: void 0,
                conferenceState: void 0
            }, this.$2 = b("immutable").Map(), this.$3 = new Set(), this.$4 = new Set(), this.$5 = b("ScotchRTWebLoggingSharedInstance").getDeviceID(), this.$6 = this.$7(), this.clearCache()
        }

        var c = a.prototype;
        c.clearCache = function () {
            this.$1 = {
                callID: void 0,
                callType: void 0,
                mediaType: void 0,
                conferenceName: void 0,
                conferenceState: void 0
            }
        };
        c.logImpression = function (a) {
            this.logEvent(babelHelpers["extends"]({eventName: "impression"}, a))
        };
        c.logPreCallImpression = function (a) {
            this.clearCache(), this.logImpression(a)
        };
        c.logPreCallClick = function (a) {
            this.clearCache(), this.logClick(a)
        };
        c.logClick = function (a) {
            this.logEvent(babelHelpers["extends"]({eventName: "tap"}, a))
        };
        c.logError = function (a) {
            this.logEvent(babelHelpers["extends"]({eventName: "error"}, a))
        };
        c.startTimer = function (a) {
            var c = (g || (g = b("performanceNow")))();
            this.$2 = this.$2.set(a, c);
            this.logCheckpoint({checkpoint: a + "_timerStart"});
            this.$8(a, {startTime: c})
        };
        c.logStopTimer = function (a) {
            var b = a.checkpointName === void 0 ? a.timerName : a.checkpointName, c = a.event || {};
            c.timeElapsed = this.$9(a.timerName);
            this.logCheckpoint(babelHelpers["extends"]({checkpoint: b + "_timerEnd"}, c));
            return c.timeElapsed
        };
        c.logCheckpoint = function (a, b) {
            this.logEvent(babelHelpers["extends"]({eventName: "checkpoint"}, a), b)
        };
        c.$10 = function (a) {
            return a === null || a === void 0
        };
        c.logEvent = function (a, c) {
            if (b("ZenonSDESKeyDetector")(a)) throw b("unrecoverableViolation")("ScotchRTWebUserAction event contains SDES crypto key! This log entry must be removed!", "rtc_www");
            var d = this.$1;
            d.callID = this.$10(a.callID) ? d.callID : a.callID;
            d.callType = a.callType || d.callType;
            d.conferenceState = a.conferenceState || d.conferenceState;
            d.conferenceName = this.$10(a.conferenceName) ? d.conferenceName : a.conferenceName;
            d.isCaller = a.isCaller == null ? d.isCaller : a.isCaller;
            d.mediaType = a.mediaType || d.mediaType;
            this.$11(a, d);
            d = this.$12(a, d);
            (c == null ? void 0 : c.noConsole) !== !0 && this.$8(a.eventName, d)
        };
        c.$12 = function (a, c) {
            var d, e = {
                call_type: c.callType,
                client_time: Date.now().toString(),
                device_id: this.$5,
                error_domain: a.errorDomain,
                error_type: a.errorType,
                component: a.component,
                conference_state: c.conferenceState,
                event: a.eventName,
                media_type: c.mediaType,
                page: this.$6,
                call_id: c.callID,
                conference_name: c.conferenceName,
                surface: a.surface,
                checkpoint: a.checkpoint,
                event_time_elapsed: (d = a.timeElapsed) == null ? void 0 : d.toString(),
                is_caller: c.isCaller,
                codebase_version: "Scotch",
                state_machine_id: a.stateMachineID
            };
            b("RtcWebUserActionsFalcoEvent").log(function () {
                return e
            });
            return e
        };
        c.$11 = function (a, c) {
            var d, e = {
                call_type: c.callType,
                client_time: Date.now().toString(),
                device_id: this.$5,
                error_domain: a.errorDomain,
                error_type: a.errorType,
                component: a.component,
                conference_state: c.conferenceState,
                event: a.eventName,
                media_type: c.mediaType,
                page: this.$6,
                call_id: c.callID,
                conference_name: c.conferenceName,
                surface: a.surface,
                checkpoint: a.checkpoint,
                event_time_elapsed: (d = a.timeElapsed) == null ? void 0 : d.toString(),
                is_caller: c.isCaller,
                codebase_version: "Scotch",
                state_machine_id: a.stateMachineID
            };
            b("RtcWebUserActionsDebugFalcoEvent").log(function () {
                return e
            });
            return e
        };
        c.getCallType = function (a, b) {
            b === void 0 && (b = !1);
            if (a === null || a === void 0) return null;
            if (a) return "mw"; else if (b) return "escalated"; else return "p2p"
        };
        c.getAudioVideoComponent = function (a) {
            return a === null || a === void 0 ? null : a ? "audio_button" : "video_button"
        };
        c.getMediaType = function (a, b) {
            b === void 0 && (b = !1);
            if (b) return "escalated"; else if (a) return "audio"; else return "video"
        };
        c.logErrorOnceforDomain = function (a, b) {
            this.$3.has(a) || (this.$3.add(a), this.logError({errorDomain: a, errorType: b.toString()}))
        };
        c.logCheckpointOnceForDomain = function (a) {
            var b = a.checkpoint;
            this.$4.has(b) || (this.$4.add(b), this.logCheckpoint(a))
        };
        c.clearLoggedDomains = function () {
            this.$3.clear(), this.$4.clear()
        };
        c.getWebLoggerInfoFromStore = function (a) {
            a = a.callInfo;
            var b = a.callID, c = a.conferenceName;
            a = a.conferenceState;
            return {callID: b, conferenceName: c, conferenceState: a}
        };
        c.$7 = function () {
            if (b("FBRTCSupport").isMobileDevice()) return "mweb"; else if (b("CurrentUser").isWorkUser()) return "workplace";
            var a = window.location.hostname;
            if (a.search("facebook") !== -1) return "facebook"; else if (a.search("messenger") !== -1) return "messenger_dot_com";
            return a
        };
        c.$9 = function (a) {
            var c = this.$2.get(a);
            if (c) {
                this.$2 = this.$2.remove(a);
                return parseInt((g || (g = b("performanceNow")))() - c, 10)
            }
            return null
        };
        c.$8 = function (a, c) {
            a = a == null ? "null" : a;
            b("FBRTCConsoleLogger").getInstance().getLogHistory().log(a, JSON.stringify(c))
        };
        return a
    }();
    c = new a();
    e.exports = c
}), null);
__d("ZenonCallSummaryUploader", ["MarauderLogger", "ScotchRTWebUserActionLogger", "ZenonCallSummary", "ZenonCallSummaryStore"], (function (a, b, c, d, e, f) {
    "use strict";
    f.getLoggableSummaries = k;
    f.logCallSummaries = a;
    f.logCallSummary = c;
    var g = 3 * 60 * 1e3, h = "rtc_client_call_summary", i = "webrtc";

    function j(a) {
        var c = a.callID, d = a.callSummary;
        a = a.peerID;
        b("ScotchRTWebUserActionLogger").logCheckpoint({
            callID: c,
            checkpoint: "[ZP] Attempting to upload CallSummary"
        });
        a = isNaN(a) ? null : a;
        a = babelHelpers["extends"]({
            call_id: c,
            channel_session_id: d.getDeviceID(),
            content: d.toString(),
            local_call_id: d.localCallID,
            peer_id: a,
            sdp_format: d.getSdpFormat(),
            tag: "endcallstats"
        }, d.getExtraInfo());
        b("MarauderLogger").log(h, i, a, void 0, void 0, void 0, void 0, "vital");
        b("ScotchRTWebUserActionLogger").logCheckpoint({callID: c, checkpoint: "[ZP] Complete uploading CallSummary"})
    }

    function k() {
        var a = b("ZenonCallSummaryStore").ZenonCallSummaryStoreInstance.getCallSummaries(), c = [];
        for (var d in a) for (var e in a[d]) {
            var f = a[d][e];
            if (f.__z) {
                var h = f.__t;
                if (Date.now() - h > g) {
                    h = b("ZenonCallSummary").fromJsonString(f.__d);
                    h && c.push({callID: e, callSummary: h, peerID: d})
                }
            }
        }
        return c
    }

    function a() {
        var a = k(), c = [];
        a.forEach(function (a) {
            var b = a.callID, d = a.callSummary;
            a = a.peerID;
            j({callID: b, callSummary: d, peerID: a});
            c.push({callID: b, peerID: a})
        });
        b("ZenonCallSummaryStore").ZenonCallSummaryStoreInstance.removeCallSummaries(c)
    }

    function c(a) {
        var c = a.callID, d = a.callSummary;
        a = a.peerID;
        j({callID: c, callSummary: d, peerID: a});
        b("ZenonCallSummaryStore").ZenonCallSummaryStoreInstance.removeCallSummaries([{callID: c, peerID: a}])
    }
}), null);
__d("FBRTCCallSummaryUploader", ["Banzai", "FBRTCCallSummary", "FBRTCCallSummaryStore", "ZenonCallSummaryUploader", "requireCond", "cr:1645710"], (function (a, b, c, d, e, f) {
    f.init = a;

    function a() {
        var a = b("FBRTCCallSummaryStore").getInstance();
        b("Banzai").subscribe(b("Banzai").SEND, function () {
            b("ZenonCallSummaryUploader").logCallSummaries(), b("cr:1645710") == null ? void 0 : b("cr:1645710").logCallSummaries(), b("FBRTCCallSummary").logSavedSummaries(a)
        })
    }
}), null);
__d("ZenonCallLogger", ["ScotchRTWebUserActionLogger", "uuid"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = new Set(["setMediaStats", "infraAction"]);
    a = function () {
        function a(a, c) {
            var d, e = this;
            this.$1 = [];
            this.$2 = {
                localCallID: b("uuid")(),
                peerID: a.peerID,
                sharedCallID: (d = a.serverInfoData) != null ? d : a.callID
            };
            c.forEach(function (b) {
                return e.$1.push(new b(a, function (a) {
                    Object.assign(e.$2, a)
                }))
            })
        }

        var c = a.prototype;
        c.log = function (a) {
            g.has(a.name) || b("ScotchRTWebUserActionLogger").logCheckpoint({checkpoint: "[ZP] ZenonCallLogger event: " + a.name}), this.$1.forEach(function (b) {
                b.processEvent(a)
            })
        };
        c.getLogIdentifiers = function () {
            return this.$2
        };
        return a
    }();
    e.exports = a
}), null);
__d("ZenonParentCallSummaryLogProcessor", ["CurrentUser", "FBRTCCallSummaryStore", "ZenonCallSummary", "ZenonDismissReason", "gkx", "pageID"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a, c) {
            this.$2 = b("FBRTCCallSummaryStore").getInstance(), this.$3 = a.protocol, this.$3 === "mw" && (a.peerID = "MW_PEER_ID"), this.$1 = new (b("ZenonCallSummary"))(a), c && c({localCallID: this.$1.localCallID})
        }

        var c = a.prototype;
        c.$4 = function (a) {
            if (a != null) {
                a = a.deviceID;
                a = a === "mobile";
                this.$1.setIsPeerMobile(a)
            }
        };
        c.processEvent = function (a) {
            switch (a.name) {
                case"inviteResponded":
                    this.$1.onInviteResponded();
                    break;
                case"inviteReceived":
                    this.$1.onInviteReceived();
                    this.$4(a.remoteDeviceInfo);
                    break;
                case"callEnded":
                    this.$5(a);
                    break;
                case"callAccepted":
                    this.$1.onCallAccepted(a.trigger);
                    this.$1.save(this.$2);
                    break;
                case"popupOpened":
                    this.$6(a);
                    this.$1.save(this.$2);
                    break
            }
        };
        c.$6 = function (a) {
            this.$1.setInitByPageID(b("pageID")), this.$1.setInitByAppID(b("CurrentUser").getAppID()), this.$1.onCallEnded(b("ZenonDismissReason").ZenonDismissReason.ClientError, !1, !0, a.isPopupBlocked ? "PopupBlocked" : "PopupPending"), this.$1.save(this.$2)
        };
        c.$5 = function (a) {
            if (this.$3 === "mw" && a.isRemoteEnded) return;
            var c = a.endCallReason, d = a.endCallSubreason;
            a = a.isRemoteEnded;
            var e = b("gkx")("1148995");
            if (!e && c === b("ZenonDismissReason").ZenonDismissReason.OtherInstanceHandled && a) return;
            this.$1.onCallEnded(c, a, !1, d);
            this.$1.save(this.$2)
        };
        return a
    }();
    e.exports = a
}), null);
__d("ZenonParentQPLLogProcessor", ["QPLUserFlow"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a) {
            this.$1 = a.callID
        }

        var c = a.prototype;
        c.processEvent = function (a) {
            switch (a.name) {
                case"inviteReceived":
                    b("QPLUserFlow").start(64225282, {instanceKey: +this.$1});
                    break;
                case"callEnded":
                    b("QPLUserFlow").endCancel(64225282, {instanceKey: +this.$1});
                    break;
                case"callAccepted":
                    b("QPLUserFlow").addPoint(64225282, "call_accepted", {instanceKey: +this.$1});
                    break;
                case"inviteResponded":
                    b("QPLUserFlow").addPoint(64225282, "invite_responded", {instanceKey: +this.$1});
                    break;
                case"popupOpened":
                    b("QPLUserFlow").endSuccess(64225282, {instanceKey: +this.$1});
                    break
            }
        };
        return a
    }();
    e.exports = a
}), null);
__d("ZenonCollisionContext", [], (function (a, b, c, d, e, f) {
    "use strict";
    "use strict";
    f.getThreadIDAndTypeFromCollisionContext = a;

    function a(a) {
        var b = null;
        a.groupThreadID != null ? b = {id: a.groupThreadID, type: 2} : a.peerID != null && (b = {
            id: a.peerID,
            type: 1
        });
        return b
    }
}), null);
__d("ZenonParticipantState", ["ZenonCallsModelTypes", "$InternalEnum"], (function (a, b, c, d, e, f) {
    "use strict";
    f.toCallParticipantState = a;
    var g = b("$InternalEnum")({
        CONTACTING: 6,
        RINGING: 7,
        PENDING_APPROVAL: 14,
        APPROVED: 15,
        NEGOTIATING: 8,
        CONNECTING: 9,
        CONNECTED: 10,
        UNKNOWN: 0,
        DISCONNECTED: 1,
        NO_ANSWER: 2,
        REJECTED: 3,
        UNREACHABLE: 4,
        CONNECTION_DROPPED: 5,
        PARTICIPANT_LIMIT_REACHED: 11,
        IN_ANOTHER_CALL: 12,
        RING_TYPE_UNSUPPORTED: 13,
        FAILED_APPROVAL: 16,
        HANGUP_IN_WAITING_ROOM: 17
    });
    f.ZenonParticipantState = g;

    function a(a) {
        if (a == null) return b("ZenonCallsModelTypes").ZenonCallParticipantState.Disconnected;
        switch (a) {
            case g.CONTACTING:
                return b("ZenonCallsModelTypes").ZenonCallParticipantState.Contacting;
            case g.RINGING:
                return b("ZenonCallsModelTypes").ZenonCallParticipantState.Ringing;
            case g.NEGOTIATING:
            case g.CONNECTING:
                return b("ZenonCallsModelTypes").ZenonCallParticipantState.Connecting;
            case g.CONNECTED:
                return b("ZenonCallsModelTypes").ZenonCallParticipantState.Connected;
            case g.PENDING_APPROVAL:
                return b("ZenonCallsModelTypes").ZenonCallParticipantState.PendingApproval;
            case g.APPROVED:
                return b("ZenonCallsModelTypes").ZenonCallParticipantState.Approved;
            case g.FAILED_APPROVAL:
                return b("ZenonCallsModelTypes").ZenonCallParticipantState.FailedApproval;
            case g.HANGUP_IN_WAITING_ROOM:
            case g.UNKNOWN:
            case g.DISCONNECTED:
            case g.NO_ANSWER:
            case g.REJECTED:
            case g.UNREACHABLE:
            case g.CONNECTION_DROPPED:
            case g.PARTICIPANT_LIMIT_REACHED:
            case g.IN_ANOTHER_CALL:
            case g.RING_TYPE_UNSUPPORTED:
                return b("ZenonCallsModelTypes").ZenonCallParticipantState.Disconnected
        }
        return b("ZenonCallsModelTypes").ZenonCallParticipantState.Disconnected
    }
}), null);
__d("ZenonMWMessageMap", ["ZenonMWMessageTypes"], (function (a, b, c, d, e, f) {
    "use strict";
    d = Object.freeze((a = {}, a[(c = b("ZenonMWMessageTypes")).ZenonMWSignalingPayloadType.JOIN] = "JOIN", a[c.ZenonMWSignalingPayloadType.SERVER_MEDIA_UPDATE] = "SERVER_MEDIA_UPDATE", a[c.ZenonMWSignalingPayloadType.ICE_CANDIDATE] = "ICE_CANDIDATE", a[c.ZenonMWSignalingPayloadType.HANGUP] = "HANGUP", a[c.ZenonMWSignalingPayloadType.RING] = "RING", a[c.ZenonMWSignalingPayloadType.DISMISS] = "DISMISS", a[c.ZenonMWSignalingPayloadType.CONFERENCE_STATE] = "CONFERENCE_STATE", a[c.ZenonMWSignalingPayloadType.ADD_PARTICIPANTS] = "ADD_PARTICIPANTS", a[c.ZenonMWSignalingPayloadType.SUBSCRIPTION] = "SUBSCRIPTION", a[c.ZenonMWSignalingPayloadType.CLIENT_MEDIA_UPDATE] = "CLIENT_MEDIA_UPDATE", a[c.ZenonMWSignalingPayloadType.DATA_MESSAGE] = "DATA_MESSAGE", a[c.ZenonMWSignalingPayloadType.REMOVE_PARTICIPANTS] = "REMOVE_PARTICIPANTS", a[c.ZenonMWSignalingPayloadType.PING] = "PING", a[c.ZenonMWSignalingPayloadType.P2P_PROTOCOL] = "P2P_PROTOCOL", a[c.ZenonMWSignalingPayloadType.NOTIFY] = "NOTIFY", a[c.ZenonMWSignalingPayloadType.CONNECT] = "CONNECT", a[c.ZenonMWSignalingPayloadType.CLIENT_EVENT] = "CLIENT_EVENT", a[c.ZenonMWSignalingPayloadType.UNSUBSCRIBE] = "UNSUBSCRIBE", a[c.ZenonMWSignalingPayloadType.UPDATE] = "UPDATE", a[c.ZenonMWSignalingPayloadType.APPROVAL] = "APPROVAL", a));
    f = d;
    e.exports = f
}), null);
__d("ZenonDebugLogger", ["BanzaiODS", "ChannelClientID", "CurrentUser", "FacebookAppIDs", "Log", "LogHistory", "P2PReliabilityTypedLogger", "RtcInfraReliabilityFalcoEvent", "ScotchRTWebUserActionLogger", "UserAgentData", "ZenonMWMessageMap", "ZenonMWMessageTypes", "formatDate", "gkx", "recoverableViolation", "requireCond", "cr:1577681", "cr:1577682", "cr:1577683", "$InternalEnum"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = null, h = b("cr:1577683") ? {
            ConnectionStateMachine: b("cr:1577683").CONNECTION_STATE_MACHINE,
            ParentSignalingClient: b("cr:1577683").PARENT_SIGNALING_CLIENT,
            PeerConnectionStateMachine: b("cr:1577683").PEER_CONNECTION_STATE_MACHINE,
            SignalingStateMachine: b("cr:1577683").SIGNALING_STATE_MACHINE
        } : {},
        i = b("$InternalEnum").Mirrored(["RECEIVED_REQUEST", "RECEIVED_RESPONSE", "PROCESSED_REQUEST", "PROCESSED_RESPONSE", "START_PROCESSING_RESPONSE", "SENDING_REQUEST", "SENDING_RESPONSE", "SENT_REQUEST_FROM_HANDLER", "SENT_REQUEST", "SENT_RESPONSE", "SEND_REQUEST_FAILED_FROM_HANDLER", "SEND_REQUEST_FAILED", "SEND_RESPONSE_FAILED"]),
        j = b("$InternalEnum").Mirrored(["CLIENT_RECEIVED_MESSAGE", "CLIENT_PROCESSED_MESSAGE"]);
    a = function () {
        a.getInstance = function () {
            g || (g = new a());
            return g
        };

        function a() {
            var a;
            this.$1 = b("LogHistory").getInstance("webrtc");
            this.$2 = b("ChannelClientID").getID();
            this.$3 = JSON.stringify({
                browser: (a = b("UserAgentData")).browserName,
                browser_version: a.browserFullVersion,
                device: a.deviceName,
                msg_source: "web",
                os: a.platformName,
                os_version: a.platformFullVersion,
                version: 2
            });
            this.$4 = b("FacebookAppIDs").MQTT_WEB
        }

        var c = a.prototype;
        c.$5 = function (a) {
            var c = b("formatDate")(new Date(), "[H:i:s:X]", {skipPatternLocalization: !0});
            this.$1.log("Console", c + " " + a);
            b("ScotchRTWebUserActionLogger").logCheckpoint({checkpoint: "[ZP] " + a}, {noConsole: !0})
        };
        c.$6 = function (a, c) {
            var d = b("formatDate")(new Date(), "[H:i:s:X]", {skipPatternLocalization: !0});
            this.$1.log("Console", d + " " + a + ". StateMachineID:  " + ((d = c) != null ? d : ""));
            b("ScotchRTWebUserActionLogger").logCheckpoint({
                checkpoint: "[ZP] " + a,
                stateMachineID: c
            }, {noConsole: !0})
        };
        c.$7 = function (a, c, d, e) {
            e === void 0 && (e = 0);
            a = h[a];
            if (!a || !b("cr:1577682") || !b("cr:1577681")) return;
            d === "terminated" ? b("cr:1577682").markerEnd(a, b("cr:1577681").SUCCESS, e) : b("cr:1577682").markerPoint(a, c, {
                data: {string: {data: d}},
                instanceKey: e
            })
        };
        c.$8 = function (a) {
            return isNaN(+a) ? 0 : +a
        };
        c.$9 = function (a) {
            a = a.jsonPayload.header;
            return a.responseStatusCode != null
        };
        c.$10 = function (a, c) {
            var d = this, e = c.endpoint, f = c.jsonPayload.header;
            b("RtcInfraReliabilityFalcoEvent").log(function () {
                return {
                    client_session_id: f.clientSessionId,
                    conference_name: f.conferenceName,
                    event_name: a,
                    message_type: b("ZenonMWMessageMap")[f.type],
                    retry_count: f.retryCount,
                    server_info_data: f.serverInfoData,
                    tc: Date.now(),
                    transaction_id: f.transactionId,
                    version: "1",
                    web_app_id: +e.appId,
                    web_device_id: d.$2
                }
            })
        };
        c.$11 = function (a) {
            return new (b("P2PReliabilityTypedLogger"))().setServiceName("WEB_CLIENT").setExtra(this.$3).setDeviceID(this.$2).setAppID(this.$4.toString()).setReceiverID(b("CurrentUser").getID()).setCallID(a.call_id).setMsgID(a.id).setSenderID(a.from).setMsgType(a.type.toUpperCase() || a.msg_type.toUpperCase()).setRawTime(Date.now())
        };
        c.logStateMachine = function (a, c, d, e) {
            if (!b("gkx")("678680") && !b("gkx")("1782661")) return;
            var f = "[" + a + "] [Current State: " + c + "] Processing event: " + d;
            this.$6(f, e);
            this.$7(a, d, c, this.$8(e))
        };
        c.logStateMachineTransition = function (a, c, d, e, f, g, h) {
            if (f === "xstate.init" || d === "terminated" || d === "terminating") return;
            if (!b("gkx")("678680") && !b("gkx")("1782661")) return;
            g != null && g.length === 1 && g[0].type === "defer" ? g = "[" + a + "] [[DEFERRED] " + f + " did not trigger transition. Current state remains " + d : d !== e ? g = "[" + a + "] [[PROCESSED] " + f + " caused transition from " + (e || "") + " to " + d + "." : c ? g = "[" + a + "] [[PROCESSED] " + f + " did not trigger transition. Current state remains " + d : g = "[" + a + "] [[DROPPED] Possible error. " + f + " did not trigger transition. Current state remains " + d;
            this.$6(g, h)
        };
        c.logGuardsResults = function (a, b) {
            a = "[GUARD] " + a + ". Passed: " + b.toString();
            this.$5(a)
        };
        c.logMWMessage = function (a, c) {
            if (c.jsonPayload == null) return;
            var d = c.jsonPayload.header, e = b("ZenonMWMessageMap")[d.type];
            a = "[ms] " + a + " " + e + " [messageID: " + d.transactionId + " retryCount: " + d.retryCount + "]";
            this.$5(a);
            this.logMWMessageDetails(c)
        };
        c.startQPL = function (a, c) {
            c === void 0 && (c = 0), b("cr:1577682") && b("cr:1577682").markerStart(a, this.$8(c))
        };
        c.endQPL = function (a, c) {
            c === void 0 && (c = 0), b("cr:1577682") && b("cr:1577681") && b("cr:1577682").markerEnd(a, b("cr:1577681").SUCCESS, this.$8(c))
        };
        c.logMWMessageDetails = function (a) {
            if (a.jsonPayload == null) {
                b("recoverableViolation")("Should never call logMWMessageDetails with a null jsonPayload message", "rtc_www");
                return
            }
            var c = a.jsonPayload, d = c.body;
            c = c.header;
            var e = b("ZenonMWMessageMap")[c.type], f = "";
            switch (c.type) {
                case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.SERVER_MEDIA_UPDATE:
                    if (this.$9(a)) {
                        var g;
                        f = "[md] " + e + " resp [statusCode: " + ((g = c.responseStatusCode) != null ? g : "") + " currentVersion: " + ((g = (g = d.serverMediaUpdateResponse) == null ? void 0 : g.currentVersion) != null ? g : "") + "]";
                        break
                    }
                    f = "[md] " + e + " req [fromVersion: " + ((g = (g = d.serverMediaUpdateRequest) == null ? void 0 : g.fromVersion) != null ? g : "") + " toVersion: " + ((g = (g = d.serverMediaUpdateRequest) == null ? void 0 : g.toVersion) != null ? g : "") + "]";
                    break;
                case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.CLIENT_MEDIA_UPDATE:
                    if (this.$9(a)) {
                        f = "[md] " + e + " resp [statusCode: " + ((g = c.responseStatusCode) != null ? g : "") + " currentVersion: " + ((c = (a = d.clientMediaUpdateResponse) == null ? void 0 : a.currentVersion) != null ? c : "") + "]";
                        break
                    }
                    f = "[md] " + e + " req [fromVersion: " + ((a = (g = d.clientMediaUpdateRequest) == null ? void 0 : g.fromVersion) != null ? a : "") + " toVersion: " + ((g = (c = d.clientMediaUpdateRequest) == null ? void 0 : c.toVersion) != null ? g : "") + "]";
                    break;
                case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.SUBSCRIPTION:
                    f = "[md] " + e + " req [subscriptions: " + JSON.stringify((c = (a = d.subscriptionRequest) == null ? void 0 : a.subscriptions) != null ? c : "") + "]";
                    break;
                default:
                    return
            }
            this.$5(f)
        };
        c.logConsole = function (a) {
            this.$5(a)
        };
        c.logMQTTStateChange = function (a) {
            b("ScotchRTWebUserActionLogger").logCheckpoint({checkpoint: "[ZP] onMQTTStateChanged: " + a + ", document.visibility: " + document.visibilityState + ", document.hasFocus: " + String(document.hasFocus()) + ", navigator.onLine: " + String(navigator.onLine)})
        };
        c.logMQTTConnectStats = function (a, c) {
            b("ScotchRTWebUserActionLogger").logCheckpoint({checkpoint: "[ZP] MQTT Connection time: " + String(a) + "ms, Retry Count: " + String(c)})
        };
        c.logReceivingMultiwayMessage = function (a) {
            this.$9(a) ? this.$10(i.RECEIVED_RESPONSE, a) : this.$10(i.RECEIVED_REQUEST, a)
        };
        c.logMultiwayResponseStartProcessing = function (a) {
            this.$10(i.START_PROCESSING_RESPONSE, a)
        };
        c.logProcessingMultiwayMessage = function (a) {
            this.$9(a) ? this.$10(i.PROCESSED_RESPONSE, a) : this.$10(i.PROCESSED_REQUEST, a)
        };
        c.logSendingMultiwayMessage = function (a) {
            this.$9(a) ? this.$10(i.SENDING_RESPONSE, a) : this.$10(i.SENDING_REQUEST, a)
        };
        c.logSentMultiwayMessage = function (a) {
            this.$9(a) ? this.$10(i.SENT_RESPONSE, a) : this.$10(i.SENT_REQUEST, a)
        };
        c.logSentMultiwayMessageFromHandler = function (a) {
            this.$10(i.SENT_REQUEST_FROM_HANDLER, a)
        };
        c.logSendMultiwayMessageFailed = function (a) {
            this.$9(a) ? this.$10(i.SEND_RESPONSE_FAILED, a) : this.$10(i.SEND_REQUEST_FAILED, a)
        };
        c.logSendMultiwayMessageFailure = function (a) {
            b("BanzaiODS").bumpEntityKey(4083, "zenon_multiway", "send_message_failure"), b("BanzaiODS").flush(), b("ScotchRTWebUserActionLogger").logCheckpoint({checkpoint: "Failed to send MW message, error: " + a})
        };
        c.logSendMultiwayMessageFailedFromErrorHandler = function (a) {
            this.$10(i.SEND_REQUEST_FAILED_FROM_HANDLER, a)
        };
        c.logP2PMessageReceived = function (a) {
            this.$11(a).setEventName(j.CLIENT_RECEIVED_MESSAGE).log()
        };
        c.logP2PMessageProcessed = function (a) {
            this.$11(a).setEventName(j.CLIENT_PROCESSED_MESSAGE).log()
        };
        return a
    }();
    e.exports = a
}), null);
__d("LazyLoadInstance", ["promiseDone"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = {LOADING: 1, NOT_READY: 0, READY: 2};
    a = function () {
        function a(a, b) {
            this.$1 = {instantiate: b, moduleReference: a, stage: g.NOT_READY}
        }

        var c = a.prototype;
        c.get = function (a) {
            switch (this.$1.stage) {
                case g.NOT_READY:
                    b("promiseDone")(this.$2(this.$1), a);
                    break;
                case g.LOADING:
                    b("promiseDone")(this.$1.instancePromise, a);
                    break;
                case g.READY:
                    a(this.$1.instance);
                    break
            }
        };
        c.getNow = function () {
            return this.$1.stage === g.READY ? this.$1.instance : null
        };
        c.preload = function () {
            this.$1.stage === g.NOT_READY && this.$2(this.$1)
        };
        c.$2 = function (a) {
            var b = this, c = a.instantiate;
            a = a.moduleReference;
            a = a.load().then(function (a) {
                a = c(a);
                b.$1 = {instance: a, stage: g.READY};
                return a
            });
            this.$1 = {instancePromise: a, stage: g.LOADING};
            return a
        };
        return a
    }();
    e.exports = a
}), null);
__d("ZenonSignalingTypes", ["$InternalEnum"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum")({PLAN_B: "plan-b", UNIFIED_PLAN: "unified-plan"});
    f.ZenonSdpFormat = a;
    c = {OK: 0, REJECTED_FROM_VERSION_DOES_NOT_MATCH: 1};
    f.ZenonRemoteSdpResponseStatus = c
}), null);
__d("ZenonParentSignalingClient", ["ZenonDebugLogger", "ZenonSignalingTypes", "recoverableViolation", "unrecoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a, c, d, e) {
            var f = this;
            this.remoteSignalingID = null;
            this.$4 = "init";
            this.$6 = null;
            this.$7 = null;
            this.$8 = function () {
            };
            this.$9 = function (a, c, d) {
                b("ZenonDebugLogger").getInstance().logStateMachine("ParentSignalingClient", f.$4, "received " + a.eventName, f.$1.getSignalingID());
                switch (a.eventName) {
                    case"inviteRequest":
                        f.$11(a, c, d);
                        break;
                    case"remoteSdpRequest":
                        f.$12(a, c);
                        break;
                    case"terminateRequest":
                        f.$13(a, c, d);
                        break
                }
            };
            this.$1 = a;
            this.$3 = d;
            this.$5 = e;
            this.$2 = c;
            c.setReceiver(this.$9);
            b("ZenonDebugLogger").getInstance().startQPL(64234815, +a.getSignalingID())
        }

        var c = a.prototype;
        c.setSignalingEventHandlers = function (a) {
            if (this.$6 != null) {
                b("recoverableViolation")("setSignalingEventHandlers should only be called once, to avoid accidentally losing handlers.", "rtc_www");
                return
            }
            this.$6 = a
        };
        c.setLoggingEventHandler = function (a) {
            this.$8 = a
        };
        c.getSignalingModel = function () {
            return this.$1
        };
        c.sendDismiss = function (a) {
            this.$4 = "terminated";
            a = {eventName: "terminateRequest", fromJoinResponse: !1, reason: a, shouldInformPeer: !0};
            this.$10(a)
        };
        c.receiveMessage = function (a) {
            this.$2.receiveMessage(a)
        };
        c.isTerminated = function () {
            return this.$4 === "terminated"
        };
        c.sendAnswerIntent = function () {
            if (this.$4 === "inviteAcknowledged") {
                this.$4 = "answered";
                var a = {eventName: "answerIntentRequest"};
                this.$10(a)
            } else throw b("unrecoverableViolation")("sendAnswerIntent called in unexpected state " + this.$4, "rtc_www")
        };
        c.respondToInvite = function (a) {
            if (this.$4 === "inviteReceived") {
                if (this.$7 == null) throw b("unrecoverableViolation")("respondToInvite called without inviteMessageId being populated first", "rtc_www");
                this.$4 = "inviteAcknowledged";
                a = {ackMessageId: this.$7, eventName: "inviteResponse", status: a};
                this.$10(a)
            } else throw b("unrecoverableViolation")("respondToInvite called in unexpected state " + this.$4, "rtc_www")
        };
        c.sendClientEvent = function (a) {
            throw b("unrecoverableViolation")("sendClientEvent called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendInvite = function (a, c) {
            throw b("unrecoverableViolation")("sendInvite called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendSdp = function (a, c) {
            throw b("unrecoverableViolation")("sendSdp called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendIceCandidate = function (a) {
            throw b("unrecoverableViolation")("sendIceCandidate called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendMediaUpdate = function (a) {
            throw b("unrecoverableViolation")("sendMediaUpdate called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendAddParticipantsMessage = function (a) {
            throw b("unrecoverableViolation")("sendAddParticipantsMessage called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendRemoveParticipantsRequest = function (a) {
            throw b("unrecoverableViolation")("sendRemoveParticipantsRequest called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendUsersApprovalRequest = function (a, c) {
            throw b("unrecoverableViolation")("sendUsersApprovalRequest called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendStateSyncUnsubscribe = function (a) {
            throw b("unrecoverableViolation")("sendStateSyncUnsubscribe called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendStateSyncUpdate = function (a, c) {
            throw b("unrecoverableViolation")("sendStateSyncUpdate called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendSubscriptionRequest = function (a) {
            throw b("unrecoverableViolation")("sendSubscriptionRequest called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendClientInfo = function (a) {
            throw b("unrecoverableViolation")("sendClientInfo called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.sendGenericDataMessage = function (a, c, d) {
            throw b("unrecoverableViolation")("sendGenericDataMessage called on ZenonParentSignalingClient. Did you mean to use ZenonSignalingClient instead?", "rtc_www")
        };
        c.$10 = function (a) {
            b("ZenonDebugLogger").getInstance().logStateMachine("ParentSignalingClient", this.$4, "sending " + a.eventName, this.$1.getSignalingID()), this.$3.sendEvent(a)
        };
        c.$11 = function (a, b, c) {
            this.$4 === "init" && (this.$4 = "inviteReceived", this.$7 = b, this.$5(a, c, this))
        };
        c.$13 = function (a, b, c) {
            if (this.$4 !== "terminated") {
                this.$4 = "terminated";
                c = {ackMessageId: b, eventName: "dismissResponse"};
                this.$3.sendEvent(c);
                this.$6 && this.$6.onDismissReceived && this.$6.onDismissReceived(this.$1.getSignalingID(), a.reason)
            }
        };
        c.$12 = function (a, c) {
            c = {
                ackMessageId: c,
                acknowledgedVersion: a.sdp.version,
                eventName: "remoteSdpResponse",
                negotiateType: a.negotiateType,
                status: b("ZenonSignalingTypes").ZenonRemoteSdpResponseStatus.OK,
                type: a.sdp.type
            };
            this.$3.sendEvent(c)
        };
        return a
    }();
    e.exports = a
}), null);
__d("ZenonParentCallsManager", ["regeneratorRuntime", "BaseEventEmitter", "JSResource", "LazyLoadInstance", "ZenonCallLogger", "ZenonCallsModelTypes", "ZenonCollisionContext", "ZenonDismissReason", "ZenonParentCallSummaryLogProcessor", "ZenonParentQPLLogProcessor", "ZenonParentSignalingClient", "gkx", "recoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function (a) {
        babelHelpers.inheritsLoose(c, a);

        function c(c) {
            var d;
            d = a.call(this) || this;
            d.$ZenonParentCallsManager4 = new Map();
            d.$ZenonParentCallsManager5 = new Set();
            d.onInviteReceived = function (a, c, e) {
                var f, g = e.getSignalingModel().getSignalingID();
                e.setSignalingEventHandlers({onDismissReceived: d.onDismissReceived});
                var h = a.inviterID, i = a.otherParticipants, j = a.requestingVideo;
                a = a.roomInfo;
                var k = "zenon_incoming_call_dialog", l = d.$ZenonParentCallsManager6({
                    callID: g,
                    callTrigger: k,
                    isCaller: !1,
                    isVideo: j,
                    peerID: h,
                    protocol: c
                });
                l.log({name: "inviteReceived"});
                k = d.$ZenonParentCallsManager3.isSupportedClientForProtocol(c);
                var m = k ? "OK" : "NOT_SUPPORTED";
                e.respondToInvite(m);
                l.log({name: "inviteResponded"});
                m = {thread: {id: "0", type: 2}, type: "thread"};
                if (((f = a.context) == null ? void 0 : f.groupThreadID) || ((f = a.context) == null ? void 0 : f.peerID)) {
                    m = {
                        thread: (f = b("ZenonCollisionContext").getThreadIDAndTypeFromCollisionContext(a.context)) != null ? f : m.thread,
                        type: "thread"
                    }
                } else ((f = a.room) == null ? void 0 : f.linkHash) != null && ((f = a.room) == null ? void 0 : f.roomName) != null && (m = {
                    room: a.room,
                    type: "room"
                });
                a = {
                    context: m,
                    controllerParams: {
                        callContext: a.name,
                        callID: g,
                        configuration: c,
                        serverInfoData: (m = (f = a.context) == null ? void 0 : f.serverInfoData) != null ? m : null
                    },
                    inviterID: h,
                    isClientPermissableRing: k,
                    onAccept: function (a, b) {
                        var f = b.isPopupBlocked;
                        b = b.trigger;
                        l.log({name: "callAccepted", trigger: b});
                        c === "p2p" && d.$ZenonParentCallsManager2.get(function (a) {
                            a.storeOfferForBackwardsCompat(h, g)
                        });
                        e.sendAnswerIntent();
                        d.$ZenonParentCallsManager7(a, {
                            callID: g,
                            callTrigger: b,
                            isPopupBlocked: f,
                            isVideo: j,
                            peerID: h,
                            protocol: c
                        })
                    },
                    onDecline: function (a, b) {
                        b === void 0 && (b = null), d.onDecline(g, l, a, b)
                    },
                    otherParticipants: i,
                    requestingVideo: j,
                    ringID: g
                };
                d.emit("incomingRing", a)
            };
            d.onDismissReceived = function (a, c) {
                var e = b("ZenonDismissReason").dismissReasonToCancelReason(c);
                e = {reason: e, ringID: a};
                d.emit("ringCancel", e);
                e = d.$ZenonParentCallsManager4.get(a);
                e != null && (e.log({name: "dismissRecv"}), e.log({
                    endCallReason: c,
                    isRemoteEnded: !0,
                    name: "callEnded"
                }))
            };
            d.$ZenonParentCallsManager3 = c;
            d.$ZenonParentCallsManager2 = new (b("LazyLoadInstance"))(b("JSResource")("ZenonSignalingParentTransport").__setRef("ZenonParentCallsManager"), function (a) {
                return new a()
            });
            d.$ZenonParentCallsManager1 = new (b("LazyLoadInstance"))(b("JSResource")("ZenonSignalingClientManager").__setRef("ZenonParentCallsManager"), function (a) {
                return new a(b("ZenonParentSignalingClient"), d.onInviteReceived)
            });
            return d
        }

        var d = c.prototype;
        d.startOutgoingCallIntent = function (a, b) {
            var c = b.callID, d = b.callTrigger, e = b.isVideo, f = b.peerID, g = b.protocol;
            this.$ZenonParentCallsManager6({
                callID: c,
                callTrigger: d,
                isCaller: !0,
                isVideo: e,
                peerID: f,
                protocol: g
            });
            this.$ZenonParentCallsManager7(a, b)
        };
        d.$ZenonParentCallsManager6 = function (a) {
            var c = a.callID, d = a.callTrigger, e = a.isCaller, f = a.isVideo, g = a.peerID;
            a = a.protocol;
            var h = this.$ZenonParentCallsManager4.get(c);
            !h ? (h = new (b("ZenonCallLogger"))({
                callID: c,
                callTrigger: d,
                isCaller: e,
                isVideo: f,
                peerID: g,
                protocol: a
            }, b("gkx")("1536863") ? [b("ZenonParentCallSummaryLogProcessor"), b("ZenonParentQPLLogProcessor")] : [b("ZenonParentCallSummaryLogProcessor")]), this.$ZenonParentCallsManager4.set(c, h)) : b("recoverableViolation")("Call logger key collision in parentCallsManager for callID: " + c, "rtc_www");
            return h
        };
        d.$ZenonParentCallsManager7 = function (a, c) {
            var d, e, f, g, h;
            return b("regeneratorRuntime").async(function (i) {
                while (1) switch (i.prev = i.next) {
                    case 0:
                        d = c.alohaEscalatedMW, e = c.callID, f = c.isPopupBlocked;
                        this.$ZenonParentCallsManager2.get(function (b) {
                            b.verificationNonce = a
                        });
                        this.$ZenonParentCallsManager5.add(e);
                        g = this.$ZenonParentCallsManager4.get(e);
                        if (!(g != null)) {
                            i.next = 11;
                            break
                        }
                        g.log({isPopupBlocked: f, name: "popupOpened"});
                        if (!(d != null)) {
                            i.next = 11;
                            break
                        }
                        i.next = 9;
                        return b("regeneratorRuntime").awrap(d);
                    case 9:
                        h = i.sent, h && g.log({
                            endCallReason: b("ZenonDismissReason").ZenonDismissReason.OtherInstanceHandled,
                            endCallSubreason: "forceP2POverMWForAloha",
                            isRemoteEnded: !1,
                            name: "callEnded"
                        });
                    case 11:
                    case"end":
                        return i.stop()
                }
            }, null, this)
        };
        d.initListeners = function (a) {
            var b = this;
            for (var a = a, c = Array.isArray(a), d = 0, a = c ? a : a[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); ;) {
                var e;
                if (c) {
                    if (d >= a.length) break;
                    e = a[d++]
                } else {
                    d = a.next();
                    if (d.done) break;
                    e = d.value
                }
                e = e;
                e.subscribe(function (a) {
                    return b.onMessageReceived(a)
                }, function (a) {
                    return b.onRawP2PMessageReceived(a)
                }, function (a) {
                    return b.onRawMWMessageReceived(a)
                })
            }
        };
        d.onMessageReceived = function (a) {
            var b = a.getHeader().signalingID;
            if (b != null && this.$ZenonParentCallsManager5.has(b)) return;
            this.$ZenonParentCallsManager1.get(function (b) {
                b.receiveMessage(a)
            })
        };
        d.onRawP2PMessageReceived = function (a) {
            this.$ZenonParentCallsManager2.get(function (b) {
                b.enqueueRawP2PMessage(a)
            })
        };
        d.onRawMWMessageReceived = function (a) {
            this.$ZenonParentCallsManager2.get(function (b) {
                b.enqueueRawMWMessage(a)
            })
        };
        d.onDecline = function (a, c, d, e) {
            e === void 0 && (e = null), this.$ZenonParentCallsManager1.get(function (f) {
                f = f.getSignalingClient(a);
                if (f) {
                    var g = b("ZenonDismissReason").endCallToDismissReason(d);
                    d !== b("ZenonCallsModelTypes").ZenonEndCallReason.NoAnswerTimeout && d !== b("ZenonCallsModelTypes").ZenonEndCallReason.VersionUnsupported && e !== b("ZenonCallsModelTypes").ZenonEndCallSubreason.CallsBlocked && f.sendDismiss(g);
                    c.log({
                        endCallReason: g,
                        endCallSubreason: e == null ? null : e,
                        isRemoteEnded: !1,
                        name: "callEnded"
                    })
                } else b("recoverableViolation")("signaling client should be defined", "rtc_www")
            })
        };
        d.removeListeners = function (a) {
            for (var a = a, b = Array.isArray(a), c = 0, a = b ? a : a[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); ;) {
                var d;
                if (b) {
                    if (c >= a.length) break;
                    d = a[c++]
                } else {
                    c = a.next();
                    if (c.done) break;
                    d = c.value
                }
                d = d;
                d.unsubscribe()
            }
        };
        return c
    }(b("BaseEventEmitter"));
    e.exports = a
}), null);
__d("ZenonSignalingMessage", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a, b) {
            this.$1 = a, this.$2 = b
        }

        var b = a.prototype;
        b.getHeader = function () {
            return this.$1
        };
        b.getEvents = function () {
            return this.$2
        };
        b.setSignalingID = function (a) {
            this.$1.signalingID = a
        };
        b.setRetryCount = function (a) {
            this.$1.retryCount = a
        };
        return a
    }();
    e.exports = a
}), null);
__d("MessengerCowatchConfig", ["qex"], (function (a, b, c, d, e, f) {
    "use strict";
    f.hasZenonCowatchCapability = a;
    f.hasZenonGroupCowatchCapability = c;

    function a() {
        var a;
        return (a = b("qex")._("1732570")) != null ? a : !1
    }

    function c() {
        var a;
        return (a = b("qex")._("1732570")) != null ? a : !1
    }
}), null);
__d("ZenonMWTranslatorUtils", ["ChannelClientID", "CurrentUser", "FacebookAppIDs", "ScotchRTWebUserActionLogger", "ZenonDismissReason", "ZenonMWMessageTypes", "ZenonParticipantState", "ZenonSignalingTypes", "gkx", "unrecoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = {
            addDevTierOverridesToHeaderExtensions: function (a) {
                var c = {multiwayCoreTier: "", multiwayWwwTier: ""};
                if (!b("gkx")("678350")) return c;
                c.multiwayWwwTier = g.getSandboxingTierFromURIOrEmpty(a, "multiway_www_tier");
                c.multiwayCoreTier = g.getSandboxingTierFromURIOrEmpty(a, "multiway_core_tier");
                return c
            }, createMWMessage: function (a, c) {
                var d = {appId: g.getMWAppID(), deviceId: b("ChannelClientID").getID(), userId: b("CurrentUser").getID()};
                return {endpoint: d, jsonPayload: {body: c, header: a}}
            }, fromMWDismissReason: function (a) {
                a = b("ZenonDismissReason").mwDismissToDmissReason(a);
                return (a = a) != null ? a : b("ZenonDismissReason").ZenonDismissReason.CallEnded
            }, fromMWJoinResponseStatusToDismissReason: function (a, c) {
                if (c === b("ZenonMWMessageTypes").ZenonMWResponseSubCode.EXCEEDED_MAX_ALLOWED_PARTICIPANTS) return b("ZenonDismissReason").ZenonDismissReason.MaxAllowedParticipantsReached;
                switch (a) {
                    case b("ZenonMWMessageTypes").ZenonMWResponseStatusCode.METHOD_NOT_ALLOWED:
                    case b("ZenonMWMessageTypes").ZenonMWResponseStatusCode.UNAUTHORIZED:
                        return b("ZenonDismissReason").ZenonDismissReason.NoPermission;
                    case b("ZenonMWMessageTypes").ZenonMWResponseStatusCode.SERVICE_UNAVAILABLE:
                        return b("ZenonDismissReason").ZenonDismissReason.SignalingMessageFailed;
                    case b("ZenonMWMessageTypes").ZenonMWResponseStatusCode.OK:
                        throw b("unrecoverableViolation")("Response status code is OK; should not return a dismiss reason", "rtc_www");
                    default:
                        b("ScotchRTWebUserActionLogger").logError({
                            callType: "mw",
                            checkpoint: "[ZP] Got unexpected JOIN response status, dismissing as ClientError: " + a + " subcode " + ((a = c) != null ? a : "[undefined]"),
                            errorDomain: "ZenonMWTranslatorUtils.fromMWJoinResponseStatusToDismissReason"
                        });
                        return b("ZenonDismissReason").ZenonDismissReason.ClientError
                }
            }, fromMWParticipantState: function (a) {
                a = i[a];
                return (a = a) != null ? a : b("ZenonMWMessageTypes").ZenonMWParticipantCallState.UNKNOWN
            }, getCollisionContextFromAppMessages: function (a) {
                var b = null;
                a != null && a.forEach(function (a) {
                    a = (a = a.body) == null ? void 0 : a.genericMessage;
                    if (a != null && a.topic === "collision_context_payload") {
                        a = a.data;
                        if (a != null) {
                            var c;
                            a = JSON.parse(a);
                            b = {
                                groupThreadID: (c = a.group_thread_id) != null ? c : null,
                                peerID: (c = a.peer_id) != null ? c : null,
                                serverInfoData: (c = a.server_info_data) != null ? c : null
                            }
                        }
                    }
                });
                return b
            }, getMWAppID: function () {
                return b("FacebookAppIDs").MQTT_WEB.toString()
            }, getRoomMetadataFromAppMessages: function (a) {
                a = a && a.length > 0 ? a.find(function (a) {
                    return ((a = a.body) == null ? void 0 : (a = a.genericMessage) == null ? void 0 : a.topic) === "room_metadata"
                }) : null;
                if (a) {
                    var b;
                    b = (b = a.body) == null ? void 0 : (b = b.genericMessage) == null ? void 0 : b.data;
                    if (b != null) {
                        b = JSON.parse(b);
                        a = (a = a.header) == null ? void 0 : a.sender;
                        if (b.link_hash != null && b.room_name != null && a != null) return {
                            linkHash: b.link_hash,
                            profileURL: b.profile_url,
                            ringSubtitle: b.ring_subtitle,
                            roomName: b.room_name,
                            sender: a
                        }
                    }
                }
                return {}
            }, getSandboxingTierFromURIOrEmpty: function (a, b) {
                b = b + "=";
                a = a.split(b);
                if (a[1]) {
                    b = a.pop().split("&").shift();
                    return b
                }
                return ""
            }, getSdpVersion: function (a) {
                a = a.split("\n");
                if (a.length < 2) throw b("unrecoverableViolation")("Expected SDP string with two or more lines, but got " + a.length, "rtc_www");
                a = a[1].trim();
                a = a.split(" ");
                if (a.length < 3) throw b("unrecoverableViolation")("Session line should have at least 3 tokens, but got " + a.length, "rtc_www");
                a = parseInt(a[2], 10);
                if (isNaN(a)) throw b("unrecoverableViolation")("SDP version could not be parsed as number.", "rtc_www");
                return a
            }, mwMessageHeaderToSignalingMessageHeader: function (a) {
                var b = a.clientSessionId, c = a.conferenceName, d = a.sequenceNumber, e = a.serverInfoData,
                    f = a.transactionId;
                b = b;
                var g = {userID: "2"};
                f = {
                    messageID: f,
                    protocol: "mw",
                    remoteInfo: g,
                    retryCount: a.retryCount,
                    roomInfo: {name: c},
                    sequenceNumber: d,
                    signalingID: b,
                    userInfo: {userID: "1"}
                };
                e != null && (f.remoteSignalingID = e);
                return f
            }, signalingMessageHeaderToMWHeader: function (a, c) {
                var d = a.messageID, e = a.remoteSignalingID, f = a.roomInfo, h = a.signalingID,
                    i = g.addDevTierOverridesToHeaderExtensions(window.location.href);
                f = {
                    clientStack: b("ZenonMWMessageTypes").ZenonMWClientStack.ZENON,
                    conferenceName: f.name,
                    retryCount: a.retryCount,
                    transactionId: d,
                    type: c
                };
                (i.multiwayCoreTier !== "" || i.multiwayWwwTier !== "") && (f.extensions = i);
                h != null && (f.clientSessionId = h);
                e != null && (f.serverInfoData = e);
                return f
            }, signalingMessageHeaderToMWResponseHeader: function (a, c, d) {
                a = g.signalingMessageHeaderToMWHeader(a, c);
                a.responseStatusCode = (c = d) != null ? c : b("ZenonMWMessageTypes").ZenonMWResponseStatusCode.OK;
                return a
            }, toMWClientTrackContentType: function (a) {
                if (a == null) return null;
                switch (a) {
                    case b("ZenonMWMessageTypes").ZenonMWTrackLabel.DEFAULT_AUDIO:
                        return "audio";
                    case b("ZenonMWMessageTypes").ZenonMWTrackLabel.DEFAULT_VIDEO:
                        return "video";
                    case b("ZenonMWMessageTypes").ZenonMWTrackLabel.SCREEN_VIDEO:
                        return "screen";
                    default:
                        return null
                }
            }, toMWClientMediaStatus: function (a) {
                var b = {tracks: {}};
                a.tracks.forEach(function (a) {
                    var c = {enabled: a.enabled, owner: a.userID}, d = g.toMWTrackLabel(a.type);
                    d != null && (c.label = d);
                    b.tracks[a.trackID] = c
                });
                return b
            }, toMWDeviceStatus: function (a) {
                a = h[a];
                return (a = a) != null ? a : b("ZenonMWMessageTypes").ZenonMWDeviceStatus.OK
            }, toMWHangupReason: function (a) {
                switch (a) {
                    case b("ZenonDismissReason").ZenonDismissReason.IgnoreCall:
                        return b("ZenonMWMessageTypes").ZenonMWHangupReason.IGNORE_CALL;
                    case b("ZenonDismissReason").ZenonDismissReason.HangupCall:
                        return b("ZenonMWMessageTypes").ZenonMWHangupReason.HANGUP_CALL;
                    case b("ZenonDismissReason").ZenonDismissReason.NoAnswerTimeout:
                        return b("ZenonMWMessageTypes").ZenonMWHangupReason.NO_ANSWER_TIMEOUT;
                    case b("ZenonDismissReason").ZenonDismissReason.ClientError:
                        return b("ZenonMWMessageTypes").ZenonMWHangupReason.CLIENT_ERROR;
                    case b("ZenonDismissReason").ZenonDismissReason.InAnotherCall:
                        return b("ZenonMWMessageTypes").ZenonMWHangupReason.IN_ANOTHER_CALL;
                    case b("ZenonDismissReason").ZenonDismissReason.ClientInterrupted:
                        return b("ZenonMWMessageTypes").ZenonMWHangupReason.CLIENT_INTERRUPTED;
                    case b("ZenonDismissReason").ZenonDismissReason.SessionMigrated:
                        return b("ZenonMWMessageTypes").ZenonMWHangupReason.SESSION_MIGRATED;
                    default:
                        return b("ZenonMWMessageTypes").ZenonMWHangupReason.HANGUP_CALL
                }
            }, toMWMediaStatus: function (a) {
                var b = {};
                a.tracks.forEach(function (a) {
                    b[a.trackID] = a.enabled
                });
                return b
            }, toMWMediaStatusEx: function (a) {
                var b = {};
                a.tracks.forEach(function (a) {
                    var c = {enabled: a.enabled}, d = g.toMWTrackLabel(a.type);
                    d != null && (c.label = d);
                    b[a.trackID] = c
                });
                return {tracks: b}
            }, toMWTrackLabel: function (a) {
                if (!b("gkx")("1667037")) return null;
                switch (a) {
                    case"audio":
                        return b("ZenonMWMessageTypes").ZenonMWTrackLabel.DEFAULT_AUDIO;
                    case"video":
                        return b("ZenonMWMessageTypes").ZenonMWTrackLabel.DEFAULT_VIDEO;
                    case"screen":
                        return b("ZenonMWMessageTypes").ZenonMWTrackLabel.SCREEN_VIDEO;
                    default:
                        return null
                }
            }, toMWResponseStatusCode: function (a) {
                return j[a]
            }, toMWSyncStateStore: function (a) {
                var b = {};
                a.forEach(function (a, c) {
                    b[c] = a
                });
                return b
            }, toZenonMediaStates: function (a) {
                var b = {tracks: [], version: 0};
                Object.keys(a.tracks).forEach(function (c) {
                    var d = a.tracks[c];
                    c = {enabled: d.enabled, trackID: c, type: g.toMWClientTrackContentType(d.label), userID: d.owner};
                    b.tracks.push(c);
                    b.version++
                });
                return b
            }
        }, h = {
            IN_ANOTHER_CALL: (a = b("ZenonMWMessageTypes")).ZenonMWDeviceStatus.IN_ANOTHER_CALL,
            NOT_SUPPORTED: a.ZenonMWDeviceStatus.NOT_SUPPORTED,
            OK: a.ZenonMWDeviceStatus.OK
        },
        i = Object.freeze((c = {}, c[a.ZenonMWParticipantCallState.UNKNOWN] = (d = b("ZenonParticipantState")).ZenonParticipantState.UNKNOWN, c[a.ZenonMWParticipantCallState.DISCONNECTED] = d.ZenonParticipantState.DISCONNECTED, c[a.ZenonMWParticipantCallState.NO_ANSWER] = d.ZenonParticipantState.NO_ANSWER, c[a.ZenonMWParticipantCallState.REJECTED] = d.ZenonParticipantState.REJECTED, c[a.ZenonMWParticipantCallState.UNREACHABLE] = d.ZenonParticipantState.UNREACHABLE, c[a.ZenonMWParticipantCallState.CONNECTION_DROPPED] = d.ZenonParticipantState.CONNECTION_DROPPED, c[a.ZenonMWParticipantCallState.CONTACTING] = d.ZenonParticipantState.CONTACTING, c[a.ZenonMWParticipantCallState.RINGING] = d.ZenonParticipantState.RINGING, c[a.ZenonMWParticipantCallState.CONNECTING] = d.ZenonParticipantState.CONNECTING, c[a.ZenonMWParticipantCallState.CONNECTED] = d.ZenonParticipantState.CONNECTED, c[a.ZenonMWParticipantCallState.PARTICIPANT_LIMIT_REACHED] = d.ZenonParticipantState.PARTICIPANT_LIMIT_REACHED, c[a.ZenonMWParticipantCallState.IN_ANOTHER_CALL] = d.ZenonParticipantState.IN_ANOTHER_CALL, c[a.ZenonMWParticipantCallState.RING_TYPE_UNSUPPORTED] = d.ZenonParticipantState.RING_TYPE_UNSUPPORTED, c[a.ZenonMWParticipantCallState.PENDING_APPROVAL] = d.ZenonParticipantState.PENDING_APPROVAL, c[a.ZenonMWParticipantCallState.APPROVED] = d.ZenonParticipantState.APPROVED, c[a.ZenonMWParticipantCallState.FAILED_APPROVAL] = d.ZenonParticipantState.FAILED_APPROVAL, c)),
        j = Object.freeze((f = {}, f[b("ZenonSignalingTypes").ZenonRemoteSdpResponseStatus.OK] = a.ZenonMWResponseStatusCode.OK, f[b("ZenonSignalingTypes").ZenonRemoteSdpResponseStatus.REJECTED_FROM_VERSION_DOES_NOT_MATCH] = a.ZenonMWResponseStatusCode.CONDITIONAL_REQUEST_FAILED, f));
    d = g;
    e.exports = d
}), null);
__d("ZenonMWMessageTranslator", ["CurrentUser", "MessengerCowatchConfig", "ScotchRTWebUserActionLogger", "ZenonMWMessageTypes", "ZenonMWTranslatorUtils", "ZenonSignalingMessage", "gkx", "qex", "unrecoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    f.toMWMessage = a;
    f.toSignalingMessage = c;
    var g = "joining_context", h = "signalingDominantSpeakerUpdate";

    function a(a) {
        var c = a.getHeader();
        a = a.getEvents();
        if (a.length === 0) throw b("unrecoverableViolation")("Unexpected Translation: called toMWMessage with empty signaling events", "messenger_web_product"); else {
            var d = a[0];
            switch (d.eventName) {
                case"addParticipantsRequest":
                    return w(c, d);
                case"clientEventRequest":
                    return x(c, d);
                case"clientInfoRequest":
                    if (a.length >= 2 && a[1].eventName === "localSdpRequest" && (a[1].sdp.type === "offer" || a[1].sdp.type === "answer" && Q())) return C(c, d, a[1]);
                    break;
                case"genericDataMessageRequest":
                    return z(c, d);
                case"inviteRequest":
                    if (a.length >= 3 && a[1].eventName === "clientInfoRequest" && a[2].eventName === "localSdpRequest" && a[2].sdp.type === "offer") return C(c, a[1], a[2], d);
                    break;
                case"inviteResponse":
                    return D(c, d);
                case"dismissResponse":
                    return H(c);
                case"initiateRenegotiationResponse":
                    return M(c, d);
                case"iceCandidateRequest":
                    return B(c, d);
                case"iceCandidateResponse":
                    return A(c, d);
                case"localSdpRequest":
                    return K(c, d.mediaStates, d.sdp);
                case"mediaUpdateRequest":
                    return K(c, d.mediaStates);
                case"participantUpdateResponse":
                    return J(c, d);
                case"pingRequest":
                    return I(c);
                case"remoteSdpResponse":
                    return d.type === "offer" && (a.length >= 2 && a[1].eventName === "localSdpRequest" && a[1].sdp.type === "answer") ? L(c, d, a[1]) : L(c, d);
                case"removeParticipantsRequest":
                    return y(c, d);
                case"stateSyncNotifyResponse":
                    return O(c, d);
                case"stateSyncUnsubscribeRequest":
                    return P(c, d);
                case"stateSyncUpdateRequest":
                    return N(c, d);
                case"subscriptionRequest":
                    return F(c, d);
                case"terminateRequest":
                    return E(c, d);
                case"usersApprovalRequest":
                    return G(c, d)
            }
        }
        return null
    }

    function c(a) {
        var c = a.jsonPayload.header;
        if (c.receiverUserId != null && c.receiverUserId !== b("CurrentUser").getID()) throw b("unrecoverableViolation")("Ignoring MW message; receiverUserId does not match self ID", "messenger_web_product");
        var d = c.type, e = c.responseStatusCode == null;
        c = b("ZenonMWTranslatorUtils").mwMessageHeaderToSignalingMessageHeader(c);
        var f = [];
        switch (d) {
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.RING:
                e && (f = k(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.DISMISS:
                e && (f = l(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.JOIN:
                e || (f = n(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.ICE_CANDIDATE:
                e ? f = o(a) : f = p(a);
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.CONFERENCE_STATE:
                e && (f = q(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.CLIENT_MEDIA_UPDATE:
                e || (f = r(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.SERVER_MEDIA_UPDATE:
                e && (f = s(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.PING:
                e || (f = i(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.HANGUP:
                e || (f = j(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.DATA_MESSAGE:
                e && (f = m(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.UPDATE:
                e || (f = t(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.UNSUBSCRIBE:
                e || (f = v(a));
                break;
            case b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.NOTIFY:
                e && (f = u(a));
                break
        }
        return new (b("ZenonSignalingMessage"))(c, f)
    }

    function i(a) {
        var b = [];
        a = a.jsonPayload.header;
        a = {ackMessageId: a.transactionId, eventName: "pingResponse"};
        b.push(a);
        return b
    }

    function j(a) {
        var b = [];
        a = a.jsonPayload.header;
        a = {ackMessageId: a.transactionId, eventName: "hangupResponse"};
        b.push(a);
        return b
    }

    function k(a) {
        var c = [];
        a = a.jsonPayload;
        var d = a.body;
        a = a.header;
        d = d.ringRequest;
        if (d) {
            var e = d.appMessages, f = d.caller, g = d.otherParticipants, h = d.ringType;
            f = f;
            h = h === b("ZenonMWMessageTypes").ZenonMWRingType.PEER_VIDEO_CALL || h === b("ZenonMWMessageTypes").ZenonMWRingType.GROUP_VIDEO_CALL || h === b("ZenonMWMessageTypes").ZenonMWRingType.LIVE_STREAM || h === b("ZenonMWMessageTypes").ZenonMWRingType.PEER_ESCALATED_AUDIO_CALL;
            var i = a.conferenceName;
            a = a.serverInfoData;
            var j = b("ZenonMWTranslatorUtils").getCollisionContextFromAppMessages(e);
            j && (j == null ? void 0 : j.serverInfoData) == null && (j.serverInfoData = a);
            e = b("ZenonMWTranslatorUtils").getRoomMetadataFromAppMessages(e);
            g = {
                eventName: "inviteRequest",
                inviterID: f,
                isRemoteOfferer: !1,
                otherParticipants: g,
                requestingVideo: h,
                roomInfo: {
                    context: (f = j) != null ? f : {groupThreadID: null, peerID: null, serverInfoData: a},
                    name: i,
                    room: e,
                    sender: e.sender
                }
            };
            c.push(g);
            f = (j = (h = d.offer) == null ? void 0 : h.sdpString) != null ? j : "";
            i = (a = d.mediaStatusEx) != null ? a : null;
            if (f !== "" && i != null && Q()) {
                e = {sdp: f, type: "offer", version: b("ZenonMWTranslatorUtils").getSdpVersion(f)};
                g = b("ZenonMWTranslatorUtils").toZenonMediaStates(i);
                h = {eventName: "remoteSdpRequest", mediaStates: g, negotiateType: !1, sdp: e};
                c.push(h)
            }
        }
        return c
    }

    function l(a) {
        var c = [];
        a = a.jsonPayload.body.dismissRequest;
        if (a) {
            a = a.reason;
            a = {
                eventName: "terminateRequest",
                fromJoinResponse: !1,
                reason: b("ZenonMWTranslatorUtils").fromMWDismissReason(a),
                shouldInformPeer: !0
            };
            c.push(a)
        }
        return c
    }

    function m(a) {
        var b = [];
        a = a.jsonPayload.body.dataMessageRequest;
        if (a) {
            var c, d = a.message.header;
            c = (c = a.message) == null ? void 0 : (c = c.body) == null ? void 0 : c.genericMessage;
            a = (a = a.message) == null ? void 0 : (a = a.body) == null ? void 0 : a.dominantSpeakerSignalingInfo;
            if (c || a) {
                a = c ? atob(c.data) : JSON.stringify(a);
                c = c ? c.topic : h;
                d = {
                    data: (a = a) != null ? a : "",
                    eventName: "genericDataMessageRequest",
                    recipientIDs: (a = d.recipients) != null ? a : [],
                    serviceRecipients: (a = d.serviceRecipients) != null ? a : [],
                    topic: c
                };
                b.push(d)
            }
        }
        return b
    }

    function n(a) {
        var c = [], d = a.jsonPayload.header, e = d.responseStatusCode;
        if (e && e !== b("ZenonMWMessageTypes").ZenonMWResponseStatusCode.OK) {
            var f;
            b("ScotchRTWebUserActionLogger").logError({
                callType: "mw",
                checkpoint: "[ZP] Got non-OK JOIN response status code: " + e + " subcode " + ((f = d.responseSubCode) != null ? f : "[undefined]"),
                errorDomain: "ZenonMWMessageTranslator.fromJoinResponse"
            });
            f = {
                eventName: "terminateRequest",
                fromJoinResponse: !0,
                reason: b("ZenonMWTranslatorUtils").fromMWJoinResponseStatusToDismissReason(e, d.responseSubCode),
                shouldInformPeer: !1
            };
            c.push(f);
            return c
        }
        e = a.jsonPayload.body.joinResponse;
        if (!e) return c;
        f = (a = (f = e.answer) == null ? void 0 : f.sdpString) != null ? a : "";
        a = f !== "";
        d = {
            ackMessageId: d.transactionId,
            eventName: "localSdpResponse",
            hasAnswerInJoinResponse: a,
            source: "joinResponse"
        };
        c.push(d);
        if (a) {
            d = {sdp: f, type: "answer", version: b("ZenonMWTranslatorUtils").getSdpVersion(f)};
            a = b("ZenonMWTranslatorUtils").toZenonMediaStates(e.mediaStatusEx);
            f = e.renegotiationOffer;
            var g = null;
            f != null && f.sdpString != null && (g = {
                sdp: f.sdpString,
                type: "offer",
                version: b("ZenonMWTranslatorUtils").getSdpVersion(f.sdpString)
            });
            f = {
                eventName: "remoteSdpRequest",
                mediaStates: a,
                negotiateType: !1,
                renegotiationOffer: g,
                sdp: d,
                source: "joinResponse"
            };
            c.push(f)
        }
        a = {
            capabilities: {
                addParticipantEnabled: !0,
                cowatchEnabled: b("MessengerCowatchConfig").hasZenonCowatchCapability(),
                cowatchGroupEnabled: b("MessengerCowatchConfig").hasZenonGroupCowatchCapability(),
                multipleVideoStreamsAllowed: e.multipleVideoStreamsAllowed
            }, eventName: "capabilitiesRequest"
        };
        c.push(a);
        S(e.stateStore, c, "JOIN response");
        if (T() && e.isPendingApproval) {
            g = {eventName: "pendingApprovalRequest"};
            c.push(g)
        }
        return c
    }

    function o(a) {
        var b = [];
        a = a.jsonPayload.body.iceCandidateRequest;
        if (a) {
            a = {
                eventName: "iceCandidateRequest", iceCandidates: a.iceCandidateSdps.map(function (a) {
                    var b;
                    return {
                        candidateSdpString: (b = a.candidateSdpString) != null ? b : "",
                        sdpMLineIndex: a.sdpMLineIndex,
                        sdpMid: a.sdpMid
                    }
                })
            };
            b.push(a)
        }
        return b
    }

    function p(a) {
        var b = [];
        a = a.jsonPayload.header;
        a = {ackMessageId: a.transactionId, eventName: "iceCandidateResponse"};
        b.push(a);
        return b
    }

    function q(a) {
        var c = [];
        a = a.jsonPayload.body.conferenceStateRequest;
        if (a) {
            var d = a.appMessages, e = a.participantStates,
                f = {eventName: "participantUpdateRequest", participantStates: new Map(), versionId: a.version},
                g = {eventName: "clientInfoRequest", userCapabilities: new Map()};
            Object.keys(e).forEach(function (a) {
                var c = e[a], d = c.state;
                c = c.userCapabilities;
                f.participantStates.set(a, b("ZenonMWTranslatorUtils").fromMWParticipantState(d));
                g.userCapabilities.set(a, (d = c) != null ? d : "")
            });
            c.push(f);
            c.push(g);
            a = b("ZenonMWTranslatorUtils").getCollisionContextFromAppMessages(d);
            if (a) {
                d = {context: a, eventName: "roomContextUpdateRequest"};
                c.push(d)
            }
        }
        return c
    }

    function r(a) {
        var c = [];
        a = a.jsonPayload;
        var d = a.body;
        a = a.header;
        d = d.clientMediaUpdateResponse;
        var e = a.responseStatusCode, f = a.responseSubCode, g = a.retryAfterMsec;
        if (d) {
            var h = d.answer, i = d.mediaStatus;
            if (h != null && i != null) {
                h = (h = h.sdpString) != null ? h : "";
                i = b("ZenonMWTranslatorUtils").toZenonMediaStates(i);
                var j = {
                    ackMessageId: a.transactionId,
                    eventName: "localSdpResponse",
                    hasAnswerInJoinResponse: !1,
                    source: "clientMediaUpdate"
                };
                i = {
                    eventName: "remoteSdpRequest",
                    mediaStates: i,
                    negotiateType: !1,
                    sdp: {sdp: h, type: "answer", version: b("ZenonMWTranslatorUtils").getSdpVersion(h)}
                };
                c.push(j);
                c.push(i)
            }
            S(d.stateStore, c, "CMU response");
            h = {
                ackMessageId: a.transactionId,
                eventName: "mediaUpdateResponse",
                requestVersionId: d.currentVersion,
                responseStatusCode: e,
                responseSubCode: f,
                retryAfter: g
            };
            c.push(h)
        }
        return c
    }

    function s(a) {
        var c = [];
        a = a.jsonPayload;
        var d = a.body;
        a = a.header;
        d = d.serverMediaUpdateRequest;
        var e = a.transactionId;
        if (!d) return c;
        a = {
            eventName: "overlayConfigServerUpdateRequest",
            serializedConfig: (a = (a = a.extensions) == null ? void 0 : a.oc1) != null ? a : ""
        };
        c.push(a);
        if (d.renegotiationRequested) {
            a = {eventName: "initiateRenegotiationRequest", fromVersion: d.fromVersion, version: d.toVersion};
            c.push(a)
        }
        a = (a = (a = d.answer) == null ? void 0 : a.sdpString) != null ? a : "";
        var f = "answer";
        if (a === "") {
            var g;
            a = (g = (g = d.offer) == null ? void 0 : g.sdpString) != null ? g : "";
            f = "offer"
        }
        if (a === "") return c;
        b("ScotchRTWebUserActionLogger").logCheckpoint({checkpoint: "SMU request SDP type: " + f + ", transaction id: " + e});
        g = {sdp: a, type: f, version: b("ZenonMWTranslatorUtils").getSdpVersion(a)};
        e = b("ZenonMWTranslatorUtils").toZenonMediaStates(d.mediaStatus);
        f = {eventName: "remoteSdpRequest", fromVersion: d.fromVersion, mediaStates: e, negotiateType: !1, sdp: g};
        c.push(f);
        S(d.stateStore, c, "SMU request");
        a = {
            capabilities: {multipleVideoStreamsAllowed: d.multipleVideoStreamsAllowed},
            eventName: "capabilitiesRequest"
        };
        c.push(a);
        return c
    }

    function t(a) {
        a = a.jsonPayload;
        var b = a.body.updateResponse;
        a = a.header.transactionId;
        if (!b) return [];
        var c = b.topic;
        b = b.version;
        a = {ackMessageId: a, eventName: "stateSyncUpdateResponse", topic: c, version: b};
        return [a]
    }

    function u(a) {
        a = a.jsonPayload.body.notifyRequest;
        if (!a) return [];
        var b = a.data, c = a.topic;
        a = a.version;
        b = {data: b, eventName: "stateSyncNotifyRequest", responseRequired: !0, topic: c, version: a};
        return [b]
    }

    function v(a) {
        a = a.jsonPayload;
        var b = a.body.unsubscribeResponse;
        a = a.header.transactionId;
        if (!b) return [];
        var c = b.topic;
        b = b.version;
        a = {ackMessageId: a, eventName: "stateSyncUnsubscribeResponse", topic: c, version: b};
        return [a]
    }

    function w(a, c) {
        c = {usersToInvite: c.participants};
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.ADD_PARTICIPANTS);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {addParticipantsRequest: c})
    }

    function x(a, c) {
        c = {clientEventType: c.clientEventType};
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.CLIENT_EVENT);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {clientEventRequest: c})
    }

    function y(a, c) {
        c = {usersToRemove: c.participants};
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.REMOVE_PARTICIPANTS);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {removeParticipantsRequest: c})
    }

    function z(a, c) {
        var d = {data: c.data, topic: c.topic};
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.DATA_MESSAGE);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {
            dataMessageRequest: {
                message: {
                    body: {genericMessage: d},
                    header: {
                        recipients: c.recipientIDs,
                        sender: b("CurrentUser").getID(),
                        serviceRecipients: c.serviceRecipients,
                        topic_DEPRECATED: ""
                    }
                }
            }
        })
    }

    function A(a, c) {
        c = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWResponseHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.ICE_CANDIDATE);
        return b("ZenonMWTranslatorUtils").createMWMessage(c, {})
    }

    function B(a, c) {
        c = c.iceCandidates;
        c = c.map(function (a) {
            return {candidateSdpString: a.candidateSdpString, sdpMLineIndex: a.sdpMLineIndex, sdpMid: a.sdpMid}
        });
        c = {iceCandidateSdps: c};
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.ICE_CANDIDATE);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {iceCandidateRequest: c})
    }

    function C(a, c, d, e) {
        var f = c.initialSyncStates;
        f = {
            deviceCapabilities: [b("ZenonMWMessageTypes").ZenonMWCapability.SUPPORT_NEW_PARTICIPANT_STATES, b("ZenonMWMessageTypes").ZenonMWCapability.REQUIRE_FULL_SDP_IN_SMU, b("ZenonMWMessageTypes").ZenonMWCapability.SUPPORT_SDP_RENEGOTIATION],
            mediaStatus: b("ZenonMWTranslatorUtils").toMWMediaStatus(d.mediaStates),
            mediaStatusEx: b("ZenonMWTranslatorUtils").toMWMediaStatusEx(d.mediaStates),
            offer: {},
            syncPayload: f ? {stateStore: b("ZenonMWTranslatorUtils").toMWSyncStateStore(f)} : void 0,
            userCapabilities: c.userCapabilities.get(a.userInfo.userID)
        };
        d.sdp.type === "offer" && (f.offer = {sdpString: d.sdp.sdp});
        Q() && (f.deviceCapabilities.push(b("ZenonMWMessageTypes").ZenonMWCapability.SUPPORT_MWPP), d.sdp.type === "answer" && (f.answer = {sdpString: d.sdp.sdp}));
        b("gkx")("1667037") && f.deviceCapabilities.push(b("ZenonMWMessageTypes").ZenonMWCapability.SUPPORT_MULTIPLE_VIDEO_STREAMS);
        c = e == null ? void 0 : e.otherParticipants;
        c && (f.usersToCall = c);
        c = (d = e == null ? void 0 : e.roomInfo.context) != null ? d : a.roomInfo.context;
        c && (f.appMessages = [{
            body: {genericMessage: {data: JSON.stringify(c), topic: g}},
            header: {topic_DEPRECATED: g}
        }]);
        e = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.JOIN);
        c && c.serverInfoData != null && (e.serverInfoData = c.serverInfoData);
        return b("ZenonMWTranslatorUtils").createMWMessage(e, {joinRequest: f})
    }

    function D(a, c) {
        c = c.status;
        c === "IN_ANOTHER_CALL" && (a.signalingID = null);
        c = b("ZenonMWTranslatorUtils").toMWDeviceStatus(c);
        c = {
            deviceCapabilities: [b("ZenonMWMessageTypes").ZenonMWCapability.SUPPORT_AUDIO_DEPRECATED, b("ZenonMWMessageTypes").ZenonMWCapability.SUPPORT_VIDEO_DEPRECATED],
            deviceStatus: c
        };
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWResponseHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.RING);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {ringResponse: c})
    }

    function E(a, c) {
        c = c.reason;
        c = {detailedReasonString: "", reason: b("ZenonMWTranslatorUtils").toMWHangupReason(c)};
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.HANGUP);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {hangupRequest: c})
    }

    function F(a, c) {
        c = c.subscriptions;
        c = {subscriptions: c};
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.SUBSCRIPTION);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {subscriptionRequest: c})
    }

    function G(a, c) {
        var d = c.approvalStatus;
        c = c.targetUsers;
        d = {approvalStatus: d, targetUsers: c};
        c = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.APPROVAL);
        return b("ZenonMWTranslatorUtils").createMWMessage(c, {approvalRequest: d})
    }

    function H(a) {
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWResponseHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.DISMISS);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {})
    }

    function I(a) {
        var c = Object.freeze({});
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.PING);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {pingRequest: c})
    }

    function J(a, c) {
        c = {currentVersion: c.requestVersionId};
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWResponseHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.CONFERENCE_STATE);
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {conferenceStateResponse: c})
    }

    function K(a, c, d) {
        c = {
            fromVersion: c.version,
            mediaUpdates: [{
                mediaStatus: b("ZenonMWTranslatorUtils").toMWMediaStatus(c),
                mediaStatusEx: b("ZenonMWTranslatorUtils").toMWMediaStatusEx(c)
            }],
            toVersion: c.version
        };
        d !== void 0 && (c.offer = {sdpString: d.sdp});
        d = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.CLIENT_MEDIA_UPDATE);
        return b("ZenonMWTranslatorUtils").createMWMessage(d, {clientMediaUpdateRequest: c})
    }

    function L(a, c, d) {
        if (c.acknowledgedVersion == null) throw b("unrecoverableViolation")("Error creating ServerMediaUpdateResponse: remoteSdpResponse.acknowledgedVersion is null", "messenger_web_product");
        var e = {currentVersion: c.acknowledgedVersion};
        d && (e.answer = {sdpString: d.sdp.sdp}, e.mediaStatus = b("ZenonMWTranslatorUtils").toMWClientMediaStatus(d.mediaStates));
        d = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWResponseHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.SERVER_MEDIA_UPDATE, b("ZenonMWTranslatorUtils").toMWResponseStatusCode(c.status));
        return b("ZenonMWTranslatorUtils").createMWMessage(d, {serverMediaUpdateResponse: e})
    }

    function M(a, c) {
        var d = {currentVersion: c.acknowledgedVersion};
        a = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWResponseHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.SERVER_MEDIA_UPDATE, b("ZenonMWTranslatorUtils").toMWResponseStatusCode(c.status));
        return b("ZenonMWTranslatorUtils").createMWMessage(a, {serverMediaUpdateResponse: d})
    }

    function N(a, c) {
        var d = c.data, e = c.topic;
        c = c.version;
        d = {data: d, topic: e, version: c};
        e = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.UPDATE);
        return b("ZenonMWTranslatorUtils").createMWMessage(e, {updateRequest: d})
    }

    function O(a, c) {
        var d = c.topic;
        c = c.version;
        d = {topic: d, version: c};
        c = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWResponseHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.NOTIFY);
        return b("ZenonMWTranslatorUtils").createMWMessage(c, {notifyResponse: d})
    }

    function P(a, c) {
        var d = c.topic;
        c = c.version;
        d = {topic: d, version: c};
        c = b("ZenonMWTranslatorUtils").signalingMessageHeaderToMWHeader(a, b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.UNSUBSCRIBE);
        return b("ZenonMWTranslatorUtils").createMWMessage(c, {unsubscribeRequest: d})
    }

    function Q() {
        var a;
        return (a = b("qex")._("1566745")) != null ? a : !1
    }

    function R() {
        var a = b("gkx")("1418215");
        a && b("ScotchRTWebUserActionLogger").logCheckpointOnceForDomain({checkpoint: "gk: rtc_www_state_sync"});
        return a
    }

    function S(a, c, d) {
        R() && a && Object.keys(a).forEach(function (e) {
            var f = a[e], g = f.data;
            f = f.version;
            if (g != null) {
                var h = {data: g, eventName: "stateSyncNotifyRequest", responseRequired: !1, topic: e, version: f};
                b("ScotchRTWebUserActionLogger").logCheckpoint({checkpoint: d + " StateStore topic: " + e + ", version: " + f + " data: " + g});
                c.push(h)
            }
        })
    }

    function T() {
        var a = b("gkx")("1450329");
        a && b("ScotchRTWebUserActionLogger").logCheckpointOnceForDomain({checkpoint: "gk: rtc_www_lobby_mode"});
        return a
    }
}), null);
__d("CallEndReason", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        IGNORE_CALL: "IgnoreCall",
        HANGUP_CALL: "HangupCall",
        IN_ANOTHER_CALL: "InAnotherCall",
        ACCEPT_AFTER_HANGUP: "CallEndAcceptAfterHangUp",
        NO_ANSWER_TIMEOUT: "NoAnswerTimeout",
        INCOMING_TIMEOUT: "IncomingTimeout",
        OTHER_INSTANCE_HANDLED: "OtherInstanceHandled",
        SIGNALING_MESSAGE_FAILED: "SignalingMessageFailed",
        CONNECTION_DROPPED: "ConnectionDropped",
        CLIENT_INTERRUPTED: "ClientInterrupted",
        WEBRTC_ERROR: "WebRTCError",
        CLIENT_ERROR: "ClientError",
        NO_PERMISSION: "NoPermission",
        OTHER_NOT_CAPABLE: "OtherNotCapable",
        NO_UI_ERROR: "NoUIShown",
        UNSUPPORTED_VERSION: "VersionUnsupported",
        CALLER_NOT_VISIBLE: "CallerNotVisible",
        CARRIER_BLOCKED: "CarrierBlocked",
        OTHER_CARRIER_BLOCKED: "OtherCarrierBlocked",
        CLIENT_ENCRYPTION_ERROR: "ClientEncryptionError"
    });
    e.exports = a
}), null);
__d("WebrtcMessageType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        OFFER: "offer",
        ANSWER: "answer",
        ICE_CANDIDATE: "ice_candidate",
        OK: "ok",
        HANG_UP: "hang_up",
        OTHER_DISMISS: "other_dismiss",
        MESSAGE_ACK: "msg_ack",
        PRANSWER: "pranswer",
        PING: "ping",
        PING_ACK: "ping_ack",
        ICE_RESTART_OFFER: "icerestart_offer",
        ICE_RESTART_ANSWER: "icerestart_answer",
        OFFER_ACK: "offer_ack",
        ANSWER_ACK: "answer_ack",
        SET_VIDEO: "set_video",
        ACK: "ack",
        INVALID: "invalid",
        OFFER_NACK: "offer_nack",
        NACK: "nack",
        VIDEO_REQUEST: "video_request",
        SDP_UPDATE: "sdp_update",
        SWITCH_TO_MULTIWAY: "switch_to_multiway",
        ON_HOLD: "on_hold",
        NEGOTIATE: "negotiate",
        RING: "ring",
        PR_OFFER_ACK: "pr_offer_ack",
        NOTIFY_MEDIA_STATE: "notify_media_state",
        CLIENT_REPORTED_EVENT: "client_reported_event",
        PCRESTART_OFFER: "pcrestart_offer"
    });
    e.exports = a
}), null);
__d("ZenonP2PMessageTypes", ["WebrtcMessageType", "CallEndReason"], (function (a, b, c, d, e, f) {
    "use strict";
    a = b("CallEndReason");
    f.ZenonP2PCallEndReason = a;
    c = b("WebrtcMessageType");
    f.ZenonP2PSignalingPayloadType = c
}), null);
__d("ZenonP2PTranslatorUtils", ["CurrentUser", "ZenonDismissReason", "ZenonP2PMessageTypes"], (function (a, b, c, d, e, f) {
    "use strict";
    f.fromP2PCallEndReason = a;
    f.p2pMessageToSignalingMessageHeader = c;
    f.toP2PCallEndReason = d;

    function a(a) {
        a = g[a];
        return (a = a) != null ? a : b("ZenonDismissReason").ZenonDismissReason.CallEnded
    }

    function c(a, c) {
        var d = c.call_id, e = c.from;
        c = c.source;
        var f = e + ":" + b("CurrentUser").getID();
        return {
            messageID: a,
            protocol: "p2p",
            remoteInfo: {deviceInfo: {deviceID: c}, userID: e},
            remoteSignalingID: String(d),
            retryCount: 0,
            roomInfo: {name: f},
            signalingID: String(d),
            userInfo: {userID: b("CurrentUser").getID()}
        }
    }

    function d(a) {
        switch (a) {
            case b("ZenonDismissReason").ZenonDismissReason.HangupCall:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.HANGUP_CALL;
            case b("ZenonDismissReason").ZenonDismissReason.IgnoreCall:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.IGNORE_CALL;
            case b("ZenonDismissReason").ZenonDismissReason.InAnotherCall:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.IN_ANOTHER_CALL;
            case b("ZenonDismissReason").ZenonDismissReason.AcceptAfterHangUp:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.ACCEPT_AFTER_HANGUP;
            case b("ZenonDismissReason").ZenonDismissReason.NoAnswerTimeout:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.NO_ANSWER_TIMEOUT;
            case b("ZenonDismissReason").ZenonDismissReason.IncomingTimeout:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.INCOMING_TIMEOUT;
            case b("ZenonDismissReason").ZenonDismissReason.OtherInstanceHandled:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.OTHER_INSTANCE_HANDLED;
            case b("ZenonDismissReason").ZenonDismissReason.SignalingMessageFailed:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.SIGNALING_MESSAGE_FAILED;
            case b("ZenonDismissReason").ZenonDismissReason.ConnectionDropped:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.CONNECTION_DROPPED;
            case b("ZenonDismissReason").ZenonDismissReason.ClientInterrupted:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.CLIENT_INTERRUPTED;
            case b("ZenonDismissReason").ZenonDismissReason.WebRTCError:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.WEBRTC_ERROR;
            case b("ZenonDismissReason").ZenonDismissReason.ClientError:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.CLIENT_ERROR;
            case b("ZenonDismissReason").ZenonDismissReason.NoPermission:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.NO_PERMISSION;
            case b("ZenonDismissReason").ZenonDismissReason.OtherNotCapable:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.OTHER_NOT_CAPABLE;
            case b("ZenonDismissReason").ZenonDismissReason.NoUIShown:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.NO_UI_ERROR;
            case b("ZenonDismissReason").ZenonDismissReason.VersionUnsupported:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.UNSUPPORTED_VERSION;
            case b("ZenonDismissReason").ZenonDismissReason.CallerNotVisible:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.CALLER_NOT_VISIBLE;
            case b("ZenonDismissReason").ZenonDismissReason.CarrierBlocked:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.CARRIER_BLOCKED;
            case b("ZenonDismissReason").ZenonDismissReason.OtherCarrierBlocked:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.OTHER_CARRIER_BLOCKED;
            case b("ZenonDismissReason").ZenonDismissReason.ClientEncryptionError:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.CLIENT_ENCRYPTION_ERROR;
            default:
                return b("ZenonP2PMessageTypes").ZenonP2PCallEndReason.HANGUP_CALL
        }
    }

    var g = Object.freeze((e = {}, e[(a = b("ZenonP2PMessageTypes")).ZenonP2PCallEndReason.HANGUP_CALL] = (c = b("ZenonDismissReason")).ZenonDismissReason.HangupCall, e[a.ZenonP2PCallEndReason.IGNORE_CALL] = c.ZenonDismissReason.IgnoreCall, e[a.ZenonP2PCallEndReason.IN_ANOTHER_CALL] = c.ZenonDismissReason.InAnotherCall, e[a.ZenonP2PCallEndReason.ACCEPT_AFTER_HANGUP] = c.ZenonDismissReason.AcceptAfterHangUp, e[a.ZenonP2PCallEndReason.NO_ANSWER_TIMEOUT] = c.ZenonDismissReason.NoAnswerTimeout, e[a.ZenonP2PCallEndReason.INCOMING_TIMEOUT] = c.ZenonDismissReason.IncomingTimeout, e[a.ZenonP2PCallEndReason.OTHER_INSTANCE_HANDLED] = c.ZenonDismissReason.OtherInstanceHandled, e[a.ZenonP2PCallEndReason.SIGNALING_MESSAGE_FAILED] = c.ZenonDismissReason.SignalingMessageFailed, e[a.ZenonP2PCallEndReason.CONNECTION_DROPPED] = c.ZenonDismissReason.ConnectionDropped, e[a.ZenonP2PCallEndReason.CLIENT_INTERRUPTED] = c.ZenonDismissReason.ClientInterrupted, e[a.ZenonP2PCallEndReason.CLIENT_ERROR] = c.ZenonDismissReason.ClientError, e[a.ZenonP2PCallEndReason.WEBRTC_ERROR] = c.ZenonDismissReason.WebRTCError, e[a.ZenonP2PCallEndReason.CLIENT_ERROR] = c.ZenonDismissReason.ClientError, e[a.ZenonP2PCallEndReason.NO_PERMISSION] = c.ZenonDismissReason.NoPermission, e[a.ZenonP2PCallEndReason.OTHER_NOT_CAPABLE] = c.ZenonDismissReason.OtherNotCapable, e[a.ZenonP2PCallEndReason.NO_UI_ERROR] = c.ZenonDismissReason.NoUIShown, e[a.ZenonP2PCallEndReason.UNSUPPORTED_VERSION] = c.ZenonDismissReason.VersionUnsupported, e[a.ZenonP2PCallEndReason.CALLER_NOT_VISIBLE] = c.ZenonDismissReason.CallerNotVisible, e[a.ZenonP2PCallEndReason.CARRIER_BLOCKED] = c.ZenonDismissReason.CarrierBlocked, e[a.ZenonP2PCallEndReason.OTHER_CARRIER_BLOCKED] = c.ZenonDismissReason.OtherCarrierBlocked, e[a.ZenonP2PCallEndReason.CLIENT_ENCRYPTION_ERROR] = c.ZenonDismissReason.ClientEncryptionError, e))
}), null);
__d("ZenonP2PMessageTranslator", ["errorCode", "ZenonDismissReason", "ZenonP2PMessageTypes", "ZenonP2PTranslatorUtils", "ZenonParticipantState", "ZenonSignalingMessage"], (function (a, b, c, d, e, f, g) {
    "use strict";
    f.toP2PMessage = a;
    f.toSignalingMessage = c;
    var h = 0, i = 3;

    function a(a) {
        var b = a.getHeader();
        a = a.getEvents();
        if (a.length === 0) throw new Error("Unexpected Translation: called toP2PMessage with empty signaling events");
        switch (a[0].eventName) {
            case"answerIntentRequest":
                return q(b);
            case"inviteResponse":
                if (a[0].status === "NOT_SUPPORTED") return o(b); else return n(b);
            case"terminateRequest":
                return p(b, a[0]);
            default:
                return null
        }
    }

    function c(a) {
        switch (a.type) {
            case b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.OFFER:
                return j(a);
            case b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.HANG_UP:
                return k(a);
            case b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.OTHER_DISMISS:
                return l(a);
            case b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.ICE_CANDIDATE:
                return m(a);
            default:
                return null
        }
    }

    function j(a) {
        var c = b("ZenonP2PTranslatorUtils").p2pMessageToSignalingMessageHeader(String(a.msg_id), a), d = [],
            e = a.escalation_conference_name, f = a.from, g = a.videoon;
        g = {
            eventName: "inviteRequest",
            inviterID: f,
            isRemoteOfferer: !0,
            otherParticipants: [],
            requestingVideo: g,
            roomInfo: {context: {groupThreadID: null, peerID: f, serverInfoData: null}, name: e}
        };
        d.push(g);
        e = {
            eventName: "remoteSdpRequest",
            sdp: {sdp: a.sdp, type: "offer", version: 0},
            mediaStates: {tracks: [], version: 0},
            negotiateType: !1
        };
        d.push(e);
        g = {
            capabilities: {
                addParticipantEnabled: a.offer_escalation_support,
                cowatchEnabled: !1,
                cowatchGroupEnabled: !1
            }, eventName: "capabilitiesRequest"
        };
        d.push(g);
        e = new Map([[f, b("ZenonParticipantState").ZenonParticipantState.CONNECTED]]);
        a = {eventName: "participantUpdateRequest", participantStates: e, versionId: h};
        d.push(a);
        return new (b("ZenonSignalingMessage"))(c, d)
    }

    function k(a) {
        var c = b("ZenonP2PTranslatorUtils").p2pMessageToSignalingMessageHeader(String(a.msg_id), a), d = [],
            e = a.from;
        a = a.reason;
        a = {
            eventName: "terminateRequest",
            fromJoinResponse: !1,
            reason: b("ZenonP2PTranslatorUtils").fromP2PCallEndReason(a),
            shouldInformPeer: !0
        };
        d.push(a);
        a = new Map([[e, b("ZenonParticipantState").ZenonParticipantState.DISCONNECTED]]);
        e = {eventName: "participantUpdateRequest", participantStates: a, versionId: i};
        d.push(e);
        return new (b("ZenonSignalingMessage"))(c, d)
    }

    function l(a) {
        a = b("ZenonP2PTranslatorUtils").p2pMessageToSignalingMessageHeader(String(a.msg_id), a);
        var c = [], d = {
            eventName: "terminateRequest",
            fromJoinResponse: !1,
            reason: b("ZenonDismissReason").ZenonDismissReason.OtherInstanceHandled,
            shouldInformPeer: !0
        };
        c.push(d);
        return new (b("ZenonSignalingMessage"))(a, c)
    }

    function m(a) {
        var c = b("ZenonP2PTranslatorUtils").p2pMessageToSignalingMessageHeader(String(a.msg_id), a), d = [], e = a.sdp,
            f = a.sdp_line_idx;
        a = a.sdp_mid;
        e = {candidateSdpString: e, sdpMLineIndex: f, sdpMid: a};
        f = {eventName: "iceCandidateRequest", iceCandidates: [e]};
        d.push(f);
        return new (b("ZenonSignalingMessage"))(c, d)
    }

    function n(a) {
        if (a.signalingID === null) throw new Error("Unexpected P2P Translation: expected signalingID to not be null");
        return {
            ack_id: parseInt(a.messageID, 10),
            call_id: parseInt(a.signalingID, 10),
            msg_id: parseInt(a.messageID, 10),
            type: "offer_ack"
        }
    }

    function o(a) {
        if (a.signalingID === null) throw new Error("Unexpected P2P Translation: expected signalingID to not be null");
        return {
            ack_id: parseInt(a.messageID, 10),
            call_id: parseInt(a.signalingID, 10),
            error_code: 1356043,
            msg_id: parseInt(a.messageID, 10),
            type: "offer_nack"
        }
    }

    function p(a, c) {
        if (a.signalingID === null) throw new Error("Unexpected P2P Translation: expected signalingID to not be null");
        var d = parseInt(a.messageID, 10);
        a = parseInt(a.signalingID, 10);
        c = b("ZenonP2PTranslatorUtils").toP2PCallEndReason(c.reason);
        return {call_id: a, msg_id: d, reason: c, type: "hang_up", version: 0}
    }

    function q(a) {
        if (a.signalingID === null) throw new Error("Unexpected P2P Translation: expected signalingID to not be null");
        var b = parseInt(a.signalingID, 10);
        a = parseInt(a.messageID, 10);
        return {call_id: b, msg_id: a, type: "other_dismiss"}
    }
}), null);
__d("ZenonP2PMessageValidator", ["CurrentUser", "ZenonP2PMessageTypes", "err"], (function (a, b, c, d, e, f) {
    "use strict";
    f.getValidP2PMessage = a;
    f.transformP2PMessage = c;

    function a(a) {
        a = JSON.parse(a);
        var c = a.call_id, d = a.from, e = a.id, f = a.msg_type, g = a.payload, h = a.source, i = a.to;
        a = a.type;
        if (i != null && i.toString() !== b("CurrentUser").getID()) throw b("err")("P2P message.to field " + i + " does not match logged in user ID " + b("CurrentUser").getID() + " for msg_type " + f);
        if (d && c && g) {
            i = {call_id: c, from: d, id: e, msg_type: f, payload: g, source: h, type: a};
            return i
        } else throw b("err")("P2P message does not have valid from, call_id, and payload fields")
    }

    function c(a) {
        if (a) {
            var c = a.msg_type;
            switch (c) {
                case b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.OFFER:
                    return h(a);
                case b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.HANG_UP:
                    return i(a);
                case b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.ICE_CANDIDATE:
                    return g(a);
                case b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.OTHER_DISMISS:
                    return j(a)
            }
        }
        return null
    }

    function g(a) {
        var c = a.from, d = a.payload;
        a = a.source;
        d = JSON.parse(d);
        var e = d.call_id, f = d.capability, g = d.label, h = d.msg_id, i = d.sdp, j = d.sdp_line_idx, k = d.sdp_mid;
        d = d.version;
        e = {
            call_id: e,
            capability: f,
            from: c,
            label: g,
            msg_id: h,
            sdp: i,
            sdp_line_idx: j,
            sdp_mid: k,
            source: a,
            type: b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.ICE_CANDIDATE,
            version: d
        };
        return e
    }

    function h(a) {
        var c, d, e, f, g = a.from, h = a.payload;
        a = a.source;
        h = JSON.parse(h);
        var i = h.call_id, j = h.calltype, k = h.capability;
        c = (c = h.escalation_conference_name) != null ? c : null;
        d = (d = h.experiments) != null ? d : [];
        e = (e = h.extraParams) != null ? e : [];
        f = (f = h.fbexp) != null ? f : "";
        var l = h.handlescollision !== void 0 ? h.handlescollision : !1,
            m = h.offer_escalation_support !== void 0 ? h.offer_escalation_support : !1, n = h.msg_id, o = h.sdp;
        h = h.videoon;
        i = {
            call_id: i,
            calltype: j,
            capability: k,
            escalation_conference_name: c,
            experiments: d,
            extraParams: e,
            fbexp: f,
            from: g,
            handlescollision: l,
            msg_id: n,
            offer_escalation_support: m,
            sdp: o,
            source: a,
            type: b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.OFFER,
            videoon: h
        };
        return i
    }

    function i(a) {
        var c = a.from, d = a.payload;
        a = a.source;
        d = JSON.parse(d);
        var e = d.call_id, f = d.capability, g = d.msg_id, h = d.reason;
        d = d.subreason;
        e = {
            call_id: e,
            capability: f,
            from: c,
            msg_id: g,
            reason: h,
            source: a,
            subreason: d,
            type: b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.HANG_UP
        };
        return e
    }

    function j(a) {
        var c = a.from, d = a.payload;
        a = a.source;
        d = JSON.parse(d);
        var e = d.call_id, f = d.capability;
        d = d.msg_id;
        e = {
            call_id: e,
            capability: f,
            from: c,
            msg_id: d,
            source: a,
            type: b("ZenonP2PMessageTypes").ZenonP2PSignalingPayloadType.OTHER_DISMISS
        };
        return e
    }
}), null);
__d("RTWebSignalingListener", ["FBMqttChannel", "ZenonDebugLogger", "ZenonMWMessageTranslator", "ZenonMWMessageTypes", "ZenonP2PMessageTranslator", "ZenonP2PMessageValidator", "gkx", "performanceNow", "recoverableViolation"], (function (a, b, c, d, e, f) {
    "use strict";
    var g;
    a = function () {
        function a() {
        }

        var c = a.prototype;
        c.subscribe = function (a, c, d) {
            var e = this;
            b("FBMqttChannel").subscribe("/webrtc", function (d) {
                var f = b("ZenonDebugLogger").getInstance(), g = b("ZenonP2PMessageValidator").getValidP2PMessage(d),
                    h = b("ZenonP2PMessageValidator").transformP2PMessage(g);
                e.$1(d, c);
                if (h) {
                    d = b("ZenonP2PMessageTranslator").toSignalingMessage(h);
                    d && (f.logP2PMessageReceived(g), a(d), f.logP2PMessageProcessed(g))
                }
            });
            b("FBMqttChannel").subscribe("/rtc_multi", function (c) {
                var f = JSON.parse(c), g = b("ZenonDebugLogger").getInstance();
                g.logMWMessage("RECEIVED [MQTT]", f);
                var h = b("ZenonMWMessageTranslator").toSignalingMessage(f);
                if (h) {
                    var i = f.jsonPayload.header.type === b("ZenonMWMessageTypes").ZenonMWSignalingPayloadType.JOIN,
                        j = b("gkx")("1767633");
                    if (i && j) return;
                    g.logReceivingMultiwayMessage(f);
                    a(h);
                    d && e.$2(c, d);
                    g.logProcessingMultiwayMessage(f)
                }
            });
            var f = null, h = 0;
            b("FBMqttChannel").subscribeChannelEvents({
                onMQTTStateChanged: function (a) {
                    if (a === "Disconnected" && f == null) f = (g || (g = b("performanceNow")))(); else if (a === "Connecting") h++; else if (a === "Connected" && f != null) {
                        var c = (g || (g = b("performanceNow")))() - f;
                        b("ZenonDebugLogger").getInstance().logMQTTConnectStats(c, h);
                        f = null;
                        h = 0
                    }
                    b("ZenonDebugLogger").getInstance().logMQTTStateChange(a)
                }
            })
        };
        c.unsubscribe = function () {
            b("FBMqttChannel").unsubscribeAll("/webrtc"), b("FBMqttChannel").unsubscribeAll("/rtc_multi")
        };
        c.$1 = function (a, c) {
            try {
                a = JSON.parse(a);
                c(a)
            } catch (a) {
                b("recoverableViolation")("Signaling messages should be json parsable. error:" + a, "rtweb")
            }
        };
        c.$2 = function (a, c) {
            try {
                a = JSON.parse(a);
                c(a)
            } catch (a) {
                b("recoverableViolation")("Signaling messages should be json parsable. error:" + a, "rtweb")
            }
        };
        return a
    }();
    e.exports = a
}), null);
__d("WorkForeignEntityInfo.bs", ["CurrentUser", "WorkForeignEntityType"], (function (a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        if (!(a == null) && a.type !== b("WorkForeignEntityType").NOT_FOREIGN) return a.type === b("WorkForeignEntityType").LIMITED; else return !0
    }

    function h(a) {
        if (b("CurrentUser").isWorkUser()) return g(a.work_foreign_entity_info); else return !1
    }

    function a(a) {
        if (b("CurrentUser").isWorkUser()) return g(a.workForeignEntityInfo); else return !1
    }

    function c(a) {
        if (b("CurrentUser").isWorkUser()) return a.every(function (a, b, c) {
            if (a == null) return !0; else return h(a)
        }); else return !1
    }

    f.isNotForeign = g;
    f.isCoworker = h;
    f.isContactCoworker = a;
    f.areAllCoworkers = c
}), null);
__d("MercuryIgnoredBlockedParticipants.bs", ["bs_belt_Set", "bs_caml_obj", "MercuryIDs", "bs_caml_option", "CurrentUser", "ParticipantId.bs", "WorkForeignEntityInfo.bs"], (function (a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        return b("bs_belt_Set").fromArray(a, b("ParticipantId.bs"))
    }

    function g(a, c, d) {
        d = d.participants.filter(function (c) {
            return c !== b("MercuryIDs").getParticipantIDFromUserID(a)
        });
        return d.filter(function (a) {
            return b("bs_belt_Set").has(c, a) !== !1
        })
    }

    function c(a, b, c) {
        if (c.is_canonical) return !1; else return g(a, b, c).length > 0
    }

    function d(a, b, c) {
        if (c.is_canonical) return []; else return g(a, b, c)
    }

    function e(a, c, d) {
        if (!d.is_canonical) return !1;
        d = d.participants.filter(function (c) {
            return b("bs_caml_obj").caml_notequal(c, b("MercuryIDs").getParticipantIDFromUserID(a))
        });
        return !d.every(function (a) {
            return !b("bs_belt_Set").has(c, a)
        })
    }

    var h = b("bs_belt_Set").has;

    function i(a, c, d) {
        if (!a.is_canonical || b("bs_caml_option").nullable_to_opt(a.other_user_fbid) === b("bs_caml_option").some(c)) return !1; else if (!b("CurrentUser").isWorkUser() || d == null) return !0; else if (d == null) return !1; else return !b("WorkForeignEntityInfo.bs").isCoworker(d)
    }

    f.fromIds = a;
    f.findIntersection = g;
    f.isPresentInGroupThread = c;
    f.participantsInGroupThread = d;
    f.qualifiesAs = e;
    f.isInSet = h;
    f.shouldShowBlock = i
}), null);
__d("MercurySyncResnapshot", ["Promise", "Bootloader", "MercurySingletonProvider"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a(a) {
            this.$2 = a
        }

        a.getForFBID = function (a) {
            return g.getForFBID(a)
        };
        a.get = function () {
            return g.get()
        };
        var c = a.prototype;
        c.resnapshot = function () {
            var a = this;
            this.$1 || (this.$1 = new (b("Promise"))(function (c, d) {
                b("Bootloader").loadModules(["MercurySyncDeltaHandler"], function (b) {
                    b.getForFBID(a.$2).emergencyDFF(function (b) {
                        c(b), a.$1 = null
                    }, function () {
                        d(), a.$1 = null
                    })
                }, "MercurySyncResnapshot")
            }));
            return this.$1
        };
        return a
    }();
    e.exports = a;
    var g = new (b("MercurySingletonProvider"))(a)
}), null);
__d("WaterfallMessageLifetimeTypedLogger", ["Banzai", "GeneratedLoggerUtils", "nullthrows"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a() {
            this.$1 = {}
        }

        var c = a.prototype;
        c.log = function (a) {
            b("GeneratedLoggerUtils").log("logger:WaterfallMessageLifetimeLoggerConfig", this.$1, b("Banzai").BASIC, a)
        };
        c.logVital = function (a) {
            b("GeneratedLoggerUtils").log("logger:WaterfallMessageLifetimeLoggerConfig", this.$1, b("Banzai").VITAL, a)
        };
        c.logImmediately = function (a) {
            b("GeneratedLoggerUtils").log("logger:WaterfallMessageLifetimeLoggerConfig", this.$1, {signal: !0}, a)
        };
        c.clear = function () {
            this.$1 = {};
            return this
        };
        c.getData = function () {
            return babelHelpers["extends"]({}, this.$1)
        };
        c.updateData = function (a) {
            this.$1 = babelHelpers["extends"]({}, this.$1, a);
            return this
        };
        c.setAttemptID = function (a) {
            this.$1.attempt_id = a;
            return this
        };
        c.setDestService = function (a) {
            this.$1.dest_service = a;
            return this
        };
        c.setDeviceID = function (a) {
            this.$1.device_id = a;
            return this
        };
        c.setEventType = function (a) {
            this.$1.event_type = a;
            return this
        };
        c.setIsBatch = function (a) {
            this.$1.is_batch = a;
            return this
        };
        c.setIsGroup = function (a) {
            this.$1.is_group = a;
            return this
        };
        c.setMessageID = function (a) {
            this.$1.message_id = a;
            return this
        };
        c.setOfflineThreadingID = function (a) {
            this.$1.offline_threading_id = a;
            return this
        };
        c.setPageID = function (a) {
            this.$1.page_id = a;
            return this
        };
        c.setPushNotifID = function (a) {
            this.$1.push_notif_id = a;
            return this
        };
        c.setReceiptID = function (a) {
            this.$1.receipt_id = a;
            return this
        };
        c.setSenderID = function (a) {
            this.$1.sender_id = a;
            return this
        };
        c.setServiceName = function (a) {
            this.$1.service_name = a;
            return this
        };
        c.setSrcService = function (a) {
            this.$1.src_service = a;
            return this
        };
        c.setThreadID = function (a) {
            this.$1.thread_id = a;
            return this
        };
        c.setTimeStamp = function (a) {
            this.$1.time_stamp = a;
            return this
        };
        c.setTopic = function (a) {
            this.$1.topic = a;
            return this
        };
        c.updateExtraData = function (a) {
            a = b("nullthrows")(b("GeneratedLoggerUtils").serializeMap(a));
            b("GeneratedLoggerUtils").checkExtraDataFieldNames(a, g);
            this.$1 = babelHelpers["extends"]({}, this.$1, a);
            return this
        };
        c.addToExtraData = function (a, b) {
            var c = {};
            c[a] = b;
            return this.updateExtraData(c)
        };
        return a
    }();
    var g = {
        attempt_id: !0,
        dest_service: !0,
        device_id: !0,
        event_type: !0,
        is_batch: !0,
        is_group: !0,
        message_id: !0,
        offline_threading_id: !0,
        page_id: !0,
        push_notif_id: !0,
        receipt_id: !0,
        sender_id: !0,
        service_name: !0,
        src_service: !0,
        thread_id: !0,
        time_stamp: !0,
        topic: !0
    };
    e.exports = a
}), null);
__d("MessageWaterfallLogger", ["MqttEnv", "WaterfallMessageLifetimeTypedLogger"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("MqttEnv").Env, h = b("MqttEnv").MqttGkNames;
    a = {
        logNewMessageToWaterfall: function (a) {
            var c = a.senderID, d = a.receiptID, e = a.messageID, f = a.offlineThreadingID, i = a.threadID,
                j = a.irisSeqId;
            a = a.isGroup;
            if (!g.genGk(h.mqtt_waterfall_log_client_sampling)) return;
            new (b("WaterfallMessageLifetimeTypedLogger"))().setEventType("message_receive_ws").setServiceName("web").setSrcService("mqtt").setDestService("webclient").setSenderID(c).setReceiptID(d).setMessageID(e).setOfflineThreadingID(f).setThreadID(i).setIsGroup(a ? 1 : 0).addToExtraData("sync_seq_id", j).log()
        }
    };
    e.exports = a
}), null);
__d("MessengerMQTTPayloadPreprocessor", [], (function (a, b, c, d, e, f) {
    "use strict";
    f.process = a;

    function a(a, b, c) {
        var d = parseInt(c.irisSeqId.toString(), 10);
        return {seqID: d, obj: {queue: a, iseq: d, delta: c, seqID: d, type: b}}
    }
}), null);
__d("InstantGamesPresenceProperties", [], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        function a() {
            this.$1 = !1
        }

        var b = a.prototype;
        b.addInstantGamePresence = function () {
            this.$1 = !0
        };
        b.removeInstantGamePresence = function () {
            this.$1 = !1
        };
        b.isActiveGamePresence = function () {
            return this.$1
        };
        return a
    }();
    b = new a();
    c = b;
    e.exports = c
}), null);
__d("MessengerMQTTPresenceReporting", ["BanzaiODS", "FBMqttChannel", "InstantGamesPresenceProperties", "MercuryConfig", "gkx"], (function (a, b, c, d, e, f) {
    "use strict";
    f.init = a;
    f.reportForegroundState = c;
    f.reportChatVisibility = d;
    f.reportWorkchatDesktopCapability = r;
    f.reportInstantGamesPresence = s;
    f.onUserActivity = t;
    var g = "mqtt_web.presence", h = "/foreground_state", i = "/set_client_settings", j = "/send_endpoint_capabilities",
        k = 16384, l = 2097152, m = b("MercuryConfig").idle_limit || 18e5;
    a = b("MercuryConfig").idle_poll_interval || 3e5;
    c = 60 * 1e3;
    var n = b("gkx")("1166607") ? !1 : document.hasFocus(), o, p = Date.now(), q = !1;

    function a() {
    }

    function c(a, c) {
        (n !== a || c) && (n = a, b("FBMqttChannel").setForegroundState(a), b("FBMqttChannel").publish(h, JSON.stringify({foreground: a})), b("BanzaiODS").bumpEntityKey(2966, g, a ? "report.foregrounded" : "report.backgrounded"))
    }

    function d(a) {
        (o === void 0 || o != a) && (o = a, b("FBMqttChannel").setChatVisibility(a), b("FBMqttChannel").publish(i, JSON.stringify({make_user_available_when_in_foreground: a})), b("BanzaiODS").bumpEntityKey(2966, g, a ? "report.chat_visibility.on" : "report.chat_visibility.off"))
    }

    function r() {
        var a = b("FBMqttChannel").getEndpointCapabilities();
        a |= k;
        b("FBMqttChannel").setEndpointCapabilities(a);
        b("FBMqttChannel").publish(j, JSON.stringify({endpoint_capabilities: a}))
    }

    function s(a) {
        var c = b("FBMqttChannel").getEndpointCapabilities();
        a ? c |= l : c &= ~l;
        b("FBMqttChannel").setEndpointCapabilities(c);
        b("FBMqttChannel").publish(j, JSON.stringify({endpoint_capabilities: c}))
    }

    function t() {
        p = Date.now(), e.exports.reportForegroundState(!0, !1)
    }

    window.setInterval(function () {
        !document.hasFocus() && Date.now() - p > m && e.exports.reportForegroundState(!1, !0)
    }, a);
    window.setInterval(function () {
        var a = b("InstantGamesPresenceProperties").isActiveGamePresence();
        q !== a && (e.exports.reportInstantGamesPresence(a), q = a)
    }, c)
}), null);
__d("MessengerMQTTPresenceActivity", ["CurrentUser", "Event", "MessengerMQTTPresenceReporting", "Run", "UserActivity"], (function (a, b, c, d, e, f) {
    f.init = a;

    function a() {
        b("Event").listen(window, "focus", function () {
            b("MessengerMQTTPresenceReporting").onUserActivity()
        }), b("Event").listen(window, "blur", function () {
            b("MessengerMQTTPresenceReporting").reportForegroundState(!1, !1)
        }), b("Run").onBeforeUnload(function () {
            b("MessengerMQTTPresenceReporting").reportForegroundState(!1, !0)
        }, !1), b("UserActivity").subscribe(function () {
            b("MessengerMQTTPresenceReporting").onUserActivity()
        }), b("CurrentUser").isWorkUser() && d(["WorkplaceChatHelper"], function (a) {
            a.isDesktopChatApp() && b("MessengerMQTTPresenceReporting").reportWorkchatDesktopCapability()
        })
    }
}), null);
__d("MessengerMQTTTypingDataPreProcessor", [], (function (a, b, c, d, e, f) {
    "use strict";
    f.process = a;

    function a(a, b) {
        var c = b.thread;
        a = c == null ? {from: b.sender_fbid, st: b.state, to: a, type: "typ"} : {
            from: b.sender_fbid,
            st: b.state,
            thread: c,
            thread_fbid: c,
            type: "ttyp"
        };
        return {obj: a}
    }
}), null);
__d("SyncProtocolConstants", [], (function (a, b, c, d, e, f) {
    a = "IRIS_CURSOR_LIMIT";
    f.IRIS_CURSOR_LIMIT = a;
    b = "SNAPSHOT_FAILURE";
    f.SNAPSHOT_FAILURE = b
}), null);
__d("SyncProtocolClient", ["Int64", "MercurySingletonProvider", "MqttEnv", "SyncProtocolConstants", "exponentialBackoff"], (function (a, b, c, d, e, f) {
    "use strict";
    var g = b("MqttEnv").Env;
    a = function () {
        a.getForFBID = function (a) {
            return h.getForFBID(a)
        };

        function a(a) {
            var c = this;
            this.$1 = a;
            this.$2 = [];
            this.$5 = g.getLoggerInstance();
            this.$10 = new (b("exponentialBackoff"))(function () {
                return c.$11()
            }, this)
        }

        var c = a.prototype;
        c.getPublishMessages = function () {
            return this.$12()
        };
        c.init = function (a, c, d, e) {
            var f = this;
            if (!c && !e) {
                this.$5.bumpCounter("sp_init_invalid_parameter");
                return this
            }
            this.$9 = a;
            this.$8 = !0;
            this.$3 = c ? b("Int64").fromString(c) : null;
            this.$6 = d;
            this.$7 = e;
            this.$4 = null;
            this.$9.subscribe("/t_ms", function (a) {
                return f.$13(a)
            });
            this.$9.subscribe("/thread_typing", function (a) {
                f.$14(a)
            });
            this.$9.subscribe("/orca_typing_notifications", function (a) {
                f.$14(a)
            });
            this.$9.subscribe("/notify_disconnect", function (a) {
                return f.$15(a)
            });
            this.connectToIris();
            return this
        };
        c.connectToIris = function (a) {
            a === void 0 && (a = null), a !== null && (this.$3 = b("Int64").fromString(a)), this.$8 = !0, this.$9.registerExtraConnectPayloadProvider(this)
        };
        c.$12 = function () {
            var a;
            if (this.$4) {
                if (!this.$3) {
                    this.$5.bumpCounter("connect_payload_iris_no_seq_id");
                    return []
                }
                a = this.$16()
            } else a = this.$17();
            this.$5.debugTrace("Sending request with MQTT Connect", JSON.stringify({
                topic: a.topic,
                payload: a.payload
            }));
            return [a]
        };
        c.$11 = function () {
            var a;
            if (this.$4) {
                if (!this.$3) {
                    this.$5.bumpCounter("subscribe_to_iris_no_seq_id");
                    return
                }
                a = this.$16()
            } else a = this.$17();
            this.$5.debugTrace("Sending request", JSON.stringify({topic: a.topic, payload: a.payload}));
            this.$9.publish(a.topic, a.payload, {qos: 1, skipBuffer: !0})
        };
        c.$18 = function (a) {
            var b = null;
            try {
                b = JSON.parse(a)
            } catch (a) {
                this.$5.logError(a, "Unable to process data")
            }
            return b
        };
        c.$14 = function (a) {
            var b = this.$18(a);
            if (b == null) {
                this.$5.logWarn("_processTypingData", "Unable to process typing data");
                return
            }
            this.$2.forEach(function (a) {
                typeof a.onTypingReceived === "function" && a.onTypingReceived(b)
            })
        };
        c.addDeltaStreamListener = function (a) {
            this.$2.push(a)
        };
        c.$15 = function (a) {
            this.$5.logWarn("_handleNotifyDisconnect", "Disconnecting reason: " + a), this.$5.bumpCounter("notify_disconnect_" + a), a === b("SyncProtocolConstants").IRIS_CURSOR_LIMIT && this.$19(a)
        };
        c.$19 = function (a) {
            this.$5.bumpCounter(a + "_request"), this.$4 = null, this.$8 = !1, this.$9.unregisterExtraConnectPayloadProvider(this), this.$2.forEach(function (b) {
                return b.onStreamDisconnect(a)
            })
        };
        c.$13 = function (a) {
            a = this.$18(a);
            if (a == null) {
                this.$5.logWarn("_processDeltas", "Unable to process delta");
                return
            }
            var b = {
                syncToken: a.syncToken,
                entityId: a.queueEntityId,
                errorCode: a.errorCode,
                firstSeqId: a.firstDeltaSeqId,
                lastSeqId: a.lastIssuedSeqId
            };
            this.$5.debugTrace("Sync data received", JSON.stringify(b));
            b = this.$1;
            a.queueEntityId != null && a.queueEntityId != b ? this.$5.bumpCounter("delta_for_other_fbid") : a.syncToken ? this.$20(a) : a.queueEntityId == null ? this.$5.bumpCounter("no_fbid") : a.errorCode ? this.$21(a.errorCode) : this.$22(a)
        };
        c.$21 = function (a) {
            this.$5.bumpCounter("iris_queue_error." + a), this.$5.logWarn("_handleIrisError", "Recevied an error code from sync protocol " + a), a === "ERROR_QUEUE_TEMPORARY_NOT_AVAILABLE" ? this.$10() : this.$19(a)
        };
        c.$20 = function (a) {
            var c = this, d = b("Int64").fromString(a.firstDeltaSeqId.toString());
            (this.$3 === null || this.$3 != null && !this.$3.equals(d)) && this.$5.bumpCounter("initial_sequence_id_mismatch");
            this.$4 = a.syncToken;
            this.$3 = d;
            this.$5.debugTrace("Sync token received", JSON.stringify({token: this.$4}));
            this.$9.subscribeChannelEvents({
                onMQTTStateChanged: function (a) {
                    a === "Connected" && c.$10.reset()
                }
            })
        };
        c.$22 = function (a) {
            var c = a.deltas, d = this.$3;
            if (c && d) {
                var e = b("Int64").fromString(a.firstDeltaSeqId.toString());
                a = b("Int64").fromString(a.lastIssuedSeqId.toString());
                e.equals(d.add(b("Int64").ONE)) ? this.$23(e, a, c) : e.compare(d) < 0 ? (this.$5.bumpCounter("delta_batch_in_middle"), a.compare(d) > 0 && this.$23(d.add(b("Int64").ONE), a, c)) : (this.$5.bumpCounter("missing_deltas_get_diffs"), this.$11())
            } else this.$5.bumpCounter("process_deltas_invalid_state")
        };
        c.$23 = function (a, c, d) {
            a = a;
            for (var e = 0; e < d.length; e++) {
                var f = d[e], g = f["class"] || "Missing", h = {seqId: a.toString(), type: g, status: ""}, i = 1;
                if (g != "Missing") try {
                    i = this.$24(f, g, a, h)
                } catch (a) {
                    h.status = "err:" + a.message
                } else h.status = "no type", this.$5.bumpCounter("missing_delta_type");
                this.$5.debugTrace("onDeltaReceived", JSON.stringify(h));
                a = a.add(b("Int64").fromInt(i))
            }
            this.$3 = c
        };
        c.$24 = function (a, c, d, e) {
            var f = 1, g = "";
            c === "NoOp" && (f = a.numNoOps || f, g += "n:" + f);
            a.irisSeqId || (a.irisSeqId = d.toString(), g += "missing seq id");
            var h = b("Int64").fromString(a.irisSeqId.toString()) || d;
            h.equals(d) ? g += " seqId match" : (g += " seqId mismatch", this.$5.bumpCounter("seq_id_running_id_mismatch"));
            var i = {type: c, payload: a};
            this.$2.forEach(function (a) {
                return a.onDeltaReceived(i)
            });
            e.status = g;
            return f
        };
        c.$17 = function () {
            var a = {
                sync_api_version: 10,
                max_deltas_able_to_process: 1e3,
                delta_batch_size: 500,
                encoding: "JSON",
                entity_fbid: this.$1,
                initial_titan_sequence_id: this.$3 && this.$3.toString(),
                device_params: this.$6,
                queue_position: this.$7
            };
            return {topic: "/messenger_sync_create_queue", payload: JSON.stringify(a), qos: 1}
        };
        c.$16 = function () {
            var a = {
                sync_token: this.$4,
                sync_api_version: 10,
                max_deltas_able_to_process: 1e3,
                delta_batch_size: 500,
                encoding: "JSON",
                entity_fbid: this.$1,
                last_seq_id: this.$3 && this.$3.toString()
            };
            return {topic: "/messenger_sync_get_diffs", payload: JSON.stringify(a), qos: 1}
        };
        return a
    }();
    var h = new (b("MercurySingletonProvider"))(a);
    e.exports = a
}), null);
__d("MessengerMQTTConnection", ["Arbiter", "CurrentUser", "FBMqttChannel", "MercurySingletonProvider", "MercurySyncResnapshot", "MessageWaterfallLogger", "MessengerMQTTConnectionEvents", "MessengerMQTTPayloadPreprocessor", "MessengerMQTTTypingDataPreProcessor", "MqttLogger", "PresenceStatus", "SyncProtocolClient", "SyncProtocolConstants", "promiseDone", "requireCond", "cr:1177633"], (function (a, b, c, d, e, f) {
    "use strict";
    a = function () {
        a.getForFBID = function (a) {
            return g.getForFBID(a)
        };
        a.get = function () {
            return g.get()
        };

        function a(a) {
            this.$1 = a, this.$2 = b("MqttLogger").getInstance()
        }

        a.setUp = function (c) {
            var e = c.fbid, f = c.irisSeqID;
            c.appID;
            c.endpoint;
            if (!e || !f) return;
            var g = b("MqttLogger").getInstance();
            if (!b("CurrentUser").isLoggedInNow()) {
                g.debugTrace("run", "User not logged in");
                g.bumpCounter("user_not_loggged_in");
                return
            }
            var h = a.getForFBID(e);
            a.addDeltaStream({fbid: e, irisSeqID: f});
            h.$3(b("FBMqttChannel").getConnectionState(), b("FBMqttChannel").getLongPollingStatus());
            b("FBMqttChannel").subscribeChannelEvents({
                onMQTTStateChanged: function (a) {
                    h.$3(a, b("FBMqttChannel").getLongPollingStatus())
                }, onJSError: function (a) {
                    g.bumpCounter("mqtt_js_error")
                }
            });
            b("cr:1177633") != null && b("cr:1177633").subscribe(b("PresenceStatus"));
            d(["MessengerMQTTPresenceActivity"], function (a) {
                a.init()
            })
        };
        a.addDeltaStream = function (c) {
            var d = c.fbid;
            c = c.irisSeqID;
            var e = a.getForFBID(d), f = null;
            b("SyncProtocolClient").getForFBID(d).init(b("FBMqttChannel"), c, f).addDeltaStreamListener(e)
        };
        var c = a.prototype;
        c.onDeltaReceived = function (a) {
            var c = a.type;
            a = a.payload;
            try {
                c == "NewMessage" && b("MessageWaterfallLogger").logNewMessageToWaterfall({
                    senderID: a.messageMetadata.actorFbId,
                    receiptID: this.$1,
                    messageID: a.messageMetadata.messageId,
                    offlineThreadingID: a.messageMetadata.offlineThreadingId,
                    threadID: a.messageMetadata.threadKey.threadFbId != null ? a.messageMetadata.threadKey.threadFbId : "",
                    irisSeqId: a.irisSeqId,
                    isGroup: a.messageMetadata.threadKey.threadFbId != null
                })
            } catch (a) {
                this.$2.logError(a, "Unable to log to waterfall")
            }
            c = b("MessengerMQTTPayloadPreprocessor").process(this.$1, c, a);
            b("Arbiter").inform(b("MessengerMQTTConnectionEvents").DELTA_EVENT, c)
        };
        c.onStreamDisconnect = function (a) {
            var c = this;
            if (a === "ERROR_QUEUE_LOST" || a === "ERROR_QUEUE_NOT_FOUND" || a === "ERROR_QUEUE_EXCEEDS_MAX_DELTAS" || a === "ERROR_QUEUE_UNDERFLOW" || a === "ERROR_QUEUE_OVERFLOW") {
                b("promiseDone")(b("MercurySyncResnapshot").getForFBID(this.$1).resnapshot().then(function (a) {
                    if (a) b("SyncProtocolClient").getForFBID(c.$1).connectToIris(a.toString()); else throw new Error("No seqID returned from resnapshot")
                }), null, function () {
                    b("Arbiter").inform(b("MessengerMQTTConnectionEvents").STREAM_DISCONNECT, b("SyncProtocolConstants").SNAPSHOT_FAILURE)
                });
                return
            }
            a !== b("SyncProtocolConstants").IRIS_CURSOR_LIMIT && this.$2.bumpCounter("unhandled_iris_error." + a);
            b("Arbiter").inform(b("MessengerMQTTConnectionEvents").STREAM_DISCONNECT, a)
        };
        c.onTypingReceived = function (a) {
            a = b("MessengerMQTTTypingDataPreProcessor").process(this.$1, a);
            b("Arbiter").inform(b("MessengerMQTTConnectionEvents").TYP, a)
        };
        c.$3 = function (a, c) {
            if (a == "Connected" || c == "LPActive") {
                b("Arbiter").inform(b("MessengerMQTTConnectionEvents").STREAM_CONNECT);
                return
            }
            switch (a) {
                case b("MessengerMQTTConnectionEvents").STATE_CONNECTING:
                    b("Arbiter").inform(b("MessengerMQTTConnectionEvents").STREAM_CONNECTING);
                    break;
                case b("MessengerMQTTConnectionEvents").STATE_DISCONNECTED:
                    b("Arbiter").inform(b("MessengerMQTTConnectionEvents").STREAM_DISCONNECT);
                    break
            }
        };
        return a
    }();
    e.exports = a;
    var g = new (b("MercurySingletonProvider"))(a)
}), null);
__d("MessengerMQTTPresence", ["BanzaiODS", "FBMqttChannel"], (function (a, b, c, d, e, f) {
    "use strict";
    f.subscribe = a;
    f.unsubscribe = c;
    f.sendAdditionalBuddyRequest = d;
    var g = "/orca_presence", h = "mqtt_web.presence", i = "/send_additional_contacts", j = !1;

    function a(a) {
        if (j) return;
        j = !0;
        b("FBMqttChannel").subscribe(g, function (c) {
            c = JSON.parse(c);
            c && c.list && (c.list_type && c.list_type === "full" && a.reset(), a.setMultiFromMQTT(c.list), b("BanzaiODS").bumpEntityKey(3303, h, "buddylist.event"), b("BanzaiODS").bumpEntityKey(3303, h, "buddylist.active_buddies", c.list.length))
        })
    }

    function c() {
        j = !1, b("FBMqttChannel").unsubscribeAll(g)
    }

    function d(a) {
        b("FBMqttChannel").publish(i, JSON.stringify({additional_contacts: [a]}))
    }
}), null);
__d("QuickLogActionType", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        START: 1,
        SUCCESS: 2,
        FAIL: 3,
        CANCEL: 4,
        DRAW_COMPLETE: 5,
        ON_RESUME: 6,
        ACTIVITY_CREATED: 7,
        CONSISTENCY_MODEL_UPDATER: 8,
        SEND_MESSAGE: 9,
        SUCCESS_COLD: 10,
        SUCCESS_WARM: 11,
        UI_IDLE: 12,
        PHASE_ONE: 13,
        PHASE_TWO: 14,
        DEQUEUE: 15,
        NETWORK_COMPLETE: 16,
        MEMORY_CACHE_VISIT: 17,
        DISK_CACHE_VISIT: 18,
        CONSISTENCY_UPDATE: 19,
        RETURN_TO_CALLER: 20,
        PHOTO_UPLOAD_COMPLETE: 21,
        USER_NAVIGATION_CANCELLATION: 22,
        DB_FETCH: 23,
        SERVER_FETCH: 24,
        SUCCESS_CACHE: 25,
        SUCCESS_DB: 26,
        SUCCESS_NETWORK: 27,
        SUCCESS_LOCAL_UNSPECIFIED: 28,
        CACHE_UPDATED: 29,
        DB_UPDATED: 30,
        DATA_RECEIVED: 31,
        DRAW_VIEW: 32,
        DATA_EMPTY: 33,
        CACHE_FETCH: 34,
        PREPARE_BEGIN: 35,
        PREPARE_END: 36,
        ASYNC_BEGIN: 37,
        ASYNC_END: 38,
        REMOVE_BEGIN: 39,
        REMOVE_END: 40,
        BROADCAST_DONE: 41,
        ON_RESUME_END: 42,
        ON_ATTACH_END: 43,
        ON_FRAGMENT_CREATE_END: 44,
        ON_CREATE_VIEW_END: 45,
        ON_ACTIVITY_CREATED_END: 46,
        ON_START_END: 47,
        QUEUED: 48,
        IN_PROGRESS: 49,
        INIT: 50,
        UNKNOWN: 51,
        RETRY_AFTER_FAILURE: 52,
        RETRY_AFTER_RECONNECT: 53,
        QUEUEING_BEGIN: 54,
        QUEUEING_SUCCESS: 55,
        QUEUEING_FAIL: 56,
        MESSAGE_UPDATE_START: 57,
        MESSAGE_UPDATE_END: 58,
        PHOTO_CAPTURED: 59,
        MEDIA_PREVIEW_VISIBLE: 60,
        COUNTER: 61,
        INTERACTION_LOAD_TIMELINE_HEADER: 62,
        INTERACTION_LOAD_EVENT_PERMALINK: 63,
        INTERACTION_LOAD_GROUPS_FEED: 64,
        INTERACTION_LOAD_PAGE_HEADER: 65,
        INTERACTION_LOAD_PAGE_HEADER_ADMIN: 66,
        INTERACTION_LOAD_PERMALINK: 67,
        INTERACTION_OPEN_COMPOSER: 68,
        INTERACTION_OPEN_MEDIA_PICKER: 69,
        INTERACTION_OPEN_PHOTO_GALLERY: 70,
        INTERACTION_OPEN_CHECK_IN: 71,
        INTERACTION_LOAD_WEB_VIEW: 72,
        INTENT_MAPPED: 73,
        ACTIVITY_LAUNCHED: 74,
        ACTIVITY_PAUSED: 75,
        ACTIVITY_STARTED: 76,
        ACTIVITY_RESUMED: 77,
        FRAGMENT_CREATED: 78,
        FRAGMENT_RESUMED: 79,
        ACTIVITY_ON_CREATE: 80,
        INTENT_MAPPING_BEGIN: 81,
        FRAGMENT_ON_CREATE: 82,
        FRAGMENT_NEW_INSTANCE: 83,
        MARKER_SWAPPED: 84,
        FRAGMENT_INSTANCE_CREATED: 85,
        PREV_ACTIVITY_PAUSED: 86,
        ERROR: 87,
        METHOD_INVOKE: 88,
        FINALLY: 89,
        PHOTO_DOWNLOAD_COMPLETE: 90,
        MINIPREVIEW_COMPLETE: 91,
        SEARCH_TYPEAHEAD: 92,
        ANIMATION_END: 93,
        UDP_REQUEST_SEND: 94,
        MAIN_COMPLETE: 95,
        INTERRUPTED: 96,
        NETWORK_FAILED: 97,
        NETWORK_RESPONSE: 98,
        EDGE_PROCESSING_BEGIN: 99,
        NEWSFEED_PROCESS_RESPONSE: 100,
        ON_VIEW_CREATED_END: 101,
        DATA_LOAD_START: 102,
        LEGACY_MARKER: 103,
        ACTION_BAR_COMPLETE: 104,
        ABORTED: 105,
        QUERY_READY: 106,
        RTMP_PACKET_RECEIVED: 107,
        REQUESTED_PLAYING: 108,
        RTMP_CONNECTION_REQUESTED: 109,
        RTMP_CONNECTION_RELEASE: 110,
        NEW_START_FOUND: 111,
        MISSED_EVENT: 112,
        TIMEOUT: 113,
        CONTROLLER_INITIATED: 114,
        RTMP_STREAM_PREPARED: 115,
        VIDEO_PLAYING: 116,
        RTMP_CONNECTION_CONNECTED: 117,
        RTMP_CONNECTION_FAILED: 118,
        RTMP_CONNECTION_INTERCEPTED: 119,
        VIDEO_SET_RENDERER_CONTEXT: 120,
        HEADER_DATA_LOADED: 121,
        CARD_DATA_LOADED: 122,
        VIEW_WILL_APPEAR_BEGIN: 123,
        VIEW_DID_LOAD_BEGIN: 124,
        COMPONENTS_DATA_SOURCE_WILL_BEGIN_UPDATES: 125,
        COMPONENTS_DATA_SOURCE_DID_END_UPDATES: 126,
        LOAD_VIEW_BEGIN: 127,
        RTMP_FIRST_KEY_FRAME_RECEIVED: 128,
        MESSENGER_QUEUE_CREATION: 129,
        APP_DID_FINISH_LAUNCHING: 130,
        APP_DID_BECOME_ACTIVE: 131,
        APP_WILL_ENTER_FOREGROUND: 132,
        APP_DID_ENTER_BACKGROUND: 133,
        APP_MAIN: 134,
        MQTT_CONNECTING: 135,
        MQTT_CONNECTED: 136,
        MQTT_DISCONNECTED: 137,
        MESSENGER_DELTA_REQUEST: 138,
        APP_FIRST_VIEW_CONTROLLER: 139,
        MESSENGER_THREAD_LIST_LOADED: 140,
        MESSENGER_THREAD_LIST_DISPLAYED: 141,
        PREV_ACTIVITY_PAUSE: 142,
        ACTIVITY_RESUME: 143,
        ACTIVITY_START: 144,
        BEGIN_START_ACTIVITY: 145,
        END_START_ACTIVITY: 146,
        FILE_SYSTEM_FAIL: 147,
        FORMAT_ERROR: 148,
        PRIVACY_VIOLATION: 149,
        NETWORK_RESPONSE_INITIAL_SCAN: 150,
        POPULATE_CONSISTENCY_MEMORY_CACHE: 151,
        APPLY_OPTIMISTICS: 152,
        APPLY_FINISHED_LIST: 153,
        APPLY_FINISHED_LIST_AGAIN: 154,
        FUTURE_LISTENERS_COMPLETE: 155,
        SERVICE_ON_START_COMMAND: 156,
        WAIT_FOR_BLOCKERS: 157,
        NOTIFY_SUBSCRIBERS: 158,
        FAIL_FILE_TOO_LARGE: 159,
        OFFLINE: 160,
        ASNYC_FAILED: 161,
        ASYNC_FAIL: 162,
        ON_ATTACH_FRAGMENT: 163,
        VIEW_DID_APPEAR_BEGIN: 164,
        DISPLAYED: 165,
        DISPLAYED_ON_SCREEN: 166,
        ASYNC_ACTION_SUCCESS: 167,
        ASYNC_ACTION_FAIL: 168,
        CONNECTIVITY_CHANGED: 169,
        VIDEO_DISPLAYED: 170,
        VIDEO_REQUESTED_PLAYING: 171,
        LOADED_AUDIO_SESSION: 172,
        LOADED_CAMERA_SESSION: 173,
        SUCCESS_OPTIMISTIC: 174,
        OUT_OF_ORDER: 175,
        NOT_READY: 176,
        JSON_PARSE: 177,
        FILE_NOT_FOUND: 178,
        METABOX_COMPLETE: 179,
        CALL_TO_ACTION_COMPLETE: 180,
        HEADER_DRAW_COMPLETE: 181,
        COVER_PHOTO_COMPLETE: 182,
        COMPONENT_WILL_CREATE: 183,
        COMPONENT_DID_CREATE: 184,
        COMPONENT_WILL_LAYOUT: 185,
        COMPONENT_DID_LAYOUT: 186,
        COMPONENT_WILL_MOUNT: 187,
        COMPONENT_DID_MOUNT: 188,
        PRECALCULATE_EDGES: 189,
        UI_THREAD_DEQUEUE: 190,
        CALLBACKS_COMPLETE: 191,
        CALLBACKS_DISPATCHED: 192,
        NETWORK_PARSE_COMPLETE: 193,
        START_LOADING_JS_BUNDLE: 194,
        FINISH_LOADING_JS_BUNDLE: 195,
        START_EXECUTING_JS_BUNDLE: 196,
        FINISH_EXECUTING_JS_BUNDLE: 197,
        START_CALLING_JS_FUNCTION: 198,
        FINISH_CALLING_JS_FUNCTION: 199,
        CREATED_MODEL_FILE: 200,
        DB_SUPPLIER_GET: 201,
        BEGIN_TRANSACTION: 202,
        FILE_FLUSHED: 203,
        OPTIMISTIC_UPDATES_APPLIED: 204,
        FRAGMENT_VISIBLE: 205,
        STALE: 206,
        SUCCESS_GET_MODEL: 207,
        FAIL_GET_MODEL: 208,
        ALREADY_SEEN: 209,
        UNKNOWN_SEEN_STATE: 210,
        CREATED_INTENT: 211,
        INVALID_INTENT: 212,
        SHOW_NOTIFICATION: 213,
        SUCCESS_FETCH_IMAGE: 214,
        FAIL_FETCH_IMAGE: 215,
        DROPPED: 216,
        QUERY_CHUNKS: 217,
        QUERY_ROWS: 218,
        COMPUTE_CHUNKS: 219,
        SCROLL_COMPLETE: 220,
        USE_INSTANCE_STATE: 221,
        USE_ARGUMENTS: 222,
        OFFSCREEN: 223,
        LOG_READ: 224,
        LOG_COMPACTED: 225,
        LOG_WRITER_OPENED: 226,
        TAB_SWITCH: 227,
        EXIT_VIEW_CONTROLLER: 228,
        TAGS_PREPARED: 229,
        VIEW_DID_APPEAR: 230,
        MEDIA_TOO_SMALL: 231,
        ITEM_SELECTED: 232,
        REPOSITIONED: 233,
        PHOTO_UPLOAD_START: 234,
        MEDIA_EDIT: 235,
        MEDIA_EDIT_COMPLETE: 236,
        VIDEO_PAUSE: 237,
        VIDEO_COMPLETE: 238,
        VIDEO_PLAYING_TIMEOUT: 239,
        VIDEO_PLAYING_QPL_TIMEOUT: 240,
        SESSION_OPEN: 241,
        SCHEMA_HASH_MISMATCH: 242,
        OVERRIDES_EXIST: 243,
        DI_DONE: 244,
        FLATBUFFER_SCHEMA_ABSENT: 245,
        SUCCESS_NONEXISTENCE: 246,
        VIDEO_CANCELLED: 247,
        MESSENGER_QUEUE_CREATION_FAILURE: 248,
        MESSENGER_DELTA_REQUEST_FAILURE: 249,
        RETURN_EXCEPTION_TO_CALLER: 250,
        SURFACE_TEXTURE_AVAILABLE: 251,
        NEWS_FEED_FRAGMENT: 252,
        HEADER_CACHE_FETCH_STARTED: 253,
        CHANGESET_ENQUEUED: 258,
        RTC_BROADCAST_INITIALIZED: 259,
        RTC_STREAMING_INITIALIZED: 260,
        RTC_STREAMING_STARTED: 261,
        CAMERA_VIDEO_OUTPUT_SWITCHED: 262,
        RTMP_STREAM_STOPPED: 263,
        LOCATION_FETCH_BEGIN: 264,
        LOCATION_FETCH_SUCCESS: 265,
        LOCATION_FETCH_FAILED: 266,
        FIRST_UPDATE_SUCCESS: 267,
        FIRST_UPDATE_FAILURE: 268,
        RTMP_STREAMING_HANDLED_FRAME: 269,
        RTMP_DVR_HANDLED_FRAME: 274,
        LIVE_RTMP_STREAMING_HANDLED_FRAME: 275,
        LIVE_RTMP_DVR_HANDLED_FRAME: 276,
        PASS_QE_CHECK: 277,
        PASS_AD_CHECK: 278,
        PASS_SAMPLE_RATE_CHECK: 279,
        HAS_VALID_HTML: 280,
        FOUND_IMAGES: 281,
        TIGON_REQUEST_BEGIN: 282,
        TIGON_REQUEST_END: 283,
        TIGON_RESPONSE_BEGIN: 284,
        TIGON_RESPONSE_END: 285,
        TIGON_PARSE_BEGIN: 286,
        TIGON_PARSE_END: 287,
        GRAPHQL_CACHE_FETCH_START: 288,
        GRAPHQL_CACHE_FETCH_END: 289,
        VIDEO_START_STALL: 290,
        VIDEO_END_STALL: 291,
        MERGE_LOCAL_FIELDS: 292,
        LOAD_QUERY_STRING: 293,
        CONFIG_TABLE_SCHEMA_HASH_MISMATCH: 294,
        CONFIG_TABLE_SCHEMA_ABSENT: 295,
        CONFIG_TABLE_MAGIC_MISMATCH: 296,
        OBJSEL_FETCH: 297,
        GO_TO_AD_ACTIVITY: 298,
        SAVE_AD: 299,
        UNSAVE_AD: 300,
        SAVE_MODE: 301,
        GO_AD_ACTIVITY_MODE: 302,
        ACCESSIBILITY_ACTIVATE: 303,
        ACCESSIBILITY_CUSTOM: 304,
        ACCESSIBILITY_MAGIC_TAP: 305,
        FINAL_IMAGE_SET: 306,
        INTERMEDIATE_IMAGE_SET: 307,
        INTERMEDIATE_IMAGE_FAIL: 308,
        INTERMEDIATE_IMAGE_GOOD_ENOUGH_SET: 309,
        APP_BACKGROUND: 310,
        APP_FOREGROUND: 311,
        RECEIVED_HARDWARE_FRAME: 312,
        CAMERA_COMPONENT_MOUNTED: 313,
        MQTT_CONNECTION_ATTEMPTED: 314,
        DELTA_APPLICATION_COMPLETED: 325,
        DELTAS_RECEIVED_AFTER_CONNECT: 326,
        MESSENGER_DAY_UNIT_DISPLAYED: 327,
        DATA_LOAD_END: 328,
        VIEW_DID_BECOME_VISIBLE: 329,
        DELTA_APPLICATION_INTERRUPTED: 330,
        DELTA_BATCH_APPLICATION_COMPLETED: 331,
        MESSAGE_LIST_DID_UPDATE: 332,
        MESSAGE_LIST_WILL_UPDATE: 333,
        SUCCESS_ZERO_WAIT_TIME: 334,
        USER_SCROLLED: 335,
        SPINNER_APPEARED: 336,
        MODEL_ENQUEUED: 337,
        VIEW_MODEL_APPLIED: 338,
        PRESENTED: 339,
        VIEW_DID_BECOME_VISIBLE_END: 340,
        MESSENGER_DELTA_REQUEST_INIT: 341,
        FEED_REQUEST_STARTED: 342,
        FEED_REQUEST_FAILED: 343,
        FEED_REQUEST_SUCCEEDED: 344,
        FEED_LOAD_FROM_DISK_FINISHED: 345,
        STORIES_REQUEST_STARTED: 346,
        STORIES_REQUEST_FAILED: 392,
        STORIES_REQUEST_SUCCEEDED: 393,
        STORIES_LOAD_FROM_DISK_FINISHED: 394,
        USER_INFO_LOADED: 395,
        APP_CREATED: 396,
        INIT_TO_USABLE: 397,
        INIT_TO_NETWORK_CONTENT: 398,
        TOTAL: 399,
        HEAD: 400,
        TAIL: 401,
        INITIAL: 402,
        OTHER: 403,
        ANR_START_DATA_CAPTURE: 404,
        ANR_ENQUEUE: 405,
        NOTIF_NOT_ALERTED: 406,
        NOTIF_DUPLICATE: 407,
        NOTIF_MUTED: 408,
        NOTIF_BUZZED: 409,
        FEED_RESPONSE_PROCESSED: 410,
        STORIES_RESPONSE_PROCESSED: 411,
        APP_DID_FINISH_LAUNCHING_ENDED: 412,
        ASYNC_BEGIN_DB: 413,
        DELTA_APPLICATION_STARTED: 414,
        ASYNC_SUCCESS_DB: 415,
        ASYNC_FAIL_DB: 416,
        ASYNC_BEGIN_SERVER: 417,
        ASYNC_SUCCESS_SERVER: 418,
        ASYNC_FAIL_SERVER: 419,
        LEAVE: 420,
        ASYNC_SUCCESS_DB_NO_DATA: 429,
        ASYNC_FAIL_SERVER_NO_DATA: 430,
        SUCCESS_MEMORY: 431,
        SUCCESS_SERVER: 432,
        FAIL_NO_DATA: 433,
        ACTIVITY_NEW_INTENT: 434,
        GRID_MEDIA_LOADED: 435,
        STORY_TRAY_MEDIA_LOADED: 436,
        INTERACTION_OPEN_QRCODE_SCANNER: 437,
        MEDIA_LOAD_CACHE: 438,
        MEDIA_LOAD_NETWORK: 439,
        COMMENTS_LOAD_START: 440,
        COMMENTS_LOAD_COMPLETE: 441,
        MEDIA_LOAD_START: 442,
        SCROLL_START: 443,
        QRCODE_SCANNER_SCAN_SUCCESS: 444,
        QRCODE_SCANNER_SCAN_FAILURE: 445,
        APP_CREATED_MAIN_PROCESS: 446,
        FINISH_REGISTERING_JS_NATIVE_MODULES: 447,
        NON_ANR: 448,
        FINISH_INITIALIZING_JS_BRIDGE: 449,
        FINISH_INJECTING_JS_HOOKS: 450,
        FINISH_RUNNING_JS_INITIALIZER: 451,
        UI_RESPONSIVE: 452,
        PHASE_ONE_COMPLETE: 453,
        PHASE_TWO_COMPLETE: 454,
        LS_HEADER_START: 455,
        LS_HEADER_LOAD: 456,
        LS_BODY_START: 457,
        LS_BODY_LOAD: 458,
        APP_ONCREATE: 459,
        START_FETCH_IMAGE: 460,
        LOGGED_OUT: 461,
        LS_HEADER_LAYOUT_SUCCESS: 462,
        STARTED_CAPTURE_SESSION: 463,
        CAMERA_VIEW_READY: 464,
        CAMERA_FIRST_FRAME: 465,
        PHOTO_BITMAP_READY: 466,
        END: 467,
        FRAME_RENDERED: 468,
        LS_MAP_LIST_START: 469,
        LS_MAP_LIST_LOADED: 470,
        LS_MAP_LIST_SUCCESS: 471,
        FETCH_THREAD_STARTED: 472,
        FETCH_THREAD_SUCCEEDED: 473,
        FETCH_THREAD_FAILED: 474,
        STRUCTURE_FETCH_COMPLETE: 475,
        FOLLOWED_SHOWS_FETCHED: 476,
        ABANDONED: 477,
        ENTERED: 478,
        LS_FILTER_START: 479,
        LS_FILTER_LOAD: 480,
        LS_FILTER_SUCCESS: 481,
        LS_SEARCH_RESULT_START: 482,
        LS_SEARCH_RESULT_LOAD: 483,
        NETWORK_PARSE_START: 484,
        NETWORK_REQUEST_SENT: 485,
        COMPONENT_DATA_MODEL_UPDATE_START: 486,
        COMPONENT_DATA_MODEL_UPDATE_COMPLETE: 487,
        HIGH_RES_PHOTO_FILE_READY: 488,
        NATIVE_PHOTO_BITMAP_READY: 489,
        REEL_JSON_RECEIVED: 490,
        REEL_MEDIA_RECEIVED: 491,
        STORY_VIEWER_APPEAR: 492,
        FETCH_INBOX_STARTED: 493,
        FETCH_INBOX_SUCCEEDED: 494,
        FETCH_INBOX_FAILED: 495,
        REQUEST_ADDED: 496,
        INIT_QE_START: 497,
        INIT_QE_END: 498,
        MULTIDEX_INSTALLED: 499,
        PREPARE_CAMERA_SESSION: 500,
        START_CAMERA_SESSION: 501,
        DID_START_CAMERA_SESSION: 502,
        FIRST_HARDWARE_FRAME: 503,
        START_RENDERING_FIRST_USER_FRAME: 504,
        FIRST_MEDIA_RENDERED: 505,
        FIRST_CACHED_MEDIA_RENDERED: 506,
        CAMERA_INITIALIZED: 507,
        HTTP_TRANSACTION_STARTED: 508,
        REMOTE_PROCESS: 509,
        PRE_REQUEST_SEND_CALLED: 510,
        BRIDGE_STARTUP_WILL_START: 511,
        BRIDGE_STARTUP_DID_FINISH: 512,
        COVER_PHOTO_LOW_RES: 513,
        COVER_PHOTO_HIGH_RES: 514,
        PROFILE_PIC_LOW_RES: 515,
        PROFILE_PIC_HIGH_RES: 516,
        CONTEXT_ITEMS: 517,
        MEDIA_LOADED: 518,
        STATE_UPDATE: 519,
        ON_SHOW_LOGIN: 520,
        EMPTY_REQUEST: 521,
        METERED_CONNECTION: 522,
        VIDEO_DOWNSTREAM_FORMAT_CHANGED: 523,
        DISABLED: 524,
        NO_METADATA: 525,
        INCOMPLETE_METADATA: 526,
        PHOTO_CAPTURE_READY: 527,
        CAMERA_START_READY: 528,
        DELAY_START: 529,
        DELAY_STOP: 530,
        RANK_START: 531,
        RANK_STOP: 532,
        DB_WRITE_START: 533,
        DB_WRITE_STOP: 534,
        ADD_STORY_TO_UI: 535,
        WEBVIEW_URI_REDIRECTOR_CONSTRUCTION: 536,
        UNINTERRUPTED: 537,
        VIDEO_TOGGLE_FULL_SCREEN: 538,
        CONFIGURE_START: 539,
        CONFIGURE_END: 540,
        BROWSER_OPEN: 541,
        FIRST_DATA_RECEIVED: 542,
        RVP_WILL_LOAD: 543,
        RVP_DID_LOAD: 544,
        CACHE_WRITE_START: 545,
        CACHE_WRITE_SUCCESS: 546,
        CACHE_WRITE_FAIL: 547,
        RVP_WILL_PAUSE: 548,
        RVP_DID_PAUSE: 549,
        RVP_WILL_PLAY: 550,
        RVP_DID_PLAY: 551,
        RVP_WILL_PREPARE: 552,
        RVP_DID_PREPARE: 553,
        RVP_WILL_RELOAD: 554,
        RVP_DID_RELOAD: 555,
        RVP_WILL_CREATE: 556,
        RVP_DID_CREATE: 557,
        RVP_WILL_FINISH_INFLATE: 558,
        RVP_DID_FINISH_INFLATE: 559,
        RVP_WILL_MOUNT: 560,
        RVP_DID_MOUNT: 561,
        START_COMPRESSING_MESSAGE: 562,
        MESSAGE_COMPRESSED: 563,
        START_DECOMPRESSING_MESSAGE: 564,
        MESSAGE_DECOMPRESSED: 565,
        START_SENDING_MESSAGE: 566,
        CAMERA_PREVIEW_FROZEN: 567,
        VC_INIT_START: 569,
        VC_INIT_BEGIN: 570,
        VC_INIT_END: 571,
        VC_VIEW_DID_LOAD_BEGIN: 572,
        VC_VIEW_DID_LOAD_END: 573,
        ROOT_QUERY_START: 574,
        ROOT_QUERY_SUCCESS: 575,
        ROOT_QUERY_FAIL: 576,
        CACHE_INITIALIZED: 577,
        FETCH_BEGIN: 578,
        FETCH_FINISHED: 579,
        PARSING_FINISHED: 580,
        LOAD_VIEW_END: 581,
        LOAD_URL_BEGIN: 582,
        LOAD_URL_END: 583,
        SHOULD_LOAD_URL_BEGIN: 598,
        SHOULD_LOAD_URL_END: 599,
        BLOCKING_RESOURCES_LOADED: 600,
        WEB_PAGE_LOADED: 601,
        JS_TEARDOWN: 603,
        JS_SETUP: 604,
        PREP_STATE: 605,
        PREP_FORMS: 606,
        RUN_FUNCTION: 610,
        LOAD_MODULES: 613,
        VIDEO_READY_TO_PLAY: 614,
        CANCEL_NAVIGATION: 615,
        BEGIN_HANDLE_EVENT: 626,
        END_HANDLE_EVENT: 627,
        BEGIN_PROCESS_EVENT: 628,
        END_PROCESS_EVENT: 629,
        CANCEL_BACKGROUND: 630,
        SC_TRACKER_SETUP_BEGIN: 631,
        SC_TRACKER_SETUP_END: 632,
        PROFILE_TOOLBOX_SETUP_BEGIN: 633,
        PROFILE_TOOLBOX_SETUP_END: 634,
        FEED_TOOLBOX_SETUP_BEGIN: 635,
        FEED_TOOLBOX_SETUP_END: 636,
        SCREEN_PART_RECEIVED: 637,
        RVP_DID_FAIL_AUTOPLAY: 638,
        VIEW_WILL_APPEAR_END: 639,
        VIDEO_RENDERED: 640,
        VIEW_DID_APPEAR_END: 641,
        SHARE_FLOW_LOADED: 642,
        START_DOWNLOAD_FACE_DETECTION_EFFECT: 643,
        APPLY_FACE_DETECTION_EFFECT: 644,
        INTERACTION_SWIPE_UP: 645,
        LOOM_PROVIDER_FAILURE: 646,
        ADS_SELECT_POST_VIEW: 647,
        ADS_SELECT_IMAGE_VIEW: 648,
        ADS_SELECT_BUDGET_VIEW: 649,
        ADS_SELECT_AUDIENCE_VIEW: 650,
        ADS_SELECT_CREATIVE_VIEW: 651,
        VIDEO_FETCH_REQUEST_START: 652,
        VIDEO_FETCH_REQUEST_RECEIVED: 653,
        VIDEO_FETCH_REQUEST_ENTER_NETWORK_QUEUE: 654,
        VIDEO_FETCH_REQUEST_NETWORK_REQUEST_START: 655,
        VIDEO_FETCH_REQUEST_NETWORK_RESPONSE_RECEIVED: 656,
        VIDEO_FETCH_REQUEST_NETWORK_FIRST_BYTE_ARRIVED: 657,
        VIDEO_FETCH_REQUEST_NETWORK_TRANSFER_COMPLETE: 658,
        VIDEO_FETCH_REQUEST_SATISFIED_BY_CACHE: 659,
        VIDEO_FETCH_REQUEST_COMPLETE: 660,
        VIDEO_FETCH_REQUEST_CACHE_CHECK_START: 661,
        VIDEO_FETCH_REQUEST_CACHE_CHECK_END: 662,
        VIDEO_FETCH_REQUEST_DID_ATTACH_TO_NETWORK_REQUEST: 663,
        SELECT_PHOTOS_FAILED_SCORE: 664,
        SELECT_PHOTOS_FAILED_TIMESTAMP: 665,
        INTERACTION_CLICK: 666,
        VIDEO_SCRUBBER_FIRST_THUMBNAIL_SHOWN: 667,
        VIDEO_SCRUBBER_THUMBNAIL_SHOWN: 668,
        COLD_START_BEGIN: 669,
        COLD_START_END: 670,
        COLD_START_LOAD_APP_JS: 671,
        COLD_START_QUERY_SEND: 672,
        COLD_START_APP_SHELL_COMPONENT_DID_MOUNT: 673,
        VIDEO_RECORDING_START_CALLED: 674,
        VIDEO_RECORDING_STOP_CALLED: 675,
        WIKTORK_TEST: 676,
        WIKTORK_TEST_TWO: 677,
        ON_VIDEO_RECORDING_FINISHED: 678,
        MEASURE_IMAGE: 679,
        PDP_RENDER_LOADING: 680,
        PDP_RENDER_FETCHED: 681,
        VIDEO_FETCH_REQUEST_FAILED: 682,
        LOGIN_FLOW_STARTED: 683,
        LOGIN_FLOW_COMPLETED: 684,
        VIDEO_DOWNLOAD_STARTED: 685,
        VIDEO_DOWNLOAD_READY_TO_PLAY: 686,
        VIDEO_DOWNLOAD_FAILED: 687,
        FBLITE_SCREEN_RECEIVED: 688,
        FBLITE_SERVER_START: 689,
        FBLITE_SERVER_END: 690,
        FBLITE_INCOMPLETE: 691,
        BACKGROUND_THREAD: 692,
        MAIN_THREAD: 693,
        BWE_ESTIMATE_COMPLETE: 694,
        WIKTORK_TEST_THREE: 695,
        FBLITE_UNEXPECTED: 696,
        THREAD_ASYNC_BEGIN_SERVER: 697,
        THREAD_ASYNC_SUCCESS_SERVER: 698,
        CARD_ASYNC_BEGIN_SERVER: 699,
        CARD_ASYNC_SUCCESS_SERVER: 700,
        FBLITE_INSTANT_TRANSITION_FAILED: 701,
        BB_TRACE_REQUESTED: 702,
        CANCEL_PSP: 703,
        AGGREGATED: 704,
        UNINSTRUMENTED: 705,
        CANCEL_UNLOAD: 706,
        DOWNLOAD_FAILED: 707,
        UNZIP_FAILED: 708,
        NO_ACTIVE_TRACE: 709,
        LOOM_MMAP_TRACE_NOT_RECOVERED: 710,
        PLUGIN_LOAD_END: 711,
        UNPACKER_CHECK_START: 712,
        PLUGIN_LOAD_START: 713,
        UNPACKER_CHECK_END: 714,
        UNPACKING_END: 715,
        CREATE_UI_MANAGER_MODULE_START: 716,
        CREATE_UI_MANAGER_MODULE_END: 717,
        TEST_NUBBEL: 718,
        CONDITION_NOT_MET: 719,
        FAIL_FALSE_POSITIVE: 720,
        FAIL_FALSE_NEGATIVE: 721,
        APP_CRASH: 722,
        TEST_GINDI: 723,
        TTTT: 724,
        BUG_BASH_ACTION: 725,
        BUG_BASH_TEST: 726,
        INIT_MOBILE_CONFIG: 727,
        SUCCESS_PYTORCH: 3653,
        SUCCESS_CACHE_NOT_MODIFIED: 11947,
        SUCCESS_NOTPRESENTED: 13170,
        TEST_ACTION_FOR_CALLER_CONTEXT_TWO: 29998,
        GINANDI_TEST: 32339
    });
    e.exports = a
}), null);
__d("RtcWwwWebQuickLogModule", [], (function (a, b, c, d, e, f) {
    a = Object.freeze({
        CHILD_WINDOW: 64232269,
        CONNECTION_STATE_MACHINE: 64243854,
        PARENT_SIGNALING_CLIENT: 64234815,
        PEER_CONNECTION_STATE_MACHINE: 64239068,
        RTC_INCOMING_RING: 64225282,
        RTC_OPEN_CHAT: 64228958,
        SIGNALING_STATE_MACHINE: 64245348,
        ZENON_TRANSACTION: 64246910
    });
    e.exports = a
}), null);